v8-version,11,8,172,17,-node.20,0
v8-platform,windows,unknown
shared-library,C:\\Program Files\\nodejs\\node.exe,0x7ff7b33c0000,0x7ff7b7b89000,0
shared-library,C:\\Windows\\SYSTEM32\\ntdll.dll,0x7ffdb1f90000,0x7ffdb21a6000,0
shared-library,C:\\Windows\\System32\\KERNEL32.DLL,0x7ffdb1840000,0x7ffdb1904000,0
shared-library,C:\\Windows\\System32\\KERNELBASE.dll,0x7ffdaf440000,0x7ffdaf7e7000,0
shared-library,C:\\Windows\\System32\\WS2_32.dll,0x7ffdb1170000,0x7ffdb11e1000,0
shared-library,C:\\Windows\\System32\\RPCRT4.dll,0x7ffdafdd0000,0x7ffdafee5000,0
shared-library,C:\\Windows\\System32\\ole32.dll,0x7ffdb1670000,0x7ffdb1815000,0
shared-library,C:\\Windows\\SYSTEM32\\dbghelp.dll,0x7ffdacb20000,0x7ffdacd53000,0
shared-library,C:\\Windows\\System32\\msvcp_win.dll,0x7ffdafbc0000,0x7ffdafc5a000,0
shared-library,C:\\Windows\\System32\\ucrtbase.dll,0x7ffdaf320000,0x7ffdaf431000,0
shared-library,C:\\Windows\\System32\\combase.dll,0x7ffdb0cc0000,0x7ffdb1048000,0
shared-library,C:\\Windows\\System32\\GDI32.dll,0x7ffdb0080000,0x7ffdb00a9000,0
shared-library,C:\\Windows\\System32\\OLEAUT32.dll,0x7ffdb0b30000,0x7ffdb0c07000,0
shared-library,C:\\Windows\\System32\\win32u.dll,0x7ffdafc90000,0x7ffdafcb6000,0
shared-library,C:\\Windows\\System32\\gdi32full.dll,0x7ffdafaa0000,0x7ffdafbb9000,0
shared-library,C:\\Windows\\System32\\USER32.dll,0x7ffdb1c90000,0x7ffdb1e3e000,0
shared-library,C:\\Windows\\System32\\PSAPI.DLL,0x7ffdb1c80000,0x7ffdb1c88000,0
shared-library,C:\\Windows\\System32\\SHELL32.dll,0x7ffdb02d0000,0x7ffdb0b2c000,0
shared-library,C:\\Windows\\System32\\ADVAPI32.dll,0x7ffdafef0000,0x7ffdaffa2000,0
shared-library,C:\\Windows\\System32\\msvcrt.dll,0x7ffdb1e40000,0x7ffdb1ee7000,0
shared-library,C:\\Windows\\SYSTEM32\\IPHLPAPI.DLL,0x7ffdadda0000,0x7ffdaddcd000,0
shared-library,C:\\Windows\\System32\\sechost.dll,0x7ffdb0c10000,0x7ffdb0cb8000,0
shared-library,C:\\Windows\\System32\\bcrypt.dll,0x7ffdafc60000,0x7ffdafc88000,0
shared-library,C:\\Windows\\SYSTEM32\\USERENV.dll,0x7ffdae8b0000,0x7ffdae8d8000,0
shared-library,C:\\Windows\\System32\\CRYPT32.dll,0x7ffdaf930000,0x7ffdafa97000,0
shared-library,C:\\Windows\\SYSTEM32\\WINMM.dll,0x7ffda5240000,0x7ffda5274000,0
shared-library,C:\\Windows\\SYSTEM32\\dbgcore.DLL,0x7ffd8dbd0000,0x7ffd8dc02000,0
shared-library,C:\\Windows\\SYSTEM32\\CRYPTBASE.DLL,0x7ffdaea30000,0x7ffdaea3c000,0
shared-library,C:\\Windows\\System32\\IMM32.DLL,0x7ffdb1b40000,0x7ffdb1b71000,0
shared-library,C:\\Windows\\SYSTEM32\\powrprof.dll,0x7ffdae110000,0x7ffdae15d000,0
shared-library,C:\\Windows\\SYSTEM32\\UMPDC.dll,0x7ffdae0f0000,0x7ffdae103000,0
shared-library,C:\\Windows\\system32\\uxtheme.dll,0x7ffdac260000,0x7ffdac30b000,0
shared-library,C:\\Windows\\system32\\mswsock.dll,0x7ffdae800000,0x7ffdae869000,0
shared-library,C:\\Windows\\System32\\bcryptprimitives.dll,0x7ffdaf7f0000,0x7ffdaf869000,0
shared-library,C:\\Windows\\SYSTEM32\\kernel.appcore.dll,0x7ffdae3a0000,0x7ffdae3b8000,0
shared-library-end
profiler,begin,1000
tick,0x7ffdb202f3e4,72426,0,0x0,6
new,CodeRange,0x7ff734340000,0
new,MemoryChunk,0x1dda2c40000,262144
new,MemoryChunk,0x8385f40000,262144
new,MemoryChunk,0x1361a700000,262144
new,MemoryChunk,0x1e02b780000,262144
new,MemoryChunk,0x34cdacc0000,262144
heap-capacity,1031008
heap-available,4346312384
new,MemoryChunk,0xa4fec00000,262144
new,MemoryChunk,0x33076780000,270336
new,MemoryChunk,0x1d9b7240000,262144
new,MemoryChunk,0x172de400000,262144
new,MemoryChunk,0xd660c80000,262144
code-creation,Builtin,2,77054,0x7ff754140000,776,DeoptimizationEntry_Eager
code-creation,Builtin,2,77070,0x7ff754140340,780,DeoptimizationEntry_Lazy
code-creation,Builtin,2,77076,0x7ff754140680,2724,RecordWriteSaveFP
code-creation,Builtin,2,77083,0x7ff754141140,1184,RecordWriteIgnoreFP
code-creation,Builtin,2,77088,0x7ff754141600,344,EphemeronKeyBarrierSaveFP
code-creation,Builtin,2,77094,0x7ff754141780,124,EphemeronKeyBarrierIgnoreFP
code-creation,Builtin,2,77100,0x7ff754141800,64,AdaptorWithBuiltinExitFrame
code-creation,Builtin,2,77105,0x7ff754141880,348,IndirectPointerBarrierSaveFP
code-creation,Builtin,2,77111,0x7ff754141a00,124,IndirectPointerBarrierIgnoreFP
code-creation,Builtin,2,77158,0x7ff754141a80,292,CallFunction_ReceiverIsNullOrUndefined
code-creation,Builtin,2,77168,0x7ff754141bc0,340,CallFunction_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,77175,0x7ff754141d40,376,CallFunction_ReceiverIsAny
code-creation,Builtin,2,77180,0x7ff754141ec0,100,CallBoundFunction
code-creation,Builtin,2,77186,0x7ff754141f40,900,CallWrappedFunction
code-creation,Builtin,2,77191,0x7ff754142300,168,Call_ReceiverIsNullOrUndefined
code-creation,Builtin,2,77197,0x7ff7541423c0,168,Call_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,77203,0x7ff754142480,168,Call_ReceiverIsAny
code-creation,Builtin,2,77209,0x7ff754142540,964,Call_ReceiverIsNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,77215,0x7ff754142940,956,Call_ReceiverIsNullOrUndefined_Baseline
code-creation,Builtin,2,77221,0x7ff754142d00,1052,Call_ReceiverIsNotNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,77228,0x7ff754143140,1044,Call_ReceiverIsNotNullOrUndefined_Baseline
code-creation,Builtin,2,77234,0x7ff754143580,1052,Call_ReceiverIsAny_Baseline_Compact
code-creation,Builtin,2,77240,0x7ff7541439c0,1044,Call_ReceiverIsAny_Baseline
code-creation,Builtin,2,77246,0x7ff754143e00,948,Call_ReceiverIsNullOrUndefined_WithFeedback
code-creation,Builtin,2,77252,0x7ff7541441c0,948,Call_ReceiverIsNotNullOrUndefined_WithFeedback
code-creation,Builtin,2,77258,0x7ff754144580,948,Call_ReceiverIsAny_WithFeedback
code-creation,Builtin,2,77264,0x7ff754144940,748,CallProxy
code-creation,Builtin,2,77270,0x7ff754144c40,152,CallVarargs
code-creation,Builtin,2,77275,0x7ff754144d00,1024,CallWithSpread
code-creation,Builtin,2,77280,0x7ff754145140,2032,CallWithSpread_Baseline
code-creation,Builtin,2,77286,0x7ff754145940,2012,CallWithSpread_WithFeedback
code-creation,Builtin,2,77291,0x7ff754146140,972,CallWithArrayLike
code-creation,Builtin,2,77297,0x7ff754146540,1948,CallWithArrayLike_WithFeedback
code-creation,Builtin,2,77303,0x7ff754146d00,156,CallForwardVarargs
code-creation,Builtin,2,77308,0x7ff754146dc0,156,CallFunctionForwardVarargs
code-creation,Builtin,2,77314,0x7ff754146e80,468,CallFunctionTemplate_Generic
code-creation,Builtin,2,77320,0x7ff754147080,152,CallFunctionTemplate_CheckAccess
code-creation,Builtin,2,77326,0x7ff754147140,412,CallFunctionTemplate_CheckCompatibleReceiver
code-creation,Builtin,2,77332,0x7ff754147300,472,CallFunctionTemplate_CheckAccessAndCompatibleReceiver
code-creation,Builtin,2,77339,0x7ff754147500,32,ConstructFunction
code-creation,Builtin,2,77344,0x7ff754147540,100,ConstructBoundFunction
code-creation,Builtin,2,77350,0x7ff7541475c0,28,ConstructedNonConstructable
code-creation,Builtin,2,77355,0x7ff754147600,100,Construct
code-creation,Builtin,2,77361,0x7ff754147680,152,ConstructVarargs
code-creation,Builtin,2,77366,0x7ff754147740,1048,ConstructWithSpread
code-creation,Builtin,2,77372,0x7ff754147b80,1904,ConstructWithSpread_Baseline
code-creation,Builtin,2,77382,0x7ff754148300,1896,ConstructWithSpread_WithFeedback
code-creation,Builtin,2,77388,0x7ff754148a80,1068,ConstructWithArrayLike
code-creation,Builtin,2,77394,0x7ff754148ec0,1840,ConstructWithArrayLike_WithFeedback
code-creation,Builtin,2,77400,0x7ff754149600,196,ConstructForwardVarargs
code-creation,Builtin,2,77406,0x7ff754149700,196,ConstructFunctionForwardVarargs
code-creation,Builtin,2,77412,0x7ff754149800,780,Construct_Baseline
code-creation,Builtin,2,77417,0x7ff754149b40,796,Construct_WithFeedback
code-creation,Builtin,2,77423,0x7ff754149e80,448,JSConstructStubGeneric
code-creation,Builtin,2,77428,0x7ff75414a080,344,JSBuiltinsConstructStub
code-creation,Builtin,2,77434,0x7ff75414a200,924,FastNewObject
code-creation,Builtin,2,77439,0x7ff75414a5c0,368,FastNewClosure
code-creation,Builtin,2,77445,0x7ff75414a740,784,ConstructProxy
code-creation,Builtin,2,77450,0x7ff75414aa80,360,JSEntry
code-creation,Builtin,2,77455,0x7ff75414ac00,360,JSConstructEntry
code-creation,Builtin,2,77460,0x7ff75414ad80,360,JSRunMicrotasksEntry
code-creation,Builtin,2,77466,0x7ff75414af00,100,JSEntryTrampoline
code-creation,Builtin,2,77471,0x7ff75414af80,100,JSConstructEntryTrampoline
code-creation,Builtin,2,77497,0x7ff75414b000,256,ResumeGeneratorTrampoline
code-creation,Builtin,2,77505,0x7ff75414b140,1384,StringFromCodePointAt
code-creation,Builtin,2,77511,0x7ff75414b6c0,944,StringEqual
code-creation,Builtin,2,77521,0x7ff75414ba80,388,StringGreaterThan
code-creation,Builtin,2,77526,0x7ff75414bc40,388,StringGreaterThanOrEqual
code-creation,Builtin,2,77532,0x7ff75414be00,388,StringLessThan
code-creation,Builtin,2,77537,0x7ff75414bfc0,388,StringLessThanOrEqual
code-creation,Builtin,2,77543,0x7ff75414c180,388,StringCompare
code-creation,Builtin,2,77549,0x7ff75414c340,3716,StringSubstring
code-creation,Builtin,2,77554,0x7ff75414d200,116,OrderedHashTableHealIndex
code-creation,Builtin,2,77560,0x7ff75414d280,872,InterpreterEntryTrampoline
code-creation,Builtin,2,77565,0x7ff75414d600,884,InterpreterEntryTrampolineForProfiling
code-creation,Builtin,2,77572,0x7ff75414d980,76,InterpreterPushArgsThenCall
code-creation,Builtin,2,77577,0x7ff75414da00,84,InterpreterPushUndefinedAndArgsThenCall
code-creation,Builtin,2,77583,0x7ff75414da80,84,InterpreterPushArgsThenCallWithFinalSpread
code-creation,Builtin,2,77590,0x7ff75414db00,84,InterpreterPushArgsThenConstruct
code-creation,Builtin,2,77595,0x7ff75414db80,720,InterpreterPushArgsThenFastConstructFunction
code-creation,Builtin,2,77602,0x7ff75414de80,84,InterpreterPushArgsThenConstructArrayFunction
code-creation,Builtin,2,77608,0x7ff75414df00,88,InterpreterPushArgsThenConstructWithFinalSpread
code-creation,Builtin,2,77614,0x7ff75414df80,80,InterpreterEnterAtBytecode
code-creation,Builtin,2,77620,0x7ff75414e000,216,InterpreterEnterAtNextBytecode
code-creation,Builtin,2,77626,0x7ff75414e100,96,InterpreterOnStackReplacement
code-creation,Builtin,2,77632,0x7ff75414e180,392,BaselineOutOfLinePrologue
code-creation,Builtin,2,77637,0x7ff75414e340,16,BaselineOutOfLinePrologueDeopt
code-creation,Builtin,2,77643,0x7ff75414e380,100,BaselineOnStackReplacement
code-creation,Builtin,2,77649,0x7ff75414e400,84,BaselineLeaveFrame
code-creation,Builtin,2,77655,0x7ff75414e480,212,BaselineOrInterpreterEnterAtBytecode
code-creation,Builtin,2,77661,0x7ff75414e580,220,BaselineOrInterpreterEnterAtNextBytecode
code-creation,Builtin,2,77667,0x7ff75414e680,184,InterpreterOnStackReplacement_ToBaseline
code-creation,Builtin,2,77673,0x7ff75414e740,36,MaglevOnStackReplacement
code-creation,Builtin,2,77678,0x7ff75414e780,4,MaglevFunctionEntryStackCheck_WithoutNewTarget
code-creation,Builtin,2,77685,0x7ff75414e7c0,4,MaglevFunctionEntryStackCheck_WithNewTarget
code-creation,Builtin,2,77691,0x7ff75414e800,4,MaglevOptimizeCodeOrTailCallOptimizedCodeSlot
code-creation,Builtin,2,77697,0x7ff75414e840,864,CompileLazy
code-creation,Builtin,2,77706,0x7ff75414ebc0,80,CompileLazyDeoptimizedCode
code-creation,Builtin,2,77712,0x7ff75414ec40,224,InstantiateAsmJs
code-creation,Builtin,2,77717,0x7ff75414ed40,32,NotifyDeoptimized
code-creation,Builtin,2,77723,0x7ff75414ed80,52,ContinueToCodeStubBuiltin
code-creation,Builtin,2,77728,0x7ff75414edc0,60,ContinueToCodeStubBuiltinWithResult
code-creation,Builtin,2,77734,0x7ff75414ee00,56,ContinueToJavaScriptBuiltin
code-creation,Builtin,2,77740,0x7ff75414ee40,64,ContinueToJavaScriptBuiltinWithResult
code-creation,Builtin,2,77746,0x7ff75414eec0,324,CallApiCallbackGeneric
code-creation,Builtin,2,77752,0x7ff75414f040,272,CallApiCallbackOptimizedNoProfiling
code-creation,Builtin,2,77758,0x7ff75414f180,304,CallApiCallbackOptimized
code-creation,Builtin,2,77763,0x7ff75414f2c0,280,CallApiGetter
code-creation,Builtin,2,77769,0x7ff75414f400,32,HandleApiCallOrConstruct
code-creation,Builtin,2,77774,0x7ff75414f440,12,HandleApiConstruct
code-creation,Builtin,2,77780,0x7ff75414f480,12,HandleApiCallAsFunctionDelegate
code-creation,Builtin,2,77786,0x7ff75414f4c0,12,HandleApiCallAsConstructorDelegate
code-creation,Builtin,2,77792,0x7ff75414f500,52,AllocateInYoungGeneration
code-creation,Builtin,2,77798,0x7ff75414f540,52,AllocateInOldGeneration
code-creation,Builtin,2,77803,0x7ff75414f580,132,NewHeapNumber
code-creation,Builtin,2,77808,0x7ff75414f640,592,CopyFastSmiOrObjectElements
code-creation,Builtin,2,77815,0x7ff75414f8c0,604,GrowFastDoubleElements
code-creation,Builtin,2,77822,0x7ff75414fb40,484,GrowFastSmiOrObjectElements
code-creation,Builtin,2,77828,0x7ff75414fd40,452,DebugBreakTrampoline
code-creation,Builtin,2,77834,0x7ff75414ff40,276,RestartFrameTrampoline
code-creation,Builtin,2,77839,0x7ff754150080,188,ToNumber
code-creation,Builtin,2,77844,0x7ff754150140,88,ToBigInt
code-creation,Builtin,2,77850,0x7ff7541501c0,300,ToNumber_Baseline
code-creation,Builtin,2,77855,0x7ff754150300,360,ToNumeric_Baseline
code-creation,Builtin,2,77860,0x7ff754150480,104,PlainPrimitiveToNumber
code-creation,Builtin,2,77866,0x7ff754150500,224,ToNumberConvertBigInt
code-creation,Builtin,2,77872,0x7ff754150600,60,ToBigIntConvertNumber
code-creation,Builtin,2,77877,0x7ff754150640,140,Typeof
code-creation,Builtin,2,77885,0x7ff754150700,112,BigIntToI64
code-creation,Builtin,2,77890,0x7ff754150780,4,BigIntToI32Pair
code-creation,Builtin,2,77896,0x7ff7541507c0,220,I64ToBigInt
code-creation,Builtin,2,77901,0x7ff7541508c0,4,I32PairToBigInt
code-creation,Builtin,2,77906,0x7ff754150900,116,ToBooleanLazyDeoptContinuation
code-creation,Builtin,2,77912,0x7ff754150980,348,MathCeilContinuation
code-creation,Builtin,2,77918,0x7ff754150b00,352,MathFloorContinuation
code-creation,Builtin,2,77923,0x7ff754150c80,400,MathRoundContinuation
code-creation,Builtin,2,77929,0x7ff754150e40,4252,KeyedLoadIC_PolymorphicName
code-creation,Builtin,2,77935,0x7ff754151f00,18208,KeyedStoreIC_Megamorphic
code-creation,Builtin,2,77940,0x7ff754156640,14300,DefineKeyedOwnIC_Megamorphic
code-creation,Builtin,2,77946,0x7ff754159e40,696,LoadGlobalIC_NoFeedback
code-creation,Builtin,2,77952,0x7ff75415a100,68,LoadIC_FunctionPrototype
code-creation,Builtin,2,77957,0x7ff75415a180,12,LoadIC_StringLength
code-creation,Builtin,2,77963,0x7ff75415a1c0,16,LoadIC_StringWrapperLength
code-creation,Builtin,2,77969,0x7ff75415a200,4392,LoadIC_NoFeedback
code-creation,Builtin,2,77974,0x7ff75415b340,32,StoreGlobalIC_Slow
code-creation,Builtin,2,77980,0x7ff75415b380,8416,StoreIC_NoFeedback
code-creation,Builtin,2,77985,0x7ff75415d480,4660,DefineNamedOwnIC_NoFeedback
code-creation,Builtin,2,77991,0x7ff75415e6c0,188,KeyedLoadIC_SloppyArguments
code-creation,Builtin,2,77997,0x7ff75415e780,72,LoadIndexedInterceptorIC
code-creation,Builtin,2,78002,0x7ff75415e800,244,KeyedStoreIC_SloppyArguments_Standard
code-creation,Builtin,2,78008,0x7ff75415e900,244,KeyedStoreIC_SloppyArguments_GrowNoTransitionHandleCOW
code-creation,Builtin,2,78015,0x7ff75415ea00,244,KeyedStoreIC_SloppyArguments_NoTransitionIgnoreOOB
code-creation,Builtin,2,78021,0x7ff75415eb00,244,KeyedStoreIC_SloppyArguments_NoTransitionHandleCOW
code-creation,Builtin,2,78028,0x7ff75415ec00,15976,StoreFastElementIC_Standard
code-creation,Builtin,2,78034,0x7ff754162a80,11648,StoreFastElementIC_GrowNoTransitionHandleCOW
code-creation,Builtin,2,78040,0x7ff754165840,14868,StoreFastElementIC_NoTransitionIgnoreOOB
code-creation,Builtin,2,78046,0x7ff754169280,7020,StoreFastElementIC_NoTransitionHandleCOW
code-creation,Builtin,2,78053,0x7ff75416ae00,9096,ElementsTransitionAndStore_Standard
code-creation,Builtin,2,78059,0x7ff75416d1c0,21224,ElementsTransitionAndStore_GrowNoTransitionHandleCOW
code-creation,Builtin,2,78065,0x7ff7541724c0,9096,ElementsTransitionAndStore_NoTransitionIgnoreOOB
code-creation,Builtin,2,78072,0x7ff754174880,12316,ElementsTransitionAndStore_NoTransitionHandleCOW
code-creation,Builtin,2,78078,0x7ff7541778c0,1216,KeyedHasIC_PolymorphicName
code-creation,Builtin,2,78084,0x7ff754177dc0,172,KeyedHasIC_SloppyArguments
code-creation,Builtin,2,78089,0x7ff754177e80,72,HasIndexedInterceptorIC
code-creation,Builtin,2,78095,0x7ff754177f00,164,EnqueueMicrotask
code-creation,Builtin,2,78101,0x7ff754177fc0,8,RunMicrotasksTrampoline
code-creation,Builtin,2,78107,0x7ff754178000,3820,RunMicrotasks
code-creation,Builtin,2,78112,0x7ff754178f00,3804,HasProperty
code-creation,Builtin,2,78118,0x7ff754179e00,1384,DeleteProperty
code-creation,Builtin,2,78123,0x7ff75417a380,2604,CopyDataProperties
code-creation,Builtin,2,78146,0x7ff75417adc0,11368,SetDataProperties
code-creation,Builtin,2,78154,0x7ff75417da40,3504,CopyDataPropertiesWithExcludedPropertiesOnStack
code-creation,Builtin,2,78161,0x7ff75417e800,56,CopyDataPropertiesWithExcludedProperties
code-creation,Builtin,2,78167,0x7ff75417e840,28,Abort
code-creation,Builtin,2,78172,0x7ff75417e880,28,AbortCSADcheck
code-creation,Builtin,2,78177,0x7ff75417e8c0,12,EmptyFunction
code-creation,Builtin,2,78183,0x7ff75417e900,12,Illegal
code-creation,Builtin,2,78188,0x7ff75417e940,12,StrictPoisonPillThrower
code-creation,Builtin,2,78193,0x7ff75417e980,12,UnsupportedThrower
code-creation,Builtin,2,78199,0x7ff75417e9c0,60,ReturnReceiver
code-creation,Builtin,2,78204,0x7ff75417ea00,36,ArrayConstructor
code-creation,Builtin,2,78210,0x7ff75417ea40,380,ArrayConstructorImpl
code-creation,Builtin,2,78215,0x7ff75417ebc0,220,ArrayNoArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,78222,0x7ff75417ecc0,220,ArrayNoArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,78228,0x7ff75417edc0,184,ArrayNoArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,78235,0x7ff75417ee80,184,ArrayNoArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,78241,0x7ff75417ef40,184,ArrayNoArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,78248,0x7ff75417f000,184,ArrayNoArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,78255,0x7ff75417f0c0,192,ArrayNoArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,78262,0x7ff75417f1c0,192,ArrayNoArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,78269,0x7ff75417f2c0,988,ArraySingleArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,78275,0x7ff75417f6c0,936,ArraySingleArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,78282,0x7ff75417fa80,852,ArraySingleArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,78289,0x7ff75417fe00,800,ArraySingleArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,78299,0x7ff754180140,852,ArraySingleArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,78306,0x7ff7541804c0,800,ArraySingleArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,78313,0x7ff754180800,932,ArraySingleArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,78320,0x7ff754180bc0,884,ArraySingleArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,78328,0x7ff754180f40,48,ArrayNArgumentsConstructor
code-creation,Builtin,2,78333,0x7ff754180f80,12,ArrayConcat
code-creation,Builtin,2,78338,0x7ff754180fc0,12,ArrayPrototypeFill
code-creation,Builtin,2,78344,0x7ff754181000,1536,ArrayIncludesSmi
code-creation,Builtin,2,78349,0x7ff754181640,1536,ArrayIncludesSmiOrObject
code-creation,Builtin,2,78355,0x7ff754181c80,236,ArrayIncludesPackedDoubles
code-creation,Builtin,2,78361,0x7ff754181d80,292,ArrayIncludesHoleyDoubles
code-creation,Builtin,2,78367,0x7ff754181ec0,580,ArrayIncludes
code-creation,Builtin,2,78372,0x7ff754182140,1392,ArrayIndexOfSmi
code-creation,Builtin,2,78377,0x7ff7541826c0,1392,ArrayIndexOfSmiOrObject
code-creation,Builtin,2,78383,0x7ff754182c40,172,ArrayIndexOfPackedDoubles
code-creation,Builtin,2,78388,0x7ff754182d00,172,ArrayIndexOfHoleyDoubles
code-creation,Builtin,2,78394,0x7ff754182dc0,584,ArrayIndexOf
code-creation,Builtin,2,78399,0x7ff754183040,12,ArrayPop
code-creation,Builtin,2,78404,0x7ff754183080,560,ArrayPrototypePop
code-creation,Builtin,2,78410,0x7ff7541832c0,12,ArrayPush
code-creation,Builtin,2,78415,0x7ff754183300,2920,ArrayPrototypePush
code-creation,Builtin,2,78420,0x7ff754183e80,12,ArrayShift
code-creation,Builtin,2,78426,0x7ff754183ec0,12,ArrayUnshift
code-creation,Builtin,2,78431,0x7ff754183f00,12,ArrayFromAsync
code-creation,Builtin,2,78436,0x7ff754183f40,1188,CloneFastJSArray
code-creation,Builtin,2,78442,0x7ff754184400,2568,CloneFastJSArrayFillingHoles
code-creation,Builtin,2,78448,0x7ff754184e40,1204,ExtractFastJSArray
code-creation,Builtin,2,78454,0x7ff754185300,264,ArrayPrototypeEntries
code-creation,Builtin,2,78461,0x7ff754185440,252,ArrayPrototypeKeys
code-creation,Builtin,2,78466,0x7ff754185540,264,ArrayPrototypeValues
code-creation,Builtin,2,78472,0x7ff754185680,4284,ArrayIteratorPrototypeNext
code-creation,Builtin,2,78477,0x7ff754186740,5292,FlattenIntoArray
code-creation,Builtin,2,78483,0x7ff754187c00,5220,FlatMapIntoArray
code-creation,Builtin,2,78488,0x7ff754189080,368,ArrayPrototypeFlat
code-creation,Builtin,2,78494,0x7ff754189200,428,ArrayPrototypeFlatMap
code-creation,Builtin,2,78499,0x7ff7541893c0,12,ArrayBufferConstructor
code-creation,Builtin,2,78505,0x7ff754189400,12,ArrayBufferConstructor_DoNotInitialize
code-creation,Builtin,2,78511,0x7ff754189440,12,ArrayBufferPrototypeSlice
code-creation,Builtin,2,78517,0x7ff754189480,12,ArrayBufferPrototypeResize
code-creation,Builtin,2,78522,0x7ff7541894c0,12,ArrayBufferPrototypeTransfer
code-creation,Builtin,2,78528,0x7ff754189500,12,ArrayBufferPrototypeTransferToFixedLength
code-creation,Builtin,2,78534,0x7ff754189540,1000,AsyncFunctionEnter
code-creation,Builtin,2,78540,0x7ff754189940,80,AsyncFunctionReject
code-creation,Builtin,2,78545,0x7ff7541899c0,76,AsyncFunctionResolve
code-creation,Builtin,2,78551,0x7ff754189a40,12,AsyncFunctionLazyDeoptContinuation
code-creation,Builtin,2,78557,0x7ff754189a80,1556,AsyncFunctionAwaitCaught
code-creation,Builtin,2,78562,0x7ff75418a0c0,1556,AsyncFunctionAwaitUncaught
code-creation,Builtin,2,78568,0x7ff75418a700,172,AsyncFunctionAwaitRejectClosure
code-creation,Builtin,2,78574,0x7ff75418a7c0,168,AsyncFunctionAwaitResolveClosure
code-creation,Builtin,2,78580,0x7ff75418a880,12,BigIntConstructor
code-creation,Builtin,2,78585,0x7ff75418a8c0,12,BigIntAsUintN
code-creation,Builtin,2,78591,0x7ff75418a900,12,BigIntAsIntN
code-creation,Builtin,2,78596,0x7ff75418a940,12,BigIntPrototypeToLocaleString
code-creation,Builtin,2,78602,0x7ff75418a980,12,BigIntPrototypeToString
code-creation,Builtin,2,78607,0x7ff75418a9c0,12,BigIntPrototypeValueOf
code-creation,Builtin,2,78613,0x7ff75418aa00,12,CallSitePrototypeGetColumnNumber
code-creation,Builtin,2,78619,0x7ff75418aa40,12,CallSitePrototypeGetEnclosingColumnNumber
code-creation,Builtin,2,78625,0x7ff75418aa80,12,CallSitePrototypeGetEnclosingLineNumber
code-creation,Builtin,2,78631,0x7ff75418aac0,12,CallSitePrototypeGetEvalOrigin
code-creation,Builtin,2,78637,0x7ff75418ab00,12,CallSitePrototypeGetFileName
code-creation,Builtin,2,78643,0x7ff75418ab40,12,CallSitePrototypeGetFunction
code-creation,Builtin,2,78649,0x7ff75418ab80,12,CallSitePrototypeGetFunctionName
code-creation,Builtin,2,78654,0x7ff75418abc0,12,CallSitePrototypeGetLineNumber
code-creation,Builtin,2,78660,0x7ff75418ac00,12,CallSitePrototypeGetMethodName
code-creation,Builtin,2,78666,0x7ff75418ac40,12,CallSitePrototypeGetPosition
code-creation,Builtin,2,78672,0x7ff75418ac80,12,CallSitePrototypeGetPromiseIndex
code-creation,Builtin,2,78678,0x7ff75418acc0,12,CallSitePrototypeGetScriptHash
code-creation,Builtin,2,78683,0x7ff75418ad00,12,CallSitePrototypeGetScriptNameOrSourceURL
code-creation,Builtin,2,78690,0x7ff75418ad40,12,CallSitePrototypeGetThis
code-creation,Builtin,2,78695,0x7ff75418ad80,12,CallSitePrototypeGetTypeName
code-creation,Builtin,2,78701,0x7ff75418adc0,12,CallSitePrototypeIsAsync
code-creation,Builtin,2,78707,0x7ff75418ae00,12,CallSitePrototypeIsConstructor
code-creation,Builtin,2,78712,0x7ff75418ae40,12,CallSitePrototypeIsEval
code-creation,Builtin,2,78718,0x7ff75418ae80,12,CallSitePrototypeIsNative
code-creation,Builtin,2,78724,0x7ff75418aec0,12,CallSitePrototypeIsPromiseAll
code-creation,Builtin,2,78730,0x7ff75418af00,12,CallSitePrototypeIsToplevel
code-creation,Builtin,2,78735,0x7ff75418af40,12,CallSitePrototypeToString
code-creation,Builtin,2,78741,0x7ff75418af80,12,ConsoleDebug
code-creation,Builtin,2,78746,0x7ff75418afc0,12,ConsoleError
code-creation,Builtin,2,78751,0x7ff75418b000,12,ConsoleInfo
code-creation,Builtin,2,78756,0x7ff75418b040,12,ConsoleLog
code-creation,Builtin,2,78762,0x7ff75418b080,12,ConsoleWarn
code-creation,Builtin,2,78768,0x7ff75418b0c0,12,ConsoleDir
code-creation,Builtin,2,78774,0x7ff75418b100,12,ConsoleDirXml
code-creation,Builtin,2,78779,0x7ff75418b140,12,ConsoleTable
code-creation,Builtin,2,78784,0x7ff75418b180,12,ConsoleTrace
code-creation,Builtin,2,78789,0x7ff75418b1c0,12,ConsoleGroup
code-creation,Builtin,2,78794,0x7ff75418b200,12,ConsoleGroupCollapsed
code-creation,Builtin,2,78800,0x7ff75418b240,12,ConsoleGroupEnd
code-creation,Builtin,2,78805,0x7ff75418b280,12,ConsoleClear
code-creation,Builtin,2,78811,0x7ff75418b2c0,12,ConsoleCount
code-creation,Builtin,2,78816,0x7ff75418b300,12,ConsoleCountReset
code-creation,Builtin,2,78821,0x7ff75418b340,12,ConsoleAssert
code-creation,Builtin,2,78826,0x7ff75418b380,12,ConsoleProfile
code-creation,Builtin,2,78832,0x7ff75418b3c0,12,ConsoleProfileEnd
code-creation,Builtin,2,78837,0x7ff75418b400,12,ConsoleTime
code-creation,Builtin,2,78842,0x7ff75418b440,12,ConsoleTimeLog
code-creation,Builtin,2,78848,0x7ff75418b480,12,ConsoleTimeEnd
code-creation,Builtin,2,78853,0x7ff75418b4c0,12,ConsoleTimeStamp
code-creation,Builtin,2,78858,0x7ff75418b500,12,ConsoleContext
code-creation,Builtin,2,78864,0x7ff75418b540,12,DataViewConstructor
code-creation,Builtin,2,78869,0x7ff75418b580,12,DateConstructor
code-creation,Builtin,2,78874,0x7ff75418b5c0,216,DatePrototypeGetDate
code-creation,Builtin,2,78880,0x7ff75418b6c0,216,DatePrototypeGetDay
code-creation,Builtin,2,78885,0x7ff75418b7c0,216,DatePrototypeGetFullYear
code-creation,Builtin,2,78891,0x7ff75418b8c0,216,DatePrototypeGetHours
code-creation,Builtin,2,78897,0x7ff75418b9c0,196,DatePrototypeGetMilliseconds
code-creation,Builtin,2,78903,0x7ff75418bac0,216,DatePrototypeGetMinutes
code-creation,Builtin,2,78908,0x7ff75418bbc0,216,DatePrototypeGetMonth
code-creation,Builtin,2,78914,0x7ff75418bcc0,216,DatePrototypeGetSeconds
code-creation,Builtin,2,78919,0x7ff75418bdc0,128,DatePrototypeGetTime
code-creation,Builtin,2,78925,0x7ff75418be80,196,DatePrototypeGetTimezoneOffset
code-creation,Builtin,2,78930,0x7ff75418bf80,196,DatePrototypeGetUTCDate
code-creation,Builtin,2,78936,0x7ff75418c080,196,DatePrototypeGetUTCDay
code-creation,Builtin,2,78942,0x7ff75418c180,196,DatePrototypeGetUTCFullYear
code-creation,Builtin,2,78947,0x7ff75418c280,196,DatePrototypeGetUTCHours
code-creation,Builtin,2,78953,0x7ff75418c380,196,DatePrototypeGetUTCMilliseconds
code-creation,Builtin,2,78959,0x7ff75418c480,196,DatePrototypeGetUTCMinutes
code-creation,Builtin,2,78964,0x7ff75418c580,196,DatePrototypeGetUTCMonth
code-creation,Builtin,2,78970,0x7ff75418c680,196,DatePrototypeGetUTCSeconds
code-creation,Builtin,2,78976,0x7ff75418c780,128,DatePrototypeValueOf
code-creation,Builtin,2,78981,0x7ff75418c840,436,DatePrototypeToPrimitive
code-creation,Builtin,2,78987,0x7ff75418ca00,12,DatePrototypeGetYear
code-creation,Builtin,2,78992,0x7ff75418ca40,12,DatePrototypeSetYear
code-creation,Builtin,2,78998,0x7ff75418ca80,12,DateNow
code-creation,Builtin,2,79003,0x7ff75418cac0,12,DateParse
code-creation,Builtin,2,79008,0x7ff75418cb00,12,DatePrototypeSetDate
code-creation,Builtin,2,79014,0x7ff75418cb40,12,DatePrototypeSetFullYear
code-creation,Builtin,2,79019,0x7ff75418cb80,12,DatePrototypeSetHours
code-creation,Builtin,2,79025,0x7ff75418cbc0,12,DatePrototypeSetMilliseconds
code-creation,Builtin,2,79031,0x7ff75418cc00,12,DatePrototypeSetMinutes
code-creation,Builtin,2,79036,0x7ff75418cc40,12,DatePrototypeSetMonth
code-creation,Builtin,2,79042,0x7ff75418cc80,12,DatePrototypeSetSeconds
code-creation,Builtin,2,79047,0x7ff75418ccc0,12,DatePrototypeSetTime
code-creation,Builtin,2,79053,0x7ff75418cd00,12,DatePrototypeSetUTCDate
code-creation,Builtin,2,79058,0x7ff75418cd40,12,DatePrototypeSetUTCFullYear
code-creation,Builtin,2,79064,0x7ff75418cd80,12,DatePrototypeSetUTCHours
code-creation,Builtin,2,79069,0x7ff75418cdc0,12,DatePrototypeSetUTCMilliseconds
code-creation,Builtin,2,79075,0x7ff75418ce00,12,DatePrototypeSetUTCMinutes
code-creation,Builtin,2,79081,0x7ff75418ce40,12,DatePrototypeSetUTCMonth
code-creation,Builtin,2,79086,0x7ff75418ce80,12,DatePrototypeSetUTCSeconds
code-creation,Builtin,2,79093,0x7ff75418cec0,12,DatePrototypeToDateString
code-creation,Builtin,2,79099,0x7ff75418cf00,12,DatePrototypeToISOString
code-creation,Builtin,2,79105,0x7ff75418cf40,12,DatePrototypeToUTCString
code-creation,Builtin,2,79110,0x7ff75418cf80,12,DatePrototypeToString
code-creation,Builtin,2,79116,0x7ff75418cfc0,12,DatePrototypeToTimeString
code-creation,Builtin,2,79122,0x7ff75418d000,12,DatePrototypeToJson
code-creation,Builtin,2,79127,0x7ff75418d040,12,DateUTC
code-creation,Builtin,2,79132,0x7ff75418d080,12,ErrorConstructor
code-creation,Builtin,2,79137,0x7ff75418d0c0,12,ErrorCaptureStackTrace
code-creation,Builtin,2,79143,0x7ff75418d100,12,ErrorPrototypeToString
code-creation,Builtin,2,79148,0x7ff75418d140,12,FunctionConstructor
code-creation,Builtin,2,79154,0x7ff75418d180,80,FunctionPrototypeApply
code-creation,Builtin,2,79159,0x7ff75418d200,12,FunctionPrototypeBind
code-creation,Builtin,2,79165,0x7ff75418d240,36,FunctionPrototypeCall
code-creation,Builtin,2,79174,0x7ff75418d280,12,FunctionPrototypeToString
code-creation,Builtin,2,79180,0x7ff75418d2c0,252,CreateIterResultObject
code-creation,Builtin,2,79185,0x7ff75418d3c0,1120,CreateGeneratorObject
code-creation,Builtin,2,79191,0x7ff75418d840,12,GeneratorFunctionConstructor
code-creation,Builtin,2,79197,0x7ff75418d880,404,GeneratorPrototypeNext
code-creation,Builtin,2,79202,0x7ff75418da40,404,GeneratorPrototypeReturn
code-creation,Builtin,2,79208,0x7ff75418dc00,408,GeneratorPrototypeThrow
code-creation,Builtin,2,79214,0x7ff75418ddc0,12,AsyncFunctionConstructor
code-creation,Builtin,2,79219,0x7ff75418de00,460,SuspendGeneratorBaseline
code-creation,Builtin,2,79225,0x7ff75418e000,100,ResumeGeneratorBaseline
code-creation,Builtin,2,79230,0x7ff75418e080,36,GetIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,79237,0x7ff75418e0c0,88,CallIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,79243,0x7ff75418e140,12,GlobalDecodeURI
code-creation,Builtin,2,79249,0x7ff75418e180,12,GlobalDecodeURIComponent
code-creation,Builtin,2,79254,0x7ff75418e1c0,12,GlobalEncodeURI
code-creation,Builtin,2,79260,0x7ff75418e200,12,GlobalEncodeURIComponent
code-creation,Builtin,2,79265,0x7ff75418e240,12,GlobalEscape
code-creation,Builtin,2,79271,0x7ff75418e280,12,GlobalUnescape
code-creation,Builtin,2,79276,0x7ff75418e2c0,12,GlobalEval
code-creation,Builtin,2,79281,0x7ff75418e300,176,GlobalIsFinite
code-creation,Builtin,2,79286,0x7ff75418e3c0,172,GlobalIsNaN
code-creation,Builtin,2,79291,0x7ff75418e480,12,JsonParse
code-creation,Builtin,2,79297,0x7ff75418e4c0,12,JsonStringify
code-creation,Builtin,2,79302,0x7ff75418e500,12,JsonRawJson
code-creation,Builtin,2,79307,0x7ff75418e540,12,JsonIsRawJson
code-creation,Builtin,2,79312,0x7ff75418e580,4848,LoadIC
code-creation,Builtin,2,79318,0x7ff75418f880,4472,LoadIC_Megamorphic
code-creation,Builtin,2,79323,0x7ff754190a00,4660,LoadIC_Noninlined
code-creation,Builtin,2,79328,0x7ff754191c40,44,LoadICTrampoline
code-creation,Builtin,2,79334,0x7ff754191c80,24,LoadICBaseline
code-creation,Builtin,2,79339,0x7ff754191cc0,44,LoadICTrampoline_Megamorphic
code-creation,Builtin,2,79345,0x7ff754191d00,8996,LoadSuperIC
code-creation,Builtin,2,79350,0x7ff754194040,24,LoadSuperICBaseline
code-creation,Builtin,2,79356,0x7ff754194080,8124,KeyedLoadIC
code-creation,Builtin,2,79361,0x7ff754196040,16600,KeyedLoadIC_Megamorphic
code-creation,Builtin,2,79366,0x7ff75419a140,13656,KeyedLoadIC_MegamorphicStringKey
code-creation,Builtin,2,79372,0x7ff75419d6c0,44,KeyedLoadICTrampoline
code-creation,Builtin,2,79378,0x7ff75419d700,24,KeyedLoadICBaseline
code-creation,Builtin,2,79384,0x7ff75419d740,44,KeyedLoadICTrampoline_Megamorphic
code-creation,Builtin,2,79390,0x7ff75419d780,44,KeyedLoadICTrampoline_MegamorphicStringKey
code-creation,Builtin,2,79396,0x7ff75419d7c0,5468,StoreGlobalIC
code-creation,Builtin,2,79401,0x7ff75419ed40,44,StoreGlobalICTrampoline
code-creation,Builtin,2,79407,0x7ff75419ed80,24,StoreGlobalICBaseline
code-creation,Builtin,2,79412,0x7ff75419edc0,6084,StoreIC
code-creation,Builtin,2,79417,0x7ff7541a05c0,44,StoreICTrampoline
code-creation,Builtin,2,79440,0x7ff7541a0600,24,StoreICBaseline
code-creation,Builtin,2,79447,0x7ff7541a0640,5880,DefineNamedOwnIC
code-creation,Builtin,2,79453,0x7ff7541a1d40,44,DefineNamedOwnICTrampoline
code-creation,Builtin,2,79459,0x7ff7541a1d80,24,DefineNamedOwnICBaseline
code-creation,Builtin,2,79465,0x7ff7541a1dc0,6592,KeyedStoreIC
code-creation,Builtin,2,79470,0x7ff7541a37c0,44,KeyedStoreICTrampoline
code-creation,Builtin,2,79475,0x7ff7541a3800,24,KeyedStoreICBaseline
code-creation,Builtin,2,79481,0x7ff7541a3840,6552,DefineKeyedOwnIC
code-creation,Builtin,2,79486,0x7ff7541a5200,52,DefineKeyedOwnICTrampoline
code-creation,Builtin,2,79492,0x7ff7541a5240,28,DefineKeyedOwnICBaseline
code-creation,Builtin,2,79498,0x7ff7541a5280,320,StoreInArrayLiteralIC
code-creation,Builtin,2,79503,0x7ff7541a5400,24,StoreInArrayLiteralICBaseline
code-creation,Builtin,2,79509,0x7ff7541a5440,196,LookupContextTrampoline
code-creation,Builtin,2,79514,0x7ff7541a5540,200,LookupContextBaseline
code-creation,Builtin,2,79520,0x7ff7541a5640,196,LookupContextInsideTypeofTrampoline
code-creation,Builtin,2,79526,0x7ff7541a5740,200,LookupContextInsideTypeofBaseline
code-creation,Builtin,2,79532,0x7ff7541a5840,3064,LoadGlobalIC
code-creation,Builtin,2,79537,0x7ff7541a6440,3048,LoadGlobalICInsideTypeof
code-creation,Builtin,2,79543,0x7ff7541a7040,44,LoadGlobalICTrampoline
code-creation,Builtin,2,79549,0x7ff7541a7080,24,LoadGlobalICBaseline
code-creation,Builtin,2,79554,0x7ff7541a70c0,44,LoadGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,79560,0x7ff7541a7100,24,LoadGlobalICInsideTypeofBaseline
code-creation,Builtin,2,79566,0x7ff7541a7140,192,LookupGlobalIC
code-creation,Builtin,2,79571,0x7ff7541a7240,228,LookupGlobalICTrampoline
code-creation,Builtin,2,79577,0x7ff7541a7340,204,LookupGlobalICBaseline
code-creation,Builtin,2,79583,0x7ff7541a7440,192,LookupGlobalICInsideTypeof
code-creation,Builtin,2,79588,0x7ff7541a7540,228,LookupGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,79594,0x7ff7541a7640,204,LookupGlobalICInsideTypeofBaseline
code-creation,Builtin,2,79600,0x7ff7541a7740,3108,CloneObjectIC
code-creation,Builtin,2,79605,0x7ff7541a8380,24,CloneObjectICBaseline
code-creation,Builtin,2,79611,0x7ff7541a83c0,2812,CloneObjectIC_Slow
code-creation,Builtin,2,79616,0x7ff7541a8ec0,3224,KeyedHasIC
code-creation,Builtin,2,79622,0x7ff7541a9b80,24,KeyedHasICBaseline
code-creation,Builtin,2,79627,0x7ff7541a9bc0,3804,KeyedHasIC_Megamorphic
code-creation,Builtin,2,79633,0x7ff7541aaac0,1896,IterableToList
code-creation,Builtin,2,79638,0x7ff7541ab240,1704,IterableToFixedArray
code-creation,Builtin,2,79644,0x7ff7541ab900,724,IterableToListWithSymbolLookup
code-creation,Builtin,2,79649,0x7ff7541abc00,56,IterableToFixedArrayWithSymbolLookupSlow
code-creation,Builtin,2,79656,0x7ff7541abc40,112,IterableToListMayPreserveHoles
code-creation,Builtin,2,79661,0x7ff7541abcc0,1344,IterableToFixedArrayForWasm
code-creation,Builtin,2,79667,0x7ff7541ac240,1884,StringListFromIterable
code-creation,Builtin,2,79673,0x7ff7541ac9c0,1220,FindOrderedHashMapEntry
code-creation,Builtin,2,79679,0x7ff7541acec0,4536,MapConstructor
code-creation,Builtin,2,79684,0x7ff7541ae080,2052,MapPrototypeSet
code-creation,Builtin,2,79689,0x7ff7541ae8c0,1600,MapPrototypeDelete
code-creation,Builtin,2,79695,0x7ff7541aef40,212,MapPrototypeGet
code-creation,Builtin,2,79700,0x7ff7541af040,172,MapPrototypeHas
code-creation,Builtin,2,79705,0x7ff7541af100,12,MapPrototypeClear
code-creation,Builtin,2,79711,0x7ff7541af140,288,MapPrototypeEntries
code-creation,Builtin,2,79717,0x7ff7541af280,144,MapPrototypeGetSize
code-creation,Builtin,2,79722,0x7ff7541af340,560,MapPrototypeForEach
code-creation,Builtin,2,79727,0x7ff7541af580,288,MapPrototypeKeys
code-creation,Builtin,2,79733,0x7ff7541af6c0,288,MapPrototypeValues
code-creation,Builtin,2,79738,0x7ff7541af800,936,MapIteratorPrototypeNext
code-creation,Builtin,2,79744,0x7ff7541afbc0,1328,MapIteratorToList
code-creation,Builtin,2,79749,0x7ff7541b0100,12,NumberPrototypeToExponential
code-creation,Builtin,2,79755,0x7ff7541b0140,12,NumberPrototypeToFixed
code-creation,Builtin,2,79761,0x7ff7541b0180,12,NumberPrototypeToLocaleString
code-creation,Builtin,2,79768,0x7ff7541b01c0,12,NumberPrototypeToPrecision
code-creation,Builtin,2,79773,0x7ff7541b0200,356,SameValue
code-creation,Builtin,2,79779,0x7ff7541b0380,200,SameValueNumbersOnly
code-creation,Builtin,2,79784,0x7ff7541b0480,1320,Add_Baseline
code-creation,Builtin,2,79789,0x7ff7541b09c0,1020,AddSmi_Baseline
code-creation,Builtin,2,79795,0x7ff7541b0dc0,1296,Subtract_Baseline
code-creation,Builtin,2,79800,0x7ff7541b1300,1032,SubtractSmi_Baseline
code-creation,Builtin,2,79806,0x7ff7541b1740,1392,Multiply_Baseline
code-creation,Builtin,2,79811,0x7ff7541b1cc0,1120,MultiplySmi_Baseline
code-creation,Builtin,2,79817,0x7ff7541b2140,1480,Divide_Baseline
code-creation,Builtin,2,79822,0x7ff7541b2740,1252,DivideSmi_Baseline
code-creation,Builtin,2,79828,0x7ff7541b2c40,1416,Modulus_Baseline
code-creation,Builtin,2,79833,0x7ff7541b3200,1136,ModulusSmi_Baseline
code-creation,Builtin,2,79838,0x7ff7541b3680,784,Exponentiate_Baseline
code-creation,Builtin,2,79844,0x7ff7541b39c0,676,ExponentiateSmi_Baseline
code-creation,Builtin,2,79850,0x7ff7541b3c80,1712,BitwiseAnd_Baseline
code-creation,Builtin,2,79856,0x7ff7541b4340,420,BitwiseAndSmi_Baseline
code-creation,Builtin,2,79861,0x7ff7541b4500,1712,BitwiseOr_Baseline
code-creation,Builtin,2,79867,0x7ff7541b4bc0,420,BitwiseOrSmi_Baseline
code-creation,Builtin,2,79872,0x7ff7541b4d80,1712,BitwiseXor_Baseline
code-creation,Builtin,2,79878,0x7ff7541b5440,420,BitwiseXorSmi_Baseline
code-creation,Builtin,2,79883,0x7ff7541b5600,1092,ShiftLeft_Baseline
code-creation,Builtin,2,79889,0x7ff7541b5a80,444,ShiftLeftSmi_Baseline
code-creation,Builtin,2,79894,0x7ff7541b5c40,1092,ShiftRight_Baseline
code-creation,Builtin,2,79900,0x7ff7541b60c0,428,ShiftRightSmi_Baseline
code-creation,Builtin,2,79905,0x7ff7541b6280,1292,ShiftRightLogical_Baseline
code-creation,Builtin,2,79911,0x7ff7541b67c0,680,ShiftRightLogicalSmi_Baseline
code-creation,Builtin,2,79917,0x7ff7541b6a80,1256,Add_WithFeedback
code-creation,Builtin,2,79922,0x7ff7541b6f80,1244,Subtract_WithFeedback
code-creation,Builtin,2,79927,0x7ff7541b7480,1336,Multiply_WithFeedback
code-creation,Builtin,2,79933,0x7ff7541b79c0,1440,Divide_WithFeedback
code-creation,Builtin,2,79939,0x7ff7541b7f80,1360,Modulus_WithFeedback
code-creation,Builtin,2,79944,0x7ff7541b8500,744,Exponentiate_WithFeedback
code-creation,Builtin,2,79950,0x7ff7541b8800,1556,BitwiseAnd_WithFeedback
code-creation,Builtin,2,79956,0x7ff7541b8e40,1556,BitwiseOr_WithFeedback
code-creation,Builtin,2,79961,0x7ff7541b9480,1556,BitwiseXor_WithFeedback
code-creation,Builtin,2,79967,0x7ff7541b9ac0,1072,ShiftLeft_WithFeedback
code-creation,Builtin,2,79972,0x7ff7541b9f00,1072,ShiftRight_WithFeedback
code-creation,Builtin,2,79978,0x7ff7541ba340,1144,ShiftRightLogical_WithFeedback
code-creation,Builtin,2,79984,0x7ff7541ba7c0,1956,Equal_Baseline
code-creation,Builtin,2,79989,0x7ff7541baf80,1180,StrictEqual_Baseline
code-creation,Builtin,2,79995,0x7ff7541bb440,1488,LessThan_Baseline
code-creation,Builtin,2,80000,0x7ff7541bba40,1488,GreaterThan_Baseline
code-creation,Builtin,2,80005,0x7ff7541bc040,1488,LessThanOrEqual_Baseline
code-creation,Builtin,2,80011,0x7ff7541bc640,1488,GreaterThanOrEqual_Baseline
code-creation,Builtin,2,80017,0x7ff7541bcc40,1864,Equal_WithFeedback
code-creation,Builtin,2,80022,0x7ff7541bd3c0,1180,StrictEqual_WithFeedback
code-creation,Builtin,2,80028,0x7ff7541bd880,1480,LessThan_WithFeedback
code-creation,Builtin,2,80034,0x7ff7541bde80,1480,GreaterThan_WithFeedback
code-creation,Builtin,2,80039,0x7ff7541be480,1480,LessThanOrEqual_WithFeedback
code-creation,Builtin,2,80045,0x7ff7541bea80,1480,GreaterThanOrEqual_WithFeedback
code-creation,Builtin,2,80051,0x7ff7541bf080,404,BitwiseNot_Baseline
code-creation,Builtin,2,80056,0x7ff7541bf240,560,Decrement_Baseline
code-creation,Builtin,2,80062,0x7ff7541bf480,564,Increment_Baseline
code-creation,Builtin,2,80067,0x7ff7541bf6c0,588,Negate_Baseline
code-creation,Builtin,2,80073,0x7ff7541bf940,404,BitwiseNot_WithFeedback
code-creation,Builtin,2,80079,0x7ff7541bfb00,552,Decrement_WithFeedback
code-creation,Builtin,2,80086,0x7ff7541bfd40,556,Increment_WithFeedback
code-creation,Builtin,2,80091,0x7ff7541bff80,580,Negate_WithFeedback
code-creation,Builtin,2,80097,0x7ff7541c0200,264,ObjectAssign
code-creation,Builtin,2,80102,0x7ff7541c0340,992,ObjectCreate
code-creation,Builtin,2,80107,0x7ff7541c0740,12,ObjectDefineGetter
code-creation,Builtin,2,80113,0x7ff7541c0780,12,ObjectDefineProperties
code-creation,Builtin,2,80118,0x7ff7541c07c0,12,ObjectDefineProperty
code-creation,Builtin,2,80124,0x7ff7541c0800,12,ObjectDefineSetter
code-creation,Builtin,2,80134,0x7ff7541c0840,1560,ObjectEntries
code-creation,Builtin,2,80139,0x7ff7541c0e80,12,ObjectFreeze
code-creation,Builtin,2,80144,0x7ff7541c0ec0,5108,ObjectGetOwnPropertyDescriptor
code-creation,Builtin,2,80150,0x7ff7541c22c0,12,ObjectGetOwnPropertyDescriptors
code-creation,Builtin,2,80156,0x7ff7541c2300,948,ObjectGetOwnPropertyNames
code-creation,Builtin,2,80162,0x7ff7541c26c0,12,ObjectGetOwnPropertySymbols
code-creation,Builtin,2,80168,0x7ff7541c2700,168,ObjectHasOwn
code-creation,Builtin,2,80173,0x7ff7541c27c0,416,ObjectIs
code-creation,Builtin,2,80178,0x7ff7541c2980,12,ObjectIsFrozen
code-creation,Builtin,2,80184,0x7ff7541c29c0,12,ObjectIsSealed
code-creation,Builtin,2,80189,0x7ff7541c2a00,920,ObjectKeys
code-creation,Builtin,2,80194,0x7ff7541c2dc0,12,ObjectLookupGetter
code-creation,Builtin,2,80200,0x7ff7541c2e00,12,ObjectLookupSetter
code-creation,Builtin,2,80205,0x7ff7541c2e40,3248,ObjectPrototypeHasOwnProperty
code-creation,Builtin,2,80211,0x7ff7541c3b00,300,ObjectPrototypeIsPrototypeOf
code-creation,Builtin,2,80217,0x7ff7541c3c40,12,ObjectPrototypePropertyIsEnumerable
code-creation,Builtin,2,80223,0x7ff7541c3c80,12,ObjectPrototypeGetProto
code-creation,Builtin,2,80228,0x7ff7541c3cc0,12,ObjectPrototypeSetProto
code-creation,Builtin,2,80234,0x7ff7541c3d00,12,ObjectSeal
code-creation,Builtin,2,80239,0x7ff7541c3d40,1384,ObjectToString
code-creation,Builtin,2,80244,0x7ff7541c42c0,1288,ObjectValues
code-creation,Builtin,2,80250,0x7ff7541c4800,368,OrdinaryHasInstance
code-creation,Builtin,2,80255,0x7ff7541c4980,372,InstanceOf
code-creation,Builtin,2,80261,0x7ff7541c4b00,640,InstanceOf_WithFeedback
code-creation,Builtin,2,80266,0x7ff7541c4dc0,648,InstanceOf_Baseline
code-creation,Builtin,2,80272,0x7ff7541c5080,300,ForInEnumerate
code-creation,Builtin,2,80277,0x7ff7541c51c0,132,ForInPrepare
code-creation,Builtin,2,80282,0x7ff7541c5280,3720,ForInFilter
code-creation,Builtin,2,80288,0x7ff7541c6140,56,ReflectApply
code-creation,Builtin,2,80293,0x7ff7541c6180,64,ReflectConstruct
code-creation,Builtin,2,80299,0x7ff7541c6200,12,ReflectDefineProperty
code-creation,Builtin,2,80304,0x7ff7541c6240,12,ReflectOwnKeys
code-creation,Builtin,2,80310,0x7ff7541c6280,12,ReflectSet
code-creation,Builtin,2,80315,0x7ff7541c62c0,12,RegExpCapture1Getter
code-creation,Builtin,2,80320,0x7ff7541c6300,12,RegExpCapture2Getter
code-creation,Builtin,2,80326,0x7ff7541c6340,12,RegExpCapture3Getter
code-creation,Builtin,2,80331,0x7ff7541c6380,12,RegExpCapture4Getter
code-creation,Builtin,2,80337,0x7ff7541c63c0,12,RegExpCapture5Getter
code-creation,Builtin,2,80342,0x7ff7541c6400,12,RegExpCapture6Getter
code-creation,Builtin,2,80348,0x7ff7541c6440,12,RegExpCapture7Getter
code-creation,Builtin,2,80353,0x7ff7541c6480,12,RegExpCapture8Getter
code-creation,Builtin,2,80359,0x7ff7541c64c0,12,RegExpCapture9Getter
code-creation,Builtin,2,80364,0x7ff7541c6500,2396,RegExpConstructor
code-creation,Builtin,2,80369,0x7ff7541c6e80,12,RegExpInputGetter
code-creation,Builtin,2,80375,0x7ff7541c6ec0,12,RegExpInputSetter
code-creation,Builtin,2,80381,0x7ff7541c6f00,12,RegExpLastMatchGetter
code-creation,Builtin,2,80386,0x7ff7541c6f40,12,RegExpLastParenGetter
code-creation,Builtin,2,80392,0x7ff7541c6f80,12,RegExpLeftContextGetter
code-creation,Builtin,2,80397,0x7ff7541c6fc0,948,RegExpPrototypeCompile
code-creation,Builtin,2,80403,0x7ff7541c7380,12,RegExpPrototypeToString
code-creation,Builtin,2,80408,0x7ff7541c73c0,12,RegExpRightContextGetter
code-creation,Builtin,2,80414,0x7ff7541c7400,260,RegExpExecAtom
code-creation,Builtin,2,80420,0x7ff7541c7540,1116,RegExpExecInternal
code-creation,Builtin,2,80427,0x7ff7541c79c0,8,RegExpInterpreterTrampoline
code-creation,Builtin,2,80432,0x7ff7541c7a00,8,RegExpExperimentalTrampoline
code-creation,Builtin,2,80438,0x7ff7541c7a40,1216,FindOrderedHashSetEntry
code-creation,Builtin,2,80444,0x7ff7541c7f40,3224,SetConstructor
code-creation,Builtin,2,80449,0x7ff7541c8c00,172,SetPrototypeHas
code-creation,Builtin,2,80454,0x7ff7541c8cc0,1860,SetPrototypeAdd
code-creation,Builtin,2,80460,0x7ff7541c9440,1576,SetPrototypeDelete
code-creation,Builtin,2,80465,0x7ff7541c9a80,12,SetPrototypeClear
code-creation,Builtin,2,80471,0x7ff7541c9ac0,288,SetPrototypeEntries
code-creation,Builtin,2,80477,0x7ff7541c9c00,148,SetPrototypeGetSize
code-creation,Builtin,2,80482,0x7ff7541c9cc0,540,SetPrototypeForEach
code-creation,Builtin,2,80487,0x7ff7541c9f00,288,SetPrototypeValues
code-creation,Builtin,2,80493,0x7ff7541ca040,864,SetIteratorPrototypeNext
code-creation,Builtin,2,80499,0x7ff7541ca3c0,1192,SetOrSetIteratorToList
code-creation,Builtin,2,80504,0x7ff7541ca880,12,ShadowRealmConstructor
code-creation,Builtin,2,80510,0x7ff7541ca8c0,640,ShadowRealmGetWrappedValue
code-creation,Builtin,2,80516,0x7ff7541cab80,12,ShadowRealmPrototypeEvaluate
code-creation,Builtin,2,80521,0x7ff7541cabc0,1432,ShadowRealmPrototypeImportValue
code-creation,Builtin,2,80527,0x7ff7541cb180,240,ShadowRealmImportValueFulfilled
code-creation,Builtin,2,80533,0x7ff7541cb280,76,ShadowRealmImportValueRejected
code-creation,Builtin,2,80539,0x7ff7541cb300,12,SharedArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,80545,0x7ff7541cb340,12,SharedArrayBufferPrototypeSlice
code-creation,Builtin,2,80550,0x7ff7541cb380,12,SharedArrayBufferPrototypeGrow
code-creation,Builtin,2,80556,0x7ff7541cb3c0,2108,AtomicsLoad
code-creation,Builtin,2,80562,0x7ff7541cbc00,2288,AtomicsStore
code-creation,Builtin,2,80567,0x7ff7541cc500,2896,AtomicsExchange
code-creation,Builtin,2,80573,0x7ff7541cd080,3324,AtomicsCompareExchange
code-creation,Builtin,2,80578,0x7ff7541cdd80,2916,AtomicsAdd
code-creation,Builtin,2,80583,0x7ff7541ce900,2916,AtomicsSub
code-creation,Builtin,2,80589,0x7ff7541cf480,2916,AtomicsAnd
code-creation,Builtin,2,80594,0x7ff7541d0000,2916,AtomicsOr
code-creation,Builtin,2,80599,0x7ff7541d0b80,2916,AtomicsXor
code-creation,Builtin,2,80604,0x7ff7541d1700,12,AtomicsNotify
code-creation,Builtin,2,80610,0x7ff7541d1740,12,AtomicsIsLockFree
code-creation,Builtin,2,80615,0x7ff7541d1780,12,AtomicsWait
code-creation,Builtin,2,80620,0x7ff7541d17c0,12,AtomicsWaitAsync
code-creation,Builtin,2,80626,0x7ff7541d1800,12,StringFromCodePoint
code-creation,Builtin,2,80631,0x7ff7541d1840,1548,StringFromCharCode
code-creation,Builtin,2,80636,0x7ff7541d1e80,12,StringPrototypeLastIndexOf
code-creation,Builtin,2,80642,0x7ff7541d1ec0,4736,StringPrototypeMatchAll
code-creation,Builtin,2,80648,0x7ff7541d3180,12,StringPrototypeLocaleCompare
code-creation,Builtin,2,80654,0x7ff7541d31c0,1300,StringPrototypeReplace
code-creation,Builtin,2,80659,0x7ff7541d3700,3072,StringPrototypeSplit
code-creation,Builtin,2,80665,0x7ff7541d4340,12,StringRaw
code-creation,Builtin,2,80670,0x7ff7541d4380,12,SymbolConstructor
code-creation,Builtin,2,80675,0x7ff7541d43c0,12,SymbolFor
code-creation,Builtin,2,80680,0x7ff7541d4400,12,SymbolKeyFor
code-creation,Builtin,2,80686,0x7ff7541d4440,88,TypedArrayBaseConstructor
code-creation,Builtin,2,80692,0x7ff7541d44c0,252,TypedArrayConstructor
code-creation,Builtin,2,80697,0x7ff7541d45c0,12,TypedArrayPrototypeBuffer
code-creation,Builtin,2,80703,0x7ff7541d4600,880,TypedArrayPrototypeByteLength
code-creation,Builtin,2,80709,0x7ff7541d4980,364,TypedArrayPrototypeByteOffset
code-creation,Builtin,2,80714,0x7ff7541d4b00,596,TypedArrayPrototypeLength
code-creation,Builtin,2,80720,0x7ff7541d4d80,12,TypedArrayPrototypeCopyWithin
code-creation,Builtin,2,80726,0x7ff7541d4dc0,12,TypedArrayPrototypeFill
code-creation,Builtin,2,80732,0x7ff7541d4e00,12,TypedArrayPrototypeIncludes
code-creation,Builtin,2,80737,0x7ff7541d4e40,12,TypedArrayPrototypeIndexOf
code-creation,Builtin,2,80746,0x7ff7541d4e80,12,TypedArrayPrototypeLastIndexOf
code-creation,Builtin,2,80752,0x7ff7541d4ec0,12,TypedArrayPrototypeReverse
code-creation,Builtin,2,80758,0x7ff7541d4f00,524,TypedArrayPrototypeToStringTag
code-creation,Builtin,2,80764,0x7ff7541d5140,30788,TypedArrayPrototypeMap
code-creation,Builtin,2,80769,0x7ff7541dc9c0,196,JSToWasmWrapperAsm
code-creation,Builtin,2,80775,0x7ff7541dcac0,648,WasmReturnPromiseOnSuspendAsm
code-creation,Builtin,2,80781,0x7ff7541dcd80,56,WasmToJsWrapperAsm
code-creation,Builtin,2,80786,0x7ff7541dcdc0,4880,WasmToJsWrapperCSA
code-creation,Builtin,2,80792,0x7ff7541de100,208,WasmSuspend
code-creation,Builtin,2,80797,0x7ff7541de200,348,WasmResume
code-creation,Builtin,2,80802,0x7ff7541de380,372,WasmReject
code-creation,Builtin,2,80807,0x7ff7541de500,156,WasmCompileLazy
code-creation,Builtin,2,80812,0x7ff7541de5c0,192,WasmLiftoffFrameSetup
code-creation,Builtin,2,80818,0x7ff7541de6c0,180,WasmDebugBreak
code-creation,Builtin,2,80823,0x7ff7541de780,16,WasmOnStackReplace
code-creation,Builtin,2,80829,0x7ff7541de7c0,132,WasmFloat32ToNumber
code-creation,Builtin,2,80834,0x7ff7541de880,132,WasmFloat64ToNumber
code-creation,Builtin,2,80840,0x7ff7541de940,1436,WasmFloat64ToString
code-creation,Builtin,2,80845,0x7ff7541def00,24,JSToWasmLazyDeoptContinuation
code-creation,Builtin,2,80851,0x7ff7541def40,4840,WeakMapConstructor
code-creation,Builtin,2,80857,0x7ff7541e0240,260,WeakMapLookupHashIndex
code-creation,Builtin,2,80862,0x7ff7541e0380,224,WeakMapGet
code-creation,Builtin,2,80867,0x7ff7541e0480,184,WeakMapPrototypeHas
code-creation,Builtin,2,80873,0x7ff7541e0540,244,WeakMapPrototypeSet
code-creation,Builtin,2,80879,0x7ff7541e0640,156,WeakMapPrototypeDelete
code-creation,Builtin,2,80884,0x7ff7541e0700,3440,WeakSetConstructor
code-creation,Builtin,2,80889,0x7ff7541e1480,184,WeakSetPrototypeHas
code-creation,Builtin,2,80895,0x7ff7541e1540,248,WeakSetPrototypeAdd
code-creation,Builtin,2,80900,0x7ff7541e1640,156,WeakSetPrototypeDelete
code-creation,Builtin,2,80906,0x7ff7541e1700,420,WeakCollectionDelete
code-creation,Builtin,2,80912,0x7ff7541e18c0,892,WeakCollectionSet
code-creation,Builtin,2,80917,0x7ff7541e1c40,12,SharedSpaceJSObjectHasInstance
code-creation,Builtin,2,80923,0x7ff7541e1c80,12,SharedStructTypeConstructor
code-creation,Builtin,2,80928,0x7ff7541e1cc0,12,SharedStructTypeIsSharedStruct
code-creation,Builtin,2,80934,0x7ff7541e1d00,12,SharedStructConstructor
code-creation,Builtin,2,80940,0x7ff7541e1d40,12,SharedArrayConstructor
code-creation,Builtin,2,80945,0x7ff7541e1d80,12,SharedArrayIsSharedArray
code-creation,Builtin,2,80951,0x7ff7541e1dc0,12,AtomicsMutexConstructor
code-creation,Builtin,2,80956,0x7ff7541e1e00,12,AtomicsMutexIsMutex
code-creation,Builtin,2,80962,0x7ff7541e1e40,12,AtomicsMutexLock
code-creation,Builtin,2,80967,0x7ff7541e1e80,12,AtomicsMutexTryLock
code-creation,Builtin,2,80973,0x7ff7541e1ec0,12,AtomicsConditionConstructor
code-creation,Builtin,2,80979,0x7ff7541e1f00,12,AtomicsConditionIsCondition
code-creation,Builtin,2,80984,0x7ff7541e1f40,12,AtomicsConditionWait
code-creation,Builtin,2,80990,0x7ff7541e1f80,12,AtomicsConditionNotify
code-creation,Builtin,2,80995,0x7ff7541e1fc0,296,AsyncGeneratorResolve
code-creation,Builtin,2,81001,0x7ff7541e2100,112,AsyncGeneratorReject
code-creation,Builtin,2,81006,0x7ff7541e2180,1616,AsyncGeneratorYieldWithAwait
code-creation,Builtin,2,81012,0x7ff7541e2800,1904,AsyncGeneratorReturn
code-creation,Builtin,2,81018,0x7ff7541e2f80,412,AsyncGeneratorResumeNext
code-creation,Builtin,2,81023,0x7ff7541e3140,12,AsyncGeneratorFunctionConstructor
code-creation,Builtin,2,81029,0x7ff7541e3180,1056,AsyncGeneratorPrototypeNext
code-creation,Builtin,2,81035,0x7ff7541e35c0,1056,AsyncGeneratorPrototypeReturn
code-creation,Builtin,2,81041,0x7ff7541e3a00,1056,AsyncGeneratorPrototypeThrow
code-creation,Builtin,2,81047,0x7ff7541e3e40,1592,AsyncGeneratorAwaitCaught
code-creation,Builtin,2,81052,0x7ff7541e4480,1592,AsyncGeneratorAwaitUncaught
code-creation,Builtin,2,81058,0x7ff7541e4ac0,176,AsyncGeneratorAwaitResolveClosure
code-creation,Builtin,2,81065,0x7ff7541e4b80,172,AsyncGeneratorAwaitRejectClosure
code-creation,Builtin,2,81071,0x7ff7541e4c40,124,AsyncGeneratorYieldWithAwaitResolveClosure
code-creation,Builtin,2,81078,0x7ff7541e4cc0,124,AsyncGeneratorReturnClosedResolveClosure
code-creation,Builtin,2,81084,0x7ff7541e4d40,116,AsyncGeneratorReturnClosedRejectClosure
code-creation,Builtin,2,81090,0x7ff7541e4dc0,180,AsyncGeneratorReturnResolveClosure
code-creation,Builtin,2,81096,0x7ff7541e4e80,1704,AsyncFromSyncIteratorPrototypeNext
code-creation,Builtin,2,81102,0x7ff7541e5540,1800,AsyncFromSyncIteratorPrototypeThrow
code-creation,Builtin,2,81108,0x7ff7541e5c80,1824,AsyncFromSyncIteratorPrototypeReturn
code-creation,Builtin,2,81114,0x7ff7541e63c0,100,AsyncIteratorValueUnwrap
code-creation,Builtin,2,81120,0x7ff7541e6440,200,CEntry_Return1_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,81126,0x7ff7541e6540,208,CEntry_Return1_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,81132,0x7ff7541e6640,208,CEntry_Return1_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,81138,0x7ff7541e6740,212,CEntry_Return2_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,81144,0x7ff7541e6840,224,CEntry_Return2_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,81154,0x7ff7541e6940,224,CEntry_Return2_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,81160,0x7ff7541e6a40,396,WasmCEntry
code-creation,Builtin,2,81166,0x7ff7541e6c00,4,DirectCEntry
code-creation,Builtin,2,81171,0x7ff7541e6c40,1452,StringAdd_CheckNone
code-creation,Builtin,2,81176,0x7ff7541e7200,3700,SubString
code-creation,Builtin,2,81181,0x7ff7541e8080,84,DoubleToI
code-creation,Builtin,2,81186,0x7ff7541e8100,3216,GetProperty
code-creation,Builtin,2,81192,0x7ff7541e8dc0,3440,GetPropertyWithReceiver
code-creation,Builtin,2,81198,0x7ff7541e9b40,18324,SetProperty
code-creation,Builtin,2,81203,0x7ff7541ee300,15068,CreateDataProperty
code-creation,Builtin,2,81208,0x7ff7541f1e00,52,GetOwnPropertyDescriptor
code-creation,Builtin,2,81214,0x7ff7541f1e40,8,MemCopyUint8Uint8
code-creation,Builtin,2,81219,0x7ff7541f1e80,8,MemMove
code-creation,Builtin,2,81224,0x7ff7541f1ec0,196,FindNonDefaultConstructorOrConstruct
code-creation,Builtin,2,81230,0x7ff7541f1fc0,3020,OrdinaryGetOwnPropertyDescriptor
code-creation,Builtin,2,81236,0x7ff7541f2bc0,12,IsTraceCategoryEnabled
code-creation,Builtin,2,81242,0x7ff7541f2c00,12,Trace
code-creation,Builtin,2,81247,0x7ff7541f2c40,12,FinalizationRegistryUnregister
code-creation,Builtin,2,81253,0x7ff7541f2c80,408,AsyncModuleEvaluate
code-creation,Builtin,2,81258,0x7ff7541f2e40,12,CallAsyncModuleFulfilled
code-creation,Builtin,2,81264,0x7ff7541f2e80,12,CallAsyncModuleRejected
code-creation,Builtin,2,81269,0x7ff7541f2ec0,12,TemporalNowTimeZone
code-creation,Builtin,2,81275,0x7ff7541f2f00,12,TemporalNowInstant
code-creation,Builtin,2,81280,0x7ff7541f2f40,12,TemporalNowPlainDateTime
code-creation,Builtin,2,81286,0x7ff7541f2f80,12,TemporalNowPlainDateTimeISO
code-creation,Builtin,2,81292,0x7ff7541f2fc0,12,TemporalNowZonedDateTime
code-creation,Builtin,2,81297,0x7ff7541f3000,12,TemporalNowZonedDateTimeISO
code-creation,Builtin,2,81303,0x7ff7541f3040,12,TemporalNowPlainDate
code-creation,Builtin,2,81309,0x7ff7541f3080,12,TemporalNowPlainDateISO
code-creation,Builtin,2,81314,0x7ff7541f30c0,12,TemporalNowPlainTimeISO
code-creation,Builtin,2,81320,0x7ff7541f3100,12,TemporalPlainDateConstructor
code-creation,Builtin,2,81326,0x7ff7541f3140,12,TemporalPlainDateFrom
code-creation,Builtin,2,81331,0x7ff7541f3180,12,TemporalPlainDateCompare
code-creation,Builtin,2,81337,0x7ff7541f31c0,12,TemporalPlainDatePrototypeCalendar
code-creation,Builtin,2,81343,0x7ff7541f3200,12,TemporalPlainDatePrototypeYear
code-creation,Builtin,2,81348,0x7ff7541f3240,12,TemporalPlainDatePrototypeMonth
code-creation,Builtin,2,81354,0x7ff7541f3280,12,TemporalPlainDatePrototypeMonthCode
code-creation,Builtin,2,81360,0x7ff7541f32c0,12,TemporalPlainDatePrototypeDay
code-creation,Builtin,2,81366,0x7ff7541f3300,12,TemporalPlainDatePrototypeDayOfWeek
code-creation,Builtin,2,81372,0x7ff7541f3340,12,TemporalPlainDatePrototypeDayOfYear
code-creation,Builtin,2,81379,0x7ff7541f3380,12,TemporalPlainDatePrototypeWeekOfYear
code-creation,Builtin,2,81386,0x7ff7541f33c0,12,TemporalPlainDatePrototypeDaysInWeek
code-creation,Builtin,2,81391,0x7ff7541f3400,12,TemporalPlainDatePrototypeDaysInMonth
code-creation,Builtin,2,81397,0x7ff7541f3440,12,TemporalPlainDatePrototypeDaysInYear
code-creation,Builtin,2,81403,0x7ff7541f3480,12,TemporalPlainDatePrototypeMonthsInYear
code-creation,Builtin,2,81409,0x7ff7541f34c0,12,TemporalPlainDatePrototypeInLeapYear
code-creation,Builtin,2,81416,0x7ff7541f3500,12,TemporalPlainDatePrototypeToPlainYearMonth
code-creation,Builtin,2,81422,0x7ff7541f3540,12,TemporalPlainDatePrototypeToPlainMonthDay
code-creation,Builtin,2,81428,0x7ff7541f3580,12,TemporalPlainDatePrototypeGetISOFields
code-creation,Builtin,2,81434,0x7ff7541f35c0,12,TemporalPlainDatePrototypeAdd
code-creation,Builtin,2,81440,0x7ff7541f3600,12,TemporalPlainDatePrototypeSubtract
code-creation,Builtin,2,81446,0x7ff7541f3640,12,TemporalPlainDatePrototypeWith
code-creation,Builtin,2,81452,0x7ff7541f3680,12,TemporalPlainDatePrototypeWithCalendar
code-creation,Builtin,2,81458,0x7ff7541f36c0,12,TemporalPlainDatePrototypeUntil
code-creation,Builtin,2,81464,0x7ff7541f3700,12,TemporalPlainDatePrototypeSince
code-creation,Builtin,2,81470,0x7ff7541f3740,12,TemporalPlainDatePrototypeEquals
code-creation,Builtin,2,81476,0x7ff7541f3780,12,TemporalPlainDatePrototypeToPlainDateTime
code-creation,Builtin,2,81482,0x7ff7541f37c0,12,TemporalPlainDatePrototypeToZonedDateTime
code-creation,Builtin,2,81488,0x7ff7541f3800,12,TemporalPlainDatePrototypeToString
code-creation,Builtin,2,81494,0x7ff7541f3840,12,TemporalPlainDatePrototypeToJSON
code-creation,Builtin,2,81500,0x7ff7541f3880,12,TemporalPlainDatePrototypeToLocaleString
code-creation,Builtin,2,81506,0x7ff7541f38c0,12,TemporalPlainDatePrototypeValueOf
code-creation,Builtin,2,81512,0x7ff7541f3900,12,TemporalPlainTimeConstructor
code-creation,Builtin,2,81518,0x7ff7541f3940,12,TemporalPlainTimeFrom
code-creation,Builtin,2,81523,0x7ff7541f3980,12,TemporalPlainTimeCompare
code-creation,Builtin,2,81529,0x7ff7541f39c0,12,TemporalPlainTimePrototypeCalendar
code-creation,Builtin,2,81535,0x7ff7541f3a00,12,TemporalPlainTimePrototypeHour
code-creation,Builtin,2,81540,0x7ff7541f3a40,12,TemporalPlainTimePrototypeMinute
code-creation,Builtin,2,81546,0x7ff7541f3a80,12,TemporalPlainTimePrototypeSecond
code-creation,Builtin,2,81552,0x7ff7541f3ac0,12,TemporalPlainTimePrototypeMillisecond
code-creation,Builtin,2,81558,0x7ff7541f3b00,12,TemporalPlainTimePrototypeMicrosecond
code-creation,Builtin,2,81564,0x7ff7541f3b40,12,TemporalPlainTimePrototypeNanosecond
code-creation,Builtin,2,81570,0x7ff7541f3b80,12,TemporalPlainTimePrototypeAdd
code-creation,Builtin,2,81576,0x7ff7541f3bc0,12,TemporalPlainTimePrototypeSubtract
code-creation,Builtin,2,81582,0x7ff7541f3c00,12,TemporalPlainTimePrototypeWith
code-creation,Builtin,2,81588,0x7ff7541f3c40,12,TemporalPlainTimePrototypeUntil
code-creation,Builtin,2,81594,0x7ff7541f3c80,12,TemporalPlainTimePrototypeSince
code-creation,Builtin,2,81599,0x7ff7541f3cc0,12,TemporalPlainTimePrototypeRound
code-creation,Builtin,2,81605,0x7ff7541f3d00,12,TemporalPlainTimePrototypeEquals
code-creation,Builtin,2,81611,0x7ff7541f3d40,12,TemporalPlainTimePrototypeToPlainDateTime
code-creation,Builtin,2,81617,0x7ff7541f3d80,12,TemporalPlainTimePrototypeToZonedDateTime
code-creation,Builtin,2,81624,0x7ff7541f3dc0,12,TemporalPlainTimePrototypeGetISOFields
code-creation,Builtin,2,81630,0x7ff7541f3e00,12,TemporalPlainTimePrototypeToString
code-creation,Builtin,2,81636,0x7ff7541f3e40,12,TemporalPlainTimePrototypeToJSON
code-creation,Builtin,2,81642,0x7ff7541f3e80,12,TemporalPlainTimePrototypeToLocaleString
code-creation,Builtin,2,81648,0x7ff7541f3ec0,12,TemporalPlainTimePrototypeValueOf
code-creation,Builtin,2,81654,0x7ff7541f3f00,12,TemporalPlainDateTimeConstructor
code-creation,Builtin,2,81660,0x7ff7541f3f40,12,TemporalPlainDateTimeFrom
code-creation,Builtin,2,81665,0x7ff7541f3f80,12,TemporalPlainDateTimeCompare
code-creation,Builtin,2,81672,0x7ff7541f3fc0,12,TemporalPlainDateTimePrototypeCalendar
code-creation,Builtin,2,81679,0x7ff7541f4000,12,TemporalPlainDateTimePrototypeYear
code-creation,Builtin,2,81685,0x7ff7541f4040,12,TemporalPlainDateTimePrototypeMonth
code-creation,Builtin,2,81690,0x7ff7541f4080,12,TemporalPlainDateTimePrototypeMonthCode
code-creation,Builtin,2,81696,0x7ff7541f40c0,12,TemporalPlainDateTimePrototypeDay
code-creation,Builtin,2,81703,0x7ff7541f4100,12,TemporalPlainDateTimePrototypeHour
code-creation,Builtin,2,81709,0x7ff7541f4140,12,TemporalPlainDateTimePrototypeMinute
code-creation,Builtin,2,81715,0x7ff7541f4180,12,TemporalPlainDateTimePrototypeSecond
code-creation,Builtin,2,81721,0x7ff7541f41c0,12,TemporalPlainDateTimePrototypeMillisecond
code-creation,Builtin,2,81727,0x7ff7541f4200,12,TemporalPlainDateTimePrototypeMicrosecond
code-creation,Builtin,2,81733,0x7ff7541f4240,12,TemporalPlainDateTimePrototypeNanosecond
code-creation,Builtin,2,81739,0x7ff7541f4280,12,TemporalPlainDateTimePrototypeDayOfWeek
code-creation,Builtin,2,81745,0x7ff7541f42c0,12,TemporalPlainDateTimePrototypeDayOfYear
code-creation,Builtin,2,81751,0x7ff7541f4300,12,TemporalPlainDateTimePrototypeWeekOfYear
code-creation,Builtin,2,81758,0x7ff7541f4340,12,TemporalPlainDateTimePrototypeDaysInWeek
code-creation,Builtin,2,81764,0x7ff7541f4380,12,TemporalPlainDateTimePrototypeDaysInMonth
code-creation,Builtin,2,81770,0x7ff7541f43c0,12,TemporalPlainDateTimePrototypeDaysInYear
code-creation,Builtin,2,81776,0x7ff7541f4400,12,TemporalPlainDateTimePrototypeMonthsInYear
code-creation,Builtin,2,81782,0x7ff7541f4440,12,TemporalPlainDateTimePrototypeInLeapYear
code-creation,Builtin,2,81788,0x7ff7541f4480,12,TemporalPlainDateTimePrototypeWith
code-creation,Builtin,2,81794,0x7ff7541f44c0,12,TemporalPlainDateTimePrototypeWithPlainTime
code-creation,Builtin,2,81800,0x7ff7541f4500,12,TemporalPlainDateTimePrototypeWithPlainDate
code-creation,Builtin,2,81807,0x7ff7541f4540,12,TemporalPlainDateTimePrototypeWithCalendar
code-creation,Builtin,2,81813,0x7ff7541f4580,12,TemporalPlainDateTimePrototypeAdd
code-creation,Builtin,2,81819,0x7ff7541f45c0,12,TemporalPlainDateTimePrototypeSubtract
code-creation,Builtin,2,81825,0x7ff7541f4600,12,TemporalPlainDateTimePrototypeUntil
code-creation,Builtin,2,81831,0x7ff7541f4640,12,TemporalPlainDateTimePrototypeSince
code-creation,Builtin,2,81837,0x7ff7541f4680,12,TemporalPlainDateTimePrototypeRound
code-creation,Builtin,2,81842,0x7ff7541f46c0,12,TemporalPlainDateTimePrototypeEquals
code-creation,Builtin,2,81852,0x7ff7541f4700,12,TemporalPlainDateTimePrototypeToString
code-creation,Builtin,2,81858,0x7ff7541f4740,12,TemporalPlainDateTimePrototypeToJSON
code-creation,Builtin,2,81864,0x7ff7541f4780,12,TemporalPlainDateTimePrototypeToLocaleString
code-creation,Builtin,2,81871,0x7ff7541f47c0,12,TemporalPlainDateTimePrototypeValueOf
code-creation,Builtin,2,81877,0x7ff7541f4800,12,TemporalPlainDateTimePrototypeToZonedDateTime
code-creation,Builtin,2,81883,0x7ff7541f4840,12,TemporalPlainDateTimePrototypeToPlainDate
code-creation,Builtin,2,81889,0x7ff7541f4880,12,TemporalPlainDateTimePrototypeToPlainYearMonth
code-creation,Builtin,2,81896,0x7ff7541f48c0,12,TemporalPlainDateTimePrototypeToPlainMonthDay
code-creation,Builtin,2,81902,0x7ff7541f4900,12,TemporalPlainDateTimePrototypeToPlainTime
code-creation,Builtin,2,81909,0x7ff7541f4940,12,TemporalPlainDateTimePrototypeGetISOFields
code-creation,Builtin,2,81915,0x7ff7541f4980,12,TemporalZonedDateTimeConstructor
code-creation,Builtin,2,81920,0x7ff7541f49c0,12,TemporalZonedDateTimeFrom
code-creation,Builtin,2,81926,0x7ff7541f4a00,12,TemporalZonedDateTimeCompare
code-creation,Builtin,2,81932,0x7ff7541f4a40,12,TemporalZonedDateTimePrototypeCalendar
code-creation,Builtin,2,81938,0x7ff7541f4a80,12,TemporalZonedDateTimePrototypeTimeZone
code-creation,Builtin,2,81944,0x7ff7541f4ac0,12,TemporalZonedDateTimePrototypeYear
code-creation,Builtin,2,81950,0x7ff7541f4b00,12,TemporalZonedDateTimePrototypeMonth
code-creation,Builtin,2,81956,0x7ff7541f4b40,12,TemporalZonedDateTimePrototypeMonthCode
code-creation,Builtin,2,81981,0x7ff7541f4b80,12,TemporalZonedDateTimePrototypeDay
code-creation,Builtin,2,81989,0x7ff7541f4bc0,12,TemporalZonedDateTimePrototypeHour
code-creation,Builtin,2,81995,0x7ff7541f4c00,12,TemporalZonedDateTimePrototypeMinute
code-creation,Builtin,2,82001,0x7ff7541f4c40,12,TemporalZonedDateTimePrototypeSecond
code-creation,Builtin,2,82007,0x7ff7541f4c80,12,TemporalZonedDateTimePrototypeMillisecond
code-creation,Builtin,2,82013,0x7ff7541f4cc0,12,TemporalZonedDateTimePrototypeMicrosecond
code-creation,Builtin,2,82019,0x7ff7541f4d00,12,TemporalZonedDateTimePrototypeNanosecond
code-creation,Builtin,2,82025,0x7ff7541f4d40,12,TemporalZonedDateTimePrototypeEpochSeconds
code-creation,Builtin,2,82031,0x7ff7541f4d80,12,TemporalZonedDateTimePrototypeEpochMilliseconds
code-creation,Builtin,2,82038,0x7ff7541f4dc0,12,TemporalZonedDateTimePrototypeEpochMicroseconds
code-creation,Builtin,2,82044,0x7ff7541f4e00,12,TemporalZonedDateTimePrototypeEpochNanoseconds
code-creation,Builtin,2,82050,0x7ff7541f4e40,12,TemporalZonedDateTimePrototypeDayOfWeek
code-creation,Builtin,2,82056,0x7ff7541f4e80,12,TemporalZonedDateTimePrototypeDayOfYear
code-creation,Builtin,2,82063,0x7ff7541f4ec0,12,TemporalZonedDateTimePrototypeWeekOfYear
code-creation,Builtin,2,82069,0x7ff7541f4f00,12,TemporalZonedDateTimePrototypeHoursInDay
code-creation,Builtin,2,82075,0x7ff7541f4f40,12,TemporalZonedDateTimePrototypeDaysInWeek
code-creation,Builtin,2,82081,0x7ff7541f4f80,12,TemporalZonedDateTimePrototypeDaysInMonth
code-creation,Builtin,2,82087,0x7ff7541f4fc0,12,TemporalZonedDateTimePrototypeDaysInYear
code-creation,Builtin,2,82094,0x7ff7541f5000,12,TemporalZonedDateTimePrototypeMonthsInYear
code-creation,Builtin,2,82100,0x7ff7541f5040,12,TemporalZonedDateTimePrototypeInLeapYear
code-creation,Builtin,2,82106,0x7ff7541f5080,12,TemporalZonedDateTimePrototypeOffsetNanoseconds
code-creation,Builtin,2,82112,0x7ff7541f50c0,12,TemporalZonedDateTimePrototypeOffset
code-creation,Builtin,2,82118,0x7ff7541f5100,12,TemporalZonedDateTimePrototypeWith
code-creation,Builtin,2,82124,0x7ff7541f5140,12,TemporalZonedDateTimePrototypeWithPlainTime
code-creation,Builtin,2,82131,0x7ff7541f5180,12,TemporalZonedDateTimePrototypeWithPlainDate
code-creation,Builtin,2,82137,0x7ff7541f51c0,12,TemporalZonedDateTimePrototypeWithTimeZone
code-creation,Builtin,2,82143,0x7ff7541f5200,12,TemporalZonedDateTimePrototypeWithCalendar
code-creation,Builtin,2,82149,0x7ff7541f5240,12,TemporalZonedDateTimePrototypeAdd
code-creation,Builtin,2,82155,0x7ff7541f5280,12,TemporalZonedDateTimePrototypeSubtract
code-creation,Builtin,2,82161,0x7ff7541f52c0,12,TemporalZonedDateTimePrototypeUntil
code-creation,Builtin,2,82167,0x7ff7541f5300,12,TemporalZonedDateTimePrototypeSince
code-creation,Builtin,2,82174,0x7ff7541f5340,12,TemporalZonedDateTimePrototypeRound
code-creation,Builtin,2,82180,0x7ff7541f5380,12,TemporalZonedDateTimePrototypeEquals
code-creation,Builtin,2,82185,0x7ff7541f53c0,12,TemporalZonedDateTimePrototypeToString
code-creation,Builtin,2,82192,0x7ff7541f5400,12,TemporalZonedDateTimePrototypeToJSON
code-creation,Builtin,2,82197,0x7ff7541f5440,12,TemporalZonedDateTimePrototypeToLocaleString
code-creation,Builtin,2,82204,0x7ff7541f5480,12,TemporalZonedDateTimePrototypeValueOf
code-creation,Builtin,2,82210,0x7ff7541f54c0,12,TemporalZonedDateTimePrototypeStartOfDay
code-creation,Builtin,2,82216,0x7ff7541f5500,12,TemporalZonedDateTimePrototypeToInstant
code-creation,Builtin,2,82222,0x7ff7541f5540,12,TemporalZonedDateTimePrototypeToPlainDate
code-creation,Builtin,2,82228,0x7ff7541f5580,12,TemporalZonedDateTimePrototypeToPlainTime
code-creation,Builtin,2,82235,0x7ff7541f55c0,12,TemporalZonedDateTimePrototypeToPlainDateTime
code-creation,Builtin,2,82241,0x7ff7541f5600,12,TemporalZonedDateTimePrototypeToPlainYearMonth
code-creation,Builtin,2,82247,0x7ff7541f5640,12,TemporalZonedDateTimePrototypeToPlainMonthDay
code-creation,Builtin,2,82253,0x7ff7541f5680,12,TemporalZonedDateTimePrototypeGetISOFields
code-creation,Builtin,2,82260,0x7ff7541f56c0,12,TemporalDurationConstructor
code-creation,Builtin,2,82265,0x7ff7541f5700,12,TemporalDurationFrom
code-creation,Builtin,2,82272,0x7ff7541f5740,12,TemporalDurationCompare
code-creation,Builtin,2,82278,0x7ff7541f5780,12,TemporalDurationPrototypeYears
code-creation,Builtin,2,82284,0x7ff7541f57c0,12,TemporalDurationPrototypeMonths
code-creation,Builtin,2,82290,0x7ff7541f5800,12,TemporalDurationPrototypeWeeks
code-creation,Builtin,2,82295,0x7ff7541f5840,12,TemporalDurationPrototypeDays
code-creation,Builtin,2,82301,0x7ff7541f5880,12,TemporalDurationPrototypeHours
code-creation,Builtin,2,82307,0x7ff7541f58c0,12,TemporalDurationPrototypeMinutes
code-creation,Builtin,2,82313,0x7ff7541f5900,12,TemporalDurationPrototypeSeconds
code-creation,Builtin,2,82319,0x7ff7541f5940,12,TemporalDurationPrototypeMilliseconds
code-creation,Builtin,2,82325,0x7ff7541f5980,12,TemporalDurationPrototypeMicroseconds
code-creation,Builtin,2,82331,0x7ff7541f59c0,12,TemporalDurationPrototypeNanoseconds
code-creation,Builtin,2,82337,0x7ff7541f5a00,12,TemporalDurationPrototypeSign
code-creation,Builtin,2,82343,0x7ff7541f5a40,12,TemporalDurationPrototypeBlank
code-creation,Builtin,2,82348,0x7ff7541f5a80,12,TemporalDurationPrototypeWith
code-creation,Builtin,2,82354,0x7ff7541f5ac0,12,TemporalDurationPrototypeNegated
code-creation,Builtin,2,82360,0x7ff7541f5b00,12,TemporalDurationPrototypeAbs
code-creation,Builtin,2,82366,0x7ff7541f5b40,12,TemporalDurationPrototypeAdd
code-creation,Builtin,2,82372,0x7ff7541f5b80,12,TemporalDurationPrototypeSubtract
code-creation,Builtin,2,82378,0x7ff7541f5bc0,12,TemporalDurationPrototypeRound
code-creation,Builtin,2,82383,0x7ff7541f5c00,12,TemporalDurationPrototypeTotal
code-creation,Builtin,2,82389,0x7ff7541f5c40,12,TemporalDurationPrototypeToString
code-creation,Builtin,2,82395,0x7ff7541f5c80,12,TemporalDurationPrototypeToJSON
code-creation,Builtin,2,82401,0x7ff7541f5cc0,12,TemporalDurationPrototypeToLocaleString
code-creation,Builtin,2,82407,0x7ff7541f5d00,12,TemporalDurationPrototypeValueOf
code-creation,Builtin,2,82413,0x7ff7541f5d40,12,TemporalInstantConstructor
code-creation,Builtin,2,82419,0x7ff7541f5d80,12,TemporalInstantFrom
code-creation,Builtin,2,82424,0x7ff7541f5dc0,12,TemporalInstantFromEpochSeconds
code-creation,Builtin,2,82430,0x7ff7541f5e00,12,TemporalInstantFromEpochMilliseconds
code-creation,Builtin,2,82436,0x7ff7541f5e40,12,TemporalInstantFromEpochMicroseconds
code-creation,Builtin,2,82442,0x7ff7541f5e80,12,TemporalInstantFromEpochNanoseconds
code-creation,Builtin,2,82448,0x7ff7541f5ec0,12,TemporalInstantCompare
code-creation,Builtin,2,82454,0x7ff7541f5f00,12,TemporalInstantPrototypeEpochSeconds
code-creation,Builtin,2,82460,0x7ff7541f5f40,12,TemporalInstantPrototypeEpochMilliseconds
code-creation,Builtin,2,82466,0x7ff7541f5f80,12,TemporalInstantPrototypeEpochMicroseconds
code-creation,Builtin,2,82472,0x7ff7541f5fc0,12,TemporalInstantPrototypeEpochNanoseconds
code-creation,Builtin,2,82478,0x7ff7541f6000,12,TemporalInstantPrototypeAdd
code-creation,Builtin,2,82487,0x7ff7541f6040,12,TemporalInstantPrototypeSubtract
code-creation,Builtin,2,82493,0x7ff7541f6080,12,TemporalInstantPrototypeUntil
code-creation,Builtin,2,82499,0x7ff7541f60c0,12,TemporalInstantPrototypeSince
code-creation,Builtin,2,82505,0x7ff7541f6100,12,TemporalInstantPrototypeRound
code-creation,Builtin,2,82511,0x7ff7541f6140,12,TemporalInstantPrototypeEquals
code-creation,Builtin,2,82517,0x7ff7541f6180,12,TemporalInstantPrototypeToString
code-creation,Builtin,2,82523,0x7ff7541f61c0,12,TemporalInstantPrototypeToJSON
code-creation,Builtin,2,82528,0x7ff7541f6200,12,TemporalInstantPrototypeToLocaleString
code-creation,Builtin,2,82534,0x7ff7541f6240,12,TemporalInstantPrototypeValueOf
code-creation,Builtin,2,82540,0x7ff7541f6280,12,TemporalInstantPrototypeToZonedDateTime
code-creation,Builtin,2,82546,0x7ff7541f62c0,12,TemporalInstantPrototypeToZonedDateTimeISO
code-creation,Builtin,2,82553,0x7ff7541f6300,12,TemporalPlainYearMonthConstructor
code-creation,Builtin,2,82559,0x7ff7541f6340,12,TemporalPlainYearMonthFrom
code-creation,Builtin,2,82564,0x7ff7541f6380,12,TemporalPlainYearMonthCompare
code-creation,Builtin,2,82571,0x7ff7541f63c0,12,TemporalPlainYearMonthPrototypeCalendar
code-creation,Builtin,2,82578,0x7ff7541f6400,12,TemporalPlainYearMonthPrototypeYear
code-creation,Builtin,2,82584,0x7ff7541f6440,12,TemporalPlainYearMonthPrototypeMonth
code-creation,Builtin,2,82590,0x7ff7541f6480,12,TemporalPlainYearMonthPrototypeMonthCode
code-creation,Builtin,2,82596,0x7ff7541f64c0,12,TemporalPlainYearMonthPrototypeDaysInYear
code-creation,Builtin,2,82602,0x7ff7541f6500,12,TemporalPlainYearMonthPrototypeDaysInMonth
code-creation,Builtin,2,82609,0x7ff7541f6540,12,TemporalPlainYearMonthPrototypeMonthsInYear
code-creation,Builtin,2,82615,0x7ff7541f6580,12,TemporalPlainYearMonthPrototypeInLeapYear
code-creation,Builtin,2,82621,0x7ff7541f65c0,12,TemporalPlainYearMonthPrototypeWith
code-creation,Builtin,2,82627,0x7ff7541f6600,12,TemporalPlainYearMonthPrototypeAdd
code-creation,Builtin,2,82633,0x7ff7541f6640,12,TemporalPlainYearMonthPrototypeSubtract
code-creation,Builtin,2,82639,0x7ff7541f6680,12,TemporalPlainYearMonthPrototypeUntil
code-creation,Builtin,2,82645,0x7ff7541f66c0,12,TemporalPlainYearMonthPrototypeSince
code-creation,Builtin,2,82651,0x7ff7541f6700,12,TemporalPlainYearMonthPrototypeEquals
code-creation,Builtin,2,82657,0x7ff7541f6740,12,TemporalPlainYearMonthPrototypeToString
code-creation,Builtin,2,82663,0x7ff7541f6780,12,TemporalPlainYearMonthPrototypeToJSON
code-creation,Builtin,2,82669,0x7ff7541f67c0,12,TemporalPlainYearMonthPrototypeToLocaleString
code-creation,Builtin,2,82675,0x7ff7541f6800,12,TemporalPlainYearMonthPrototypeValueOf
code-creation,Builtin,2,82682,0x7ff7541f6840,12,TemporalPlainYearMonthPrototypeToPlainDate
code-creation,Builtin,2,82688,0x7ff7541f6880,12,TemporalPlainYearMonthPrototypeGetISOFields
code-creation,Builtin,2,82695,0x7ff7541f68c0,12,TemporalPlainMonthDayConstructor
code-creation,Builtin,2,82700,0x7ff7541f6900,12,TemporalPlainMonthDayFrom
code-creation,Builtin,2,82706,0x7ff7541f6940,12,TemporalPlainMonthDayPrototypeCalendar
code-creation,Builtin,2,82712,0x7ff7541f6980,12,TemporalPlainMonthDayPrototypeMonthCode
code-creation,Builtin,2,82718,0x7ff7541f69c0,12,TemporalPlainMonthDayPrototypeDay
code-creation,Builtin,2,82724,0x7ff7541f6a00,12,TemporalPlainMonthDayPrototypeWith
code-creation,Builtin,2,82730,0x7ff7541f6a40,12,TemporalPlainMonthDayPrototypeEquals
code-creation,Builtin,2,82736,0x7ff7541f6a80,12,TemporalPlainMonthDayPrototypeToString
code-creation,Builtin,2,82742,0x7ff7541f6ac0,12,TemporalPlainMonthDayPrototypeToJSON
code-creation,Builtin,2,82748,0x7ff7541f6b00,12,TemporalPlainMonthDayPrototypeToLocaleString
code-creation,Builtin,2,82755,0x7ff7541f6b40,12,TemporalPlainMonthDayPrototypeValueOf
code-creation,Builtin,2,82761,0x7ff7541f6b80,12,TemporalPlainMonthDayPrototypeToPlainDate
code-creation,Builtin,2,82767,0x7ff7541f6bc0,12,TemporalPlainMonthDayPrototypeGetISOFields
code-creation,Builtin,2,82773,0x7ff7541f6c00,12,TemporalTimeZoneConstructor
code-creation,Builtin,2,82778,0x7ff7541f6c40,12,TemporalTimeZoneFrom
code-creation,Builtin,2,82784,0x7ff7541f6c80,12,TemporalTimeZonePrototypeId
code-creation,Builtin,2,82790,0x7ff7541f6cc0,12,TemporalTimeZonePrototypeGetOffsetNanosecondsFor
code-creation,Builtin,2,82796,0x7ff7541f6d00,12,TemporalTimeZonePrototypeGetOffsetStringFor
code-creation,Builtin,2,82802,0x7ff7541f6d40,12,TemporalTimeZonePrototypeGetPlainDateTimeFor
code-creation,Builtin,2,82809,0x7ff7541f6d80,12,TemporalTimeZonePrototypeGetInstantFor
code-creation,Builtin,2,82815,0x7ff7541f6dc0,12,TemporalTimeZonePrototypeGetPossibleInstantsFor
code-creation,Builtin,2,82821,0x7ff7541f6e00,12,TemporalTimeZonePrototypeGetNextTransition
code-creation,Builtin,2,82827,0x7ff7541f6e40,12,TemporalTimeZonePrototypeGetPreviousTransition
code-creation,Builtin,2,82833,0x7ff7541f6e80,12,TemporalTimeZonePrototypeToString
code-creation,Builtin,2,82839,0x7ff7541f6ec0,12,TemporalTimeZonePrototypeToJSON
code-creation,Builtin,2,82845,0x7ff7541f6f00,12,TemporalCalendarConstructor
code-creation,Builtin,2,82851,0x7ff7541f6f40,12,TemporalCalendarFrom
code-creation,Builtin,2,82857,0x7ff7541f6f80,12,TemporalCalendarPrototypeId
code-creation,Builtin,2,82863,0x7ff7541f6fc0,12,TemporalCalendarPrototypeDateFromFields
code-creation,Builtin,2,82870,0x7ff7541f7000,12,TemporalCalendarPrototypeYearMonthFromFields
code-creation,Builtin,2,82877,0x7ff7541f7040,12,TemporalCalendarPrototypeMonthDayFromFields
code-creation,Builtin,2,82883,0x7ff7541f7080,12,TemporalCalendarPrototypeDateAdd
code-creation,Builtin,2,82889,0x7ff7541f70c0,12,TemporalCalendarPrototypeDateUntil
code-creation,Builtin,2,82895,0x7ff7541f7100,12,TemporalCalendarPrototypeYear
code-creation,Builtin,2,82901,0x7ff7541f7140,12,TemporalCalendarPrototypeMonth
code-creation,Builtin,2,82906,0x7ff7541f7180,12,TemporalCalendarPrototypeMonthCode
code-creation,Builtin,2,82912,0x7ff7541f71c0,12,TemporalCalendarPrototypeDay
code-creation,Builtin,2,82918,0x7ff7541f7200,12,TemporalCalendarPrototypeDayOfWeek
code-creation,Builtin,2,82924,0x7ff7541f7240,12,TemporalCalendarPrototypeDayOfYear
code-creation,Builtin,2,82930,0x7ff7541f7280,12,TemporalCalendarPrototypeWeekOfYear
code-creation,Builtin,2,82936,0x7ff7541f72c0,12,TemporalCalendarPrototypeDaysInWeek
code-creation,Builtin,2,82942,0x7ff7541f7300,12,TemporalCalendarPrototypeDaysInMonth
code-creation,Builtin,2,82948,0x7ff7541f7340,12,TemporalCalendarPrototypeDaysInYear
code-creation,Builtin,2,82954,0x7ff7541f7380,12,TemporalCalendarPrototypeMonthsInYear
code-creation,Builtin,2,82960,0x7ff7541f73c0,12,TemporalCalendarPrototypeInLeapYear
code-creation,Builtin,2,82966,0x7ff7541f7400,3952,TemporalCalendarPrototypeFields
code-creation,Builtin,2,82972,0x7ff7541f8380,12,TemporalCalendarPrototypeMergeFields
code-creation,Builtin,2,82978,0x7ff7541f83c0,12,TemporalCalendarPrototypeToString
code-creation,Builtin,2,82984,0x7ff7541f8400,12,TemporalCalendarPrototypeToJSON
code-creation,Builtin,2,82990,0x7ff7541f8440,12,DatePrototypeToTemporalInstant
code-creation,Builtin,2,82996,0x7ff7541f8480,1928,StringFixedArrayFromIterable
code-creation,Builtin,2,83001,0x7ff7541f8c40,1928,TemporalInstantFixedArrayFromIterable
code-creation,Builtin,2,83007,0x7ff7541f9400,260,AggregateErrorConstructor
code-creation,Builtin,2,83013,0x7ff7541f9540,808,ArrayPrototypeAt
code-creation,Builtin,2,83018,0x7ff7541f9880,552,ArrayPrototypeConcat
code-creation,Builtin,2,83024,0x7ff7541f9ac0,5016,ArrayPrototypeCopyWithin
code-creation,Builtin,2,83030,0x7ff7541fae80,212,ArrayEveryLoopEagerDeoptContinuation
code-creation,Builtin,2,83036,0x7ff7541faf80,564,ArrayEveryLoopLazyDeoptContinuation
code-creation,Builtin,2,83042,0x7ff7541fb1c0,4472,ArrayEveryLoopContinuation
code-creation,Builtin,2,83048,0x7ff7541fc340,1492,ArrayEvery
code-creation,Builtin,2,83053,0x7ff7541fc940,272,ArrayFilterLoopEagerDeoptContinuation
code-creation,Builtin,2,83059,0x7ff7541fca80,860,ArrayFilterLoopLazyDeoptContinuation
code-creation,Builtin,2,83065,0x7ff7541fce00,4708,ArrayFilterLoopContinuation
code-creation,Builtin,2,83071,0x7ff7541fe080,4608,ArrayFilter
code-creation,Builtin,2,83076,0x7ff7541ff2c0,200,ArrayFindLoopEagerDeoptContinuation
code-creation,Builtin,2,83082,0x7ff7541ff3c0,32,ArrayFindLoopLazyDeoptContinuation
code-creation,Builtin,2,83088,0x7ff7541ff400,308,ArrayFindLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,83094,0x7ff7541ff540,532,ArrayFindLoopContinuation
code-creation,Builtin,2,83100,0x7ff7541ff780,1472,ArrayPrototypeFind
code-creation,Builtin,2,83105,0x7ff7541ffd80,200,ArrayFindIndexLoopEagerDeoptContinuation
code-creation,Builtin,2,83111,0x7ff7541ffe80,32,ArrayFindIndexLoopLazyDeoptContinuation
code-creation,Builtin,2,83118,0x7ff7541ffec0,308,ArrayFindIndexLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,83124,0x7ff754200000,528,ArrayFindIndexLoopContinuation
code-creation,Builtin,2,83130,0x7ff754200240,1464,ArrayPrototypeFindIndex
code-creation,Builtin,2,83140,0x7ff754200800,464,ArrayFindLastLoopContinuation
code-creation,Builtin,2,83145,0x7ff754200a00,1660,ArrayPrototypeFindLast
code-creation,Builtin,2,83151,0x7ff754201080,460,ArrayFindLastIndexLoopContinuation
code-creation,Builtin,2,83157,0x7ff754201280,1648,ArrayPrototypeFindLastIndex
code-creation,Builtin,2,83164,0x7ff754201900,212,ArrayForEachLoopEagerDeoptContinuation
code-creation,Builtin,2,83170,0x7ff754201a00,212,ArrayForEachLoopLazyDeoptContinuation
code-creation,Builtin,2,83177,0x7ff754201b00,4336,ArrayForEachLoopContinuation
code-creation,Builtin,2,83182,0x7ff754202c00,1336,ArrayForEach
code-creation,Builtin,2,83188,0x7ff754203140,4808,ArrayFrom
code-creation,Builtin,2,83193,0x7ff754204440,168,ArrayIsArray
code-creation,Builtin,2,83198,0x7ff754204500,396,LoadJoinElement_DictionaryElements_0
code-creation,Builtin,2,83204,0x7ff7542046c0,40,LoadJoinElement_FastSmiOrObjectElements_0
code-creation,Builtin,2,83210,0x7ff754204700,132,LoadJoinElement_FastDoubleElements_0
code-creation,Builtin,2,83217,0x7ff7542047c0,196,ConvertToLocaleString
code-creation,Builtin,2,83222,0x7ff7542048c0,796,JoinStackPush
code-creation,Builtin,2,83227,0x7ff754204c00,320,JoinStackPop
code-creation,Builtin,2,83233,0x7ff754204d80,9420,ArrayPrototypeJoin
code-creation,Builtin,2,83238,0x7ff754207280,5784,ArrayPrototypeToLocaleString
code-creation,Builtin,2,83244,0x7ff754208940,236,ArrayPrototypeToString
code-creation,Builtin,2,83249,0x7ff754208a40,9220,TypedArrayPrototypeJoin
code-creation,Builtin,2,83255,0x7ff75420ae80,5628,TypedArrayPrototypeToLocaleString
code-creation,Builtin,2,83261,0x7ff75420c480,4276,ArrayPrototypeLastIndexOf
code-creation,Builtin,2,83267,0x7ff75420d540,236,ArrayMapPreLoopLazyDeoptContinuation
code-creation,Builtin,2,83273,0x7ff75420d640,244,ArrayMapLoopEagerDeoptContinuation
code-creation,Builtin,2,83279,0x7ff75420d740,472,ArrayMapLoopLazyDeoptContinuation
code-creation,Builtin,2,83285,0x7ff75420d940,4360,ArrayMapLoopContinuation
code-creation,Builtin,2,83291,0x7ff75420ea80,3812,ArrayMap
code-creation,Builtin,2,83296,0x7ff75420f980,1868,ArrayOf
code-creation,Builtin,2,83301,0x7ff754210100,408,ArrayReduceRightPreLoopEagerDeoptContinuation
code-creation,Builtin,2,83307,0x7ff7542102c0,200,ArrayReduceRightLoopEagerDeoptContinuation
code-creation,Builtin,2,83314,0x7ff7542103c0,200,ArrayReduceRightLoopLazyDeoptContinuation
code-creation,Builtin,2,83320,0x7ff7542104c0,4412,ArrayReduceRightLoopContinuation
code-creation,Builtin,2,83326,0x7ff754211600,1896,ArrayReduceRight
code-creation,Builtin,2,83331,0x7ff754211d80,180,ArrayReducePreLoopEagerDeoptContinuation
code-creation,Builtin,2,83337,0x7ff754211e40,200,ArrayReduceLoopEagerDeoptContinuation
code-creation,Builtin,2,83343,0x7ff754211f40,200,ArrayReduceLoopLazyDeoptContinuation
code-creation,Builtin,2,83349,0x7ff754212040,4432,ArrayReduceLoopContinuation
code-creation,Builtin,2,83355,0x7ff7542131c0,1544,ArrayReduce
code-creation,Builtin,2,83361,0x7ff754213800,3588,ArrayPrototypeReverse
code-creation,Builtin,2,83366,0x7ff754214640,3816,ArrayPrototypeShift
code-creation,Builtin,2,83372,0x7ff754215540,6488,ArrayPrototypeSlice
code-creation,Builtin,2,83377,0x7ff754216ec0,212,ArraySomeLoopEagerDeoptContinuation
code-creation,Builtin,2,83383,0x7ff754216fc0,532,ArraySomeLoopLazyDeoptContinuation
code-creation,Builtin,2,83389,0x7ff754217200,4460,ArraySomeLoopContinuation
code-creation,Builtin,2,83395,0x7ff754218380,1476,ArraySome
code-creation,Builtin,2,83400,0x7ff754218980,15040,ArrayPrototypeSplice
code-creation,Builtin,2,83405,0x7ff75421c480,2100,GenericArrayToReversed
code-creation,Builtin,2,83411,0x7ff75421ccc0,2856,ArrayPrototypeToReversed
code-creation,Builtin,2,83417,0x7ff75421d800,6152,ArrayTimSortIntoCopy
code-creation,Builtin,2,83422,0x7ff75421f040,2132,ArrayPrototypeToSorted
code-creation,Builtin,2,83428,0x7ff75421f8c0,9352,ArrayPrototypeToSpliced
code-creation,Builtin,2,83433,0x7ff754221d80,3104,ArrayPrototypeUnshift
code-creation,Builtin,2,83439,0x7ff7542229c0,1428,GenericArrayWith
code-creation,Builtin,2,83444,0x7ff754222f80,1112,ArrayPrototypeWith
code-creation,Builtin,2,83450,0x7ff754223400,324,ArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,83456,0x7ff754223580,484,ArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,83462,0x7ff754223780,216,ArrayBufferPrototypeGetResizable
code-creation,Builtin,2,83468,0x7ff754223880,216,ArrayBufferPrototypeGetDetached
code-creation,Builtin,2,83475,0x7ff754223980,324,SharedArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,83481,0x7ff754223b00,216,SharedArrayBufferPrototypeGetGrowable
code-creation,Builtin,2,83488,0x7ff754223c00,100,ArrayBufferIsView
code-creation,Builtin,2,83493,0x7ff754223c80,440,ToInteger
code-creation,Builtin,2,83498,0x7ff754223e40,3356,FastCreateDataProperty
code-creation,Builtin,2,83504,0x7ff754224b80,1104,BooleanConstructor
code-creation,Builtin,2,83510,0x7ff754225000,216,BooleanPrototypeToString
code-creation,Builtin,2,83515,0x7ff754225100,212,BooleanPrototypeValueOf
code-creation,Builtin,2,83521,0x7ff754225200,1072,BigIntAddNoThrow
code-creation,Builtin,2,83526,0x7ff754225640,1148,BigIntAdd
code-creation,Builtin,2,83532,0x7ff754225ac0,1072,BigIntSubtractNoThrow
code-creation,Builtin,2,83537,0x7ff754225f00,1144,BigIntSubtract
code-creation,Builtin,2,83543,0x7ff754226380,324,BigIntMultiplyNoThrow
code-creation,Builtin,2,83548,0x7ff754226500,444,BigIntMultiply
code-creation,Builtin,2,83553,0x7ff7542266c0,552,BigIntDivideNoThrow
code-creation,Builtin,2,83559,0x7ff754226900,656,BigIntDivide
code-creation,Builtin,2,83564,0x7ff754226bc0,464,BigIntModulusNoThrow
code-creation,Builtin,2,83570,0x7ff754226dc0,572,BigIntModulus
code-creation,Builtin,2,83575,0x7ff754227000,960,BigIntBitwiseAndNoThrow
code-creation,Builtin,2,83581,0x7ff754227400,1116,BigIntBitwiseAnd
code-creation,Builtin,2,83586,0x7ff754227880,940,BigIntBitwiseOrNoThrow
code-creation,Builtin,2,83592,0x7ff754227c40,1064,BigIntBitwiseOr
code-creation,Builtin,2,83597,0x7ff754228080,976,BigIntBitwiseXorNoThrow
code-creation,Builtin,2,83603,0x7ff754228480,1132,BigIntBitwiseXor
code-creation,Builtin,2,83608,0x7ff754228900,1280,BigIntShiftLeftNoThrow
code-creation,Builtin,2,83614,0x7ff754228e40,1388,BigIntShiftLeft
code-creation,Builtin,2,83619,0x7ff7542293c0,1280,BigIntShiftRightNoThrow
code-creation,Builtin,2,83625,0x7ff754229900,1388,BigIntShiftRight
code-creation,Builtin,2,83631,0x7ff754229e80,168,BigIntEqual
code-creation,Builtin,2,83636,0x7ff754229f40,208,BigIntLessThan
code-creation,Builtin,2,83641,0x7ff75422a040,208,BigIntGreaterThan
code-creation,Builtin,2,83647,0x7ff75422a140,208,BigIntLessThanOrEqual
code-creation,Builtin,2,83652,0x7ff75422a240,208,BigIntGreaterThanOrEqual
code-creation,Builtin,2,83658,0x7ff75422a340,328,BigIntUnaryMinus
code-creation,Builtin,2,83664,0x7ff75422a4c0,2268,ToString
code-creation,Builtin,2,83669,0x7ff75422adc0,212,StringPrototypeToString
code-creation,Builtin,2,83675,0x7ff75422aec0,212,StringPrototypeValueOf
code-creation,Builtin,2,83680,0x7ff75422afc0,2500,StringToList
code-creation,Builtin,2,83685,0x7ff75422b9c0,856,StringPrototypeCharAt
code-creation,Builtin,2,83691,0x7ff75422bd40,752,StringPrototypeCharCodeAt
code-creation,Builtin,2,83697,0x7ff75422c040,1320,StringPrototypeCodePointAt
code-creation,Builtin,2,83702,0x7ff75422c580,460,StringPrototypeConcat
code-creation,Builtin,2,83708,0x7ff75422c780,1088,StringConstructor
code-creation,Builtin,2,83714,0x7ff75422cc00,2292,StringAddConvertLeft
code-creation,Builtin,2,83719,0x7ff75422d500,2360,StringAddConvertRight
code-creation,Builtin,2,83725,0x7ff75422de40,628,StringCharAt
code-creation,Builtin,2,83730,0x7ff75422e0c0,16,FastNewClosureBaseline
code-creation,Builtin,2,83735,0x7ff75422e100,308,FastNewFunctionContextEval
code-creation,Builtin,2,83741,0x7ff75422e240,308,FastNewFunctionContextFunction
code-creation,Builtin,2,83747,0x7ff75422e380,240,CreateRegExpLiteral
code-creation,Builtin,2,83753,0x7ff75422e480,1316,CreateShallowArrayLiteral
code-creation,Builtin,2,83758,0x7ff75422e9c0,496,CreateEmptyArrayLiteral
code-creation,Builtin,2,83764,0x7ff75422ebc0,2248,CreateShallowObjectLiteral
code-creation,Builtin,2,83770,0x7ff75422f4c0,460,ObjectConstructor
code-creation,Builtin,2,83775,0x7ff75422f6c0,228,CreateEmptyLiteralObject
code-creation,Builtin,2,83781,0x7ff75422f7c0,548,NumberConstructor
code-creation,Builtin,2,83786,0x7ff75422fa00,60,GenericLazyDeoptContinuation
code-creation,Builtin,2,83792,0x7ff75422fa40,60,StringToNumber
code-creation,Builtin,2,83797,0x7ff75422fa80,188,NonNumberToNumber
code-creation,Builtin,2,83804,0x7ff75422fb40,240,NonNumberToNumeric
code-creation,Builtin,2,83810,0x7ff75422fc40,36,ToNumeric
code-creation,Builtin,2,83815,0x7ff75422fc80,1268,NumberToString
code-creation,Builtin,2,83820,0x7ff754230180,108,ToBoolean
code-creation,Builtin,2,83826,0x7ff754230200,104,ToBooleanForBaselineJump
code-creation,Builtin,2,83831,0x7ff754230280,640,ToLength
code-creation,Builtin,2,83836,0x7ff754230540,1360,ToName
code-creation,Builtin,2,83841,0x7ff754230ac0,1012,ToObject
code-creation,Builtin,2,83847,0x7ff754230ec0,452,NonPrimitiveToPrimitive_Default
code-creation,Builtin,2,83853,0x7ff7542310c0,452,NonPrimitiveToPrimitive_Number
code-creation,Builtin,2,83859,0x7ff7542312c0,800,NonPrimitiveToPrimitive_String
code-creation,Builtin,2,83865,0x7ff754231600,20,OrdinaryToPrimitive_Number
code-creation,Builtin,2,83871,0x7ff754231640,376,OrdinaryToPrimitive_Number_Inline
code-creation,Builtin,2,83877,0x7ff7542317c0,376,OrdinaryToPrimitive_String
code-creation,Builtin,2,83882,0x7ff754231940,224,FastConsoleAssert
code-creation,Builtin,2,83888,0x7ff754231a40,184,DataViewPrototypeGetBuffer
code-creation,Builtin,2,83894,0x7ff754231b00,764,DataViewPrototypeGetByteLength
code-creation,Builtin,2,83900,0x7ff754231e00,440,DataViewPrototypeGetByteOffset
code-creation,Builtin,2,83905,0x7ff754231fc0,848,DataViewPrototypeGetUint8
code-creation,Builtin,2,83911,0x7ff754232340,848,DataViewPrototypeGetInt8
code-creation,Builtin,2,83917,0x7ff7542326c0,932,DataViewPrototypeGetUint16
code-creation,Builtin,2,83922,0x7ff754232a80,928,DataViewPrototypeGetInt16
code-creation,Builtin,2,83928,0x7ff754232e40,1076,DataViewPrototypeGetUint32
code-creation,Builtin,2,83934,0x7ff754233280,964,DataViewPrototypeGetInt32
code-creation,Builtin,2,83940,0x7ff754233680,1108,DataViewPrototypeGetFloat32
code-creation,Builtin,2,83946,0x7ff754233b00,1172,DataViewPrototypeGetFloat64
code-creation,Builtin,2,83951,0x7ff754233fc0,1228,DataViewPrototypeGetBigUint64
code-creation,Builtin,2,83957,0x7ff7542344c0,1252,DataViewPrototypeGetBigInt64
code-creation,Builtin,2,83963,0x7ff7542349c0,1268,DataViewPrototypeSetUint8
code-creation,Builtin,2,83969,0x7ff754234ec0,1268,DataViewPrototypeSetInt8
code-creation,Builtin,2,83974,0x7ff7542353c0,1356,DataViewPrototypeSetUint16
code-creation,Builtin,2,83980,0x7ff754235940,1356,DataViewPrototypeSetInt16
code-creation,Builtin,2,83986,0x7ff754235ec0,1392,DataViewPrototypeSetUint32
code-creation,Builtin,2,83992,0x7ff754236440,1392,DataViewPrototypeSetInt32
code-creation,Builtin,2,83998,0x7ff7542369c0,1356,DataViewPrototypeSetFloat32
code-creation,Builtin,2,84004,0x7ff754236f40,1420,DataViewPrototypeSetFloat64
code-creation,Builtin,2,84013,0x7ff754237500,1268,DataViewPrototypeSetBigUint64
code-creation,Builtin,2,84019,0x7ff754237a00,1268,DataViewPrototypeSetBigInt64
code-creation,Builtin,2,84025,0x7ff754237f00,1004,FinalizationRegistryConstructor
code-creation,Builtin,2,84031,0x7ff754238300,1244,FinalizationRegistryRegister
code-creation,Builtin,2,84037,0x7ff754238800,696,FinalizationRegistryPrototypeCleanupSome
code-creation,Builtin,2,84043,0x7ff754238ac0,364,FunctionPrototypeHasInstance
code-creation,Builtin,2,84049,0x7ff754238c40,968,FastFunctionPrototypeBind
code-creation,Builtin,2,84055,0x7ff754239040,152,IncBlockCounter
code-creation,Builtin,2,84060,0x7ff754239100,236,GetTemplateObject
code-creation,Builtin,2,84065,0x7ff754239200,84,ForInNext
code-creation,Builtin,2,84071,0x7ff754239280,156,GetImportMetaObjectBaseline
code-creation,Builtin,2,84077,0x7ff754239340,112,GetIteratorWithFeedback
code-creation,Builtin,2,84082,0x7ff7542393c0,100,GetIteratorBaseline
code-creation,Builtin,2,84088,0x7ff754239440,372,CreateAsyncFromSyncIteratorBaseline
code-creation,Builtin,2,84094,0x7ff7542395c0,1076,CallIteratorWithFeedback
code-creation,Builtin,2,84099,0x7ff754239a00,964,IteratorConstructor
code-creation,Builtin,2,84105,0x7ff754239e00,892,IteratorFrom
code-creation,Builtin,2,84110,0x7ff75423a180,160,WrapForValidIteratorPrototypeNext
code-creation,Builtin,2,84119,0x7ff75423a240,408,WrapForValidIteratorPrototypeReturn
code-creation,Builtin,2,84181,0x7ff75423a400,424,IteratorHelperPrototypeNext
code-creation,Builtin,2,84198,0x7ff75423a5c0,1328,IteratorHelperPrototypeReturn
code-creation,Builtin,2,84207,0x7ff75423ab00,372,IteratorPrototypeMap
code-creation,Builtin,2,84218,0x7ff75423ac80,1440,IteratorMapHelperNext
code-creation,Builtin,2,84230,0x7ff75423b240,372,IteratorPrototypeFilter
code-creation,Builtin,2,84236,0x7ff75423b3c0,1640,IteratorFilterHelperNext
code-creation,Builtin,2,84244,0x7ff75423ba40,516,IteratorPrototypeTake
code-creation,Builtin,2,84251,0x7ff75423bc80,1692,IteratorTakeHelperNext
code-creation,Builtin,2,84258,0x7ff75423c340,516,IteratorPrototypeDrop
code-creation,Builtin,2,84264,0x7ff75423c580,1836,IteratorDropHelperNext
code-creation,Builtin,2,84271,0x7ff75423ccc0,404,IteratorPrototypeFlatMap
code-creation,Builtin,2,84279,0x7ff75423ce80,2784,IteratorFlatMapHelperNext
code-creation,Builtin,2,84285,0x7ff75423d980,1636,IteratorPrototypeReduce
code-creation,Builtin,2,84291,0x7ff75423e000,1652,IteratorPrototypeToArray
code-creation,Builtin,2,84297,0x7ff75423e680,1064,IteratorPrototypeForEach
code-creation,Builtin,2,84303,0x7ff75423eac0,1336,IteratorPrototypeSome
code-creation,Builtin,2,84309,0x7ff75423f000,1332,IteratorPrototypeEvery
code-creation,Builtin,2,84314,0x7ff75423f540,1340,IteratorPrototypeFind
code-creation,Builtin,2,84322,0x7ff75423fa80,8584,MapGroupBy
code-creation,Builtin,2,84328,0x7ff754241c40,312,MathAbs
code-creation,Builtin,2,84333,0x7ff754241d80,452,MathCeil
code-creation,Builtin,2,84339,0x7ff754241f80,460,MathFloor
code-creation,Builtin,2,84344,0x7ff754242180,504,MathRound
code-creation,Builtin,2,84349,0x7ff754242380,456,MathTrunc
code-creation,Builtin,2,84354,0x7ff754242580,404,MathPow
code-creation,Builtin,2,84360,0x7ff754242740,464,MathMax
code-creation,Builtin,2,84365,0x7ff754242940,464,MathMin
code-creation,Builtin,2,84370,0x7ff754242b40,316,MathAcos
code-creation,Builtin,2,84375,0x7ff754242c80,316,MathAcosh
code-creation,Builtin,2,84380,0x7ff754242dc0,316,MathAsin
code-creation,Builtin,2,84386,0x7ff754242f00,316,MathAsinh
code-creation,Builtin,2,84391,0x7ff754243040,316,MathAtan
code-creation,Builtin,2,84397,0x7ff754243180,400,MathAtan2
code-creation,Builtin,2,84405,0x7ff754243340,316,MathAtanh
code-creation,Builtin,2,84415,0x7ff754243480,316,MathCbrt
code-creation,Builtin,2,84424,0x7ff7542435c0,168,MathClz32
code-creation,Builtin,2,84435,0x7ff754243680,316,MathCos
code-creation,Builtin,2,84444,0x7ff7542437c0,316,MathCosh
code-creation,Builtin,2,84451,0x7ff754243900,316,MathExp
code-creation,Builtin,2,84456,0x7ff754243a40,316,MathExpm1
code-creation,Builtin,2,84461,0x7ff754243b80,268,MathFround
code-creation,Builtin,2,84466,0x7ff754243cc0,304,MathImul
code-creation,Builtin,2,84472,0x7ff754243e00,316,MathLog
code-creation,Builtin,2,84477,0x7ff754243f40,316,MathLog1p
code-creation,Builtin,2,84482,0x7ff754244080,316,MathLog10
code-creation,Builtin,2,84487,0x7ff7542441c0,316,MathLog2
code-creation,Builtin,2,84493,0x7ff754244300,316,MathSin
code-creation,Builtin,2,84498,0x7ff754244440,176,MathSign
code-creation,Builtin,2,84503,0x7ff754244500,316,MathSinh
code-creation,Builtin,2,84508,0x7ff754244640,264,MathSqrt
code-creation,Builtin,2,84514,0x7ff754244780,316,MathTan
code-creation,Builtin,2,84519,0x7ff7542448c0,316,MathTanh
code-creation,Builtin,2,84524,0x7ff754244a00,1084,MathHypot
code-creation,Builtin,2,84529,0x7ff754244e40,324,MathRandom
code-creation,Builtin,2,84535,0x7ff754244fc0,2692,NumberPrototypeToString
code-creation,Builtin,2,84541,0x7ff754245a80,132,NumberIsFinite
code-creation,Builtin,2,84546,0x7ff754245b40,332,NumberIsInteger
code-creation,Builtin,2,84553,0x7ff754245cc0,128,NumberIsNaN
code-creation,Builtin,2,84559,0x7ff754245d80,364,NumberIsSafeInteger
code-creation,Builtin,2,84565,0x7ff754245f00,212,NumberPrototypeValueOf
code-creation,Builtin,2,84570,0x7ff754246000,200,NumberParseFloat
code-creation,Builtin,2,84576,0x7ff754246100,248,ParseInt
code-creation,Builtin,2,84581,0x7ff754246200,84,NumberParseInt
code-creation,Builtin,2,84587,0x7ff754246280,844,Add
code-creation,Builtin,2,84594,0x7ff754246600,476,Subtract
code-creation,Builtin,2,84601,0x7ff754246800,604,Multiply
code-creation,Builtin,2,84606,0x7ff754246a80,548,Divide
code-creation,Builtin,2,84611,0x7ff754246cc0,596,Modulus
code-creation,Builtin,2,84617,0x7ff754246f40,616,Exponentiate
code-creation,Builtin,2,84622,0x7ff7542471c0,384,Negate
code-creation,Builtin,2,84628,0x7ff754247380,208,BitwiseNot
code-creation,Builtin,2,84633,0x7ff754247480,160,Decrement
code-creation,Builtin,2,84641,0x7ff754247540,160,Increment
code-creation,Builtin,2,84647,0x7ff754247600,608,ShiftLeft
code-creation,Builtin,2,84652,0x7ff754247880,608,ShiftRight
code-creation,Builtin,2,84657,0x7ff754247b00,640,ShiftRightLogical
code-creation,Builtin,2,84663,0x7ff754247dc0,352,BitwiseAnd
code-creation,Builtin,2,84668,0x7ff754247f40,352,BitwiseOr
code-creation,Builtin,2,84674,0x7ff7542480c0,352,BitwiseXor
code-creation,Builtin,2,84679,0x7ff754248240,1012,LessThan
code-creation,Builtin,2,84686,0x7ff754248640,1012,LessThanOrEqual
code-creation,Builtin,2,84692,0x7ff754248a40,1012,GreaterThan
code-creation,Builtin,2,84698,0x7ff754248e40,1012,GreaterThanOrEqual
code-creation,Builtin,2,84704,0x7ff754249240,1060,Equal
code-creation,Builtin,2,84709,0x7ff754249680,512,StrictEqual
code-creation,Builtin,2,84715,0x7ff7542498c0,3328,ObjectFromEntries
code-creation,Builtin,2,84722,0x7ff75424a600,4196,GroupByGeneric
code-creation,Builtin,2,84728,0x7ff75424b680,8996,ObjectGroupBy
code-creation,Builtin,2,84733,0x7ff75424d9c0,884,CreateObjectWithoutProperties
code-creation,Builtin,2,84740,0x7ff75424dd40,140,ObjectIsExtensible
code-creation,Builtin,2,84745,0x7ff75424de00,144,ObjectPreventExtensions
code-creation,Builtin,2,84751,0x7ff75424dec0,148,ObjectGetPrototypeOf
code-creation,Builtin,2,84760,0x7ff75424df80,300,ObjectSetPrototypeOf
code-creation,Builtin,2,84768,0x7ff75424e0c0,80,ObjectPrototypeToString
code-creation,Builtin,2,84776,0x7ff75424e140,100,ObjectPrototypeValueOf
code-creation,Builtin,2,84782,0x7ff75424e1c0,184,ObjectPrototypeToLocaleString
code-creation,Builtin,2,84789,0x7ff75424e280,1004,FulfillPromise
code-creation,Builtin,2,84794,0x7ff75424e680,1116,RejectPromise
code-creation,Builtin,2,84800,0x7ff75424eb00,2528,NewPromiseCapability
code-creation,Builtin,2,84806,0x7ff75424f500,192,PromiseCapabilityDefaultReject
code-creation,Builtin,2,84811,0x7ff75424f600,172,PromiseCapabilityDefaultResolve
code-creation,Builtin,2,84817,0x7ff75424f6c0,1396,PerformPromiseThen
code-creation,Builtin,2,84823,0x7ff75424fc40,664,PromiseReject
code-creation,Builtin,2,84829,0x7ff75424ff00,324,PromiseGetCapabilitiesExecutor
code-creation,Builtin,2,84835,0x7ff754250080,108,PromiseConstructorLazyDeoptContinuation
code-creation,Builtin,2,84842,0x7ff754250100,4896,PromiseAll
code-creation,Builtin,2,84847,0x7ff754251440,5304,PromiseAllSettled
code-creation,Builtin,2,84855,0x7ff754252900,1124,PromiseAllResolveElementClosure
code-creation,Builtin,2,84861,0x7ff754252d80,1516,PromiseAllSettledResolveElementClosure
code-creation,Builtin,2,84868,0x7ff754253380,1516,PromiseAllSettledRejectElementClosure
code-creation,Builtin,2,84875,0x7ff754253980,1164,PromiseAnyRejectElementClosure
code-creation,Builtin,2,84881,0x7ff754253e40,2836,PromiseAny
code-creation,Builtin,2,84887,0x7ff754254980,3184,PromiseConstructor
code-creation,Builtin,2,84893,0x7ff754255600,292,PromisePrototypeCatch
code-creation,Builtin,2,84899,0x7ff754255740,92,PromiseValueThunkFinally
code-creation,Builtin,2,84905,0x7ff7542557c0,84,PromiseThrowerFinally
code-creation,Builtin,2,84911,0x7ff754255840,1024,PromiseCatchFinally
code-creation,Builtin,2,84916,0x7ff754255c80,1024,PromiseThenFinally
code-creation,Builtin,2,84922,0x7ff7542560c0,1684,PromisePrototypeFinally
code-creation,Builtin,2,84928,0x7ff754256780,1308,PromiseResolveThenableJob
code-creation,Builtin,2,84935,0x7ff754256cc0,1576,PromiseRace
code-creation,Builtin,2,84941,0x7ff754257300,348,PromiseFulfillReactionJob
code-creation,Builtin,2,84947,0x7ff754257480,468,PromiseRejectReactionJob
code-creation,Builtin,2,84953,0x7ff754257680,156,PromiseResolveTrampoline
code-creation,Builtin,2,84962,0x7ff754257740,700,PromiseResolve
code-creation,Builtin,2,84972,0x7ff754257a00,740,ResolvePromise
code-creation,Builtin,2,84979,0x7ff754257d00,2404,PromisePrototypeThen
code-creation,Builtin,2,84985,0x7ff754258680,332,PromiseWithResolvers
code-creation,Builtin,2,84991,0x7ff754258800,444,ProxyConstructor
code-creation,Builtin,2,84997,0x7ff7542589c0,2672,ProxyDeleteProperty
code-creation,Builtin,2,85002,0x7ff754259440,2948,ProxyGetProperty
tick,0x7ffdb202f464,85014,0,0x0,6
code-creation,Builtin,2,85075,0x7ff75425a000,1104,ProxyGetPrototypeOf
code-creation,Builtin,2,85094,0x7ff75425a480,2608,ProxyHasProperty
code-creation,Builtin,2,85101,0x7ff75425aec0,792,ProxyIsExtensible
code-creation,Builtin,2,85106,0x7ff75425b200,848,ProxyPreventExtensions
code-creation,Builtin,2,85112,0x7ff75425b580,1144,ProxyRevocable
code-creation,Builtin,2,85117,0x7ff75425ba00,136,ProxyRevoke
code-creation,Builtin,2,85123,0x7ff75425bac0,3156,ProxySetProperty
code-creation,Builtin,2,85128,0x7ff75425c740,1360,ProxySetPrototypeOf
code-creation,Builtin,2,85134,0x7ff75425ccc0,208,ReflectIsExtensible
code-creation,Builtin,2,85140,0x7ff75425cdc0,212,ReflectPreventExtensions
code-creation,Builtin,2,85145,0x7ff75425cec0,184,ReflectGetPrototypeOf
code-creation,Builtin,2,85151,0x7ff75425cf80,328,ReflectSetPrototypeOf
code-creation,Builtin,2,85157,0x7ff75425d100,296,ReflectGet
code-creation,Builtin,2,85162,0x7ff75425d240,156,ReflectDeleteProperty
code-creation,Builtin,2,85167,0x7ff75425d300,156,ReflectHas
code-creation,Builtin,2,85173,0x7ff75425d3c0,5028,ReflectGetOwnPropertyDescriptor
code-creation,Builtin,2,85179,0x7ff75425e780,5580,RegExpPrototypeExecSlow
code-creation,Builtin,2,85185,0x7ff75425fd80,5600,RegExpPrototypeExec
code-creation,Builtin,2,85191,0x7ff754261380,2752,RegExpPrototypeMatchAll
code-creation,Builtin,2,85196,0x7ff754261e80,9996,RegExpStringIteratorPrototypeNext
code-creation,Builtin,2,85202,0x7ff7542645c0,9540,RegExpMatchFast
code-creation,Builtin,2,85208,0x7ff754266b40,3824,RegExpPrototypeMatch
code-creation,Builtin,2,85213,0x7ff754267a40,6400,RegExpReplace
code-creation,Builtin,2,85219,0x7ff754269380,508,RegExpPrototypeReplace
code-creation,Builtin,2,85225,0x7ff754269580,1444,RegExpSearchFast
code-creation,Builtin,2,85230,0x7ff754269b40,1664,RegExpPrototypeSearch
code-creation,Builtin,2,85236,0x7ff75426a200,212,RegExpPrototypeSourceGetter
code-creation,Builtin,2,85242,0x7ff75426a300,6640,RegExpSplit
code-creation,Builtin,2,85248,0x7ff75426bd00,468,RegExpPrototypeSplit
code-creation,Builtin,2,85255,0x7ff75426bf00,2312,RegExpPrototypeTest
code-creation,Builtin,2,85264,0x7ff75426c840,1404,RegExpPrototypeTestFast
code-creation,Builtin,2,85273,0x7ff75426cdc0,236,RegExpPrototypeGlobalGetter
code-creation,Builtin,2,85283,0x7ff75426cec0,252,RegExpPrototypeIgnoreCaseGetter
code-creation,Builtin,2,85289,0x7ff75426cfc0,252,RegExpPrototypeMultilineGetter
code-creation,Builtin,2,85295,0x7ff75426d0c0,252,RegExpPrototypeHasIndicesGetter
code-creation,Builtin,2,85301,0x7ff75426d1c0,252,RegExpPrototypeLinearGetter
code-creation,Builtin,2,85307,0x7ff75426d2c0,252,RegExpPrototypeDotAllGetter
code-creation,Builtin,2,85314,0x7ff75426d3c0,284,RegExpPrototypeStickyGetter
code-creation,Builtin,2,85322,0x7ff75426d500,284,RegExpPrototypeUnicodeGetter
code-creation,Builtin,2,85331,0x7ff75426d640,252,RegExpPrototypeUnicodeSetsGetter
code-creation,Builtin,2,85340,0x7ff75426d740,2612,RegExpPrototypeFlagsGetter
code-creation,Builtin,2,85348,0x7ff75426e180,12196,SetPrototypeDifference
code-creation,Builtin,2,85357,0x7ff754271140,13348,SetPrototypeIntersection
code-creation,Builtin,2,85364,0x7ff754274580,3116,SetPrototypeIsDisjointFrom
code-creation,Builtin,2,85370,0x7ff7542751c0,1804,SetPrototypeIsSubsetOf
code-creation,Builtin,2,85375,0x7ff754275900,2276,SetPrototypeIsSupersetOf
code-creation,Builtin,2,85381,0x7ff754276200,12020,SetPrototypeSymmetricDifference
code-creation,Builtin,2,85387,0x7ff754279100,7640,SetPrototypeUnion
code-creation,Builtin,2,85393,0x7ff75427af00,1300,StringPrototypeAt
code-creation,Builtin,2,85399,0x7ff75427b440,3232,StringPrototypeEndsWith
code-creation,Builtin,2,85409,0x7ff75427c100,496,CreateHTML
code-creation,Builtin,2,85426,0x7ff75427c300,148,StringPrototypeAnchor
code-creation,Builtin,2,85432,0x7ff75427c3c0,120,StringPrototypeBig
code-creation,Builtin,2,85437,0x7ff75427c440,120,StringPrototypeBlink
code-creation,Builtin,2,85443,0x7ff75427c4c0,120,StringPrototypeBold
code-creation,Builtin,2,85448,0x7ff75427c540,148,StringPrototypeFontcolor
code-creation,Builtin,2,85455,0x7ff75427c600,148,StringPrototypeFontsize
code-creation,Builtin,2,85460,0x7ff75427c6c0,120,StringPrototypeFixed
code-creation,Builtin,2,85466,0x7ff75427c740,120,StringPrototypeItalics
code-creation,Builtin,2,85472,0x7ff75427c7c0,148,StringPrototypeLink
code-creation,Builtin,2,85477,0x7ff75427c880,120,StringPrototypeSmall
code-creation,Builtin,2,85483,0x7ff75427c900,120,StringPrototypeStrike
code-creation,Builtin,2,85488,0x7ff75427c980,120,StringPrototypeSub
code-creation,Builtin,2,85494,0x7ff75427ca00,120,StringPrototypeSup
code-creation,Builtin,2,85500,0x7ff75427ca80,1024,StringPrototypeIncludes
code-creation,Builtin,2,85505,0x7ff75427cec0,648,StringPrototypeIndexOf
code-creation,Builtin,2,85511,0x7ff75427d180,648,StringPrototypeIsWellFormed
code-creation,Builtin,2,85517,0x7ff75427d440,348,StringPrototypeIterator
code-creation,Builtin,2,85522,0x7ff75427d5c0,1804,StringIteratorPrototypeNext
code-creation,Builtin,2,85528,0x7ff75427dd00,1360,StringPrototypeMatch
code-creation,Builtin,2,85534,0x7ff75427e280,1360,StringPrototypeSearch
code-creation,Builtin,2,85539,0x7ff75427e800,768,StringPrototypePadStart
code-creation,Builtin,2,85545,0x7ff75427eb40,772,StringPrototypePadEnd
code-creation,Builtin,2,85551,0x7ff75427ee80,156,StringRepeat
code-creation,Builtin,2,85556,0x7ff75427ef40,408,StringPrototypeRepeat
code-creation,Builtin,2,85561,0x7ff75427f100,13464,StringPrototypeReplaceAll
code-creation,Builtin,2,85567,0x7ff7542825c0,4416,StringPrototypeSlice
code-creation,Builtin,2,85573,0x7ff754283740,3232,StringPrototypeStartsWith
code-creation,Builtin,2,85578,0x7ff754284400,4344,StringPrototypeSubstr
code-creation,Builtin,2,85584,0x7ff754285500,4300,StringPrototypeSubstring
code-creation,Builtin,2,85590,0x7ff754286600,936,StringPrototypeToWellFormed
code-creation,Builtin,2,85596,0x7ff7542869c0,8936,StringPrototypeTrim
code-creation,Builtin,2,85601,0x7ff754288cc0,8468,StringPrototypeTrimStart
code-creation,Builtin,2,85607,0x7ff75428ae00,8024,StringPrototypeTrimEnd
code-creation,Builtin,2,85612,0x7ff75428cd80,216,SymbolPrototypeDescriptionGetter
code-creation,Builtin,2,85618,0x7ff75428ce80,212,SymbolPrototypeToPrimitive
code-creation,Builtin,2,85624,0x7ff75428cf80,232,SymbolPrototypeToString
code-creation,Builtin,2,85630,0x7ff75428d080,212,SymbolPrototypeValueOf
code-creation,Builtin,2,85635,0x7ff75428d180,1120,TypedArrayPrototypeAt
code-creation,Builtin,2,85641,0x7ff75428d600,11324,CreateTypedArray
code-creation,Builtin,2,85646,0x7ff754290240,1784,TypedArrayPrototypeEvery
code-creation,Builtin,2,85652,0x7ff754290940,412,TypedArrayPrototypeEntries
code-creation,Builtin,2,85657,0x7ff754290b00,4600,TypedArrayPrototypeFilter
code-creation,Builtin,2,85663,0x7ff754291d00,1784,TypedArrayPrototypeFind
code-creation,Builtin,2,85669,0x7ff754292400,1792,TypedArrayPrototypeFindIndex
code-creation,Builtin,2,85675,0x7ff754292b40,1792,TypedArrayPrototypeFindLast
code-creation,Builtin,2,85681,0x7ff754293280,1800,TypedArrayPrototypeFindLastIndex
code-creation,Builtin,2,85687,0x7ff7542939c0,1636,TypedArrayPrototypeForEach
code-creation,Builtin,2,85692,0x7ff754294040,3052,TypedArrayFrom
code-creation,Builtin,2,85698,0x7ff754294c40,404,TypedArrayPrototypeKeys
code-creation,Builtin,2,85703,0x7ff754294e00,1416,TypedArrayOf
code-creation,Builtin,2,85708,0x7ff7542953c0,1788,TypedArrayPrototypeReduce
code-creation,Builtin,2,85714,0x7ff754295ac0,1716,TypedArrayPrototypeReduceRight
code-creation,Builtin,2,85720,0x7ff754296180,3312,TypedArrayPrototypeSet
code-creation,Builtin,2,85726,0x7ff754296e80,4060,TypedArrayPrototypeSlice
code-creation,Builtin,2,85731,0x7ff754297e80,1788,TypedArrayPrototypeSome
code-creation,Builtin,2,85738,0x7ff754298580,896,TypedArrayMergeSort
code-creation,Builtin,2,85744,0x7ff754298940,2320,TypedArrayPrototypeSort
code-creation,Builtin,2,85750,0x7ff754299280,3088,TypedArrayPrototypeSubArray
code-creation,Builtin,2,85756,0x7ff754299ec0,1796,TypedArrayPrototypeToReversed
code-creation,Builtin,2,85762,0x7ff75429a600,3296,TypedArrayPrototypeToSorted
code-creation,Builtin,2,85768,0x7ff75429b300,412,TypedArrayPrototypeValues
code-creation,Builtin,2,85774,0x7ff75429b4c0,3160,TypedArrayPrototypeWith
code-creation,Builtin,2,85779,0x7ff75429c140,1136,WeakRefConstructor
code-creation,Builtin,2,85785,0x7ff75429c5c0,188,WeakRefDeref
code-creation,Builtin,2,85790,0x7ff75429c680,724,NewSloppyArgumentsElements
code-creation,Builtin,2,85796,0x7ff75429c980,352,NewStrictArgumentsElements
code-creation,Builtin,2,85801,0x7ff75429cb00,360,NewRestArgumentsElements
code-creation,Builtin,2,85807,0x7ff75429cc80,1476,FastNewSloppyArguments
code-creation,Builtin,2,85813,0x7ff75429d280,508,FastNewStrictArguments
code-creation,Builtin,2,85819,0x7ff75429d480,548,FastNewRestArguments
code-creation,Builtin,2,85824,0x7ff75429d6c0,664,StringSlowFlatten
code-creation,Builtin,2,85829,0x7ff75429d980,2204,StringIndexOf
code-creation,Builtin,2,85835,0x7ff75429e240,2028,TestTurbofanType
code-creation,Builtin,2,85840,0x7ff75429ea40,192,CheckTurbofanType
code-creation,Builtin,2,85845,0x7ff75429eb40,532,CheckTurboshaftWord32Type
code-creation,Builtin,2,85851,0x7ff75429ed80,1008,CheckTurboshaftWord64Type
code-creation,Builtin,2,85857,0x7ff75429f180,1084,CheckTurboshaftFloat32Type
code-creation,Builtin,2,85863,0x7ff75429f5c0,1080,CheckTurboshaftFloat64Type
code-creation,Builtin,2,85868,0x7ff75429fa00,176,DebugPrintWordPtr
code-creation,Builtin,2,85874,0x7ff75429fac0,180,DebugPrintFloat64
code-creation,Builtin,2,85879,0x7ff75429fb80,4,GenericBuiltinTest_JSAny_0
code-creation,Builtin,2,85885,0x7ff75429fbc0,20,TestHelperPlus1
code-creation,Builtin,2,85890,0x7ff75429fc00,20,TestHelperPlus2
code-creation,Builtin,2,85896,0x7ff75429fc40,92,NewSmiBox
code-creation,Builtin,2,85901,0x7ff75429fcc0,24,ReturnTwoValues
code-creation,Builtin,2,85907,0x7ff75429fd00,28,ThrowAsBuiltin
code-creation,Builtin,2,85912,0x7ff75429fd40,100,TestCallNever
code-creation,Builtin,2,85918,0x7ff75429fdc0,28,Load_FastSmiElements_0
code-creation,Builtin,2,85923,0x7ff75429fe00,28,Load_FastObjectElements_0
code-creation,Builtin,2,85929,0x7ff75429fe40,140,Load_FastDoubleElements_0
code-creation,Builtin,2,85935,0x7ff75429ff00,28,Store_FastSmiElements_0
code-creation,Builtin,2,85941,0x7ff75429ff40,92,Store_FastObjectElements_0
code-creation,Builtin,2,85947,0x7ff75429ffc0,44,Store_FastDoubleElements_0
code-creation,Builtin,2,85952,0x7ff7542a0000,36,Delete_FastSmiElements_0
code-creation,Builtin,2,85958,0x7ff7542a0040,36,Delete_FastObjectElements_0
code-creation,Builtin,2,85964,0x7ff7542a0080,40,Delete_FastDoubleElements_0
code-creation,Builtin,2,85969,0x7ff7542a00c0,200,SortCompareDefault
code-creation,Builtin,2,85975,0x7ff7542a01c0,96,SortCompareUserFn
code-creation,Builtin,2,85980,0x7ff7542a0240,12,CanUseSameAccessor_GenericElementsAccessor_0
code-creation,Builtin,2,85986,0x7ff7542a0280,364,Copy
code-creation,Builtin,2,85992,0x7ff7542a0400,6016,MergeAt
code-creation,Builtin,2,85997,0x7ff7542a1bc0,920,GallopLeft
code-creation,Builtin,2,86002,0x7ff7542a1f80,928,GallopRight
code-creation,Builtin,2,86007,0x7ff7542a2340,4108,ArrayTimSort
code-creation,Builtin,2,86012,0x7ff7542a3380,2028,ArrayPrototypeSort
code-creation,Builtin,2,86017,0x7ff7542a3b80,4112,StringFastLocaleCompare
code-creation,Builtin,2,86023,0x7ff7542a4bc0,3400,JSToWasmWrapper
code-creation,Builtin,2,86029,0x7ff7542a5940,3416,WasmReturnPromiseOnSuspend
code-creation,Builtin,2,86034,0x7ff7542a66c0,2680,JSToWasmHandleReturns
code-creation,Builtin,2,86040,0x7ff7542a7140,92,WasmInt32ToHeapNumber
code-creation,Builtin,2,86046,0x7ff7542a71c0,68,WasmFuncRefToJS
code-creation,Builtin,2,86051,0x7ff7542a7240,124,WasmTaggedNonSmiToInt32
code-creation,Builtin,2,86056,0x7ff7542a72c0,76,WasmTaggedToFloat64
code-creation,Builtin,2,86063,0x7ff7542a7340,84,WasmTaggedToFloat32
code-creation,Builtin,2,86069,0x7ff7542a73c0,80,WasmMemoryGrow
code-creation,Builtin,2,86074,0x7ff7542a7440,88,WasmTableInit
code-creation,Builtin,2,86080,0x7ff7542a74c0,88,WasmTableCopy
code-creation,Builtin,2,86085,0x7ff7542a7540,76,WasmTableFill
code-creation,Builtin,2,86090,0x7ff7542a75c0,68,WasmTableGrow
code-creation,Builtin,2,86095,0x7ff7542a7640,76,WasmTableGet
code-creation,Builtin,2,86101,0x7ff7542a76c0,152,WasmTableSet
code-creation,Builtin,2,86106,0x7ff7542a7780,148,WasmTableGetFuncRef
code-creation,Builtin,2,86111,0x7ff7542a7840,104,WasmTableSetFuncRef
code-creation,Builtin,2,86117,0x7ff7542a78c0,76,WasmRefFunc
code-creation,Builtin,2,86122,0x7ff7542a7940,32,WasmInternalFunctionCreateExternal
code-creation,Builtin,2,86128,0x7ff7542a7980,156,WasmAllocateFixedArray
code-creation,Builtin,2,86134,0x7ff7542a7a40,44,WasmThrow
code-creation,Builtin,2,86139,0x7ff7542a7a80,56,WasmRethrow
code-creation,Builtin,2,86144,0x7ff7542a7ac0,44,WasmRethrowExplicitContext
code-creation,Builtin,2,86150,0x7ff7542a7b00,44,WasmTriggerTierUp
code-creation,Builtin,2,86155,0x7ff7542a7b40,32,WasmStackGuard
code-creation,Builtin,2,86160,0x7ff7542a7b80,32,WasmStackOverflow
code-creation,Builtin,2,86166,0x7ff7542a7bc0,40,WasmTraceMemory
code-creation,Builtin,2,86171,0x7ff7542a7c00,32,WasmTraceEnter
code-creation,Builtin,2,86176,0x7ff7542a7c40,40,WasmTraceExit
code-creation,Builtin,2,86182,0x7ff7542a7c80,752,WasmAllocateJSArray
code-creation,Builtin,2,86187,0x7ff7542a7f80,100,WasmAllocateStructWithRtt
code-creation,Builtin,2,86193,0x7ff7542a8000,128,WasmAllocateArray_Uninitialized
code-creation,Builtin,2,86199,0x7ff7542a80c0,96,WasmArrayNewSegment
code-creation,Builtin,2,86204,0x7ff7542a8140,184,WasmArrayInitSegment
code-creation,Builtin,2,86210,0x7ff7542a8200,136,WasmArrayCopyWithChecks
code-creation,Builtin,2,86215,0x7ff7542a82c0,100,WasmArrayCopy
code-creation,Builtin,2,86220,0x7ff7542a8340,108,WasmUint32ToNumber
code-creation,Builtin,2,86226,0x7ff7542a83c0,140,UintPtr53ToNumber
code-creation,Builtin,2,86231,0x7ff7542a8480,116,WasmAtomicNotify
code-creation,Builtin,2,86236,0x7ff7542a8500,108,WasmI32AtomicWait
code-creation,Builtin,2,86242,0x7ff7542a8580,104,WasmI64AtomicWait
code-creation,Builtin,2,86247,0x7ff7542a8600,1352,CallRefIC
code-creation,Builtin,2,86253,0x7ff7542a8b80,1708,WasmGetOwnProperty
code-creation,Builtin,2,86258,0x7ff7542a9240,92,WasmTrap
code-creation,Builtin,2,86263,0x7ff7542a92c0,16,ThrowWasmTrapUnreachable
code-creation,Builtin,2,86269,0x7ff7542a9300,16,ThrowWasmTrapMemOutOfBounds
code-creation,Builtin,2,86275,0x7ff7542a9340,16,ThrowWasmTrapUnalignedAccess
code-creation,Builtin,2,86280,0x7ff7542a9380,16,ThrowWasmTrapDivByZero
code-creation,Builtin,2,86286,0x7ff7542a93c0,16,ThrowWasmTrapDivUnrepresentable
code-creation,Builtin,2,86292,0x7ff7542a9400,16,ThrowWasmTrapRemByZero
code-creation,Builtin,2,86297,0x7ff7542a9440,16,ThrowWasmTrapFloatUnrepresentable
code-creation,Builtin,2,86303,0x7ff7542a9480,16,ThrowWasmTrapFuncSigMismatch
code-creation,Builtin,2,86309,0x7ff7542a94c0,16,ThrowWasmTrapDataSegmentOutOfBounds
code-creation,Builtin,2,86315,0x7ff7542a9500,16,ThrowWasmTrapElementSegmentOutOfBounds
code-creation,Builtin,2,86321,0x7ff7542a9540,16,ThrowWasmTrapTableOutOfBounds
code-creation,Builtin,2,86327,0x7ff7542a9580,16,ThrowWasmTrapRethrowNull
code-creation,Builtin,2,86332,0x7ff7542a95c0,16,ThrowWasmTrapNullDereference
code-creation,Builtin,2,86338,0x7ff7542a9600,16,ThrowWasmTrapIllegalCast
code-creation,Builtin,2,86344,0x7ff7542a9640,16,ThrowWasmTrapArrayOutOfBounds
code-creation,Builtin,2,86350,0x7ff7542a9680,16,ThrowWasmTrapArrayTooLarge
code-creation,Builtin,2,86355,0x7ff7542a96c0,16,ThrowWasmTrapStringOffsetOutOfBounds
code-creation,Builtin,2,86361,0x7ff7542a9700,148,WasmStringNewWtf8
code-creation,Builtin,2,86367,0x7ff7542a97c0,164,WasmStringNewWtf8Array
code-creation,Builtin,2,86372,0x7ff7542a9880,140,WasmStringNewWtf16
code-creation,Builtin,2,86378,0x7ff7542a9940,1176,WasmStringNewWtf16Array
code-creation,Builtin,2,86384,0x7ff7542a9e00,116,WasmStringFromDataSegment
code-creation,Builtin,2,86392,0x7ff7542a9e80,52,WasmStringAsWtf16
code-creation,Builtin,2,86398,0x7ff7542a9ec0,48,WasmStringConst
code-creation,Builtin,2,86404,0x7ff7542a9f00,108,WasmStringMeasureUtf8
code-creation,Builtin,2,86409,0x7ff7542a9f80,108,WasmStringMeasureWtf8
code-creation,Builtin,2,86415,0x7ff7542aa000,156,WasmStringEncodeWtf8
code-creation,Builtin,2,86420,0x7ff7542aa0c0,148,WasmStringEncodeWtf8Array
code-creation,Builtin,2,86426,0x7ff7542aa180,104,WasmStringEncodeWtf16
code-creation,Builtin,2,86432,0x7ff7542aa200,908,WasmStringEncodeWtf16Array
code-creation,Builtin,2,86437,0x7ff7542aa5c0,68,ThrowToLowerCaseCalledOnNull
code-creation,Builtin,2,86443,0x7ff7542aa640,68,ThrowIndexOfCalledOnNull
code-creation,Builtin,2,86449,0x7ff7542aa6c0,20,WasmStringConcat
code-creation,Builtin,2,86454,0x7ff7542aa700,60,WasmStringEqual
code-creation,Builtin,2,86460,0x7ff7542aa740,140,WasmStringIsUSVSequence
code-creation,Builtin,2,86465,0x7ff7542aa800,40,WasmStringAsWtf8
code-creation,Builtin,2,86471,0x7ff7542aa840,224,WasmStringViewWtf8Advance
code-creation,Builtin,2,86476,0x7ff7542aa940,168,WasmStringViewWtf8Encode
code-creation,Builtin,2,86482,0x7ff7542aaa00,172,WasmStringViewWtf8Slice
code-creation,Builtin,2,86488,0x7ff7542aaac0,556,WasmStringViewWtf16GetCodeUnit
code-creation,Builtin,2,86494,0x7ff7542aad00,140,WasmStringViewWtf16Encode
code-creation,Builtin,2,86499,0x7ff7542aadc0,5220,WasmStringViewWtf16Slice
code-creation,Builtin,2,86505,0x7ff7542ac240,100,WasmStringAsIter
code-creation,Builtin,2,86510,0x7ff7542ac2c0,1196,WasmStringCodePointAt
code-creation,Builtin,2,86516,0x7ff7542ac780,1232,WasmStringViewIterNext
code-creation,Builtin,2,86522,0x7ff7542acc80,1444,WasmStringViewIterAdvance
code-creation,Builtin,2,86528,0x7ff7542ad240,1444,WasmStringViewIterRewind
code-creation,Builtin,2,86533,0x7ff7542ad800,4708,WasmStringViewIterSlice
code-creation,Builtin,2,86539,0x7ff7542aea80,2736,WasmIntToString
code-creation,Builtin,2,86544,0x7ff7542af540,160,WasmStringToDouble
code-creation,Builtin,2,86550,0x7ff7542af600,80,WasmStringFromCodePoint
code-creation,Builtin,2,86555,0x7ff7542af680,36,WasmStringHash
code-creation,Builtin,2,86561,0x7ff7542af6c0,60,WasmExternInternalize
code-creation,Builtin,2,86566,0x7ff7542af700,516,WebAssemblyStringFromWtf16Array
code-creation,Builtin,2,86572,0x7ff7542af940,528,WebAssemblyStringFromWtf8Array
code-creation,Builtin,2,86578,0x7ff7542afb80,436,WebAssemblyStringToWtf16Array
code-creation,Builtin,2,86584,0x7ff7542afd40,304,WebAssemblyStringFromCharCode
code-creation,Builtin,2,86590,0x7ff7542afe80,364,WebAssemblyStringFromCodePoint
code-creation,Builtin,2,86596,0x7ff7542b0000,1424,WebAssemblyStringCodePointAt
code-creation,Builtin,2,86601,0x7ff7542b05c0,824,WebAssemblyStringCharCodeAt
code-creation,Builtin,2,86607,0x7ff7542b0900,148,WebAssemblyStringLength
code-creation,Builtin,2,86613,0x7ff7542b09c0,220,WebAssemblyStringConcat
code-creation,Builtin,2,86619,0x7ff7542b0ac0,436,WebAssemblyStringSubstring
code-creation,Builtin,2,86625,0x7ff7542b0c80,420,WebAssemblyStringEquals
code-creation,Builtin,2,86630,0x7ff7542b0e40,220,WebAssemblyStringCompare
code-creation,Builtin,2,86636,0x7ff7542b0f40,164,LoadJoinElement_GenericElementsAccessor_0
code-creation,Builtin,2,86642,0x7ff7542b1000,24,LoadJoinTypedElement_Int32Elements_0
code-creation,Builtin,2,86648,0x7ff7542b1040,108,LoadJoinTypedElement_Float32Elements_0
code-creation,Builtin,2,86654,0x7ff7542b10c0,104,LoadJoinTypedElement_Float64Elements_0
code-creation,Builtin,2,86660,0x7ff7542b1140,24,LoadJoinTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,86666,0x7ff7542b1180,208,LoadJoinTypedElement_BigUint64Elements_0
code-creation,Builtin,2,86673,0x7ff7542b1280,236,LoadJoinTypedElement_BigInt64Elements_0
code-creation,Builtin,2,86679,0x7ff7542b1380,24,LoadJoinTypedElement_Uint8Elements_0
code-creation,Builtin,2,86685,0x7ff7542b13c0,24,LoadJoinTypedElement_Int8Elements_0
code-creation,Builtin,2,86690,0x7ff7542b1400,24,LoadJoinTypedElement_Uint16Elements_0
code-creation,Builtin,2,86696,0x7ff7542b1440,24,LoadJoinTypedElement_Int16Elements_0
code-creation,Builtin,2,86705,0x7ff7542b1480,124,LoadJoinTypedElement_Uint32Elements_0
code-creation,Builtin,2,86712,0x7ff7542b1500,12,GenericBuiltinTest_Smi_0
code-creation,Builtin,2,86718,0x7ff7542b1540,40,CanUseSameAccessor_FastDoubleElements_0
code-creation,Builtin,2,86724,0x7ff7542b1580,40,CanUseSameAccessor_FastSmiElements_0
code-creation,Builtin,2,86730,0x7ff7542b15c0,40,CanUseSameAccessor_FastObjectElements_0
code-creation,Builtin,2,86736,0x7ff7542b1600,24,LoadNoHasPropertyCheck_GenericElementsAccessor_0
code-creation,Builtin,2,86747,0x7ff7542b1640,3844,Load_GenericElementsAccessor_0
code-creation,Builtin,2,86752,0x7ff7542b2580,24,Store_GenericElementsAccessor_0
code-creation,Builtin,2,86758,0x7ff7542b25c0,36,Delete_GenericElementsAccessor_0
code-creation,Builtin,2,86764,0x7ff7542b2600,24,LoadTypedElement_Int32Elements_0
code-creation,Builtin,2,86770,0x7ff7542b2640,196,StoreTypedElementNumeric_Int32Elements_0
code-creation,Builtin,2,86777,0x7ff7542b2740,576,StoreTypedElementJSAny_Int32Elements_0
code-creation,Builtin,2,86783,0x7ff7542b29c0,108,LoadTypedElement_Float32Elements_0
code-creation,Builtin,2,86788,0x7ff7542b2a40,32,StoreTypedElementNumeric_Float32Elements_0
code-creation,Builtin,2,86795,0x7ff7542b2a80,548,StoreTypedElementJSAny_Float32Elements_0
code-creation,Builtin,2,86801,0x7ff7542b2cc0,104,LoadTypedElement_Float64Elements_0
code-creation,Builtin,2,86807,0x7ff7542b2d40,28,StoreTypedElementNumeric_Float64Elements_0
code-creation,Builtin,2,86813,0x7ff7542b2d80,544,StoreTypedElementJSAny_Float64Elements_0
code-creation,Builtin,2,86819,0x7ff7542b2fc0,24,LoadTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,86826,0x7ff7542b3000,24,StoreTypedElementNumeric_Uint8ClampedElements_0
code-creation,Builtin,2,86832,0x7ff7542b3040,1008,StoreTypedElementJSAny_Uint8ClampedElements_0
code-creation,Builtin,2,86838,0x7ff7542b3440,208,LoadTypedElement_BigUint64Elements_0
code-creation,Builtin,2,86844,0x7ff7542b3540,56,StoreTypedElementNumeric_BigUint64Elements_0
code-creation,Builtin,2,86850,0x7ff7542b3580,548,StoreTypedElementJSAny_BigUint64Elements_0
code-creation,Builtin,2,86857,0x7ff7542b37c0,236,LoadTypedElement_BigInt64Elements_0
code-creation,Builtin,2,86863,0x7ff7542b38c0,56,StoreTypedElementNumeric_BigInt64Elements_0
code-creation,Builtin,2,86869,0x7ff7542b3900,548,StoreTypedElementJSAny_BigInt64Elements_0
code-creation,Builtin,2,86875,0x7ff7542b3b40,24,LoadTypedElement_Uint8Elements_0
code-creation,Builtin,2,86881,0x7ff7542b3b80,24,StoreTypedElementNumeric_Uint8Elements_0
code-creation,Builtin,2,86887,0x7ff7542b3bc0,576,StoreTypedElementJSAny_Uint8Elements_0
code-creation,Builtin,2,86893,0x7ff7542b3e40,24,LoadTypedElement_Int8Elements_0
code-creation,Builtin,2,86899,0x7ff7542b3e80,24,StoreTypedElementNumeric_Int8Elements_0
code-creation,Builtin,2,86905,0x7ff7542b3ec0,576,StoreTypedElementJSAny_Int8Elements_0
code-creation,Builtin,2,86911,0x7ff7542b4140,24,LoadTypedElement_Uint16Elements_0
code-creation,Builtin,2,86917,0x7ff7542b4180,24,StoreTypedElementNumeric_Uint16Elements_0
code-creation,Builtin,2,86924,0x7ff7542b41c0,576,StoreTypedElementJSAny_Uint16Elements_0
code-creation,Builtin,2,86930,0x7ff7542b4440,24,LoadTypedElement_Int16Elements_0
code-creation,Builtin,2,86936,0x7ff7542b4480,24,StoreTypedElementNumeric_Int16Elements_0
code-creation,Builtin,2,86942,0x7ff7542b44c0,576,StoreTypedElementJSAny_Int16Elements_0
code-creation,Builtin,2,86948,0x7ff7542b4740,124,LoadTypedElement_Uint32Elements_0
code-creation,Builtin,2,86954,0x7ff7542b47c0,196,StoreTypedElementNumeric_Uint32Elements_0
code-creation,Builtin,2,86960,0x7ff7542b48c0,576,StoreTypedElementJSAny_Uint32Elements_0
code-creation,Builtin,2,86966,0x7ff7542b4b40,12,CollatorConstructor
code-creation,Builtin,2,86972,0x7ff7542b4b80,12,CollatorInternalCompare
code-creation,Builtin,2,86977,0x7ff7542b4bc0,12,CollatorPrototypeCompare
code-creation,Builtin,2,86983,0x7ff7542b4c00,12,CollatorSupportedLocalesOf
code-creation,Builtin,2,86989,0x7ff7542b4c40,12,CollatorPrototypeResolvedOptions
code-creation,Builtin,2,86994,0x7ff7542b4c80,12,DatePrototypeToLocaleDateString
code-creation,Builtin,2,87003,0x7ff7542b4cc0,12,DatePrototypeToLocaleString
code-creation,Builtin,2,87010,0x7ff7542b4d00,12,DatePrototypeToLocaleTimeString
code-creation,Builtin,2,87016,0x7ff7542b4d40,12,DateTimeFormatConstructor
code-creation,Builtin,2,87022,0x7ff7542b4d80,12,DateTimeFormatInternalFormat
code-creation,Builtin,2,87027,0x7ff7542b4dc0,12,DateTimeFormatPrototypeFormat
code-creation,Builtin,2,87033,0x7ff7542b4e00,12,DateTimeFormatPrototypeFormatRange
code-creation,Builtin,2,87039,0x7ff7542b4e40,12,DateTimeFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,87045,0x7ff7542b4e80,12,DateTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,87051,0x7ff7542b4ec0,12,DateTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,87057,0x7ff7542b4f00,12,DateTimeFormatSupportedLocalesOf
code-creation,Builtin,2,87063,0x7ff7542b4f40,12,DisplayNamesConstructor
code-creation,Builtin,2,87069,0x7ff7542b4f80,12,DisplayNamesPrototypeOf
code-creation,Builtin,2,87074,0x7ff7542b4fc0,12,DisplayNamesPrototypeResolvedOptions
code-creation,Builtin,2,87080,0x7ff7542b5000,12,DisplayNamesSupportedLocalesOf
code-creation,Builtin,2,87086,0x7ff7542b5040,12,DurationFormatConstructor
code-creation,Builtin,2,87092,0x7ff7542b5080,12,DurationFormatPrototypeFormat
code-creation,Builtin,2,87098,0x7ff7542b50c0,12,DurationFormatPrototypeFormatToParts
code-creation,Builtin,2,87104,0x7ff7542b5100,12,DurationFormatPrototypeResolvedOptions
code-creation,Builtin,2,87110,0x7ff7542b5140,12,DurationFormatSupportedLocalesOf
code-creation,Builtin,2,87116,0x7ff7542b5180,12,IntlGetCanonicalLocales
code-creation,Builtin,2,87121,0x7ff7542b51c0,12,IntlSupportedValuesOf
code-creation,Builtin,2,87127,0x7ff7542b5200,12,ListFormatConstructor
code-creation,Builtin,2,87132,0x7ff7542b5240,200,ListFormatPrototypeFormat
code-creation,Builtin,2,87138,0x7ff7542b5340,200,ListFormatPrototypeFormatToParts
code-creation,Builtin,2,87144,0x7ff7542b5440,12,ListFormatPrototypeResolvedOptions
code-creation,Builtin,2,87150,0x7ff7542b5480,12,ListFormatSupportedLocalesOf
code-creation,Builtin,2,87156,0x7ff7542b54c0,12,LocaleConstructor
code-creation,Builtin,2,87161,0x7ff7542b5500,12,LocalePrototypeBaseName
code-creation,Builtin,2,87167,0x7ff7542b5540,12,LocalePrototypeCalendar
code-creation,Builtin,2,87172,0x7ff7542b5580,12,LocalePrototypeCalendars
code-creation,Builtin,2,87178,0x7ff7542b55c0,12,LocalePrototypeCaseFirst
code-creation,Builtin,2,87183,0x7ff7542b5600,12,LocalePrototypeCollation
code-creation,Builtin,2,87189,0x7ff7542b5640,12,LocalePrototypeCollations
code-creation,Builtin,2,87195,0x7ff7542b5680,12,LocalePrototypeGetCalendars
code-creation,Builtin,2,87201,0x7ff7542b56c0,12,LocalePrototypeGetCollations
code-creation,Builtin,2,87206,0x7ff7542b5700,12,LocalePrototypeGetHourCycles
code-creation,Builtin,2,87212,0x7ff7542b5740,12,LocalePrototypeGetNumberingSystems
code-creation,Builtin,2,87218,0x7ff7542b5780,12,LocalePrototypeGetTimeZones
code-creation,Builtin,2,87224,0x7ff7542b57c0,12,LocalePrototypeGetTextInfo
code-creation,Builtin,2,87229,0x7ff7542b5800,12,LocalePrototypeGetWeekInfo
code-creation,Builtin,2,87235,0x7ff7542b5840,12,LocalePrototypeHourCycle
code-creation,Builtin,2,87241,0x7ff7542b5880,12,LocalePrototypeHourCycles
code-creation,Builtin,2,87246,0x7ff7542b58c0,12,LocalePrototypeLanguage
code-creation,Builtin,2,87252,0x7ff7542b5900,12,LocalePrototypeMaximize
code-creation,Builtin,2,87258,0x7ff7542b5940,12,LocalePrototypeMinimize
code-creation,Builtin,2,87263,0x7ff7542b5980,12,LocalePrototypeNumeric
code-creation,Builtin,2,87268,0x7ff7542b59c0,12,LocalePrototypeNumberingSystem
code-creation,Builtin,2,87274,0x7ff7542b5a00,12,LocalePrototypeNumberingSystems
code-creation,Builtin,2,87280,0x7ff7542b5a40,12,LocalePrototypeRegion
code-creation,Builtin,2,87286,0x7ff7542b5a80,12,LocalePrototypeScript
code-creation,Builtin,2,87292,0x7ff7542b5ac0,12,LocalePrototypeTextInfo
code-creation,Builtin,2,87297,0x7ff7542b5b00,12,LocalePrototypeTimeZones
code-creation,Builtin,2,87303,0x7ff7542b5b40,12,LocalePrototypeToString
code-creation,Builtin,2,87346,0x7ff7542b5b80,12,LocalePrototypeWeekInfo
code-creation,Builtin,2,87354,0x7ff7542b5bc0,12,NumberFormatConstructor
code-creation,Builtin,2,87360,0x7ff7542b5c00,12,NumberFormatInternalFormatNumber
code-creation,Builtin,2,87366,0x7ff7542b5c40,12,NumberFormatPrototypeFormatNumber
code-creation,Builtin,2,87372,0x7ff7542b5c80,12,NumberFormatPrototypeFormatRange
code-creation,Builtin,2,87378,0x7ff7542b5cc0,12,NumberFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,87384,0x7ff7542b5d00,12,NumberFormatPrototypeFormatToParts
code-creation,Builtin,2,87390,0x7ff7542b5d40,12,NumberFormatPrototypeResolvedOptions
code-creation,Builtin,2,87396,0x7ff7542b5d80,12,NumberFormatSupportedLocalesOf
code-creation,Builtin,2,87402,0x7ff7542b5dc0,12,PluralRulesConstructor
code-creation,Builtin,2,87407,0x7ff7542b5e00,12,PluralRulesPrototypeResolvedOptions
code-creation,Builtin,2,87413,0x7ff7542b5e40,12,PluralRulesPrototypeSelect
code-creation,Builtin,2,87419,0x7ff7542b5e80,12,PluralRulesPrototypeSelectRange
code-creation,Builtin,2,87425,0x7ff7542b5ec0,12,PluralRulesSupportedLocalesOf
code-creation,Builtin,2,87431,0x7ff7542b5f00,12,RelativeTimeFormatConstructor
code-creation,Builtin,2,87437,0x7ff7542b5f40,12,RelativeTimeFormatPrototypeFormat
code-creation,Builtin,2,87442,0x7ff7542b5f80,12,RelativeTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,87448,0x7ff7542b5fc0,12,RelativeTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,87455,0x7ff7542b6000,12,RelativeTimeFormatSupportedLocalesOf
code-creation,Builtin,2,87465,0x7ff7542b6040,12,SegmenterConstructor
code-creation,Builtin,2,87471,0x7ff7542b6080,12,SegmenterPrototypeResolvedOptions
code-creation,Builtin,2,87477,0x7ff7542b60c0,12,SegmenterPrototypeSegment
code-creation,Builtin,2,87483,0x7ff7542b6100,12,SegmenterSupportedLocalesOf
code-creation,Builtin,2,87489,0x7ff7542b6140,12,SegmentIteratorPrototypeNext
code-creation,Builtin,2,87494,0x7ff7542b6180,12,SegmentsPrototypeContaining
code-creation,Builtin,2,87500,0x7ff7542b61c0,12,SegmentsPrototypeIterator
code-creation,Builtin,2,87506,0x7ff7542b6200,12,StringPrototypeNormalizeIntl
code-creation,Builtin,2,87512,0x7ff7542b6240,1180,StringPrototypeToLocaleLowerCase
code-creation,Builtin,2,87518,0x7ff7542b6700,12,StringPrototypeToLocaleUpperCase
code-creation,Builtin,2,87524,0x7ff7542b6740,200,StringPrototypeToLowerCaseIntl
code-creation,Builtin,2,87530,0x7ff7542b6840,12,StringPrototypeToUpperCaseIntl
code-creation,Builtin,2,87536,0x7ff7542b6880,724,StringToLowerCaseIntl
code-creation,Builtin,2,87541,0x7ff7542b6b80,12,TemporalCalendarPrototypeEra
code-creation,Builtin,2,87547,0x7ff7542b6bc0,12,TemporalCalendarPrototypeEraYear
code-creation,Builtin,2,87553,0x7ff7542b6c00,12,TemporalPlainDatePrototypeEra
code-creation,Builtin,2,87559,0x7ff7542b6c40,12,TemporalPlainDatePrototypeEraYear
code-creation,Builtin,2,87565,0x7ff7542b6c80,12,TemporalPlainDateTimePrototypeEra
code-creation,Builtin,2,87571,0x7ff7542b6cc0,12,TemporalPlainDateTimePrototypeEraYear
code-creation,Builtin,2,87577,0x7ff7542b6d00,12,TemporalPlainYearMonthPrototypeEra
code-creation,Builtin,2,87583,0x7ff7542b6d40,12,TemporalPlainYearMonthPrototypeEraYear
code-creation,Builtin,2,87589,0x7ff7542b6d80,12,TemporalZonedDateTimePrototypeEra
code-creation,Builtin,2,87595,0x7ff7542b6dc0,12,TemporalZonedDateTimePrototypeEraYear
code-creation,Builtin,2,87601,0x7ff7542b6e00,12,V8BreakIteratorConstructor
code-creation,Builtin,2,87607,0x7ff7542b6e40,12,V8BreakIteratorInternalAdoptText
code-creation,Builtin,2,87613,0x7ff7542b6e80,12,V8BreakIteratorInternalBreakType
code-creation,Builtin,2,87618,0x7ff7542b6ec0,12,V8BreakIteratorInternalCurrent
code-creation,Builtin,2,87624,0x7ff7542b6f00,12,V8BreakIteratorInternalFirst
code-creation,Builtin,2,87630,0x7ff7542b6f40,12,V8BreakIteratorInternalNext
code-creation,Builtin,2,87636,0x7ff7542b6f80,12,V8BreakIteratorPrototypeAdoptText
code-creation,Builtin,2,87642,0x7ff7542b6fc0,12,V8BreakIteratorPrototypeBreakType
code-creation,Builtin,2,87648,0x7ff7542b7000,12,V8BreakIteratorPrototypeCurrent
code-creation,Builtin,2,87654,0x7ff7542b7040,12,V8BreakIteratorPrototypeFirst
code-creation,Builtin,2,87677,0x7ff7542b7080,12,V8BreakIteratorPrototypeNext
code-creation,Builtin,2,87685,0x7ff7542b70c0,12,V8BreakIteratorPrototypeResolvedOptions
code-creation,Builtin,2,87691,0x7ff7542b7100,12,V8BreakIteratorSupportedLocalesOf
code-creation,BytecodeHandler,0,87698,0x7ff7542b7140,24,Wide
code-creation,BytecodeHandler,0,87703,0x7ff7542b7180,24,ExtraWide
code-creation,BytecodeHandler,0,87708,0x7ff7542b71c0,104,DebugBreakWide
code-creation,BytecodeHandler,0,87714,0x7ff7542b7240,104,DebugBreakExtraWide
code-creation,BytecodeHandler,0,87720,0x7ff7542b72c0,164,DebugBreak0
code-creation,BytecodeHandler,0,87725,0x7ff7542b7380,104,DebugBreak1
code-creation,BytecodeHandler,0,87940,0x7ff7542b7400,104,DebugBreak2
code-creation,BytecodeHandler,0,87948,0x7ff7542b7480,104,DebugBreak3
code-creation,BytecodeHandler,0,87954,0x7ff7542b7500,104,DebugBreak4
code-creation,BytecodeHandler,0,87959,0x7ff7542b7580,104,DebugBreak5
code-creation,BytecodeHandler,0,87965,0x7ff7542b7600,104,DebugBreak6
code-creation,BytecodeHandler,0,87970,0x7ff7542b7680,32,Ldar
code-creation,BytecodeHandler,0,87975,0x7ff7542b76c0,56,LdaZero
code-creation,BytecodeHandler,0,87981,0x7ff7542b7700,64,LdaSmi
code-creation,BytecodeHandler,0,87986,0x7ff7542b7780,64,LdaUndefined
code-creation,BytecodeHandler,0,87991,0x7ff7542b7800,64,LdaNull
code-creation,BytecodeHandler,0,87996,0x7ff7542b7880,64,LdaTheHole
code-creation,BytecodeHandler,0,88002,0x7ff7542b7900,24,LdaTrue
code-creation,BytecodeHandler,0,88007,0x7ff7542b7940,24,LdaFalse
code-creation,BytecodeHandler,0,88012,0x7ff7542b7980,64,LdaConstant
code-creation,BytecodeHandler,0,88018,0x7ff7542b7a00,144,LdaContextSlot
code-creation,BytecodeHandler,0,88024,0x7ff7542b7ac0,144,LdaImmutableContextSlot
code-creation,BytecodeHandler,0,88029,0x7ff7542b7b80,72,LdaCurrentContextSlot
code-creation,BytecodeHandler,0,88035,0x7ff7542b7c00,72,LdaImmutableCurrentContextSlot
code-creation,BytecodeHandler,0,88041,0x7ff7542b7c80,32,Star
code-creation,BytecodeHandler,0,88046,0x7ff7542b7cc0,48,Mov
code-creation,BytecodeHandler,0,88051,0x7ff7542b7d00,40,PushContext
code-creation,BytecodeHandler,0,88057,0x7ff7542b7d40,36,PopContext
code-creation,BytecodeHandler,0,88062,0x7ff7542b7d80,56,TestReferenceEqual
code-creation,BytecodeHandler,0,88068,0x7ff7542b7dc0,60,TestUndetectable
code-creation,BytecodeHandler,0,88074,0x7ff7542b7e00,44,TestNull
code-creation,BytecodeHandler,0,88079,0x7ff7542b7e40,44,TestUndefined
code-creation,BytecodeHandler,0,88084,0x7ff7542b7e80,368,TestTypeOf
code-creation,BytecodeHandler,0,88089,0x7ff7542b8000,5312,LdaGlobal
code-creation,BytecodeHandler,0,88095,0x7ff7542b9500,4156,LdaGlobalInsideTypeof
code-creation,BytecodeHandler,0,88101,0x7ff7542ba540,160,StaGlobal
code-creation,BytecodeHandler,0,88106,0x7ff7542ba600,184,StaContextSlot
code-creation,BytecodeHandler,0,88112,0x7ff7542ba6c0,112,StaCurrentContextSlot
code-creation,BytecodeHandler,0,88117,0x7ff7542ba740,124,LdaLookupSlot
code-creation,BytecodeHandler,0,88123,0x7ff7542ba7c0,292,LdaLookupContextSlot
code-creation,BytecodeHandler,0,88128,0x7ff7542ba900,4500,LdaLookupGlobalSlot
code-creation,BytecodeHandler,0,88134,0x7ff7542bbac0,124,LdaLookupSlotInsideTypeof
code-creation,BytecodeHandler,0,88141,0x7ff7542bbb40,292,LdaLookupContextSlotInsideTypeof
code-creation,BytecodeHandler,0,88147,0x7ff7542bbc80,4420,LdaLookupGlobalSlotInsideTypeof
code-creation,BytecodeHandler,0,88153,0x7ff7542bce00,220,StaLookupSlot
code-creation,BytecodeHandler,0,88159,0x7ff7542bcf00,4928,GetNamedProperty
code-creation,BytecodeHandler,0,88165,0x7ff7542be280,184,GetNamedPropertyFromSuper
code-creation,BytecodeHandler,0,88171,0x7ff7542be340,200,GetKeyedProperty
code-creation,BytecodeHandler,0,88176,0x7ff7542be440,192,LdaModuleVariable
code-creation,BytecodeHandler,0,88182,0x7ff7542be540,308,StaModuleVariable
code-creation,BytecodeHandler,0,88188,0x7ff7542be680,176,SetNamedProperty
code-creation,BytecodeHandler,0,88193,0x7ff7542be740,176,DefineNamedOwnProperty
code-creation,BytecodeHandler,0,88199,0x7ff7542be800,168,SetKeyedProperty
code-creation,BytecodeHandler,0,88231,0x7ff7542be8c0,184,DefineKeyedOwnProperty
code-creation,BytecodeHandler,0,88240,0x7ff7542be980,168,StaInArrayLiteral
code-creation,BytecodeHandler,0,88246,0x7ff7542bea40,200,DefineKeyedOwnPropertyInLiteral
code-creation,BytecodeHandler,0,88252,0x7ff7542beb40,1448,Add
code-creation,BytecodeHandler,0,88257,0x7ff7542bf100,1420,Sub
code-creation,BytecodeHandler,0,88262,0x7ff7542bf6c0,1540,Mul
code-creation,BytecodeHandler,0,88267,0x7ff7542bfd00,1604,Div
code-creation,BytecodeHandler,0,88272,0x7ff7542c0380,1552,Mod
code-creation,BytecodeHandler,0,88277,0x7ff7542c09c0,928,Exp
code-creation,BytecodeHandler,0,88282,0x7ff7542c0d80,1940,BitwiseOr
code-creation,BytecodeHandler,0,88288,0x7ff7542c1540,1940,BitwiseXor
code-creation,BytecodeHandler,0,88293,0x7ff7542c1d00,1940,BitwiseAnd
code-creation,BytecodeHandler,0,88299,0x7ff7542c24c0,1364,ShiftLeft
code-creation,BytecodeHandler,0,88304,0x7ff7542c2a40,1364,ShiftRight
code-creation,BytecodeHandler,0,88310,0x7ff7542c2fc0,1424,ShiftRightLogical
code-creation,BytecodeHandler,0,88315,0x7ff7542c3580,1332,AddSmi
code-creation,BytecodeHandler,0,88320,0x7ff7542c3ac0,1308,SubSmi
code-creation,BytecodeHandler,0,88325,0x7ff7542c4000,1384,MulSmi
code-creation,BytecodeHandler,0,88331,0x7ff7542c4580,1516,DivSmi
code-creation,BytecodeHandler,0,88336,0x7ff7542c4b80,1380,ModSmi
code-creation,BytecodeHandler,0,88341,0x7ff7542c5100,816,ExpSmi
code-creation,BytecodeHandler,0,88346,0x7ff7542c5440,560,BitwiseOrSmi
code-creation,BytecodeHandler,0,88352,0x7ff7542c5680,560,BitwiseXorSmi
code-creation,BytecodeHandler,0,88357,0x7ff7542c58c0,560,BitwiseAndSmi
code-creation,BytecodeHandler,0,88363,0x7ff7542c5b00,584,ShiftLeftSmi
code-creation,BytecodeHandler,0,88368,0x7ff7542c5d80,568,ShiftRightSmi
code-creation,BytecodeHandler,0,88373,0x7ff7542c5fc0,856,ShiftRightLogicalSmi
code-creation,BytecodeHandler,0,88379,0x7ff7542c6340,740,Inc
code-creation,BytecodeHandler,0,88384,0x7ff7542c6640,736,Dec
code-creation,BytecodeHandler,0,88389,0x7ff7542c6940,724,Negate
code-creation,BytecodeHandler,0,88395,0x7ff7542c6c40,592,BitwiseNot
code-creation,BytecodeHandler,0,88400,0x7ff7542c6ec0,124,ToBooleanLogicalNot
code-creation,BytecodeHandler,0,88406,0x7ff7542c6f40,44,LogicalNot
code-creation,BytecodeHandler,0,88411,0x7ff7542c6f80,204,TypeOf
code-creation,BytecodeHandler,0,88416,0x7ff7542c7080,124,DeletePropertyStrict
code-creation,BytecodeHandler,0,88422,0x7ff7542c7100,116,DeletePropertySloppy
code-creation,BytecodeHandler,0,88428,0x7ff7542c7180,40,GetSuperConstructor
code-creation,BytecodeHandler,0,88434,0x7ff7542c71c0,380,FindNonDefaultConstructorOrConstruct
code-creation,BytecodeHandler,0,88440,0x7ff7542c7340,1108,CallAnyReceiver
code-creation,BytecodeHandler,0,88446,0x7ff7542c77c0,1108,CallProperty
code-creation,BytecodeHandler,0,88451,0x7ff7542c7c40,1036,CallProperty0
code-creation,BytecodeHandler,0,88456,0x7ff7542c8080,1048,CallProperty1
code-creation,BytecodeHandler,0,88462,0x7ff7542c84c0,1060,CallProperty2
code-creation,BytecodeHandler,0,88468,0x7ff7542c8900,1020,CallUndefinedReceiver
code-creation,BytecodeHandler,0,88473,0x7ff7542c8d00,1040,CallUndefinedReceiver0
code-creation,BytecodeHandler,0,88479,0x7ff7542c9140,1052,CallUndefinedReceiver1
code-creation,BytecodeHandler,0,88485,0x7ff7542c9580,1068,CallUndefinedReceiver2
code-creation,BytecodeHandler,0,88491,0x7ff7542c99c0,1108,CallWithSpread
code-creation,BytecodeHandler,0,88497,0x7ff7542c9e40,128,CallRuntime
code-creation,BytecodeHandler,0,88502,0x7ff7542c9f00,152,CallRuntimeForPair
code-creation,BytecodeHandler,0,88507,0x7ff7542c9fc0,80,CallJSRuntime
code-creation,BytecodeHandler,0,88513,0x7ff7542ca040,1376,InvokeIntrinsic
code-creation,BytecodeHandler,0,88518,0x7ff7542ca5c0,1076,Construct
code-creation,BytecodeHandler,0,88524,0x7ff7542caa00,496,ConstructWithSpread
code-creation,BytecodeHandler,0,88529,0x7ff7542cac00,2224,TestEqual
code-creation,BytecodeHandler,0,88535,0x7ff7542cb4c0,1328,TestEqualStrict
code-creation,BytecodeHandler,0,88540,0x7ff7542cba00,1840,TestLessThan
code-creation,BytecodeHandler,0,88546,0x7ff7542cc140,1840,TestGreaterThan
code-creation,BytecodeHandler,0,88552,0x7ff7542cc880,1840,TestLessThanOrEqual
code-creation,BytecodeHandler,0,88559,0x7ff7542ccfc0,1840,TestGreaterThanOrEqual
code-creation,BytecodeHandler,0,88565,0x7ff7542cd700,880,TestInstanceOf
code-creation,BytecodeHandler,0,88570,0x7ff7542cda80,156,TestIn
code-creation,BytecodeHandler,0,88575,0x7ff7542cdb40,92,ToName
code-creation,BytecodeHandler,0,88581,0x7ff7542cdbc0,212,ToNumber
code-creation,BytecodeHandler,0,88586,0x7ff7542cdcc0,236,ToNumeric
code-creation,BytecodeHandler,0,88591,0x7ff7542cddc0,116,ToObject
code-creation,BytecodeHandler,0,88596,0x7ff7542cde40,124,ToString
code-creation,BytecodeHandler,0,88601,0x7ff7542cdec0,124,ToBoolean
code-creation,BytecodeHandler,0,88607,0x7ff7542cdf40,396,CreateRegExpLiteral
code-creation,BytecodeHandler,0,88613,0x7ff7542ce100,1652,CreateArrayLiteral
code-creation,BytecodeHandler,0,88618,0x7ff7542ce780,92,CreateArrayFromIterable
code-creation,BytecodeHandler,0,88624,0x7ff7542ce800,780,CreateEmptyArrayLiteral
code-creation,BytecodeHandler,0,88630,0x7ff7542ceb40,2580,CreateObjectLiteral
code-creation,BytecodeHandler,0,88636,0x7ff7542cf580,328,CreateEmptyObjectLiteral
code-creation,BytecodeHandler,0,88642,0x7ff7542cf700,172,CloneObject
code-creation,BytecodeHandler,0,88647,0x7ff7542cf7c0,204,GetTemplateObject
code-creation,BytecodeHandler,0,88653,0x7ff7542cf8c0,332,CreateClosure
code-creation,BytecodeHandler,0,88658,0x7ff7542cfa40,116,CreateBlockContext
code-creation,BytecodeHandler,0,88664,0x7ff7542cfac0,132,CreateCatchContext
code-creation,BytecodeHandler,0,88670,0x7ff7542cfb80,348,CreateFunctionContext
code-creation,BytecodeHandler,0,88675,0x7ff7542cfd00,348,CreateEvalContext
code-creation,BytecodeHandler,0,88681,0x7ff7542cfe80,132,CreateWithContext
code-creation,BytecodeHandler,0,88687,0x7ff7542cff40,1680,CreateMappedArguments
code-creation,BytecodeHandler,0,88692,0x7ff7542d0600,572,CreateUnmappedArguments
code-creation,BytecodeHandler,0,88698,0x7ff7542d0840,680,CreateRestParameter
code-creation,BytecodeHandler,0,88705,0x7ff7542d0b00,1140,JumpLoop
code-creation,BytecodeHandler,0,88710,0x7ff7542d0f80,24,Jump
code-creation,BytecodeHandler,0,88715,0x7ff7542d0fc0,32,JumpConstant
code-creation,BytecodeHandler,0,88720,0x7ff7542d1000,56,JumpIfNullConstant
code-creation,BytecodeHandler,0,88726,0x7ff7542d1040,56,JumpIfNotNullConstant
code-creation,BytecodeHandler,0,88732,0x7ff7542d1080,56,JumpIfUndefinedConstant
code-creation,BytecodeHandler,0,88737,0x7ff7542d10c0,56,JumpIfNotUndefinedConstant
code-creation,BytecodeHandler,0,88743,0x7ff7542d1100,64,JumpIfUndefinedOrNullConstant
code-creation,BytecodeHandler,0,88749,0x7ff7542d1180,56,JumpIfTrueConstant
code-creation,BytecodeHandler,0,88755,0x7ff7542d11c0,56,JumpIfFalseConstant
code-creation,BytecodeHandler,0,88761,0x7ff7542d1200,68,JumpIfJSReceiverConstant
code-creation,BytecodeHandler,0,88766,0x7ff7542d1280,136,JumpIfToBooleanTrueConstant
code-creation,BytecodeHandler,0,88772,0x7ff7542d1340,136,JumpIfToBooleanFalseConstant
code-creation,BytecodeHandler,0,88778,0x7ff7542d1400,124,JumpIfToBooleanTrue
code-creation,BytecodeHandler,0,88784,0x7ff7542d1480,124,JumpIfToBooleanFalse
code-creation,BytecodeHandler,0,88789,0x7ff7542d1500,48,JumpIfTrue
code-creation,BytecodeHandler,0,88795,0x7ff7542d1540,48,JumpIfFalse
code-creation,BytecodeHandler,0,88800,0x7ff7542d1580,48,JumpIfNull
code-creation,BytecodeHandler,0,88805,0x7ff7542d15c0,48,JumpIfNotNull
code-creation,BytecodeHandler,0,88811,0x7ff7542d1600,48,JumpIfUndefined
code-creation,BytecodeHandler,0,88816,0x7ff7542d1640,48,JumpIfNotUndefined
code-creation,BytecodeHandler,0,88822,0x7ff7542d1680,56,JumpIfUndefinedOrNull
code-creation,BytecodeHandler,0,88827,0x7ff7542d16c0,56,JumpIfJSReceiver
code-creation,BytecodeHandler,0,88833,0x7ff7542d1700,84,SwitchOnSmiNoFeedback
code-creation,BytecodeHandler,0,88839,0x7ff7542d1780,476,ForInEnumerate
code-creation,BytecodeHandler,0,88844,0x7ff7542d1980,240,ForInPrepare
code-creation,BytecodeHandler,0,88850,0x7ff7542d1a80,64,ForInContinue
code-creation,BytecodeHandler,0,88855,0x7ff7542d1b00,252,ForInNext
code-creation,BytecodeHandler,0,88861,0x7ff7542d1c00,48,ForInStep
code-creation,BytecodeHandler,0,88867,0x7ff7542d1c40,36,SetPendingMessage
code-creation,BytecodeHandler,0,88872,0x7ff7542d1c80,116,Throw
code-creation,BytecodeHandler,0,88878,0x7ff7542d1d00,116,ReThrow
code-creation,BytecodeHandler,0,88883,0x7ff7542d1d80,112,Return
code-creation,BytecodeHandler,0,88889,0x7ff7542d1e00,188,ThrowReferenceErrorIfHole
code-creation,BytecodeHandler,0,88895,0x7ff7542d1ec0,136,ThrowSuperNotCalledIfHole
code-creation,BytecodeHandler,0,88900,0x7ff7542d1f80,136,ThrowSuperAlreadyCalledIfNotHole
code-creation,BytecodeHandler,0,88906,0x7ff7542d2040,156,ThrowIfNotSuperConstructor
code-creation,BytecodeHandler,0,88912,0x7ff7542d2100,104,SwitchOnGeneratorState
code-creation,BytecodeHandler,0,88918,0x7ff7542d2180,532,SuspendGenerator
code-creation,BytecodeHandler,0,88923,0x7ff7542d23c0,152,ResumeGenerator
code-creation,BytecodeHandler,0,88929,0x7ff7542d2480,164,GetIterator
code-creation,BytecodeHandler,0,88941,0x7ff7542d2540,104,Debugger
code-creation,BytecodeHandler,0,88947,0x7ff7542d25c0,124,IncBlockCounter
code-creation,BytecodeHandler,0,88953,0x7ff7542d2640,56,Abort
code-creation,BytecodeHandler,0,88958,0x7ff7542d2680,32,Star0
code-creation,BytecodeHandler,0,88963,0x7ff7542d26c0,60,Illegal
code-creation,BytecodeHandler,0,88969,0x7ff7542d2700,108,DebugBreak1.Wide
code-creation,BytecodeHandler,0,88975,0x7ff7542d2780,108,DebugBreak2.Wide
code-creation,BytecodeHandler,0,88981,0x7ff7542d2800,108,DebugBreak3.Wide
code-creation,BytecodeHandler,0,88986,0x7ff7542d2880,108,DebugBreak4.Wide
code-creation,BytecodeHandler,0,88992,0x7ff7542d2900,108,DebugBreak5.Wide
code-creation,BytecodeHandler,0,88998,0x7ff7542d2980,108,DebugBreak6.Wide
code-creation,BytecodeHandler,0,89003,0x7ff7542d2a00,32,Ldar.Wide
code-creation,BytecodeHandler,0,89009,0x7ff7542d2a40,32,LdaSmi.Wide
code-creation,BytecodeHandler,0,89014,0x7ff7542d2a80,32,LdaConstant.Wide
code-creation,BytecodeHandler,0,89020,0x7ff7542d2ac0,116,LdaContextSlot.Wide
code-creation,BytecodeHandler,0,89026,0x7ff7542d2b40,116,LdaImmutableContextSlot.Wide
code-creation,BytecodeHandler,0,89032,0x7ff7542d2bc0,44,LdaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,89038,0x7ff7542d2c00,44,LdaImmutableCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,89044,0x7ff7542d2c40,32,Star.Wide
code-creation,BytecodeHandler,0,89050,0x7ff7542d2c80,48,Mov.Wide
code-creation,BytecodeHandler,0,89055,0x7ff7542d2cc0,40,PushContext.Wide
code-creation,BytecodeHandler,0,89061,0x7ff7542d2d00,36,PopContext.Wide
code-creation,BytecodeHandler,0,89066,0x7ff7542d2d40,56,TestReferenceEqual.Wide
code-creation,BytecodeHandler,0,89072,0x7ff7542d2d80,4292,LdaGlobal.Wide
code-creation,BytecodeHandler,0,89078,0x7ff7542d3e80,4220,LdaGlobalInsideTypeof.Wide
code-creation,BytecodeHandler,0,89084,0x7ff7542d4f00,164,StaGlobal.Wide
code-creation,BytecodeHandler,0,89089,0x7ff7542d4fc0,184,StaContextSlot.Wide
code-creation,BytecodeHandler,0,89095,0x7ff7542d5080,112,StaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,89101,0x7ff7542d5100,128,LdaLookupSlot.Wide
code-creation,BytecodeHandler,0,89107,0x7ff7542d51c0,296,LdaLookupContextSlot.Wide
code-creation,BytecodeHandler,0,89113,0x7ff7542d5300,4512,LdaLookupGlobalSlot.Wide
code-creation,BytecodeHandler,0,89119,0x7ff7542d64c0,128,LdaLookupSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,89125,0x7ff7542d6580,296,LdaLookupContextSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,89132,0x7ff7542d66c0,4432,LdaLookupGlobalSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,89138,0x7ff7542d7840,220,StaLookupSlot.Wide
code-creation,BytecodeHandler,0,89144,0x7ff7542d7940,4952,GetNamedProperty.Wide
code-creation,BytecodeHandler,0,89149,0x7ff7542d8cc0,192,GetNamedPropertyFromSuper.Wide
code-creation,BytecodeHandler,0,89156,0x7ff7542d8dc0,156,GetKeyedProperty.Wide
code-creation,BytecodeHandler,0,89162,0x7ff7542d8e80,192,LdaModuleVariable.Wide
code-creation,BytecodeHandler,0,89168,0x7ff7542d8f80,312,StaModuleVariable.Wide
code-creation,BytecodeHandler,0,89174,0x7ff7542d90c0,180,SetNamedProperty.Wide
code-creation,BytecodeHandler,0,89180,0x7ff7542d9180,180,DefineNamedOwnProperty.Wide
code-creation,BytecodeHandler,0,89187,0x7ff7542d9240,172,SetKeyedProperty.Wide
code-creation,BytecodeHandler,0,89193,0x7ff7542d9300,188,DefineKeyedOwnProperty.Wide
code-creation,BytecodeHandler,0,89199,0x7ff7542d93c0,172,StaInArrayLiteral.Wide
code-creation,BytecodeHandler,0,89205,0x7ff7542d9480,204,DefineKeyedOwnPropertyInLiteral.Wide
code-creation,BytecodeHandler,0,89211,0x7ff7542d9580,1420,Add.Wide
code-creation,BytecodeHandler,0,89217,0x7ff7542d9b40,1392,Sub.Wide
code-creation,BytecodeHandler,0,89222,0x7ff7542da0c0,1512,Mul.Wide
code-creation,BytecodeHandler,0,89227,0x7ff7542da6c0,1616,Div.Wide
code-creation,BytecodeHandler,0,89232,0x7ff7542dad40,1564,Mod.Wide
code-creation,BytecodeHandler,0,89238,0x7ff7542db380,952,Exp.Wide
code-creation,BytecodeHandler,0,89243,0x7ff7542db740,2024,BitwiseOr.Wide
code-creation,BytecodeHandler,0,89248,0x7ff7542dbf40,2024,BitwiseXor.Wide
code-creation,BytecodeHandler,0,89254,0x7ff7542dc740,2024,BitwiseAnd.Wide
code-creation,BytecodeHandler,0,89260,0x7ff7542dcf40,1504,ShiftLeft.Wide
code-creation,BytecodeHandler,0,89265,0x7ff7542dd540,1504,ShiftRight.Wide
code-creation,BytecodeHandler,0,89271,0x7ff7542ddb40,1564,ShiftRightLogical.Wide
code-creation,BytecodeHandler,0,89276,0x7ff7542de180,1312,AddSmi.Wide
code-creation,BytecodeHandler,0,89282,0x7ff7542de6c0,1284,SubSmi.Wide
code-creation,BytecodeHandler,0,89287,0x7ff7542dec00,1396,MulSmi.Wide
code-creation,BytecodeHandler,0,89293,0x7ff7542df180,1532,DivSmi.Wide
code-creation,BytecodeHandler,0,89298,0x7ff7542df780,1396,ModSmi.Wide
code-creation,BytecodeHandler,0,89304,0x7ff7542dfd00,812,ExpSmi.Wide
code-creation,BytecodeHandler,0,89309,0x7ff7542e0040,572,BitwiseOrSmi.Wide
code-creation,BytecodeHandler,0,89315,0x7ff7542e0280,572,BitwiseXorSmi.Wide
code-creation,BytecodeHandler,0,89321,0x7ff7542e04c0,572,BitwiseAndSmi.Wide
code-creation,BytecodeHandler,0,89326,0x7ff7542e0700,592,ShiftLeftSmi.Wide
code-creation,BytecodeHandler,0,89332,0x7ff7542e0980,580,ShiftRightSmi.Wide
code-creation,BytecodeHandler,0,89338,0x7ff7542e0c00,868,ShiftRightLogicalSmi.Wide
code-creation,BytecodeHandler,0,89344,0x7ff7542e0f80,712,Inc.Wide
code-creation,BytecodeHandler,0,89349,0x7ff7542e1280,712,Dec.Wide
code-creation,BytecodeHandler,0,89354,0x7ff7542e1580,736,Negate.Wide
code-creation,BytecodeHandler,0,89360,0x7ff7542e1880,612,BitwiseNot.Wide
code-creation,BytecodeHandler,0,89365,0x7ff7542e1b00,128,DeletePropertyStrict.Wide
code-creation,BytecodeHandler,0,89371,0x7ff7542e1bc0,120,DeletePropertySloppy.Wide
code-creation,BytecodeHandler,0,89377,0x7ff7542e1c40,40,GetSuperConstructor.Wide
code-creation,BytecodeHandler,0,89383,0x7ff7542e1c80,384,FindNonDefaultConstructorOrConstruct.Wide
code-creation,BytecodeHandler,0,89390,0x7ff7542e1e40,1108,CallAnyReceiver.Wide
code-creation,BytecodeHandler,0,89396,0x7ff7542e22c0,1108,CallProperty.Wide
code-creation,BytecodeHandler,0,89402,0x7ff7542e2740,1036,CallProperty0.Wide
code-creation,BytecodeHandler,0,89407,0x7ff7542e2b80,1048,CallProperty1.Wide
code-creation,BytecodeHandler,0,89413,0x7ff7542e2fc0,1060,CallProperty2.Wide
code-creation,BytecodeHandler,0,89419,0x7ff7542e3400,1020,CallUndefinedReceiver.Wide
code-creation,BytecodeHandler,0,89425,0x7ff7542e3800,1040,CallUndefinedReceiver0.Wide
code-creation,BytecodeHandler,0,89431,0x7ff7542e3c40,1052,CallUndefinedReceiver1.Wide
code-creation,BytecodeHandler,0,89437,0x7ff7542e4080,1068,CallUndefinedReceiver2.Wide
code-creation,BytecodeHandler,0,89443,0x7ff7542e44c0,1108,CallWithSpread.Wide
code-creation,BytecodeHandler,0,89449,0x7ff7542e4940,132,CallRuntime.Wide
code-creation,BytecodeHandler,0,89454,0x7ff7542e4a00,160,CallRuntimeForPair.Wide
code-creation,BytecodeHandler,0,89460,0x7ff7542e4ac0,84,CallJSRuntime.Wide
code-creation,BytecodeHandler,0,89466,0x7ff7542e4b40,1376,InvokeIntrinsic.Wide
code-creation,BytecodeHandler,0,89471,0x7ff7542e50c0,1032,Construct.Wide
code-creation,BytecodeHandler,0,89477,0x7ff7542e5500,444,ConstructWithSpread.Wide
code-creation,BytecodeHandler,0,89483,0x7ff7542e56c0,2256,TestEqual.Wide
code-creation,BytecodeHandler,0,89490,0x7ff7542e5fc0,1336,TestEqualStrict.Wide
code-creation,BytecodeHandler,0,89496,0x7ff7542e6500,1816,TestLessThan.Wide
code-creation,BytecodeHandler,0,89502,0x7ff7542e6c40,1816,TestGreaterThan.Wide
code-creation,BytecodeHandler,0,89508,0x7ff7542e7380,1816,TestLessThanOrEqual.Wide
code-creation,BytecodeHandler,0,89514,0x7ff7542e7ac0,1816,TestGreaterThanOrEqual.Wide
code-creation,BytecodeHandler,0,89520,0x7ff7542e8200,888,TestInstanceOf.Wide
code-creation,BytecodeHandler,0,89525,0x7ff7542e8580,156,TestIn.Wide
code-creation,BytecodeHandler,0,89531,0x7ff7542e8640,216,ToNumber.Wide
code-creation,BytecodeHandler,0,89536,0x7ff7542e8740,240,ToNumeric.Wide
code-creation,BytecodeHandler,0,89542,0x7ff7542e8840,120,ToObject.Wide
code-creation,BytecodeHandler,0,89547,0x7ff7542e88c0,400,CreateRegExpLiteral.Wide
code-creation,BytecodeHandler,0,89553,0x7ff7542e8a80,1580,CreateArrayLiteral.Wide
code-creation,BytecodeHandler,0,89559,0x7ff7542e90c0,780,CreateEmptyArrayLiteral.Wide
code-creation,BytecodeHandler,0,89565,0x7ff7542e9400,2504,CreateObjectLiteral.Wide
code-creation,BytecodeHandler,0,89571,0x7ff7542e9e00,176,CloneObject.Wide
code-creation,BytecodeHandler,0,89577,0x7ff7542e9ec0,164,GetTemplateObject.Wide
code-creation,BytecodeHandler,0,89583,0x7ff7542e9f80,332,CreateClosure.Wide
code-creation,BytecodeHandler,0,89588,0x7ff7542ea100,120,CreateBlockContext.Wide
code-creation,BytecodeHandler,0,89594,0x7ff7542ea180,136,CreateCatchContext.Wide
code-creation,BytecodeHandler,0,89600,0x7ff7542ea240,348,CreateFunctionContext.Wide
code-creation,BytecodeHandler,0,89606,0x7ff7542ea3c0,348,CreateEvalContext.Wide
code-creation,BytecodeHandler,0,89612,0x7ff7542ea540,136,CreateWithContext.Wide
code-creation,BytecodeHandler,0,89618,0x7ff7542ea600,1180,JumpLoop.Wide
code-creation,BytecodeHandler,0,89623,0x7ff7542eaac0,24,Jump.Wide
code-creation,BytecodeHandler,0,89629,0x7ff7542eab00,32,JumpConstant.Wide
code-creation,BytecodeHandler,0,89634,0x7ff7542eab40,56,JumpIfNullConstant.Wide
code-creation,BytecodeHandler,0,89640,0x7ff7542eab80,56,JumpIfNotNullConstant.Wide
code-creation,BytecodeHandler,0,89646,0x7ff7542eabc0,56,JumpIfUndefinedConstant.Wide
code-creation,BytecodeHandler,0,89652,0x7ff7542eac00,56,JumpIfNotUndefinedConstant.Wide
code-creation,BytecodeHandler,0,89658,0x7ff7542eac40,64,JumpIfUndefinedOrNullConstant.Wide
code-creation,BytecodeHandler,0,89665,0x7ff7542eacc0,56,JumpIfTrueConstant.Wide
code-creation,BytecodeHandler,0,89671,0x7ff7542ead00,56,JumpIfFalseConstant.Wide
code-creation,BytecodeHandler,0,89677,0x7ff7542ead40,68,JumpIfJSReceiverConstant.Wide
code-creation,BytecodeHandler,0,89683,0x7ff7542eadc0,136,JumpIfToBooleanTrueConstant.Wide
code-creation,BytecodeHandler,0,89689,0x7ff7542eae80,136,JumpIfToBooleanFalseConstant.Wide
code-creation,BytecodeHandler,0,89695,0x7ff7542eaf40,124,JumpIfToBooleanTrue.Wide
code-creation,BytecodeHandler,0,89701,0x7ff7542eafc0,124,JumpIfToBooleanFalse.Wide
code-creation,BytecodeHandler,0,89707,0x7ff7542eb040,48,JumpIfTrue.Wide
code-creation,BytecodeHandler,0,89713,0x7ff7542eb080,48,JumpIfFalse.Wide
code-creation,BytecodeHandler,0,89718,0x7ff7542eb0c0,48,JumpIfNull.Wide
code-creation,BytecodeHandler,0,89724,0x7ff7542eb100,48,JumpIfNotNull.Wide
code-creation,BytecodeHandler,0,89730,0x7ff7542eb140,48,JumpIfUndefined.Wide
code-creation,BytecodeHandler,0,89735,0x7ff7542eb180,48,JumpIfNotUndefined.Wide
code-creation,BytecodeHandler,0,89741,0x7ff7542eb1c0,56,JumpIfUndefinedOrNull.Wide
code-creation,BytecodeHandler,0,89747,0x7ff7542eb200,56,JumpIfJSReceiver.Wide
code-creation,BytecodeHandler,0,89753,0x7ff7542eb240,84,SwitchOnSmiNoFeedback.Wide
code-creation,BytecodeHandler,0,89759,0x7ff7542eb2c0,480,ForInEnumerate.Wide
code-creation,BytecodeHandler,0,89765,0x7ff7542eb4c0,240,ForInPrepare.Wide
code-creation,BytecodeHandler,0,89771,0x7ff7542eb5c0,64,ForInContinue.Wide
code-creation,BytecodeHandler,0,89776,0x7ff7542eb640,256,ForInNext.Wide
code-creation,BytecodeHandler,0,89782,0x7ff7542eb780,48,ForInStep.Wide
code-creation,BytecodeHandler,0,89787,0x7ff7542eb7c0,160,ThrowReferenceErrorIfHole.Wide
code-creation,BytecodeHandler,0,89794,0x7ff7542eb880,160,ThrowIfNotSuperConstructor.Wide
code-creation,BytecodeHandler,0,89801,0x7ff7542eb940,104,SwitchOnGeneratorState.Wide
code-creation,BytecodeHandler,0,89807,0x7ff7542eb9c0,532,SuspendGenerator.Wide
code-creation,BytecodeHandler,0,89813,0x7ff7542ebc00,152,ResumeGenerator.Wide
code-creation,BytecodeHandler,0,89819,0x7ff7542ebcc0,168,GetIterator.Wide
code-creation,BytecodeHandler,0,89825,0x7ff7542ebd80,128,IncBlockCounter.Wide
code-creation,BytecodeHandler,0,89830,0x7ff7542ebe40,56,Abort.Wide
code-creation,BytecodeHandler,0,89836,0x7ff7542ebe80,108,DebugBreak1.ExtraWide
code-creation,BytecodeHandler,0,89841,0x7ff7542ebf00,108,DebugBreak2.ExtraWide
code-creation,BytecodeHandler,0,89847,0x7ff7542ebf80,108,DebugBreak3.ExtraWide
code-creation,BytecodeHandler,0,89853,0x7ff7542ec000,108,DebugBreak4.ExtraWide
code-creation,BytecodeHandler,0,89859,0x7ff7542ec080,108,DebugBreak5.ExtraWide
code-creation,BytecodeHandler,0,89865,0x7ff7542ec100,108,DebugBreak6.ExtraWide
code-creation,BytecodeHandler,0,89871,0x7ff7542ec180,32,Ldar.ExtraWide
code-creation,BytecodeHandler,0,89877,0x7ff7542ec1c0,28,LdaSmi.ExtraWide
code-creation,BytecodeHandler,0,89882,0x7ff7542ec200,32,LdaConstant.ExtraWide
code-creation,BytecodeHandler,0,89888,0x7ff7542ec240,116,LdaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,89894,0x7ff7542ec2c0,116,LdaImmutableContextSlot.ExtraWide
code-creation,BytecodeHandler,0,89901,0x7ff7542ec340,44,LdaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,89907,0x7ff7542ec380,44,LdaImmutableCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,89913,0x7ff7542ec3c0,32,Star.ExtraWide
code-creation,BytecodeHandler,0,89919,0x7ff7542ec400,44,Mov.ExtraWide
code-creation,BytecodeHandler,0,89924,0x7ff7542ec440,40,PushContext.ExtraWide
code-creation,BytecodeHandler,0,89930,0x7ff7542ec480,36,PopContext.ExtraWide
code-creation,BytecodeHandler,0,89936,0x7ff7542ec4c0,52,TestReferenceEqual.ExtraWide
code-creation,BytecodeHandler,0,89942,0x7ff7542ec500,4284,LdaGlobal.ExtraWide
code-creation,BytecodeHandler,0,89948,0x7ff7542ed5c0,4208,LdaGlobalInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,89954,0x7ff7542ee640,164,StaGlobal.ExtraWide
code-creation,BytecodeHandler,0,89960,0x7ff7542ee700,184,StaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,89966,0x7ff7542ee7c0,112,StaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,89972,0x7ff7542ee840,128,LdaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,89977,0x7ff7542ee900,296,LdaLookupContextSlot.ExtraWide
code-creation,BytecodeHandler,0,89984,0x7ff7542eea40,4504,LdaLookupGlobalSlot.ExtraWide
code-creation,BytecodeHandler,0,89990,0x7ff7542efc00,128,LdaLookupSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,89996,0x7ff7542efcc0,296,LdaLookupContextSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,90003,0x7ff7542efe00,4420,LdaLookupGlobalSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,90010,0x7ff7542f0f80,220,StaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,90016,0x7ff7542f1080,4940,GetNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,90022,0x7ff7542f2400,188,GetNamedPropertyFromSuper.ExtraWide
code-creation,BytecodeHandler,0,90028,0x7ff7542f24c0,156,GetKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,90034,0x7ff7542f2580,192,LdaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,90040,0x7ff7542f2680,312,StaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,90046,0x7ff7542f27c0,176,SetNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,90052,0x7ff7542f2880,176,DefineNamedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,90058,0x7ff7542f2940,168,SetKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,90065,0x7ff7542f2a00,184,DefineKeyedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,90071,0x7ff7542f2ac0,168,StaInArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,90077,0x7ff7542f2b80,200,DefineKeyedOwnPropertyInLiteral.ExtraWide
code-creation,BytecodeHandler,0,90083,0x7ff7542f2c80,1416,Add.ExtraWide
code-creation,BytecodeHandler,0,90089,0x7ff7542f3240,1388,Sub.ExtraWide
code-creation,BytecodeHandler,0,90095,0x7ff7542f37c0,1508,Mul.ExtraWide
code-creation,BytecodeHandler,0,90101,0x7ff7542f3dc0,1612,Div.ExtraWide
code-creation,BytecodeHandler,0,90107,0x7ff7542f4440,1560,Mod.ExtraWide
code-creation,BytecodeHandler,0,90120,0x7ff7542f4a80,948,Exp.ExtraWide
code-creation,BytecodeHandler,0,90126,0x7ff7542f4e40,2020,BitwiseOr.ExtraWide
code-creation,BytecodeHandler,0,90132,0x7ff7542f5640,2020,BitwiseXor.ExtraWide
code-creation,BytecodeHandler,0,90138,0x7ff7542f5e40,2020,BitwiseAnd.ExtraWide
code-creation,BytecodeHandler,0,90144,0x7ff7542f6640,1500,ShiftLeft.ExtraWide
code-creation,BytecodeHandler,0,90150,0x7ff7542f6c40,1500,ShiftRight.ExtraWide
code-creation,BytecodeHandler,0,90156,0x7ff7542f7240,1556,ShiftRightLogical.ExtraWide
code-creation,BytecodeHandler,0,90162,0x7ff7542f7880,1304,AddSmi.ExtraWide
code-creation,BytecodeHandler,0,90168,0x7ff7542f7dc0,1280,SubSmi.ExtraWide
code-creation,BytecodeHandler,0,90173,0x7ff7542f8300,1392,MulSmi.ExtraWide
code-creation,BytecodeHandler,0,90179,0x7ff7542f8880,1528,DivSmi.ExtraWide
code-creation,BytecodeHandler,0,90185,0x7ff7542f8e80,1392,ModSmi.ExtraWide
code-creation,BytecodeHandler,0,90190,0x7ff7542f9400,812,ExpSmi.ExtraWide
code-creation,BytecodeHandler,0,90196,0x7ff7542f9740,572,BitwiseOrSmi.ExtraWide
code-creation,BytecodeHandler,0,90202,0x7ff7542f9980,572,BitwiseXorSmi.ExtraWide
code-creation,BytecodeHandler,0,90208,0x7ff7542f9bc0,572,BitwiseAndSmi.ExtraWide
code-creation,BytecodeHandler,0,90214,0x7ff7542f9e00,592,ShiftLeftSmi.ExtraWide
code-creation,BytecodeHandler,0,90220,0x7ff7542fa080,580,ShiftRightSmi.ExtraWide
code-creation,BytecodeHandler,0,90226,0x7ff7542fa300,864,ShiftRightLogicalSmi.ExtraWide
code-creation,BytecodeHandler,0,90232,0x7ff7542fa680,712,Inc.ExtraWide
code-creation,BytecodeHandler,0,90238,0x7ff7542fa980,712,Dec.ExtraWide
code-creation,BytecodeHandler,0,90243,0x7ff7542fac80,736,Negate.ExtraWide
code-creation,BytecodeHandler,0,90249,0x7ff7542faf80,612,BitwiseNot.ExtraWide
code-creation,BytecodeHandler,0,90255,0x7ff7542fb200,124,DeletePropertyStrict.ExtraWide
code-creation,BytecodeHandler,0,90261,0x7ff7542fb280,116,DeletePropertySloppy.ExtraWide
code-creation,BytecodeHandler,0,90267,0x7ff7542fb300,40,GetSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,90273,0x7ff7542fb340,380,FindNonDefaultConstructorOrConstruct.ExtraWide
code-creation,BytecodeHandler,0,90280,0x7ff7542fb4c0,1108,CallAnyReceiver.ExtraWide
code-creation,BytecodeHandler,0,90286,0x7ff7542fb940,1108,CallProperty.ExtraWide
code-creation,BytecodeHandler,0,90292,0x7ff7542fbdc0,1036,CallProperty0.ExtraWide
code-creation,BytecodeHandler,0,90298,0x7ff7542fc200,1048,CallProperty1.ExtraWide
code-creation,BytecodeHandler,0,90304,0x7ff7542fc640,1056,CallProperty2.ExtraWide
code-creation,BytecodeHandler,0,90310,0x7ff7542fca80,1020,CallUndefinedReceiver.ExtraWide
code-creation,BytecodeHandler,0,90316,0x7ff7542fce80,1040,CallUndefinedReceiver0.ExtraWide
code-creation,BytecodeHandler,0,90322,0x7ff7542fd2c0,1052,CallUndefinedReceiver1.ExtraWide
code-creation,BytecodeHandler,0,90329,0x7ff7542fd700,1068,CallUndefinedReceiver2.ExtraWide
code-creation,BytecodeHandler,0,90335,0x7ff7542fdb40,1108,CallWithSpread.ExtraWide
code-creation,BytecodeHandler,0,90341,0x7ff7542fdfc0,128,CallRuntime.ExtraWide
code-creation,BytecodeHandler,0,90347,0x7ff7542fe080,156,CallRuntimeForPair.ExtraWide
code-creation,BytecodeHandler,0,90353,0x7ff7542fe140,80,CallJSRuntime.ExtraWide
code-creation,BytecodeHandler,0,90359,0x7ff7542fe1c0,1376,InvokeIntrinsic.ExtraWide
code-creation,BytecodeHandler,0,90365,0x7ff7542fe740,1028,Construct.ExtraWide
code-creation,BytecodeHandler,0,90371,0x7ff7542feb80,440,ConstructWithSpread.ExtraWide
code-creation,BytecodeHandler,0,90377,0x7ff7542fed40,2256,TestEqual.ExtraWide
code-creation,BytecodeHandler,0,90383,0x7ff7542ff640,1336,TestEqualStrict.ExtraWide
code-creation,BytecodeHandler,0,90389,0x7ff7542ffb80,1816,TestLessThan.ExtraWide
code-creation,BytecodeHandler,0,90395,0x7ff7543002c0,1816,TestGreaterThan.ExtraWide
code-creation,BytecodeHandler,0,90402,0x7ff754300a00,1816,TestLessThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,90409,0x7ff754301140,1816,TestGreaterThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,90416,0x7ff754301880,888,TestInstanceOf.ExtraWide
code-creation,BytecodeHandler,0,90422,0x7ff754301c00,156,TestIn.ExtraWide
code-creation,BytecodeHandler,0,90427,0x7ff754301cc0,216,ToNumber.ExtraWide
code-creation,BytecodeHandler,0,90433,0x7ff754301dc0,240,ToNumeric.ExtraWide
code-creation,BytecodeHandler,0,90439,0x7ff754301ec0,116,ToObject.ExtraWide
code-creation,BytecodeHandler,0,90445,0x7ff754301f40,396,CreateRegExpLiteral.ExtraWide
code-creation,BytecodeHandler,0,90451,0x7ff754302100,1580,CreateArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,90457,0x7ff754302740,780,CreateEmptyArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,90463,0x7ff754302a80,2504,CreateObjectLiteral.ExtraWide
code-creation,BytecodeHandler,0,90469,0x7ff754303480,172,CloneObject.ExtraWide
code-creation,BytecodeHandler,0,90475,0x7ff754303540,164,GetTemplateObject.ExtraWide
code-creation,BytecodeHandler,0,90481,0x7ff754303600,328,CreateClosure.ExtraWide
code-creation,BytecodeHandler,0,90487,0x7ff754303780,120,CreateBlockContext.ExtraWide
code-creation,BytecodeHandler,0,90494,0x7ff754303800,132,CreateCatchContext.ExtraWide
code-creation,BytecodeHandler,0,90500,0x7ff7543038c0,348,CreateFunctionContext.ExtraWide
code-creation,BytecodeHandler,0,90506,0x7ff754303a40,348,CreateEvalContext.ExtraWide
code-creation,BytecodeHandler,0,90512,0x7ff754303bc0,132,CreateWithContext.ExtraWide
code-creation,BytecodeHandler,0,90518,0x7ff754303c80,1176,JumpLoop.ExtraWide
code-creation,BytecodeHandler,0,90524,0x7ff754304140,20,Jump.ExtraWide
code-creation,BytecodeHandler,0,90529,0x7ff754304180,32,JumpConstant.ExtraWide
code-creation,BytecodeHandler,0,90535,0x7ff7543041c0,56,JumpIfNullConstant.ExtraWide
code-creation,BytecodeHandler,0,90541,0x7ff754304200,56,JumpIfNotNullConstant.ExtraWide
code-creation,BytecodeHandler,0,90548,0x7ff754304240,56,JumpIfUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,90554,0x7ff754304280,56,JumpIfNotUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,90560,0x7ff7543042c0,64,JumpIfUndefinedOrNullConstant.ExtraWide
code-creation,BytecodeHandler,0,90567,0x7ff754304340,56,JumpIfTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,90573,0x7ff754304380,56,JumpIfFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,90579,0x7ff7543043c0,68,JumpIfJSReceiverConstant.ExtraWide
code-creation,BytecodeHandler,0,90586,0x7ff754304440,136,JumpIfToBooleanTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,90592,0x7ff754304500,136,JumpIfToBooleanFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,90599,0x7ff7543045c0,124,JumpIfToBooleanTrue.ExtraWide
code-creation,BytecodeHandler,0,90605,0x7ff754304640,124,JumpIfToBooleanFalse.ExtraWide
code-creation,BytecodeHandler,0,90611,0x7ff7543046c0,44,JumpIfTrue.ExtraWide
code-creation,BytecodeHandler,0,90616,0x7ff754304700,44,JumpIfFalse.ExtraWide
code-creation,BytecodeHandler,0,90622,0x7ff754304740,44,JumpIfNull.ExtraWide
code-creation,BytecodeHandler,0,90628,0x7ff754304780,44,JumpIfNotNull.ExtraWide
code-creation,BytecodeHandler,0,90634,0x7ff7543047c0,44,JumpIfUndefined.ExtraWide
code-creation,BytecodeHandler,0,90640,0x7ff754304800,44,JumpIfNotUndefined.ExtraWide
code-creation,BytecodeHandler,0,90646,0x7ff754304840,56,JumpIfUndefinedOrNull.ExtraWide
code-creation,BytecodeHandler,0,90652,0x7ff754304880,56,JumpIfJSReceiver.ExtraWide
code-creation,BytecodeHandler,0,90658,0x7ff7543048c0,80,SwitchOnSmiNoFeedback.ExtraWide
code-creation,BytecodeHandler,0,90664,0x7ff754304940,480,ForInEnumerate.ExtraWide
code-creation,BytecodeHandler,0,90670,0x7ff754304b40,240,ForInPrepare.ExtraWide
code-creation,BytecodeHandler,0,90676,0x7ff754304c40,64,ForInContinue.ExtraWide
code-creation,BytecodeHandler,0,90682,0x7ff754304cc0,252,ForInNext.ExtraWide
code-creation,BytecodeHandler,0,90688,0x7ff754304dc0,44,ForInStep.ExtraWide
code-creation,BytecodeHandler,0,90695,0x7ff754304e00,160,ThrowReferenceErrorIfHole.ExtraWide
code-creation,BytecodeHandler,0,90702,0x7ff754304ec0,160,ThrowIfNotSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,90708,0x7ff754304f80,100,SwitchOnGeneratorState.ExtraWide
code-creation,BytecodeHandler,0,90714,0x7ff754305000,532,SuspendGenerator.ExtraWide
code-creation,BytecodeHandler,0,90721,0x7ff754305240,152,ResumeGenerator.ExtraWide
code-creation,BytecodeHandler,0,90727,0x7ff754305300,164,GetIterator.ExtraWide
code-creation,BytecodeHandler,0,90733,0x7ff7543053c0,124,IncBlockCounter.ExtraWide
code-creation,BytecodeHandler,0,90739,0x7ff754305440,56,Abort.ExtraWide
new,MemoryChunk,0x28d57840000,262144
new,MemoryChunk,0x11fb3a40000,262144
new,MemoryChunk,0x131c7d40000,262144
new,MemoryChunk,0x32f24580000,262144
new,MemoryChunk,0x31514340000,262144
new,MemoryChunk,0x125aa780000,262144
code-creation,Eval,10,95354,0x3151437fd2c,5, node:internal/main/repl:1:1,0x3151437fb88,~
script-source,79,node:internal/main/repl,'use strict';\x0d\n\x0d\n// Create the REPL if `-i` or `--interactive` is passed\x2C or if\x0d\n// the main module is not specified and stdin is a TTY.\x0d\n\x0d\nconst {\x0d\n  prepareMainThreadExecution\x2C\x0d\n  markBootstrapComplete\x2C\x0d\n} = require('internal/process/pre_execution');\x0d\n\x0d\nconst {\x0d\n  evalScript\x2C\x0d\n} = require('internal/process/execution');\x0d\n\x0d\nconst console = require('internal/console/global');\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\nconst { exitCodes: { kInvalidCommandLineArgument } } = internalBinding('errors');\x0d\n\x0d\nprepareMainThreadExecution();\x0d\n\x0d\nmarkBootstrapComplete();\x0d\n\x0d\nif (process.env.NODE_REPL_EXTERNAL_MODULE) {\x0d\n  require('internal/modules/cjs/loader')\x0d\n    .Module\x0d\n    ._load(process.env.NODE_REPL_EXTERNAL_MODULE\x2C undefined\x2C true);\x0d\n} else {\x0d\n  // --input-type flag not supported in REPL\x0d\n  if (getOptionValue('--input-type')) {\x0d\n    // If we can't write to stderr\x2C we'd like to make this a noop\x2C\x0d\n    // so use console.error.\x0d\n    console.error('Cannot specify --input-type for REPL');\x0d\n    process.exit(kInvalidCommandLineArgument);\x0d\n  }\x0d\n\x0d\n  const esmLoader = require('internal/process/esm_loader');\x0d\n  esmLoader.loadESM(() => {\x0d\n    console.log(`Welcome to Node.js ${process.version}.\\n` +\x0d\n      'Type ".help" for more information.');\x0d\n\x0d\n    const cliRepl = require('internal/repl');\x0d\n    cliRepl.createInternalRepl(process.env\x2C (err\x2C repl) => {\x0d\n      if (err) {\x0d\n        throw err;\x0d\n      }\x0d\n      repl.on('exit'\x2C () => {\x0d\n        if (repl._flushing) {\x0d\n          repl.pause();\x0d\n          return repl.once('flushHistory'\x2C () => {\x0d\n            process.exit();\x0d\n          });\x0d\n        }\x0d\n        process.exit();\x0d\n      });\x0d\n    });\x0d\n\x0d\n    // If user passed '-e' or '--eval' along with `-i` or `--interactive`\x2C\x0d\n    // evaluate the code in the current context.\x0d\n    if (getOptionValue('[has_eval_string]')) {\x0d\n      evalScript('[eval]'\x2C\x0d\n                 getOptionValue('--eval')\x2C\x0d\n                 getOptionValue('--inspect-brk')\x2C\x0d\n                 getOptionValue('--print'));\x0d\n    }\x0d\n  });\x0d\n}\x0d\n
code-source-info,0x3151437fd2c,79,0,2023,C0O0C4O2023,,
code-creation,JS,10,95466,0x3151437febc,241, node:internal/main/repl:1:1,0x3151437fca0,~
code-source-info,0x3151437febc,79,0,2023,C0O0C22O210C28O210C33O151C38O182C43O284C49O284C54O267C60O342C66O342C70O342C72O408C78O408C83O389C89O495C92O495C97O459C102O461C107O525C110O558C113O586C116O598C121O602C127O634C133O634C138O678C143O691C151O706C156O710C165O692C172O814C178O818C184O955C187O963C195O963C200O1015C203O1023C208O1023C213O1086C219O1086C224O1139C234O1139C240O2022,,
code-creation,JS,10,95795,0x125aa7816fc,45,prepareMainThreadExecution node:internal/process/pre_execution:53:36,0x1d9b727e958,~
script-source,67,node:internal/process/pre_execution,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Date\x2C\x0d\n  DatePrototypeGetDate\x2C\x0d\n  DatePrototypeGetFullYear\x2C\x0d\n  DatePrototypeGetHours\x2C\x0d\n  DatePrototypeGetMinutes\x2C\x0d\n  DatePrototypeGetMonth\x2C\x0d\n  DatePrototypeGetSeconds\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  SafeMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolAsyncDispose\x2C\x0d\n  SymbolDispose\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  getOptionValue\x2C\x0d\n  refreshOptions\x2C\x0d\n  getEmbedderOptions\x2C\x0d\n} = require('internal/options');\x0d\nconst { reconnectZeroFillToggle } = require('internal/buffer');\x0d\nconst {\x0d\n  exposeInterface\x2C\x0d\n  exposeLazyInterfaces\x2C\x0d\n  defineReplaceableLazyAttribute\x2C\x0d\n  setupCoverageHooks\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_THIS\x2C\x0d\n  ERR_MANIFEST_ASSERT_INTEGRITY\x2C\x0d\n  ERR_NO_CRYPTO\x2C\x0d\n  ERR_MISSING_OPTION\x2C\x0d\n  ERR_ACCESS_DENIED\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  namespace: {\x0d\n    addSerializeCallback\x2C\x0d\n    isBuildingSnapshot\x2C\x0d\n  }\x2C\x0d\n} = require('internal/v8/startup_snapshot');\x0d\n\x0d\nfunction prepareMainThreadExecution(expandArgv1 = false\x2C initializeModules = true) {\x0d\n  return prepareExecution({\x0d\n    expandArgv1\x2C\x0d\n    initializeModules\x2C\x0d\n    isMainThread: true\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction prepareWorkerThreadExecution() {\x0d\n  prepareExecution({\x0d\n    expandArgv1: false\x2C\x0d\n    initializeModules: false\x2C  // Will need to initialize it after policy setup\x0d\n    isMainThread: false\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction prepareShadowRealmExecution() {\x0d\n  // Patch the process object with legacy properties and normalizations.\x0d\n  // Do not expand argv1 as it is not available in ShadowRealm.\x0d\n  patchProcessObject(false);\x0d\n  setupDebugEnv();\x0d\n\x0d\n  // Disable custom loaders in ShadowRealm.\x0d\n  setupUserModules(true);\x0d\n  const {\x0d\n    privateSymbols: {\x0d\n      host_defined_option_symbol\x2C\x0d\n    }\x2C\x0d\n  } = internalBinding('util');\x0d\n  const {\x0d\n    vm_dynamic_import_default_internal\x2C\x0d\n  } = internalBinding('symbols');\x0d\n\x0d\n  // For ShadowRealm.prototype.importValue()\x2C the referrer name is\x0d\n  // always null\x2C so the native ImportModuleDynamically() callback would\x0d\n  // always fallback to look up the host-defined option from the\x0d\n  // global object using host_defined_option_symbol. Using\x0d\n  // vm_dynamic_import_default_internal as the host-defined option\x0d\n  // instructs the JS-land importModuleDynamicallyCallback() to\x0d\n  // proxy the request to defaultImportModuleDynamically().\x0d\n  globalThis[host_defined_option_symbol] =\x0d\n    vm_dynamic_import_default_internal;\x0d\n}\x0d\n\x0d\nfunction prepareExecution(options) {\x0d\n  const { expandArgv1\x2C initializeModules\x2C isMainThread } = options;\x0d\n\x0d\n  refreshRuntimeOptions();\x0d\n  reconnectZeroFillToggle();\x0d\n\x0d\n  // Patch the process object and get the resolved main entry point.\x0d\n  const mainEntry = patchProcessObject(expandArgv1);\x0d\n  setupTraceCategoryState();\x0d\n  setupInspectorHooks();\x0d\n  setupNavigator();\x0d\n  setupWarningHandler();\x0d\n  setupUndici();\x0d\n  setupWebCrypto();\x0d\n  setupCustomEvent();\x0d\n  setupCodeCoverage();\x0d\n  setupDebugEnv();\x0d\n  // Process initial diagnostic reporting configuration\x2C if present.\x0d\n  initializeReport();\x0d\n\x0d\n  // Load permission system API\x0d\n  initializePermission();\x0d\n\x0d\n  initializeSourceMapsHandlers();\x0d\n  initializeDeprecations();\x0d\n\x0d\n  require('internal/dns/utils').initializeDns();\x0d\n\x0d\n  setupSymbolDisposePolyfill();\x0d\n\x0d\n  if (isMainThread) {\x0d\n    assert(internalBinding('worker').isMainThread);\x0d\n    // Worker threads will get the manifest in the message handler.\x0d\n    const policy = readPolicyFromDisk();\x0d\n    if (policy) {\x0d\n      require('internal/process/policy')\x0d\n        .setup(policy.manifestSrc\x2C policy.manifestURL);\x0d\n    }\x0d\n\x0d\n    // Print stack trace on `SIGINT` if option `--trace-sigint` presents.\x0d\n    setupStacktracePrinterOnSigint();\x0d\n    initializeReportSignalHandlers();  // Main-thread-only.\x0d\n    initializeHeapSnapshotSignalHandlers();\x0d\n    // If the process is spawned with env NODE_CHANNEL_FD\x2C it's probably\x0d\n    // spawned by our child_process module\x2C then initialize IPC.\x0d\n    // This attaches some internal event listeners and creates:\x0d\n    // process.send()\x2C process.channel\x2C process.connected\x2C\x0d\n    // process.disconnect().\x0d\n    setupChildProcessIpcChannel();\x0d\n    // If this is a worker in cluster mode\x2C start up the communication\x0d\n    // channel. This needs to be done before any user code gets executed\x0d\n    // (including preload modules).\x0d\n    initializeClusterIPC();\x0d\n\x0d\n    // TODO(joyeecheung): do this for worker threads as well.\x0d\n    require('internal/v8/startup_snapshot').runDeserializeCallbacks();\x0d\n  } else {\x0d\n    assert(!internalBinding('worker').isMainThread);\x0d\n    // The setup should be called in LOAD_SCRIPT message handler.\x0d\n    assert(!initializeModules);\x0d\n  }\x0d\n\x0d\n  if (initializeModules) {\x0d\n    setupUserModules();\x0d\n  }\x0d\n\x0d\n  return mainEntry;\x0d\n}\x0d\n\x0d\nfunction setupSymbolDisposePolyfill() {\x0d\n  // TODO(MoLow): Remove this polyfill once Symbol.dispose and Symbol.asyncDispose are available in V8.\x0d\n  // eslint-disable-next-line node-core/prefer-primordials\x0d\n  if (typeof Symbol.dispose !== 'symbol') {\x0d\n    ObjectDefineProperty(Symbol\x2C 'dispose'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      configurable: false\x2C\x0d\n      enumerable: false\x2C\x0d\n      value: SymbolDispose\x2C\x0d\n      writable: false\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  // eslint-disable-next-line node-core/prefer-primordials\x0d\n  if (typeof Symbol.asyncDispose !== 'symbol') {\x0d\n    ObjectDefineProperty(Symbol\x2C 'asyncDispose'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      configurable: false\x2C\x0d\n      enumerable: false\x2C\x0d\n      value: SymbolAsyncDispose\x2C\x0d\n      writable: false\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupUserModules(forceDefaultLoader = false) {\x0d\n  initializeCJSLoader();\x0d\n  initializeESMLoader(forceDefaultLoader);\x0d\n  const {\x0d\n    hasStartedUserCJSExecution\x2C\x0d\n    hasStartedUserESMExecution\x2C\x0d\n  } = require('internal/modules/helpers');\x0d\n  assert(!hasStartedUserCJSExecution());\x0d\n  assert(!hasStartedUserESMExecution());\x0d\n  // Do not enable preload modules if custom loaders are disabled.\x0d\n  // For example\x2C loader workers are responsible for doing this themselves.\x0d\n  // And preload modules are not supported in ShadowRealm as well.\x0d\n  if (!forceDefaultLoader) {\x0d\n    loadPreloadModules();\x0d\n  }\x0d\n  // Need to be done after --require setup.\x0d\n  initializeFrozenIntrinsics();\x0d\n}\x0d\n\x0d\nfunction refreshRuntimeOptions() {\x0d\n  refreshOptions();\x0d\n}\x0d\n\x0d\n/**\x0d\n * Patch the process object with legacy properties and normalizations.\x0d\n * Replace `process.argv[0]` with `process.execPath`\x2C preserving the original `argv[0]` value as `process.argv0`.\x0d\n * Replace `process.argv[1]` with the resolved absolute file path of the entry point\x2C if found.\x0d\n * @param {boolean} expandArgv1 - Whether to replace `process.argv[1]` with the resolved absolute file path of\x0d\n * the main entry point.\x0d\n */\x0d\nfunction patchProcessObject(expandArgv1) {\x0d\n  const binding = internalBinding('process_methods');\x0d\n  binding.patchProcessObject(process);\x0d\n\x0d\n  // Since we replace process.argv[0] below\x2C preserve the original value in case the user needs it.\x0d\n  ObjectDefineProperty(process\x2C 'argv0'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: true\x2C\x0d\n    // Only set it to true during snapshot building.\x0d\n    configurable: isBuildingSnapshot()\x2C\x0d\n    value: process.argv[0]\x2C\x0d\n  });\x0d\n\x0d\n  process.exitCode = undefined;\x0d\n  process._exiting = false;\x0d\n  process.argv[0] = process.execPath;\x0d\n\x0d\n  /** @type {string} */\x0d\n  let mainEntry;\x0d\n  // If requested\x2C update process.argv[1] to replace whatever the user provided with the resolved absolute file path of\x0d\n  // the entry point.\x0d\n  if (expandArgv1 && process.argv[1] &&\x0d\n      !StringPrototypeStartsWith(process.argv[1]\x2C '-')) {\x0d\n    // Expand process.argv[1] into a full path.\x0d\n    const path = require('path');\x0d\n    try {\x0d\n      mainEntry = path.resolve(process.argv[1]);\x0d\n      process.argv[1] = mainEntry;\x0d\n    } catch {\x0d\n      // Continue regardless of error.\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // We need to initialize the global console here again with process.stdout\x0d\n  // and friends for snapshot deserialization.\x0d\n  const globalConsole = require('internal/console/global');\x0d\n  const { initializeGlobalConsole } = require('internal/console/constructor');\x0d\n  initializeGlobalConsole(globalConsole);\x0d\n\x0d\n  // TODO(joyeecheung): most of these should be deprecated and removed\x2C\x0d\n  // except some that we need to be able to mutate during run time.\x0d\n  addReadOnlyProcessAlias('_eval'\x2C '--eval');\x0d\n  addReadOnlyProcessAlias('_print_eval'\x2C '--print');\x0d\n  addReadOnlyProcessAlias('_syntax_check_only'\x2C '--check');\x0d\n  addReadOnlyProcessAlias('_forceRepl'\x2C '--interactive');\x0d\n  addReadOnlyProcessAlias('_preload_modules'\x2C '--require');\x0d\n  addReadOnlyProcessAlias('noDeprecation'\x2C '--no-deprecation');\x0d\n  addReadOnlyProcessAlias('noProcessWarnings'\x2C '--no-warnings');\x0d\n  addReadOnlyProcessAlias('traceProcessWarnings'\x2C '--trace-warnings');\x0d\n  addReadOnlyProcessAlias('throwDeprecation'\x2C '--throw-deprecation');\x0d\n  addReadOnlyProcessAlias('profProcess'\x2C '--prof-process');\x0d\n  addReadOnlyProcessAlias('traceDeprecation'\x2C '--trace-deprecation');\x0d\n  addReadOnlyProcessAlias('_breakFirstLine'\x2C '--inspect-brk'\x2C false);\x0d\n  addReadOnlyProcessAlias('_breakNodeFirstLine'\x2C '--inspect-brk-node'\x2C false);\x0d\n\x0d\n  return mainEntry;\x0d\n}\x0d\n\x0d\nfunction addReadOnlyProcessAlias(name\x2C option\x2C enumerable = true) {\x0d\n  const value = getOptionValue(option);\x0d\n  if (value) {\x0d\n    ObjectDefineProperty(process\x2C name\x2C {\x0d\n      __proto__: null\x2C\x0d\n      writable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable\x2C\x0d\n      value\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupWarningHandler() {\x0d\n  const {\x0d\n    onWarning\x2C\x0d\n    resetForSerialization\x2C\x0d\n  } = require('internal/process/warning');\x0d\n  if (getOptionValue('--warnings') &&\x0d\n    process.env.NODE_NO_WARNINGS !== '1') {\x0d\n    process.on('warning'\x2C onWarning);\x0d\n\x0d\n    // The code above would add the listener back during deserialization\x2C\x0d\n    // if applicable.\x0d\n    if (isBuildingSnapshot()) {\x0d\n      addSerializeCallback(() => {\x0d\n        process.removeListener('warning'\x2C onWarning);\x0d\n        resetForSerialization();\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// https://fetch.spec.whatwg.org/\x0d\n// https://websockets.spec.whatwg.org/\x0d\nfunction setupUndici() {\x0d\n  if (getOptionValue('--no-experimental-fetch')) {\x0d\n    delete globalThis.fetch;\x0d\n    delete globalThis.FormData;\x0d\n    delete globalThis.Headers;\x0d\n    delete globalThis.Request;\x0d\n    delete globalThis.Response;\x0d\n  }\x0d\n\x0d\n  if (!getEmbedderOptions().noBrowserGlobals && getOptionValue('--experimental-websocket')) {\x0d\n    exposeLazyInterfaces(globalThis\x2C 'internal/deps/undici/undici'\x2C ['WebSocket']);\x0d\n  }\x0d\n}\x0d\n\x0d\n// TODO(aduh95): move this to internal/bootstrap/web/* when the CLI flag is\x0d\n//               removed.\x0d\nfunction setupNavigator() {\x0d\n  if (getEmbedderOptions().noBrowserGlobals ||\x0d\n      getOptionValue('--no-experimental-global-navigator')) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // https://html.spec.whatwg.org/multipage/system-state.html#the-navigator-object\x0d\n  exposeLazyInterfaces(globalThis\x2C 'internal/navigator'\x2C ['Navigator']);\x0d\n  defineReplaceableLazyAttribute(globalThis\x2C 'internal/navigator'\x2C ['navigator']\x2C false);\x0d\n}\x0d\n\x0d\n// TODO(aduh95): move this to internal/bootstrap/web/* when the CLI flag is\x0d\n//               removed.\x0d\nfunction setupWebCrypto() {\x0d\n  if (getEmbedderOptions().noBrowserGlobals ||\x0d\n      getOptionValue('--no-experimental-global-webcrypto')) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (internalBinding('config').hasOpenSSL) {\x0d\n    defineReplaceableLazyAttribute(\x0d\n      globalThis\x2C\x0d\n      'internal/crypto/webcrypto'\x2C\x0d\n      ['crypto']\x2C\x0d\n      false\x2C\x0d\n      function cryptoThisCheck() {\x0d\n        if (this !== globalThis && this != null)\x0d\n          throw new ERR_INVALID_THIS(\x0d\n            'nullish or must be the global object');\x0d\n      }\x2C\x0d\n    );\x0d\n    exposeLazyInterfaces(\x0d\n      globalThis\x2C 'internal/crypto/webcrypto'\x2C\x0d\n      ['Crypto'\x2C 'CryptoKey'\x2C 'SubtleCrypto']\x2C\x0d\n    );\x0d\n  } else {\x0d\n    ObjectDefineProperty(globalThis\x2C 'crypto'\x2C\x0d\n                         { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor({\x0d\n                           get crypto() {\x0d\n                             throw new ERR_NO_CRYPTO();\x0d\n                           }\x2C\x0d\n                         }\x2C 'crypto') });\x0d\n\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupCodeCoverage() {\x0d\n  // Resolve the coverage directory to an absolute path\x2C and\x0d\n  // overwrite process.env so that the original path gets passed\x0d\n  // to child processes even when they switch cwd. Don't do anything if the\x0d\n  // --experimental-test-coverage flag is present\x2C as the test runner will\x0d\n  // handle coverage.\x0d\n  if (process.env.NODE_V8_COVERAGE &&\x0d\n      !getOptionValue('--experimental-test-coverage')) {\x0d\n    process.env.NODE_V8_COVERAGE =\x0d\n      setupCoverageHooks(process.env.NODE_V8_COVERAGE);\x0d\n  }\x0d\n}\x0d\n\x0d\n// TODO(daeyeon): move this to internal/bootstrap/web/* when the CLI flag is\x0d\n//                removed.\x0d\nfunction setupCustomEvent() {\x0d\n  if (getEmbedderOptions().noBrowserGlobals ||\x0d\n      getOptionValue('--no-experimental-global-customevent')) {\x0d\n    return;\x0d\n  }\x0d\n  const { CustomEvent } = require('internal/event_target');\x0d\n  exposeInterface(globalThis\x2C 'CustomEvent'\x2C CustomEvent);\x0d\n}\x0d\n\x0d\nfunction setupStacktracePrinterOnSigint() {\x0d\n  if (!getOptionValue('--trace-sigint')) {\x0d\n    return;\x0d\n  }\x0d\n  const { SigintWatchdog } = require('internal/watchdog');\x0d\n\x0d\n  const watchdog = new SigintWatchdog();\x0d\n  watchdog.start();\x0d\n}\x0d\n\x0d\nfunction initializeReport() {\x0d\n  ObjectDefineProperty(process\x2C 'report'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    get() {\x0d\n      const { report } = require('internal/process/report');\x0d\n      return report;\x0d\n    }\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupDebugEnv() {\x0d\n  require('internal/util/debuglog').initializeDebugEnv(process.env.NODE_DEBUG);\x0d\n  if (getOptionValue('--expose-internals')) {\x0d\n    require('internal/bootstrap/realm').BuiltinModule.exposeInternals();\x0d\n  }\x0d\n}\x0d\n\x0d\n// This has to be called after initializeReport() is called\x0d\nfunction initializeReportSignalHandlers() {\x0d\n  if (getOptionValue('--report-on-signal')) {\x0d\n    const { addSignalHandler } = require('internal/process/report');\x0d\n    addSignalHandler();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeHeapSnapshotSignalHandlers() {\x0d\n  const signal = getOptionValue('--heapsnapshot-signal');\x0d\n  const diagnosticDir = getOptionValue('--diagnostic-dir');\x0d\n\x0d\n  if (!signal)\x0d\n    return;\x0d\n\x0d\n  require('internal/validators').validateSignalName(signal);\x0d\n  const { writeHeapSnapshot } = require('v8');\x0d\n\x0d\n  function doWriteHeapSnapshot() {\x0d\n    const heapSnapshotFilename = getHeapSnapshotFilename(diagnosticDir);\x0d\n    writeHeapSnapshot(heapSnapshotFilename);\x0d\n  }\x0d\n  process.on(signal\x2C doWriteHeapSnapshot);\x0d\n\x0d\n  // The code above would add the listener back during deserialization\x2C\x0d\n  // if applicable.\x0d\n  if (isBuildingSnapshot()) {\x0d\n    addSerializeCallback(() => {\x0d\n      process.removeListener(signal\x2C doWriteHeapSnapshot);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupTraceCategoryState() {\x0d\n  const { isTraceCategoryEnabled } = internalBinding('trace_events');\x0d\n  const { toggleTraceCategoryState } = require('internal/process/per_thread');\x0d\n  toggleTraceCategoryState(isTraceCategoryEnabled('node.async_hooks'));\x0d\n}\x0d\n\x0d\nfunction setupInspectorHooks() {\x0d\n  // If Debugger.setAsyncCallStackDepth is sent during bootstrap\x2C\x0d\n  // we cannot immediately call into JS to enable the hooks\x2C which could\x0d\n  // interrupt the JS execution of bootstrap. So instead we save the\x0d\n  // notification in the inspector agent if it's sent in the middle of\x0d\n  // bootstrap\x2C and process the notification later here.\x0d\n  if (internalBinding('config').hasInspector) {\x0d\n    const {\x0d\n      enable\x2C\x0d\n      disable\x2C\x0d\n    } = require('internal/inspector_async_hook');\x0d\n    internalBinding('inspector').registerAsyncHook(enable\x2C disable);\x0d\n  }\x0d\n}\x0d\n\x0d\n// In general deprecations are initialized wherever the APIs are implemented\x2C\x0d\n// this is used to deprecate APIs implemented in C++ where the deprecation\x0d\n// utilities are not easily accessible.\x0d\nfunction initializeDeprecations() {\x0d\n  const { deprecate } = require('internal/util');\x0d\n  const pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\n  // DEP0103: access to `process.binding('util').isX` type checkers\x0d\n  // TODO(addaleax): Turn into a full runtime deprecation.\x0d\n  const utilBinding = internalBinding('util');\x0d\n  const types = require('internal/util/types');\x0d\n  for (const name of [\x0d\n    'isArrayBuffer'\x2C\x0d\n    'isArrayBufferView'\x2C\x0d\n    'isAsyncFunction'\x2C\x0d\n    'isDataView'\x2C\x0d\n    'isDate'\x2C\x0d\n    'isExternal'\x2C\x0d\n    'isMap'\x2C\x0d\n    'isMapIterator'\x2C\x0d\n    'isNativeError'\x2C\x0d\n    'isPromise'\x2C\x0d\n    'isRegExp'\x2C\x0d\n    'isSet'\x2C\x0d\n    'isSetIterator'\x2C\x0d\n    'isTypedArray'\x2C\x0d\n    'isUint8Array'\x2C\x0d\n    'isAnyArrayBuffer'\x2C\x0d\n  ]) {\x0d\n    utilBinding[name] = pendingDeprecation ?\x0d\n      deprecate(types[name]\x2C\x0d\n                'Accessing native typechecking bindings of Node ' +\x0d\n                'directly is deprecated. ' +\x0d\n                `Please use \\`util.types.${name}\\` instead.`\x2C\x0d\n                'DEP0103') :\x0d\n      types[name];\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): this is a legacy property exposed to process.\x0d\n  // Now that we use the config binding to carry this information\x2C remove\x0d\n  // it from the process. We may consider exposing it properly in\x0d\n  // process.features.\x0d\n  const { noBrowserGlobals } = internalBinding('config');\x0d\n  if (noBrowserGlobals) {\x0d\n    ObjectDefineProperty(process\x2C '_noBrowserGlobals'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      writable: false\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: noBrowserGlobals\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (pendingDeprecation) {\x0d\n    process.binding = deprecate(process.binding\x2C\x0d\n                                'process.binding() is deprecated. ' +\x0d\n                                'Please use public APIs instead.'\x2C 'DEP0111');\x0d\n\x0d\n    process._tickCallback = deprecate(process._tickCallback\x2C\x0d\n                                      'process._tickCallback() is deprecated'\x2C\x0d\n                                      'DEP0134');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupChildProcessIpcChannel() {\x0d\n  if (process.env.NODE_CHANNEL_FD) {\x0d\n    const assert = require('internal/assert');\x0d\n\x0d\n    const fd = NumberParseInt(process.env.NODE_CHANNEL_FD\x2C 10);\x0d\n    assert(fd >= 0);\x0d\n\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_CHANNEL_FD;\x0d\n\x0d\n    const serializationMode =\x0d\n      process.env.NODE_CHANNEL_SERIALIZATION_MODE || 'json';\x0d\n    delete process.env.NODE_CHANNEL_SERIALIZATION_MODE;\x0d\n\x0d\n    require('child_process')._forkChild(fd\x2C serializationMode);\x0d\n    assert(process.send);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeClusterIPC() {\x0d\n  if (process.argv[1] && process.env.NODE_UNIQUE_ID) {\x0d\n    const cluster = require('cluster');\x0d\n    cluster._setupWorker();\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_UNIQUE_ID;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializePermission() {\x0d\n  const experimentalPermission = getOptionValue('--experimental-permission');\x0d\n  if (experimentalPermission) {\x0d\n    process.binding = function binding(_module) {\x0d\n      throw new ERR_ACCESS_DENIED('process.binding');\x0d\n    };\x0d\n    // Guarantee path module isn't monkey-patched to bypass permission model\x0d\n    ObjectFreeze(require('path'));\x0d\n    process.emitWarning('Permission is an experimental feature'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    const { has\x2C deny } = require('internal/process/permission');\x0d\n    const warnFlags = [\x0d\n      '--allow-addons'\x2C\x0d\n      '--allow-child-process'\x2C\x0d\n      '--allow-worker'\x2C\x0d\n    ];\x0d\n    for (const flag of warnFlags) {\x0d\n      if (getOptionValue(flag)) {\x0d\n        process.emitWarning(\x0d\n          `The flag ${flag} must be used with extreme caution. ` +\x0d\n        'It could invalidate the permission model.'\x2C 'SecurityWarning');\x0d\n      }\x0d\n    }\x0d\n    const warnCommaFlags = [\x0d\n      '--allow-fs-read'\x2C\x0d\n      '--allow-fs-write'\x2C\x0d\n    ];\x0d\n    for (const flag of warnCommaFlags) {\x0d\n      const value = getOptionValue(flag);\x0d\n      if (value.length === 1 && value[0].includes('\x2C')) {\x0d\n        process.emitWarning(\x0d\n          `The ${flag} CLI flag has changed. ` +\x0d\n        'Passing a comma-separated list of paths is no longer valid. ' +\x0d\n        'Documentation can be found at ' +\x0d\n        'https://nodejs.org/api/permissions.html#file-system-permissions'\x2C\x0d\n          'Warning'\x2C\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n\x0d\n    ObjectDefineProperty(process\x2C 'permission'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: false\x2C\x0d\n      value: {\x0d\n        has\x2C\x0d\n        deny\x2C\x0d\n      }\x2C\x0d\n    });\x0d\n  } else {\x0d\n    const availablePermissionFlags = [\x0d\n      '--allow-fs-read'\x2C\x0d\n      '--allow-fs-write'\x2C\x0d\n      '--allow-addons'\x2C\x0d\n      '--allow-child-process'\x2C\x0d\n      '--allow-worker'\x2C\x0d\n    ];\x0d\n    ArrayPrototypeForEach(availablePermissionFlags\x2C (flag) => {\x0d\n      const value = getOptionValue(flag);\x0d\n      if (value.length) {\x0d\n        throw new ERR_MISSING_OPTION('--experimental-permission');\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction readPolicyFromDisk() {\x0d\n  const experimentalPolicy = getOptionValue('--experimental-policy');\x0d\n  if (experimentalPolicy) {\x0d\n    process.emitWarning('Policies are experimental.'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    const { pathToFileURL\x2C URL } = require('internal/url');\x0d\n    // URL here as it is slightly different parsing\x0d\n    // no bare specifiers for now\x0d\n    let manifestURL;\x0d\n    if (require('path').isAbsolute(experimentalPolicy)) {\x0d\n      manifestURL = pathToFileURL(experimentalPolicy);\x0d\n    } else {\x0d\n      const cwdURL = pathToFileURL(process.cwd());\x0d\n      cwdURL.pathname += '/';\x0d\n      manifestURL = new URL(experimentalPolicy\x2C cwdURL);\x0d\n    }\x0d\n    const fs = require('fs');\x0d\n    const src = fs.readFileSync(manifestURL\x2C 'utf8');\x0d\n    const experimentalPolicyIntegrity = getOptionValue('--policy-integrity');\x0d\n    if (experimentalPolicyIntegrity) {\x0d\n      const SRI = require('internal/policy/sri');\x0d\n      const { createHash\x2C timingSafeEqual } = require('crypto');\x0d\n      const realIntegrities = new SafeMap();\x0d\n      const integrityEntries = SRI.parse(experimentalPolicyIntegrity);\x0d\n      let foundMatch = false;\x0d\n      for (let i = 0; i < integrityEntries.length; i++) {\x0d\n        const {\x0d\n          algorithm\x2C\x0d\n          value: expected\x2C\x0d\n        } = integrityEntries[i];\x0d\n        const hash = createHash(algorithm);\x0d\n        hash.update(src);\x0d\n        const digest = hash.digest();\x0d\n        if (digest.length === expected.length &&\x0d\n          timingSafeEqual(digest\x2C expected)) {\x0d\n          foundMatch = true;\x0d\n          break;\x0d\n        }\x0d\n        realIntegrities.set(algorithm\x2C digest.toString('base64'));\x0d\n      }\x0d\n      if (!foundMatch) {\x0d\n        throw new ERR_MANIFEST_ASSERT_INTEGRITY(manifestURL\x2C realIntegrities);\x0d\n      }\x0d\n    }\x0d\n    return {\x0d\n      manifestSrc: src\x2C manifestURL: manifestURL.href\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeCJSLoader() {\x0d\n  const { initializeCJS } = require('internal/modules/cjs/loader');\x0d\n  initializeCJS();\x0d\n}\x0d\n\x0d\nfunction initializeESMLoader(forceDefaultLoader) {\x0d\n  const { initializeESM } = require('internal/modules/esm/utils');\x0d\n  initializeESM(forceDefaultLoader);\x0d\n\x0d\n  // Patch the vm module when --experimental-vm-modules is on.\x0d\n  // Please update the comments in vm.js when this block changes.\x0d\n  if (getOptionValue('--experimental-vm-modules')) {\x0d\n    const {\x0d\n      Module\x2C SourceTextModule\x2C SyntheticModule\x2C\x0d\n    } = require('internal/vm/module');\x0d\n    const vm = require('vm');\x0d\n    vm.Module = Module;\x0d\n    vm.SourceTextModule = SourceTextModule;\x0d\n    vm.SyntheticModule = SyntheticModule;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeSourceMapsHandlers() {\x0d\n  const {\x0d\n    setSourceMapsEnabled\x2C\x0d\n  } = require('internal/source_map/source_map_cache');\x0d\n  setSourceMapsEnabled(getOptionValue('--enable-source-maps'));\x0d\n}\x0d\n\x0d\nfunction initializeFrozenIntrinsics() {\x0d\n  if (getOptionValue('--frozen-intrinsics')) {\x0d\n    process.emitWarning('The --frozen-intrinsics flag is experimental'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    require('internal/freeze_intrinsics')();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction loadPreloadModules() {\x0d\n  // For user code\x2C we preload modules if `-r` is passed\x0d\n  const preloadModules = getOptionValue('--require');\x0d\n  if (preloadModules && preloadModules.length > 0) {\x0d\n    const {\x0d\n      Module: {\x0d\n        _preloadModules\x2C\x0d\n      }\x2C\x0d\n    } = require('internal/modules/cjs/loader');\x0d\n    _preloadModules(preloadModules);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction markBootstrapComplete() {\x0d\n  internalBinding('performance').markBootstrapComplete();\x0d\n}\x0d\n\x0d\n// Sequence number for diagnostic filenames\x0d\nlet sequenceNumOfheapSnapshot = 0;\x0d\n\x0d\n// To generate the HeapSnapshotFilename while using custom diagnosticDir\x0d\nfunction getHeapSnapshotFilename(diagnosticDir) {\x0d\n  if (!diagnosticDir) return undefined;\x0d\n\x0d\n  const date = new Date();\x0d\n\x0d\n  const year = DatePrototypeGetFullYear(date);\x0d\n  const month = String(DatePrototypeGetMonth(date) + 1).padStart(2\x2C '0');\x0d\n  const day = String(DatePrototypeGetDate(date)).padStart(2\x2C '0');\x0d\n  const hours = String(DatePrototypeGetHours(date)).padStart(2\x2C '0');\x0d\n  const minutes = String(DatePrototypeGetMinutes(date)).padStart(2\x2C '0');\x0d\n  const seconds = String(DatePrototypeGetSeconds(date)).padStart(2\x2C '0');\x0d\n\x0d\n  const dateString = `${year}${month}${day}`;\x0d\n  const timeString = `${hours}${minutes}${seconds}`;\x0d\n  const pid = process.pid;\x0d\n  const threadId = internalBinding('worker').threadId;\x0d\n  const fileSequence = (++sequenceNumOfheapSnapshot).toString().padStart(3\x2C '0');\x0d\n\x0d\n  return `${diagnosticDir}/Heap.${dateString}.${timeString}.${pid}.${threadId}.${fileSequence}.heapsnapshot`;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  setupUserModules\x2C\x0d\n  prepareMainThreadExecution\x2C\x0d\n  prepareWorkerThreadExecution\x2C\x0d\n  prepareShadowRealmExecution\x2C\x0d\n  markBootstrapComplete\x2C\x0d\n  loadPreloadModules\x2C\x0d\n  initializeFrozenIntrinsics\x2C\x0d\n};\x0d\n
code-source-info,0x125aa7816fc,67,1149,1304,C20O1202C30O1233C36O1251C40O1209C44O1301,,
code-creation,JS,10,97079,0x125aa78333c,313,prepareExecution node:internal/process/pre_execution:97:26,0x1d9b727eef8,~
code-source-info,0x125aa78333c
code-creation,JS,10,97173,0x125aa783634,10,refreshRuntimeOptions node:internal/process/pre_execution:210:31,0x1d9b727f000,~
code-source-info,0x125aa783634,67,6339,6367,C0O6347C5O6347C9O6366,,
code-creation,JS,10,97208,0x125aa78371c,22,refreshOptions node:internal/options:39:24,0x1d9b7247880,~
script-source,17,node:internal/options,'use strict';\x0d\n\x0d\nconst {\x0d\n  getCLIOptions\x2C\x0d\n  getEmbedderOptions: getEmbedderOptionsFromBinding\x2C\x0d\n} = internalBinding('options');\x0d\n\x0d\nlet warnOnAllowUnauthorized = true;\x0d\n\x0d\nlet optionsMap;\x0d\nlet aliasesMap;\x0d\nlet embedderOptions;\x0d\n\x0d\n// getCLIOptions() would serialize the option values from C++ land.\x0d\n// It would error if the values are queried before bootstrap is\x0d\n// complete so that we don't accidentally include runtime-dependent\x0d\n// states into a runtime-independent snapshot.\x0d\nfunction getCLIOptionsFromBinding() {\x0d\n  if (!optionsMap) {\x0d\n    ({ options: optionsMap } = getCLIOptions());\x0d\n  }\x0d\n  return optionsMap;\x0d\n}\x0d\n\x0d\nfunction getAliasesFromBinding() {\x0d\n  if (!aliasesMap) {\x0d\n    ({ aliases: aliasesMap } = getCLIOptions());\x0d\n  }\x0d\n  return aliasesMap;\x0d\n}\x0d\n\x0d\nfunction getEmbedderOptions() {\x0d\n  if (!embedderOptions) {\x0d\n    embedderOptions = getEmbedderOptionsFromBinding();\x0d\n  }\x0d\n  return embedderOptions;\x0d\n}\x0d\n\x0d\nfunction refreshOptions() {\x0d\n  optionsMap = undefined;\x0d\n  aliasesMap = undefined;\x0d\n}\x0d\n\x0d\nfunction getOptionValue(optionName) {\x0d\n  const options = getCLIOptionsFromBinding();\x0d\n  if (optionName.startsWith('--no-')) {\x0d\n    const option = options.get('--' + optionName.slice(5));\x0d\n    return option && !option.value;\x0d\n  }\x0d\n  return options.get(optionName)?.value;\x0d\n}\x0d\n\x0d\nfunction getAllowUnauthorized() {\x0d\n  const allowUnauthorized = process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0';\x0d\n\x0d\n  if (allowUnauthorized && warnOnAllowUnauthorized) {\x0d\n    warnOnAllowUnauthorized = false;\x0d\n    process.emitWarning(\x0d\n      'Setting the NODE_TLS_REJECT_UNAUTHORIZED ' +\x0d\n      'environment variable to \\'0\\' makes TLS connections ' +\x0d\n      'and HTTPS requests insecure by disabling ' +\x0d\n      'certificate verification.');\x0d\n  }\x0d\n  return allowUnauthorized;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  get options() {\x0d\n    return getCLIOptionsFromBinding();\x0d\n  }\x2C\x0d\n  get aliases() {\x0d\n    return getAliasesFromBinding();\x0d\n  }\x2C\x0d\n  getOptionValue\x2C\x0d\n  getAllowUnauthorized\x2C\x0d\n  getEmbedderOptions\x2C\x0d\n  refreshOptions\x2C\x0d\n};\x0d\n
code-source-info,0x125aa78371c,17,940,1001,C0O948C4O959C10O975C14O986C21O1000,,
code-creation,JS,10,97377,0x125aa783a84,19,reconnectZeroFillToggle node:internal/buffer:1083:33,0x1d9b7259468,~
script-source,25,node:internal/buffer,'use strict';\x0d\n\x0d\nconst {\x0d\n  BigInt\x2C\x0d\n  Float32Array\x2C\x0d\n  Float64Array\x2C\x0d\n  MathFloor\x2C\x0d\n  Number\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { validateNumber } = require('internal/validators');\x0d\nconst {\x0d\n  asciiSlice\x2C\x0d\n  base64Slice\x2C\x0d\n  base64urlSlice\x2C\x0d\n  latin1Slice\x2C\x0d\n  hexSlice\x2C\x0d\n  ucs2Slice\x2C\x0d\n  utf8Slice\x2C\x0d\n  asciiWrite\x2C\x0d\n  base64Write\x2C\x0d\n  base64urlWrite\x2C\x0d\n  latin1Write\x2C\x0d\n  hexWrite\x2C\x0d\n  ucs2Write\x2C\x0d\n  utf8Write\x2C\x0d\n  getZeroFillToggle\x2C\x0d\n} = internalBinding('buffer');\x0d\n\x0d\nconst {\x0d\n  privateSymbols: {\x0d\n    untransferable_object_private_symbol\x2C\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\n\x0d\n// Temporary buffers to convert numbers.\x0d\nconst float32Array = new Float32Array(1);\x0d\nconst uInt8Float32Array = new Uint8Array(float32Array.buffer);\x0d\nconst float64Array = new Float64Array(1);\x0d\nconst uInt8Float64Array = new Uint8Array(float64Array.buffer);\x0d\n\x0d\n// Check endianness.\x0d\nfloat32Array[0] = -1; // 0xBF800000\x0d\n// Either it is [0\x2C 0\x2C 128\x2C 191] or [191\x2C 128\x2C 0\x2C 0]. It is not possible to\x0d\n// check this with `os.endianness()` because that is determined at compile time.\x0d\nconst bigEndian = uInt8Float32Array[3] === 0;\x0d\n\x0d\nfunction checkBounds(buf\x2C offset\x2C byteLength) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined)\x0d\n    boundsError(offset\x2C buf.length - (byteLength + 1));\x0d\n}\x0d\n\x0d\nfunction checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C byteLength) {\x0d\n  if (value > max || value < min) {\x0d\n    const n = typeof min === 'bigint' ? 'n' : '';\x0d\n    let range;\x0d\n    if (byteLength > 3) {\x0d\n      if (min === 0 || min === 0n) {\x0d\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\x0d\n      } else {\x0d\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and ` +\x0d\n                `< 2${n} ** ${(byteLength + 1) * 8 - 1}${n}`;\x0d\n      }\x0d\n    } else {\x0d\n      range = `>= ${min}${n} and <= ${max}${n}`;\x0d\n    }\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C range\x2C value);\x0d\n  }\x0d\n  checkBounds(buf\x2C offset\x2C byteLength);\x0d\n}\x0d\n\x0d\nfunction boundsError(value\x2C length\x2C type) {\x0d\n  if (MathFloor(value) !== value) {\x0d\n    validateNumber(value\x2C type);\x0d\n    throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C 'an integer'\x2C value);\x0d\n  }\x0d\n\x0d\n  if (length < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n  throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C\x0d\n                             `>= ${type ? 1 : 0} and <= ${length}`\x2C\x0d\n                             value);\x0d\n}\x0d\n\x0d\n// Read integers.\x0d\nfunction readBigUInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const lo = first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24;\x0d\n\x0d\n  const hi = this[++offset] +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n\x0d\n  return BigInt(lo) + (BigInt(hi) << 32n);\x0d\n}\x0d\n\x0d\nfunction readBigUInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const hi = first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n\x0d\n  const lo = this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n\x0d\n  return (BigInt(hi) << 32n) + BigInt(lo);\x0d\n}\x0d\n\x0d\nfunction readBigInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = this[offset + 4] +\x0d\n    this[offset + 5] * 2 ** 8 +\x0d\n    this[offset + 6] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24);\x0d\n}\x0d\n\x0d\nfunction readBigInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last);\x0d\n}\x0d\n\x0d\nfunction readUIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    (buf[++offset] + last * 2 ** 8) * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    last * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readUInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n}\x0d\n\x0d\nfunction readUInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first + last * 2 ** 8;\x0d\n}\x0d\n\x0d\nfunction readUInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val;\x0d\n}\x0d\n\x0d\nfunction readUIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return (first * 2 ** 8 + buf[++offset]) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readUInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[offset + 4] + last * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (last | (last & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n}\x0d\n\x0d\nfunction readInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first + last * 2 ** 8;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\nfunction readInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val | (val & 2 ** 7) * 0x1fffffe;\x0d\n}\x0d\n\x0d\nfunction readIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[++offset] + first * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (first | (first & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\n// Read floats\x0d\nfunction readFloatBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[3] = first;\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[0] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readFloatForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[0] = first;\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[3] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[7] = first;\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[0] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[0] = first;\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[7] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\n// Write integers.\x0d\nfunction writeBigU_Int64LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigU_Int64BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset + 7] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 6] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 5] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 4] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset + 3] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 2] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 1] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset] = hi;\x0d\n  return offset + 8;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeUIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  const newVal = value;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = MathFloor(newVal * 2 ** -32);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int8(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  // `checkInt()` can not be used here because it checks two entries.\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (value > max || value < min) {\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C `>= ${min} and <= ${max}`\x2C value);\x0d\n  }\x0d\n  if (buf[offset] === undefined)\x0d\n    boundsError(offset\x2C buf.length - 1);\x0d\n\x0d\n  buf[offset] = value;\x0d\n  return offset + 1;\x0d\n}\x0d\n\x0d\nfunction writeUInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n}\x0d\n\x0d\nfunction writeUIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  buf[offset++] = MathFloor(value * 2 ** -32);\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeUInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 3;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\nfunction writeInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n}\x0d\n\x0d\nfunction writeIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\n// Write floats.\x0d\nfunction writeDoubleForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeDoubleBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nclass FastBuffer extends Uint8Array {\x0d\n  // Using an explicit constructor here is necessary to avoid relying on\x0d\n  // `Array.prototype[Symbol.iterator]`\x2C which can be mutated by users.\x0d\n  // eslint-disable-next-line no-useless-constructor\x0d\n  constructor(bufferOrLength\x2C byteOffset\x2C length) {\x0d\n    super(bufferOrLength\x2C byteOffset\x2C length);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addBufferPrototypeMethods(proto) {\x0d\n  proto.readBigUInt64LE = readBigUInt64LE;\x0d\n  proto.readBigUInt64BE = readBigUInt64BE;\x0d\n  proto.readBigUint64LE = readBigUInt64LE;\x0d\n  proto.readBigUint64BE = readBigUInt64BE;\x0d\n  proto.readBigInt64LE = readBigInt64LE;\x0d\n  proto.readBigInt64BE = readBigInt64BE;\x0d\n  proto.writeBigUInt64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUInt64BE = writeBigUInt64BE;\x0d\n  proto.writeBigUint64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUint64BE = writeBigUInt64BE;\x0d\n  proto.writeBigInt64LE = writeBigInt64LE;\x0d\n  proto.writeBigInt64BE = writeBigInt64BE;\x0d\n\x0d\n  proto.readUIntLE = readUIntLE;\x0d\n  proto.readUInt32LE = readUInt32LE;\x0d\n  proto.readUInt16LE = readUInt16LE;\x0d\n  proto.readUInt8 = readUInt8;\x0d\n  proto.readUIntBE = readUIntBE;\x0d\n  proto.readUInt32BE = readUInt32BE;\x0d\n  proto.readUInt16BE = readUInt16BE;\x0d\n  proto.readUintLE = readUIntLE;\x0d\n  proto.readUint32LE = readUInt32LE;\x0d\n  proto.readUint16LE = readUInt16LE;\x0d\n  proto.readUint8 = readUInt8;\x0d\n  proto.readUintBE = readUIntBE;\x0d\n  proto.readUint32BE = readUInt32BE;\x0d\n  proto.readUint16BE = readUInt16BE;\x0d\n  proto.readIntLE = readIntLE;\x0d\n  proto.readInt32LE = readInt32LE;\x0d\n  proto.readInt16LE = readInt16LE;\x0d\n  proto.readInt8 = readInt8;\x0d\n  proto.readIntBE = readIntBE;\x0d\n  proto.readInt32BE = readInt32BE;\x0d\n  proto.readInt16BE = readInt16BE;\x0d\n\x0d\n  proto.writeUIntLE = writeUIntLE;\x0d\n  proto.writeUInt32LE = writeUInt32LE;\x0d\n  proto.writeUInt16LE = writeUInt16LE;\x0d\n  proto.writeUInt8 = writeUInt8;\x0d\n  proto.writeUIntBE = writeUIntBE;\x0d\n  proto.writeUInt32BE = writeUInt32BE;\x0d\n  proto.writeUInt16BE = writeUInt16BE;\x0d\n  proto.writeUintLE = writeUIntLE;\x0d\n  proto.writeUint32LE = writeUInt32LE;\x0d\n  proto.writeUint16LE = writeUInt16LE;\x0d\n  proto.writeUint8 = writeUInt8;\x0d\n  proto.writeUintBE = writeUIntBE;\x0d\n  proto.writeUint32BE = writeUInt32BE;\x0d\n  proto.writeUint16BE = writeUInt16BE;\x0d\n  proto.writeIntLE = writeIntLE;\x0d\n  proto.writeInt32LE = writeInt32LE;\x0d\n  proto.writeInt16LE = writeInt16LE;\x0d\n  proto.writeInt8 = writeInt8;\x0d\n  proto.writeIntBE = writeIntBE;\x0d\n  proto.writeInt32BE = writeInt32BE;\x0d\n  proto.writeInt16BE = writeInt16BE;\x0d\n\x0d\n  proto.readFloatLE = bigEndian ? readFloatBackwards : readFloatForwards;\x0d\n  proto.readFloatBE = bigEndian ? readFloatForwards : readFloatBackwards;\x0d\n  proto.readDoubleLE = bigEndian ? readDoubleBackwards : readDoubleForwards;\x0d\n  proto.readDoubleBE = bigEndian ? readDoubleForwards : readDoubleBackwards;\x0d\n  proto.writeFloatLE = bigEndian ? writeFloatBackwards : writeFloatForwards;\x0d\n  proto.writeFloatBE = bigEndian ? writeFloatForwards : writeFloatBackwards;\x0d\n  proto.writeDoubleLE = bigEndian ? writeDoubleBackwards : writeDoubleForwards;\x0d\n  proto.writeDoubleBE = bigEndian ? writeDoubleForwards : writeDoubleBackwards;\x0d\n\x0d\n  proto.asciiSlice = asciiSlice;\x0d\n  proto.base64Slice = base64Slice;\x0d\n  proto.base64urlSlice = base64urlSlice;\x0d\n  proto.latin1Slice = latin1Slice;\x0d\n  proto.hexSlice = hexSlice;\x0d\n  proto.ucs2Slice = ucs2Slice;\x0d\n  proto.utf8Slice = utf8Slice;\x0d\n  proto.asciiWrite = asciiWrite;\x0d\n  proto.base64Write = base64Write;\x0d\n  proto.base64urlWrite = base64urlWrite;\x0d\n  proto.latin1Write = latin1Write;\x0d\n  proto.hexWrite = hexWrite;\x0d\n  proto.ucs2Write = ucs2Write;\x0d\n  proto.utf8Write = utf8Write;\x0d\n}\x0d\n\x0d\n// This would better be placed in internal/worker/io.js\x2C but that doesn't work\x0d\n// because Buffer needs this and that would introduce a cyclic dependency.\x0d\nfunction markAsUntransferable(obj) {\x0d\n  if ((typeof obj !== 'object' && typeof obj !== 'function') || obj === null)\x0d\n    return;  // This object is a primitive and therefore already untransferable.\x0d\n  obj[untransferable_object_private_symbol] = true;\x0d\n}\x0d\n\x0d\n// This simply checks if the object is marked as untransferable and doesn't\x0d\n// check whether we are able to transfer it.\x0d\nfunction isMarkedAsUntransferable(obj) {\x0d\n  if (obj == null)\x0d\n    return false;\x0d\n  // Private symbols are not inherited.\x0d\n  return obj[untransferable_object_private_symbol] !== undefined;\x0d\n}\x0d\n\x0d\n// A toggle used to access the zero fill setting of the array buffer allocator\x0d\n// in C++.\x0d\n// |zeroFill| can be undefined when running inside an isolate where we\x0d\n// do not own the ArrayBuffer allocator.  Zero fill is always on in that case.\x0d\nlet zeroFill = getZeroFillToggle();\x0d\nfunction createUnsafeBuffer(size) {\x0d\n  zeroFill[0] = 0;\x0d\n  try {\x0d\n    return new FastBuffer(size);\x0d\n  } finally {\x0d\n    zeroFill[0] = 1;\x0d\n  }\x0d\n}\x0d\n\x0d\n// The connection between the JS land zero fill toggle and the\x0d\n// C++ one in the NodeArrayBufferAllocator gets lost if the toggle\x0d\n// is deserialized from the snapshot\x2C because V8 owns the underlying\x0d\n// memory of this toggle. This resets the connection.\x0d\nfunction reconnectZeroFillToggle() {\x0d\n  zeroFill = getZeroFillToggle();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  FastBuffer\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  isMarkedAsUntransferable\x2C\x0d\n  createUnsafeBuffer\x2C\x0d\n  readUInt16BE\x2C\x0d\n  readUInt32BE\x2C\x0d\n  reconnectZeroFillToggle\x2C\x0d\n};\x0d\n
code-source-info,0x125aa783a84,25,32104,32146,C0O32112C5O32123C11O32121C18O32145,,
code-creation,JS,10,98882,0x125aa78632c,442,patchProcessObject node:internal/process/pre_execution:221:28,0x1d9b727f058,~
code-source-info,0x125aa78632c
code-creation,JS,10,99037,0x125aa7867f4,132,set node:internal/bootstrap/node:116:8,0xa4fec3ea58,~
script-source,12,node:internal/bootstrap/node,// Hello\x2C and welcome to hacking node.js!\x0d\n//\x0d\n// This file is invoked by `Realm::BootstrapRealm()` in `src/node_realm.cc`\x2C\x0d\n// and is responsible for setting up Node.js core before main scripts\x0d\n// under `lib/internal/main/` are executed.\x0d\n//\x0d\n// By default\x2C Node.js binaries come with an embedded V8 startup snapshot\x0d\n// that is generated at build-time with a `node_mksnapshot` executable.\x0d\n// The snapshot generation code can be found in `SnapshotBuilder::Generate()`\x0d\n// from `src/node_snapshotable.cc`.\x0d\n// This snapshot captures the V8 heap initialized by scripts under\x0d\n// `lib/internal/bootstrap/`\x2C including this file. When initializing the main\x0d\n// thread\x2C Node.js deserializes the heap from the snapshot\x2C instead of actually\x0d\n// running this script and others in `lib/internal/bootstrap/`. To disable this\x0d\n// behavior\x2C pass `--no-node-snapshot` when starting the process so that\x0d\n// Node.js actually runs this script to initialize the heap.\x0d\n//\x0d\n// This script is expected not to perform any asynchronous operations itself\x0d\n// when being executed - those should be done in either\x0d\n// `lib/internal/process/pre_execution.js` or in main scripts. It should not\x0d\n// query any run-time states (e.g. command line arguments\x2C environment\x0d\n// variables) when being executed - functions in this script that are invoked\x0d\n// at a later time can\x2C however\x2C query those states lazily.\x0d\n// The majority of the code here focuses on setting up the global object and\x0d\n// the process object in a synchronous\x2C environment-independent manner.\x0d\n//\x0d\n// Scripts run before this file:\x0d\n// - `lib/internal/per_context/primordials.js`: this saves copies of JavaScript\x0d\n//   builtins that won't be affected by user land monkey-patching for internal\x0d\n//   modules to use.\x0d\n// - `lib/internal/per_context/domexception.js`: implementation of the\x0d\n//   `DOMException` class.\x0d\n// - `lib/internal/per_context/messageport.js`: JS-side components of the\x0d\n//   `MessagePort` implementation.\x0d\n// - `lib/internal/bootstrap/realm.js`: this sets up internal binding and\x0d\n//   module loaders\x2C including `process.binding()`\x2C `process._linkedBinding()`\x2C\x0d\n//   `internalBinding()` and `BuiltinModule`\x2C and per-realm internal states\x0d\n//   and bindings\x2C including `prepare_stack_trace_callback`.\x0d\n//\x0d\n// The initialization done in this script is included in both the main thread\x0d\n// and the worker threads. After this\x2C further initialization is done based\x0d\n// on the configuration of the Node.js instance by executing the scripts in\x0d\n// `lib/internal/bootstrap/switches/`.\x0d\n//\x0d\n// Then\x2C depending on how the Node.js instance is launched\x2C one of the main\x0d\n// scripts in `lib/internal/main` will be selected by C++ to start the actual\x0d\n// execution. They may run additional setups exported by\x0d\n// `lib/internal/process/pre_execution.js` depending on the run-time states.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by `BuiltinLoader::CompileAndCall()`.\x0d\n/* global process\x2C require\x2C internalBinding\x2C primordials */\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeCall\x2C\x0d\n  JSONParse\x2C\x0d\n  Number\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\nconst config = internalBinding('config');\x0d\nconst internalTimers = require('internal/timers');\x0d\nconst {\x0d\n  defineOperation\x2C\x0d\n  deprecate\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  validateInteger\x2C\x0d\n} = require('internal/validators');\x0d\nconst {\x0d\n  constants: {\x0d\n    kExitCode\x2C\x0d\n    kExiting\x2C\x0d\n    kHasExitCode\x2C\x0d\n  }\x2C\x0d\n  privateSymbols: {\x0d\n    exit_info_private_symbol\x2C\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\n\x0d\nsetupProcessObject();\x0d\n\x0d\nsetupGlobalProxy();\x0d\nsetupBuffer();\x0d\n\x0d\nprocess.domain = null;\x0d\n\x0d\n// process._exiting and process.exitCode\x0d\n{\x0d\n  const fields = process[exit_info_private_symbol];\x0d\n  ObjectDefineProperty(process\x2C '_exiting'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return fields[kExiting] === 1;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      fields[kExiting] = value ? 1 : 0;\x0d\n    }\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n\x0d\n  let exitCode;\x0d\n  ObjectDefineProperty(process\x2C 'exitCode'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return exitCode;\x0d\n    }\x2C\x0d\n    set(code) {\x0d\n      if (code !== null && code !== undefined) {\x0d\n        let value = code;\x0d\n        if (typeof code === 'string' && code !== '' &&\x0d\n          NumberIsNaN((value = Number(code)))) {\x0d\n          value = code;\x0d\n        }\x0d\n        validateInteger(value\x2C 'code');\x0d\n        fields[kExitCode] = value;\x0d\n        fields[kHasExitCode] = 1;\x0d\n      } else {\x0d\n        fields[kHasExitCode] = 0;\x0d\n      }\x0d\n      exitCode = code;\x0d\n    }\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: false\x2C\x0d\n  });\x0d\n}\x0d\nprocess._exiting = false;\x0d\n\x0d\n// process.config is serialized config.gypi\x0d\nconst binding = internalBinding('builtins');\x0d\n\x0d\nconst processConfig = JSONParse(binding.config\x2C (_key\x2C value) => {\x0d\n  // The `reviver` argument of the JSONParse method will visit all the values of\x0d\n  // the parsed config\x2C including the "root" object\x2C so there is no need to\x0d\n  // explicitly freeze the config outside of this method\x0d\n  return ObjectFreeze(value);\x0d\n});\x0d\n\x0d\nObjectDefineProperty(process\x2C 'config'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  configurable: true\x2C\x0d\n  value: processConfig\x2C\x0d\n});\x0d\n\x0d\nrequire('internal/worker/js_transferable').setup();\x0d\n\x0d\n// Bootstrappers for all threads\x2C including worker threads and main thread\x0d\nconst perThreadSetup = require('internal/process/per_thread');\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\n\x0d\n// Set up methods on the process object for all threads\x0d\n{\x0d\n  process.dlopen = rawMethods.dlopen;\x0d\n  process.uptime = rawMethods.uptime;\x0d\n\x0d\n  // TODO(joyeecheung): either remove them or make them public\x0d\n  process._getActiveRequests = rawMethods._getActiveRequests;\x0d\n  process._getActiveHandles = rawMethods._getActiveHandles;\x0d\n  process.getActiveResourcesInfo = rawMethods.getActiveResourcesInfo;\x0d\n\x0d\n  // TODO(joyeecheung): remove these\x0d\n  process.reallyExit = rawMethods.reallyExit;\x0d\n  process._kill = rawMethods._kill;\x0d\n\x0d\n  const wrapped = perThreadSetup.wrapProcessMethods(rawMethods);\x0d\n  process.loadEnvFile = wrapped.loadEnvFile;\x0d\n  process._rawDebug = wrapped._rawDebug;\x0d\n  process.cpuUsage = wrapped.cpuUsage;\x0d\n  process.resourceUsage = wrapped.resourceUsage;\x0d\n  process.memoryUsage = wrapped.memoryUsage;\x0d\n  process.constrainedMemory = rawMethods.constrainedMemory;\x0d\n  process.kill = wrapped.kill;\x0d\n  process.exit = wrapped.exit;\x0d\n\x0d\n  process.hrtime = perThreadSetup.hrtime;\x0d\n  process.hrtime.bigint = perThreadSetup.hrtimeBigInt;\x0d\n\x0d\n  process.openStdin = function() {\x0d\n    process.stdin.resume();\x0d\n    return process.stdin;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst credentials = internalBinding('credentials');\x0d\nif (credentials.implementsPosixCredentials) {\x0d\n  process.getuid = credentials.getuid;\x0d\n  process.geteuid = credentials.geteuid;\x0d\n  process.getgid = credentials.getgid;\x0d\n  process.getegid = credentials.getegid;\x0d\n  process.getgroups = credentials.getgroups;\x0d\n}\x0d\n\x0d\n// Setup the callbacks that node::AsyncWrap will call when there are hooks to\x0d\n// process. They use the same functions as the JS embedder API. These callbacks\x0d\n// are setup immediately to prevent async_wrap.setupHooks() from being hijacked\x0d\n// and the cost of doing so is negligible.\x0d\nconst { nativeHooks } = require('internal/async_hooks');\x0d\ninternalBinding('async_wrap').setupHooks(nativeHooks);\x0d\n\x0d\nconst {\x0d\n  setupTaskQueue\x2C\x0d\n} = require('internal/process/task_queues');\x0d\nconst timers = require('timers');\x0d\n// Non-standard extensions:\x0d\ndefineOperation(globalThis\x2C 'clearImmediate'\x2C timers.clearImmediate);\x0d\ndefineOperation(globalThis\x2C 'setImmediate'\x2C timers.setImmediate);\x0d\n\x0d\n// Set the per-Environment callback that will be called\x0d\n// when the TrackingTraceStateObserver updates trace state.\x0d\n// Note that when NODE_USE_V8_PLATFORM is true\x2C the observer is\x0d\n// attached to the per-process TracingController.\x0d\nconst { setTraceCategoryStateUpdateHandler } = internalBinding('trace_events');\x0d\nsetTraceCategoryStateUpdateHandler(perThreadSetup.toggleTraceCategoryState);\x0d\n\x0d\n// process.allowedNodeEnvironmentFlags\x0d\nObjectDefineProperty(process\x2C 'allowedNodeEnvironmentFlags'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    const flags = perThreadSetup.buildAllowedFlags();\x0d\n    process.allowedNodeEnvironmentFlags = flags;\x0d\n    return process.allowedNodeEnvironmentFlags;\x0d\n  }\x2C\x0d\n  // If the user tries to set this to another value\x2C override\x0d\n  // this completely to that value.\x0d\n  set(value) {\x0d\n    ObjectDefineProperty(this\x2C 'allowedNodeEnvironmentFlags'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      writable: true\x2C\x0d\n    });\x0d\n  }\x2C\x0d\n  enumerable: true\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\n// process.assert\x0d\nprocess.assert = deprecate(\x0d\n  perThreadSetup.assert\x2C\x0d\n  'process.assert() is deprecated. Please use the `assert` module instead.'\x2C\x0d\n  'DEP0100');\x0d\n\x0d\n// TODO(joyeecheung): this property has not been well-maintained\x2C should we\x0d\n// deprecate it in favor of a better API?\x0d\nconst { isDebugBuild\x2C hasOpenSSL\x2C hasInspector } = config;\x0d\nconst features = {\x0d\n  inspector: hasInspector\x2C\x0d\n  debug: isDebugBuild\x2C\x0d\n  uv: true\x2C\x0d\n  ipv6: true\x2C  // TODO(bnoordhuis) ping libuv\x0d\n  tls_alpn: hasOpenSSL\x2C\x0d\n  tls_sni: hasOpenSSL\x2C\x0d\n  tls_ocsp: hasOpenSSL\x2C\x0d\n  tls: hasOpenSSL\x2C\x0d\n  // This needs to be dynamic because --no-node-snapshot disables the\x0d\n  // code cache even if the binary is built with embedded code cache.\x0d\n  get cached_builtins() {\x0d\n    return binding.hasCachedBuiltins();\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nObjectDefineProperty(process\x2C 'features'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x2C\x0d\n  configurable: false\x2C\x0d\n  value: features\x2C\x0d\n});\x0d\n\x0d\n{\x0d\n  const {\x0d\n    onGlobalUncaughtException\x2C\x0d\n    setUncaughtExceptionCaptureCallback\x2C\x0d\n    hasUncaughtExceptionCaptureCallback\x2C\x0d\n  } = require('internal/process/execution');\x0d\n\x0d\n  // For legacy reasons this is still called `_fatalException`\x2C even\x0d\n  // though it is now a global uncaught exception handler.\x0d\n  // The C++ land node::errors::TriggerUncaughtException grabs it\x0d\n  // from the process object because it has been monkey-patchable.\x0d\n  // TODO(joyeecheung): investigate whether process._fatalException\x0d\n  // can be deprecated.\x0d\n  process._fatalException = onGlobalUncaughtException;\x0d\n  process.setUncaughtExceptionCaptureCallback =\x0d\n    setUncaughtExceptionCaptureCallback;\x0d\n  process.hasUncaughtExceptionCaptureCallback =\x0d\n    hasUncaughtExceptionCaptureCallback;\x0d\n}\x0d\n\x0d\nconst { emitWarning } = require('internal/process/warning');\x0d\nprocess.emitWarning = emitWarning;\x0d\n\x0d\n// We initialize the tick callbacks and the timer callbacks last during\x0d\n// bootstrap to make sure that any operation done before this are synchronous.\x0d\n// If any ticks or timers are scheduled before this they are unlikely to work.\x0d\n{\x0d\n  const { nextTick\x2C runNextTicks } = setupTaskQueue();\x0d\n  process.nextTick = nextTick;\x0d\n  // Used to emulate a tick manually in the JS land.\x0d\n  // A better name for this function would be `runNextTicks` but\x0d\n  // it has been exposed to the process object so we keep this legacy name\x0d\n  // TODO(joyeecheung): either remove it or make it public\x0d\n  process._tickCallback = runNextTicks;\x0d\n\x0d\n  const { setupTimers } = internalBinding('timers');\x0d\n  const {\x0d\n    processImmediate\x2C\x0d\n    processTimers\x2C\x0d\n  } = internalTimers.getTimerCallbacks(runNextTicks);\x0d\n  // Sets two per-Environment callbacks that will be run from libuv:\x0d\n  // - processImmediate will be run in the callback of the per-Environment\x0d\n  //   check handle.\x0d\n  // - processTimers will be run in the callback of the per-Environment timer.\x0d\n  setupTimers(processImmediate\x2C processTimers);\x0d\n  // Note: only after this point are the timers effective\x0d\n}\x0d\n\x0d\n{\x0d\n  const {\x0d\n    getSourceMapsEnabled\x2C\x0d\n    setSourceMapsEnabled\x2C\x0d\n    maybeCacheGeneratedSourceMap\x2C\x0d\n  } = require('internal/source_map/source_map_cache');\x0d\n  const {\x0d\n    setMaybeCacheGeneratedSourceMap\x2C\x0d\n  } = internalBinding('errors');\x0d\n\x0d\n  ObjectDefineProperty(process\x2C 'sourceMapsEnabled'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    get() {\x0d\n      return getSourceMapsEnabled();\x0d\n    }\x2C\x0d\n  });\x0d\n  process.setSourceMapsEnabled = setSourceMapsEnabled;\x0d\n  // The C++ land calls back to maybeCacheGeneratedSourceMap()\x0d\n  // when code is generated by user with eval() or new Function()\x0d\n  // to cache the source maps from the evaluated code\x2C if any.\x0d\n  setMaybeCacheGeneratedSourceMap(maybeCacheGeneratedSourceMap);\x0d\n}\x0d\n\x0d\nfunction setupProcessObject() {\x0d\n  const EventEmitter = require('events');\x0d\n  const origProcProto = ObjectGetPrototypeOf(process);\x0d\n  ObjectSetPrototypeOf(origProcProto\x2C EventEmitter.prototype);\x0d\n  FunctionPrototypeCall(EventEmitter\x2C process);\x0d\n  ObjectDefineProperty(process\x2C SymbolToStringTag\x2C {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: false\x2C\x0d\n    value: 'process'\x2C\x0d\n  });\x0d\n\x0d\n  // Create global.process as getters so that we have a\x0d\n  // deprecation path for these in ES Modules.\x0d\n  // See https://github.com/nodejs/node/pull/26334.\x0d\n  let _process = process;\x0d\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return _process;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _process = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupGlobalProxy() {\x0d\n  ObjectDefineProperty(globalThis\x2C SymbolToStringTag\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: 'global'\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n  globalThis.global = globalThis;\x0d\n}\x0d\n\x0d\nfunction setupBuffer() {\x0d\n  const {\x0d\n    Buffer\x2C\x0d\n  } = require('buffer');\x0d\n  const bufferBinding = internalBinding('buffer');\x0d\n\x0d\n  // Only after this point can C++ use Buffer::New()\x0d\n  bufferBinding.setBufferPrototype(Buffer.prototype);\x0d\n  delete bufferBinding.setBufferPrototype;\x0d\n\x0d\n  // Create global.Buffer as getters so that we have a\x0d\n  // deprecation path for these in ES Modules.\x0d\n  // See https://github.com/nodejs/node/pull/26334.\x0d\n  let _Buffer = Buffer;\x0d\n  ObjectDefineProperty(globalThis\x2C 'Buffer'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return _Buffer;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _Buffer = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n}\x0d\n
code-source-info,0x125aa7867f4,12,4246,4676,C0O4262C8O4326C11O4341C19O4378C28O4399C35O4420C38O4420C43O4399C49O4449C54O4483C64O4483C69O4524C78O4531C83O4542C87O4560C94O4567C99O4581C105O4611C114O4618C118O4632C122O4653C124O4662C131O4675,,
code-creation,JS,10,99854,0x125aa78789c,346,initializeGlobalConsole node:internal/console/constructor:690:33,0x1d9b726b258,~
script-source,46,node:internal/console/constructor,'use strict';\x0d\n\x0d\n// The Console constructor is not actually used to construct the global\x0d\n// console. It's exported for backwards compatibility.\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Boolean\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  MathFloor\x2C\x0d\n  Number\x2C\x0d\n  NumberPrototypeToFixed\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectValues\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypePadStart\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolHasInstance\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { trace } = internalBinding('trace_events');\x0d\nconst {\x0d\n  isStackOverflowError\x2C\x0d\n  codes: {\x0d\n    ERR_CONSOLE_WRITABLE_STREAM\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst { previewEntries } = internalBinding('util');\x0d\nconst { Buffer: { isBuffer } } = require('buffer');\x0d\nconst {\x0d\n  inspect\x2C\x0d\n  formatWithOptions\x2C\x0d\n} = require('internal/util/inspect');\x0d\nconst {\x0d\n  isTypedArray\x2C isSet\x2C isMap\x2C isSetIterator\x2C isMapIterator\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  CHAR_LOWERCASE_B: kTraceBegin\x2C\x0d\n  CHAR_LOWERCASE_E: kTraceEnd\x2C\x0d\n  CHAR_LOWERCASE_N: kTraceInstant\x2C\x0d\n  CHAR_UPPERCASE_C: kTraceCount\x2C\x0d\n} = require('internal/constants');\x0d\nconst kCounts = Symbol('counts');\x0d\n\x0d\nconst kTraceConsoleCategory = 'node\x2Cnode.console';\x0d\n\x0d\nconst kSecond = 1000;\x0d\nconst kMinute = 60 * kSecond;\x0d\nconst kHour = 60 * kMinute;\x0d\nconst kMaxGroupIndentation = 1000;\x0d\n\x0d\n// Lazy loaded for startup performance.\x0d\nlet cliTable;\x0d\n\x0d\nlet utilColors;\x0d\nfunction lazyUtilColors() {\x0d\n  utilColors ??= require('internal/util/colors');\x0d\n  return utilColors;\x0d\n}\x0d\n\x0d\n// Track amount of indentation required via `console.group()`.\x0d\nconst kGroupIndent = Symbol('kGroupIndent');\x0d\nconst kGroupIndentationWidth = Symbol('kGroupIndentWidth');\x0d\nconst kFormatForStderr = Symbol('kFormatForStderr');\x0d\nconst kFormatForStdout = Symbol('kFormatForStdout');\x0d\nconst kGetInspectOptions = Symbol('kGetInspectOptions');\x0d\nconst kColorMode = Symbol('kColorMode');\x0d\nconst kIsConsole = Symbol('kIsConsole');\x0d\nconst kWriteToConsole = Symbol('kWriteToConsole');\x0d\nconst kBindProperties = Symbol('kBindProperties');\x0d\nconst kBindStreamsEager = Symbol('kBindStreamsEager');\x0d\nconst kBindStreamsLazy = Symbol('kBindStreamsLazy');\x0d\nconst kUseStdout = Symbol('kUseStdout');\x0d\nconst kUseStderr = Symbol('kUseStderr');\x0d\n\x0d\nconst optionsMap = new SafeWeakMap();\x0d\nfunction Console(options /* or: stdout\x2C stderr\x2C ignoreErrors = true */) {\x0d\n  // We have to test new.target here to see if this function is called\x0d\n  // with new\x2C because we need to define a custom instanceof to accommodate\x0d\n  // the global console.\x0d\n  if (new.target === undefined) {\x0d\n    return ReflectConstruct(Console\x2C arguments);\x0d\n  }\x0d\n\x0d\n  if (!options || typeof options.write === 'function') {\x0d\n    options = {\x0d\n      stdout: options\x2C\x0d\n      stderr: arguments[1]\x2C\x0d\n      ignoreErrors: arguments[2]\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    stdout\x2C\x0d\n    stderr = stdout\x2C\x0d\n    ignoreErrors = true\x2C\x0d\n    colorMode = 'auto'\x2C\x0d\n    inspectOptions\x2C\x0d\n    groupIndentation\x2C\x0d\n  } = options;\x0d\n\x0d\n  if (!stdout || typeof stdout.write !== 'function') {\x0d\n    throw new ERR_CONSOLE_WRITABLE_STREAM('stdout');\x0d\n  }\x0d\n  if (!stderr || typeof stderr.write !== 'function') {\x0d\n    throw new ERR_CONSOLE_WRITABLE_STREAM('stderr');\x0d\n  }\x0d\n\x0d\n  if (typeof colorMode !== 'boolean' && colorMode !== 'auto')\x0d\n    throw new ERR_INVALID_ARG_VALUE('colorMode'\x2C colorMode);\x0d\n\x0d\n  if (groupIndentation !== undefined) {\x0d\n    validateInteger(groupIndentation\x2C 'groupIndentation'\x2C\x0d\n                    0\x2C kMaxGroupIndentation);\x0d\n  }\x0d\n\x0d\n  if (inspectOptions !== undefined) {\x0d\n    validateObject(inspectOptions\x2C 'options.inspectOptions');\x0d\n\x0d\n    if (inspectOptions.colors !== undefined &&\x0d\n        options.colorMode !== undefined) {\x0d\n      throw new ERR_INCOMPATIBLE_OPTION_PAIR(\x0d\n        'options.inspectOptions.color'\x2C 'colorMode');\x0d\n    }\x0d\n    optionsMap.set(this\x2C inspectOptions);\x0d\n  }\x0d\n\x0d\n  // Bind the prototype functions to this Console instance\x0d\n  ArrayPrototypeForEach(ObjectKeys(Console.prototype)\x2C (key) => {\x0d\n    // We have to bind the methods grabbed from the instance instead of from\x0d\n    // the prototype so that users extending the Console can override them\x0d\n    // from the prototype chain of the subclass.\x0d\n    this[key] = FunctionPrototypeBind(this[key]\x2C this);\x0d\n    ObjectDefineProperty(this[key]\x2C 'name'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: key\x2C\x0d\n    });\x0d\n  });\x0d\n\x0d\n  this[kBindStreamsEager](stdout\x2C stderr);\x0d\n  this[kBindProperties](ignoreErrors\x2C colorMode\x2C groupIndentation);\x0d\n}\x0d\n\x0d\nconst consolePropAttributes = {\x0d\n  writable: true\x2C\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x2C\x0d\n};\x0d\n\x0d\n// Fixup global.console instanceof global.console.Console\x0d\nObjectDefineProperty(Console\x2C SymbolHasInstance\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value(instance) {\x0d\n    return instance[kIsConsole];\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nconst kColorInspectOptions = { colors: true };\x0d\nconst kNoColorInspectOptions = {};\x0d\n\x0d\nObjectDefineProperties(Console.prototype\x2C {\x0d\n  [kBindStreamsEager]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    // Eager version for the Console constructor\x0d\n    value: function(stdout\x2C stderr) {\x0d\n      ObjectDefineProperties(this\x2C {\x0d\n        '_stdout': { __proto__: null\x2C ...consolePropAttributes\x2C value: stdout }\x2C\x0d\n        '_stderr': { __proto__: null\x2C ...consolePropAttributes\x2C value: stderr }\x2C\x0d\n      });\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kBindStreamsLazy]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    // Lazily load the stdout and stderr from an object so we don't\x0d\n    // create the stdio streams when they are not even accessed\x0d\n    value: function(object) {\x0d\n      let stdout;\x0d\n      let stderr;\x0d\n      ObjectDefineProperties(this\x2C {\x0d\n        '_stdout': {\x0d\n          __proto__: null\x2C\x0d\n          enumerable: false\x2C\x0d\n          configurable: true\x2C\x0d\n          get() {\x0d\n            if (!stdout) stdout = object.stdout;\x0d\n            return stdout;\x0d\n          }\x2C\x0d\n          set(value) { stdout = value; }\x2C\x0d\n        }\x2C\x0d\n        '_stderr': {\x0d\n          __proto__: null\x2C\x0d\n          enumerable: false\x2C\x0d\n          configurable: true\x2C\x0d\n          get() {\x0d\n            if (!stderr) { stderr = object.stderr; }\x0d\n            return stderr;\x0d\n          }\x2C\x0d\n          set(value) { stderr = value; }\x2C\x0d\n        }\x2C\x0d\n      });\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kBindProperties]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(ignoreErrors\x2C colorMode\x2C groupIndentation = 2) {\x0d\n      ObjectDefineProperties(this\x2C {\x0d\n        '_stdoutErrorHandler': {\x0d\n          __proto__: null\x2C\x0d\n          ...consolePropAttributes\x2C\x0d\n          value: createWriteErrorHandler(this\x2C kUseStdout)\x2C\x0d\n        }\x2C\x0d\n        '_stderrErrorHandler': {\x0d\n          ...consolePropAttributes\x2C\x0d\n          __proto__: null\x2C\x0d\n          value: createWriteErrorHandler(this\x2C kUseStderr)\x2C\x0d\n        }\x2C\x0d\n        '_ignoreErrors': {\x0d\n          __proto__: null\x2C\x0d\n          ...consolePropAttributes\x2C\x0d\n          value: Boolean(ignoreErrors)\x2C\x0d\n        }\x2C\x0d\n        '_times': { __proto__: null\x2C ...consolePropAttributes\x2C value: new SafeMap() }\x2C\x0d\n        // Corresponds to https://console.spec.whatwg.org/#count-map\x0d\n        [kCounts]: { __proto__: null\x2C ...consolePropAttributes\x2C value: new SafeMap() }\x2C\x0d\n        [kColorMode]: { __proto__: null\x2C ...consolePropAttributes\x2C value: colorMode }\x2C\x0d\n        [kIsConsole]: { __proto__: null\x2C ...consolePropAttributes\x2C value: true }\x2C\x0d\n        [kGroupIndent]: { __proto__: null\x2C ...consolePropAttributes\x2C value: '' }\x2C\x0d\n        [kGroupIndentationWidth]: {\x0d\n          __proto__: null\x2C\x0d\n          ...consolePropAttributes\x2C\x0d\n          value: groupIndentation\x2C\x0d\n        }\x2C\x0d\n        [SymbolToStringTag]: {\x0d\n          __proto__: null\x2C\x0d\n          writable: false\x2C\x0d\n          enumerable: false\x2C\x0d\n          configurable: true\x2C\x0d\n          value: 'console'\x2C\x0d\n        }\x2C\x0d\n      });\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kWriteToConsole]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(streamSymbol\x2C string) {\x0d\n      const ignoreErrors = this._ignoreErrors;\x0d\n      const groupIndent = this[kGroupIndent];\x0d\n\x0d\n      const useStdout = streamSymbol === kUseStdout;\x0d\n      const stream = useStdout ? this._stdout : this._stderr;\x0d\n      const errorHandler = useStdout ?\x0d\n        this._stdoutErrorHandler : this._stderrErrorHandler;\x0d\n\x0d\n      if (groupIndent.length !== 0) {\x0d\n        if (StringPrototypeIncludes(string\x2C '\\n')) {\x0d\n          string = RegExpPrototypeSymbolReplace(/\\n/g\x2C string\x2C `\\n${groupIndent}`);\x0d\n        }\x0d\n        string = groupIndent + string;\x0d\n      }\x0d\n      string += '\\n';\x0d\n\x0d\n      if (ignoreErrors === false) return stream.write(string);\x0d\n\x0d\n      // There may be an error occurring synchronously (e.g. for files or TTYs\x0d\n      // on POSIX systems) or asynchronously (e.g. pipes on POSIX systems)\x2C so\x0d\n      // handle both situations.\x0d\n      try {\x0d\n        // Add and later remove a noop error handler to catch synchronous\x0d\n        // errors.\x0d\n        if (stream.listenerCount('error') === 0)\x0d\n          stream.once('error'\x2C noop);\x0d\n\x0d\n        stream.write(string\x2C errorHandler);\x0d\n      } catch (e) {\x0d\n        // Console is a debugging utility\x2C so it swallowing errors is not\x0d\n        // desirable even in edge cases such as low stack space.\x0d\n        if (isStackOverflowError(e))\x0d\n          throw e;\x0d\n        // Sorry\x2C there's no proper way to pass along the error here.\x0d\n      } finally {\x0d\n        stream.removeListener('error'\x2C noop);\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kGetInspectOptions]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(stream) {\x0d\n      let color = this[kColorMode];\x0d\n      if (color === 'auto') {\x0d\n        color = lazyUtilColors().shouldColorize(stream);\x0d\n      }\x0d\n\x0d\n      const options = optionsMap.get(this);\x0d\n      if (options) {\x0d\n        if (options.colors === undefined) {\x0d\n          options.colors = color;\x0d\n        }\x0d\n        return options;\x0d\n      }\x0d\n\x0d\n      return color ? kColorInspectOptions : kNoColorInspectOptions;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kFormatForStdout]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(args) {\x0d\n      const opts = this[kGetInspectOptions](this._stdout);\x0d\n      ArrayPrototypeUnshift(args\x2C opts);\x0d\n      return ReflectApply(formatWithOptions\x2C null\x2C args);\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kFormatForStderr]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(args) {\x0d\n      const opts = this[kGetInspectOptions](this._stderr);\x0d\n      ArrayPrototypeUnshift(args\x2C opts);\x0d\n      return ReflectApply(formatWithOptions\x2C null\x2C args);\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// Make a function that can serve as the callback passed to `stream.write()`.\x0d\nfunction createWriteErrorHandler(instance\x2C streamSymbol) {\x0d\n  return (err) => {\x0d\n    // This conditional evaluates to true if and only if there was an error\x0d\n    // that was not already emitted (which happens when the _write callback\x0d\n    // is invoked asynchronously).\x0d\n    const stream = streamSymbol === kUseStdout ?\x0d\n      instance._stdout : instance._stderr;\x0d\n    if (err !== null && !stream._writableState.errorEmitted) {\x0d\n      // If there was an error\x2C it will be emitted on `stream` as\x0d\n      // an `error` event. Adding a `once` listener will keep that error\x0d\n      // from becoming an uncaught exception\x2C but since the handler is\x0d\n      // removed after the event\x2C non-console.* writes won't be affected.\x0d\n      // we are only adding noop if there is no one else listening for 'error'\x0d\n      if (stream.listenerCount('error') === 0) {\x0d\n        stream.once('error'\x2C noop);\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nconst consoleMethods = {\x0d\n  log(...args) {\x0d\n    this[kWriteToConsole](kUseStdout\x2C this[kFormatForStdout](args));\x0d\n  }\x2C\x0d\n\x0d\n\x0d\n  warn(...args) {\x0d\n    this[kWriteToConsole](kUseStderr\x2C this[kFormatForStderr](args));\x0d\n  }\x2C\x0d\n\x0d\n\x0d\n  dir(object\x2C options) {\x0d\n    this[kWriteToConsole](kUseStdout\x2C inspect(object\x2C {\x0d\n      customInspect: false\x2C\x0d\n      ...this[kGetInspectOptions](this._stdout)\x2C\x0d\n      ...options\x2C\x0d\n    }));\x0d\n  }\x2C\x0d\n\x0d\n  time(label = 'default') {\x0d\n    // Coerces everything other than Symbol to a string\x0d\n    label = `${label}`;\x0d\n    if (this._times.has(label)) {\x0d\n      process.emitWarning(`Label '${label}' already exists for console.time()`);\x0d\n      return;\x0d\n    }\x0d\n    trace(kTraceBegin\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\x0d\n    this._times.set(label\x2C process.hrtime());\x0d\n  }\x2C\x0d\n\x0d\n  timeEnd(label = 'default') {\x0d\n    // Coerces everything other than Symbol to a string\x0d\n    label = `${label}`;\x0d\n    const found = timeLogImpl(this\x2C 'timeEnd'\x2C label);\x0d\n    trace(kTraceEnd\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\x0d\n    if (found) {\x0d\n      this._times.delete(label);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  timeLog(label = 'default'\x2C ...data) {\x0d\n    // Coerces everything other than Symbol to a string\x0d\n    label = `${label}`;\x0d\n    timeLogImpl(this\x2C 'timeLog'\x2C label\x2C data);\x0d\n    trace(kTraceInstant\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\x0d\n  }\x2C\x0d\n\x0d\n  trace: function trace(...args) {\x0d\n    const err = {\x0d\n      name: 'Trace'\x2C\x0d\n      message: this[kFormatForStderr](args)\x2C\x0d\n    };\x0d\n    ErrorCaptureStackTrace(err\x2C trace);\x0d\n    this.error(err.stack);\x0d\n  }\x2C\x0d\n\x0d\n  assert(expression\x2C ...args) {\x0d\n    if (!expression) {\x0d\n      args[0] = `Assertion failed${args.length === 0 ? '' : `: ${args[0]}`}`;\x0d\n      // The arguments will be formatted in warn() again\x0d\n      ReflectApply(this.warn\x2C this\x2C args);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  // Defined by: https://console.spec.whatwg.org/#clear\x0d\n  clear() {\x0d\n    // It only makes sense to clear if _stdout is a TTY.\x0d\n    // Otherwise\x2C do nothing.\x0d\n    if (this._stdout.isTTY && process.env.TERM !== 'dumb') {\x0d\n      // The require is here intentionally to avoid readline being\x0d\n      // required too early when console is first loaded.\x0d\n      const {\x0d\n        cursorTo\x2C\x0d\n        clearScreenDown\x2C\x0d\n      } = require('internal/readline/callbacks');\x0d\n      cursorTo(this._stdout\x2C 0\x2C 0);\x0d\n      clearScreenDown(this._stdout);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  // Defined by: https://console.spec.whatwg.org/#count\x0d\n  count(label = 'default') {\x0d\n    // Ensures that label is a string\x2C and only things that can be\x0d\n    // coerced to strings. e.g. Symbol is not allowed\x0d\n    label = `${label}`;\x0d\n    const counts = this[kCounts];\x0d\n    let count = counts.get(label);\x0d\n    if (count === undefined)\x0d\n      count = 1;\x0d\n    else\x0d\n      count++;\x0d\n    counts.set(label\x2C count);\x0d\n    trace(kTraceCount\x2C kTraceConsoleCategory\x2C `count::${label}`\x2C 0\x2C count);\x0d\n    this.log(`${label}: ${count}`);\x0d\n  }\x2C\x0d\n\x0d\n  // Defined by: https://console.spec.whatwg.org/#countreset\x0d\n  countReset(label = 'default') {\x0d\n    const counts = this[kCounts];\x0d\n    if (!counts.has(label)) {\x0d\n      process.emitWarning(`Count for '${label}' does not exist`);\x0d\n      return;\x0d\n    }\x0d\n    trace(kTraceCount\x2C kTraceConsoleCategory\x2C `count::${label}`\x2C 0\x2C 0);\x0d\n    counts.delete(`${label}`);\x0d\n  }\x2C\x0d\n\x0d\n  group(...data) {\x0d\n    if (data.length > 0) {\x0d\n      ReflectApply(this.log\x2C this\x2C data);\x0d\n    }\x0d\n    this[kGroupIndent] +=\x0d\n      StringPrototypeRepeat(' '\x2C this[kGroupIndentationWidth]);\x0d\n  }\x2C\x0d\n\x0d\n  groupEnd() {\x0d\n    this[kGroupIndent] = StringPrototypeSlice(\x0d\n      this[kGroupIndent]\x2C\x0d\n      0\x2C\x0d\n      this[kGroupIndent].length - this[kGroupIndentationWidth]\x2C\x0d\n    );\x0d\n  }\x2C\x0d\n\x0d\n  // https://console.spec.whatwg.org/#table\x0d\n  table(tabularData\x2C properties) {\x0d\n    if (properties !== undefined)\x0d\n      validateArray(properties\x2C 'properties');\x0d\n\x0d\n    if (tabularData === null || typeof tabularData !== 'object')\x0d\n      return this.log(tabularData);\x0d\n\x0d\n    cliTable ??= require('internal/cli_table');\x0d\n    const final = (k\x2C v) => this.log(cliTable(k\x2C v));\x0d\n\x0d\n    const _inspect = (v) => {\x0d\n      const depth = v !== null &&\x0d\n                    typeof v === 'object' &&\x0d\n                    !isArray(v) &&\x0d\n                    ObjectKeys(v).length > 2 ? -1 : 0;\x0d\n      const opt = {\x0d\n        depth\x2C\x0d\n        maxArrayLength: 3\x2C\x0d\n        breakLength: Infinity\x2C\x0d\n        ...this[kGetInspectOptions](this._stdout)\x2C\x0d\n      };\x0d\n      return inspect(v\x2C opt);\x0d\n    };\x0d\n    const getIndexArray = (length) => ArrayFrom(\x0d\n      { length }\x2C (_\x2C i) => _inspect(i));\x0d\n\x0d\n    const mapIter = isMapIterator(tabularData);\x0d\n    let isKeyValue = false;\x0d\n    let i = 0;\x0d\n    if (mapIter) {\x0d\n      const res = previewEntries(tabularData\x2C true);\x0d\n      tabularData = res[0];\x0d\n      isKeyValue = res[1];\x0d\n    }\x0d\n\x0d\n    if (isKeyValue || isMap(tabularData)) {\x0d\n      const keys = [];\x0d\n      const values = [];\x0d\n      let length = 0;\x0d\n      if (mapIter) {\x0d\n        for (; i < tabularData.length / 2; ++i) {\x0d\n          ArrayPrototypePush(keys\x2C _inspect(tabularData[i * 2]));\x0d\n          ArrayPrototypePush(values\x2C _inspect(tabularData[i * 2 + 1]));\x0d\n          length++;\x0d\n        }\x0d\n      } else {\x0d\n        for (const { 0: k\x2C 1: v } of tabularData) {\x0d\n          ArrayPrototypePush(keys\x2C _inspect(k));\x0d\n          ArrayPrototypePush(values\x2C _inspect(v));\x0d\n          length++;\x0d\n        }\x0d\n      }\x0d\n      return final([\x0d\n        iterKey\x2C keyKey\x2C valuesKey\x2C\x0d\n      ]\x2C [\x0d\n        getIndexArray(length)\x2C\x0d\n        keys\x2C\x0d\n        values\x2C\x0d\n      ]);\x0d\n    }\x0d\n\x0d\n    const setIter = isSetIterator(tabularData);\x0d\n    if (setIter)\x0d\n      tabularData = previewEntries(tabularData);\x0d\n\x0d\n    const setlike = setIter || mapIter || isSet(tabularData);\x0d\n    if (setlike) {\x0d\n      const values = [];\x0d\n      let length = 0;\x0d\n      for (const v of tabularData) {\x0d\n        ArrayPrototypePush(values\x2C _inspect(v));\x0d\n        length++;\x0d\n      }\x0d\n      return final([iterKey\x2C valuesKey]\x2C [getIndexArray(length)\x2C values]);\x0d\n    }\x0d\n\x0d\n    const map = { __proto__: null };\x0d\n    let hasPrimitives = false;\x0d\n    const valuesKeyArray = [];\x0d\n    const indexKeyArray = ObjectKeys(tabularData);\x0d\n\x0d\n    for (; i < indexKeyArray.length; i++) {\x0d\n      const item = tabularData[indexKeyArray[i]];\x0d\n      const primitive = item === null ||\x0d\n          (typeof item !== 'function' && typeof item !== 'object');\x0d\n      if (properties === undefined && primitive) {\x0d\n        hasPrimitives = true;\x0d\n        valuesKeyArray[i] = _inspect(item);\x0d\n      } else {\x0d\n        const keys = properties || ObjectKeys(item);\x0d\n        for (const key of keys) {\x0d\n          map[key] ??= [];\x0d\n          if ((primitive && properties) ||\x0d\n               !ObjectPrototypeHasOwnProperty(item\x2C key))\x0d\n            map[key][i] = '';\x0d\n          else\x0d\n            map[key][i] = _inspect(item[key]);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    const keys = ObjectKeys(map);\x0d\n    const values = ObjectValues(map);\x0d\n    if (hasPrimitives) {\x0d\n      ArrayPrototypePush(keys\x2C valuesKey);\x0d\n      ArrayPrototypePush(values\x2C valuesKeyArray);\x0d\n    }\x0d\n    ArrayPrototypeUnshift(keys\x2C indexKey);\x0d\n    ArrayPrototypeUnshift(values\x2C indexKeyArray);\x0d\n\x0d\n    return final(keys\x2C values);\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\n// Returns true if label was found\x0d\nfunction timeLogImpl(self\x2C name\x2C label\x2C data) {\x0d\n  const time = self._times.get(label);\x0d\n  if (time === undefined) {\x0d\n    process.emitWarning(`No such label '${label}' for console.${name}()`);\x0d\n    return false;\x0d\n  }\x0d\n  const duration = process.hrtime(time);\x0d\n  const ms = duration[0] * 1000 + duration[1] / 1e6;\x0d\n\x0d\n  const formatted = formatTime(ms);\x0d\n\x0d\n  if (data === undefined) {\x0d\n    self.log('%s: %s'\x2C label\x2C formatted);\x0d\n  } else {\x0d\n    self.log('%s: %s'\x2C label\x2C formatted\x2C ...new SafeArrayIterator(data));\x0d\n  }\x0d\n  return true;\x0d\n}\x0d\n\x0d\nfunction pad(value) {\x0d\n  return StringPrototypePadStart(`${value}`\x2C 2\x2C '0');\x0d\n}\x0d\n\x0d\nfunction formatTime(ms) {\x0d\n  let hours = 0;\x0d\n  let minutes = 0;\x0d\n  let seconds = 0;\x0d\n\x0d\n  if (ms >= kSecond) {\x0d\n    if (ms >= kMinute) {\x0d\n      if (ms >= kHour) {\x0d\n        hours = MathFloor(ms / kHour);\x0d\n        ms = ms % kHour;\x0d\n      }\x0d\n      minutes = MathFloor(ms / kMinute);\x0d\n      ms = ms % kMinute;\x0d\n    }\x0d\n    seconds = ms / kSecond;\x0d\n  }\x0d\n\x0d\n  if (hours !== 0 || minutes !== 0) {\x0d\n    ({ 0: seconds\x2C 1: ms } = StringPrototypeSplit(\x0d\n      NumberPrototypeToFixed(seconds\x2C 3)\x2C\x0d\n      '.'\x2C\x0d\n    ));\x0d\n    const res = hours !== 0 ? `${hours}:${pad(minutes)}` : minutes;\x0d\n    return `${res}:${pad(seconds)}.${ms} (${hours !== 0 ? 'h:m' : ''}m:ss.mmm)`;\x0d\n  }\x0d\n\x0d\n  if (seconds !== 0) {\x0d\n    return `${NumberPrototypeToFixed(seconds\x2C 3)}s`;\x0d\n  }\x0d\n\x0d\n  return `${Number(NumberPrototypeToFixed(ms\x2C 3))}ms`;\x0d\n}\x0d\n\x0d\nconst keyKey = 'Key';\x0d\nconst valuesKey = 'Values';\x0d\nconst indexKey = '(index)';\x0d\nconst iterKey = '(iteration index)';\x0d\n\x0d\nconst isArray = (v) => ArrayIsArray(v) || isTypedArray(v) || isBuffer(v);\x0d\n\x0d\nfunction noop() {}\x0d\n\x0d\nfor (const method of ReflectOwnKeys(consoleMethods))\x0d\n  Console.prototype[method] = consoleMethods[method];\x0d\n\x0d\nConsole.prototype.debug = Console.prototype.log;\x0d\nConsole.prototype.info = Console.prototype.log;\x0d\nConsole.prototype.dirxml = Console.prototype.log;\x0d\nConsole.prototype.error = Console.prototype.warn;\x0d\nConsole.prototype.groupCollapsed = Console.prototype.group;\x0d\n\x0d\nfunction initializeGlobalConsole(globalConsole) {\x0d\n  globalConsole[kBindStreamsLazy](process);\x0d\n  const {\x0d\n    namespace: {\x0d\n      addSerializeCallback\x2C\x0d\n      isBuildingSnapshot\x2C\x0d\n    }\x2C\x0d\n  } = require('internal/v8/startup_snapshot');\x0d\n\x0d\n  if (!internalBinding('config').hasInspector || !isBuildingSnapshot()) {\x0d\n    return;\x0d\n  }\x0d\n  const { console: consoleFromVM } = internalBinding('inspector');\x0d\n  const nodeConsoleKeys = ObjectKeys(Console.prototype);\x0d\n  const vmConsoleKeys = ObjectKeys(consoleFromVM);\x0d\n  const originalKeys = new SafeSet(vmConsoleKeys.concat(nodeConsoleKeys));\x0d\n  const inspectorConsoleKeys = new SafeSet();\x0d\n  for (const key of ObjectKeys(globalConsole)) {\x0d\n    if (!originalKeys.has(key)) {\x0d\n      inspectorConsoleKeys.add(key);\x0d\n    }\x0d\n  }\x0d\n  // During deserialization these should be reinstalled to console by\x0d\n  // V8 when the inspector client is created.\x0d\n  addSerializeCallback(() => {\x0d\n    for (const key of inspectorConsoleKeys) {\x0d\n      globalConsole[key] = undefined;\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Console\x2C\x0d\n  kBindStreamsLazy\x2C\x0d\n  kBindProperties\x2C\x0d\n  initializeGlobalConsole\x2C\x0d\n  formatTime\x2C // exported for tests\x0d\n};\x0d\n
code-source-info,0x125aa78789c,46,21146,22133,C0O21146C12O21167C19O21181C21O21180C30O21198C35O21309C43O21309C48O21236C53O21245C58O21274C63O21355C71O21360C76O21385C82O21403C87O21432C88O21439C89O21483C97O21483C102O21465C107O21540C119O21559C124O21540C129O21596C134O21596C139O21647C146O21673C151O21673C159O21647C165O21731C170O21731C175O21731C177O21767C185O21767C207O21760C237O21760C240O21819C246O21819C253O21838C257O21859C263O21859C268O21749C335O22002C340O22002C345O22132,,
tick,0x7ff7b347058f,101010,0,0x0,3,0x7ff7b3cc62d0,0x125aa786425,0x125aa78335c,0x125aa781724,0x3151437ff27
code-creation,JS,10,101068,0x125aa78955c,94,value node:internal/console/constructor:205:20,0x1d9b726a278,~
code-source-info,0x125aa78955c,46,6044,6706,C0O6044C15O6066C16O6066C18O6085C19O6085C21O6100C33O6151C38O6253C46O6364C60O6428C65O6530C73O6645C87O6100C93O6705,,
code-creation,JS,10,101174,0x125aa789994,63,addReadOnlyProcessAlias node:internal/process/pre_execution:279:33,0x1d9b727f0b0,~
code-source-info,0x125aa789994,67,9260,9520,C16O9313C21O9313C26O9340C28O9358C36O9388C43O9478C49O9497C56O9358C62O9519,,
code-creation,JS,10,101230,0x125aa789b34,82,getOptionValue node:internal/options:44:24,0x1d9b72478d8,~
code-source-info,0x125aa789b34,17,1028,1278,C0O1062C3O1062C7O1108C15O1108C22O1159C30O1181C38O1181C43O1168C47O1159C53O1197C55O1222C60O1228C61O1252C66O1252C74O1267C81O1275,,
code-creation,JS,10,101277,0x125aa789c8c,24,getCLIOptionsFromBinding node:internal/options:18:34,0x1d9b72476a0,~
code-source-info,0x125aa789c8c,17,514,620,C0O522C6O546C11O573C15O558C21O599C23O617,,
code-creation,JS,10,101617,0x125aa78a514,46,setupTraceCategoryState node:internal/process/pre_execution:462:33,0x1d9b727f548,~
code-source-info,0x125aa78a514,67,14906,15137,C0O14949C6O14949C11O14922C16O15022C22O15022C27O14993C32O15065C35O15090C40O15065C45O15136,,
code-creation,JS,10,101692,0x125aa78a6ac,66,toggleTraceCategoryState node:internal/process/per_thread:418:34,0x1d9b725a830,~
script-source,27,node:internal/process/per_thread,'use strict';\x0d\n\x0d\n// This files contains process bootstrappers that can be\x0d\n// run when setting up each thread\x2C including the main\x0d\n// thread and the worker threads.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeEvery\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  BigUint64Array\x2C\x0d\n  Float64Array\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  Set\x2C\x0d\n  SetPrototypeEntries\x2C\x0d\n  SetPrototypeValues\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ErrnoException\x2C\x0d\n  codes: {\x0d\n    ERR_ASSERTION\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst format = require('internal/util/inspect').format;\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst { getValidatedPath } = require('internal/fs/utils');\x0d\nconst { toNamespacedPath } = require('path');\x0d\nconst constants = internalBinding('constants').os.signals;\x0d\n\x0d\nconst kInternal = Symbol('internal properties');\x0d\n\x0d\nfunction assert(x\x2C msg) {\x0d\n  if (!x) throw new ERR_ASSERTION(msg || 'assertion error');\x0d\n}\x0d\nconst { exitCodes: { kNoFailure } } = internalBinding('errors');\x0d\n\x0d\nconst binding = internalBinding('process_methods');\x0d\n\x0d\n// The 3 entries filled in by the original process.hrtime contains\x0d\n// the upper/lower 32 bits of the second part of the value\x2C\x0d\n// and the remaining nanoseconds of the value.\x0d\nconst hrValues = binding.hrtimeBuffer;\x0d\n// Use a BigUint64Array because this is actually a bit\x0d\n// faster than simply returning a BigInt from C++ in V8 7.1.\x0d\nconst hrBigintValues = new BigUint64Array(binding.hrtimeBuffer.buffer\x2C 0\x2C 1);\x0d\n\x0d\nfunction hrtime(time) {\x0d\n  binding.hrtime();\x0d\n\x0d\n  if (time !== undefined) {\x0d\n    validateArray(time\x2C 'time');\x0d\n    if (time.length !== 2) {\x0d\n      throw new ERR_OUT_OF_RANGE('time'\x2C 2\x2C time.length);\x0d\n    }\x0d\n\x0d\n    const sec = (hrValues[0] * 0x100000000 + hrValues[1]) - time[0];\x0d\n    const nsec = hrValues[2] - time[1];\x0d\n    const needsBorrow = nsec < 0;\x0d\n    return [needsBorrow ? sec - 1 : sec\x2C needsBorrow ? nsec + 1e9 : nsec];\x0d\n  }\x0d\n\x0d\n  return [\x0d\n    hrValues[0] * 0x100000000 + hrValues[1]\x2C\x0d\n    hrValues[2]\x2C\x0d\n  ];\x0d\n}\x0d\n\x0d\nfunction hrtimeBigInt() {\x0d\n  binding.hrtimeBigInt();\x0d\n  return hrBigintValues[0];\x0d\n}\x0d\n\x0d\nfunction nop() {}\x0d\n\x0d\n// The execution of this function itself should not cause any side effects.\x0d\nfunction wrapProcessMethods(binding) {\x0d\n  const {\x0d\n    cpuUsage: _cpuUsage\x2C\x0d\n    memoryUsage: _memoryUsage\x2C\x0d\n    rss\x2C\x0d\n    resourceUsage: _resourceUsage\x2C\x0d\n    loadEnvFile: _loadEnvFile\x2C\x0d\n  } = binding;\x0d\n\x0d\n  function _rawDebug(...args) {\x0d\n    binding._rawDebug(ReflectApply(format\x2C null\x2C args));\x0d\n  }\x0d\n\x0d\n  // Create the argument array that will be passed to the native function.\x0d\n  const cpuValues = new Float64Array(2);\x0d\n\x0d\n  // Replace the native function with the JS version that calls the native\x0d\n  // function.\x0d\n  function cpuUsage(prevValue) {\x0d\n    // If a previous value was passed in\x2C ensure it has the correct shape.\x0d\n    if (prevValue) {\x0d\n      if (!previousValueIsValid(prevValue.user)) {\x0d\n        validateObject(prevValue\x2C 'prevValue');\x0d\n\x0d\n        validateNumber(prevValue.user\x2C 'prevValue.user');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.user'\x2C\x0d\n                                                   prevValue.user);\x0d\n      }\x0d\n\x0d\n      if (!previousValueIsValid(prevValue.system)) {\x0d\n        validateNumber(prevValue.system\x2C 'prevValue.system');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.system'\x2C\x0d\n                                                   prevValue.system);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Call the native function to get the current values.\x0d\n    _cpuUsage(cpuValues);\x0d\n\x0d\n    // If a previous value was passed in\x2C return diff of current from previous.\x0d\n    if (prevValue) {\x0d\n      return {\x0d\n        user: cpuValues[0] - prevValue.user\x2C\x0d\n        system: cpuValues[1] - prevValue.system\x2C\x0d\n      };\x0d\n    }\x0d\n\x0d\n    // If no previous value passed in\x2C return current value.\x0d\n    return {\x0d\n      user: cpuValues[0]\x2C\x0d\n      system: cpuValues[1]\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // Ensure that a previously passed in value is valid. Currently\x2C the native\x0d\n  // implementation always returns numbers <= Number.MAX_SAFE_INTEGER.\x0d\n  function previousValueIsValid(num) {\x0d\n    return typeof num === 'number' &&\x0d\n        num <= NumberMAX_SAFE_INTEGER &&\x0d\n        num >= 0;\x0d\n  }\x0d\n\x0d\n  const memValues = new Float64Array(5);\x0d\n  function memoryUsage() {\x0d\n    _memoryUsage(memValues);\x0d\n    return {\x0d\n      rss: memValues[0]\x2C\x0d\n      heapTotal: memValues[1]\x2C\x0d\n      heapUsed: memValues[2]\x2C\x0d\n      external: memValues[3]\x2C\x0d\n      arrayBuffers: memValues[4]\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  memoryUsage.rss = rss;\x0d\n\x0d\n  function exit(code) {\x0d\n    const {\x0d\n      handleProcessExit\x2C\x0d\n    } = require('internal/modules/esm/handle_process_exit');\x0d\n    process.off('exit'\x2C handleProcessExit);\x0d\n\x0d\n    if (arguments.length !== 0) {\x0d\n      process.exitCode = code;\x0d\n    }\x0d\n\x0d\n    if (!process._exiting) {\x0d\n      process._exiting = true;\x0d\n      process.emit('exit'\x2C process.exitCode || kNoFailure);\x0d\n    }\x0d\n    // FIXME(joyeecheung): This is an undocumented API that gets monkey-patched\x0d\n    // in the user land. Either document it\x2C or deprecate it in favor of a\x0d\n    // better public alternative.\x0d\n    process.reallyExit(process.exitCode || kNoFailure);\x0d\n\x0d\n    // If this is a worker\x2C v8::Isolate::TerminateExecution() is called above.\x0d\n    // That function spoofs the stack pointer to cause the stack guard\x0d\n    // check to throw the termination exception. Because v8 performs\x0d\n    // stack guard check upon every function call\x2C we give it a chance.\x0d\n    //\x0d\n    // Without this\x2C user code after `process.exit()` would take effect.\x0d\n    // test/parallel/test-worker-voluntarily-exit-followed-by-addition.js\x0d\n    // test/parallel/test-worker-voluntarily-exit-followed-by-throw.js\x0d\n    nop();\x0d\n  }\x0d\n\x0d\n  function kill(pid\x2C sig) {\x0d\n    let err;\x0d\n\x0d\n    // eslint-disable-next-line eqeqeq\x0d\n    if (pid != (pid | 0)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('pid'\x2C 'number'\x2C pid);\x0d\n    }\x0d\n\x0d\n    // Preserve null signal\x0d\n    if (sig === (sig | 0)) {\x0d\n      // XXX(joyeecheung): we have to use process._kill here because\x0d\n      // it's monkey-patched by tests.\x0d\n      err = process._kill(pid\x2C sig);\x0d\n    } else {\x0d\n      sig = sig || 'SIGTERM';\x0d\n      if (constants[sig]) {\x0d\n        err = process._kill(pid\x2C constants[sig]);\x0d\n      } else {\x0d\n        throw new ERR_UNKNOWN_SIGNAL(sig);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (err)\x0d\n      throw new ErrnoException(err\x2C 'kill');\x0d\n\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  const resourceValues = new Float64Array(16);\x0d\n  function resourceUsage() {\x0d\n    _resourceUsage(resourceValues);\x0d\n    return {\x0d\n      userCPUTime: resourceValues[0]\x2C\x0d\n      systemCPUTime: resourceValues[1]\x2C\x0d\n      maxRSS: resourceValues[2]\x2C\x0d\n      sharedMemorySize: resourceValues[3]\x2C\x0d\n      unsharedDataSize: resourceValues[4]\x2C\x0d\n      unsharedStackSize: resourceValues[5]\x2C\x0d\n      minorPageFault: resourceValues[6]\x2C\x0d\n      majorPageFault: resourceValues[7]\x2C\x0d\n      swappedOut: resourceValues[8]\x2C\x0d\n      fsRead: resourceValues[9]\x2C\x0d\n      fsWrite: resourceValues[10]\x2C\x0d\n      ipcSent: resourceValues[11]\x2C\x0d\n      ipcReceived: resourceValues[12]\x2C\x0d\n      signalsCount: resourceValues[13]\x2C\x0d\n      voluntaryContextSwitches: resourceValues[14]\x2C\x0d\n      involuntaryContextSwitches: resourceValues[15]\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Loads the `.env` file to process.env.\x0d\n   * @param {string | URL | Buffer | undefined} path\x0d\n   */\x0d\n  function loadEnvFile(path = undefined) { // Provide optional value so that `loadEnvFile.length` returns 0\x0d\n    if (path != null) {\x0d\n      path = getValidatedPath(path);\x0d\n      _loadEnvFile(toNamespacedPath(path));\x0d\n    } else {\x0d\n      _loadEnvFile();\x0d\n    }\x0d\n  }\x0d\n\x0d\n\x0d\n  return {\x0d\n    _rawDebug\x2C\x0d\n    cpuUsage\x2C\x0d\n    resourceUsage\x2C\x0d\n    memoryUsage\x2C\x0d\n    kill\x2C\x0d\n    exit\x2C\x0d\n    loadEnvFile\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nconst replaceUnderscoresRegex = /_/g;\x0d\nconst leadingDashesRegex = /^--?/;\x0d\nconst trailingValuesRegex = /=.*$/;\x0d\n\x0d\n// This builds the initial process.allowedNodeEnvironmentFlags\x0d\n// from data in the config binding.\x0d\nfunction buildAllowedFlags() {\x0d\n  const {\x0d\n    envSettings: { kAllowedInEnvvar }\x2C\x0d\n    types: { kBoolean }\x2C\x0d\n  } = internalBinding('options');\x0d\n  const { options\x2C aliases } = require('internal/options');\x0d\n\x0d\n  const allowedNodeEnvironmentFlags = [];\x0d\n  for (const { 0: name\x2C 1: info } of options) {\x0d\n    if (info.envVarSettings === kAllowedInEnvvar) {\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C name);\x0d\n      if (info.type === kBoolean) {\x0d\n        const negatedName = `--no-${name.slice(2)}`;\x0d\n        ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C negatedName);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function isAccepted(to) {\x0d\n    if (!StringPrototypeStartsWith(to\x2C '-') || to === '--') return true;\x0d\n    const recursiveExpansion = aliases.get(to);\x0d\n    if (recursiveExpansion) {\x0d\n      if (recursiveExpansion[0] === to)\x0d\n        ArrayPrototypeSplice(recursiveExpansion\x2C 0\x2C 1);\x0d\n      return ArrayPrototypeEvery(recursiveExpansion\x2C isAccepted);\x0d\n    }\x0d\n    return options.get(to).envVarSettings === kAllowedInEnvvar;\x0d\n  }\x0d\n  for (const { 0: from\x2C 1: expansion } of aliases) {\x0d\n    if (ArrayPrototypeEvery(expansion\x2C isAccepted)) {\x0d\n      let canonical = from;\x0d\n      if (StringPrototypeEndsWith(canonical\x2C '='))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 1);\x0d\n      if (StringPrototypeEndsWith(canonical\x2C ' <arg>'))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 4);\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C canonical);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const trimLeadingDashes =\x0d\n    (flag) => StringPrototypeReplace(flag\x2C leadingDashesRegex\x2C '');\x0d\n\x0d\n  // Save these for comparison against flags provided to\x0d\n  // process.allowedNodeEnvironmentFlags.has() which lack leading dashes.\x0d\n  const nodeFlags = ArrayPrototypeMap(allowedNodeEnvironmentFlags\x2C\x0d\n                                      trimLeadingDashes);\x0d\n\x0d\n  class NodeEnvironmentFlagsSet extends Set {\x0d\n    constructor(array) {\x0d\n      super();\x0d\n      this[kInternal] = { array };\x0d\n    }\x0d\n\x0d\n    add() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    delete() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    clear() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n    }\x0d\n\x0d\n    has(key) {\x0d\n      // This will return `true` based on various possible\x0d\n      // permutations of a flag\x2C including present/missing leading\x0d\n      // dash(es) and/or underscores-for-dashes.\x0d\n      // Strips any values after `=`\x2C inclusive.\x0d\n      // TODO(addaleax): It might be more flexible to run the option parser\x0d\n      // on a dummy option set and see whether it rejects the argument or\x0d\n      // not.\x0d\n      if (typeof key === 'string') {\x0d\n        key = StringPrototypeReplace(key\x2C replaceUnderscoresRegex\x2C '-');\x0d\n        if (RegExpPrototypeExec(leadingDashesRegex\x2C key) !== null) {\x0d\n          key = StringPrototypeReplace(key\x2C trailingValuesRegex\x2C '');\x0d\n          return ArrayPrototypeIncludes(this[kInternal].array\x2C key);\x0d\n        }\x0d\n        return ArrayPrototypeIncludes(nodeFlags\x2C key);\x0d\n      }\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    entries() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeEntries(this[kInternal].set);\x0d\n    }\x0d\n\x0d\n    forEach(callback\x2C thisArg = undefined) {\x0d\n      ArrayPrototypeForEach(\x0d\n        this[kInternal].array\x2C\x0d\n        (v) => ReflectApply(callback\x2C thisArg\x2C [v\x2C v\x2C this])\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    get size() {\x0d\n      return this[kInternal].array.length;\x0d\n    }\x0d\n\x0d\n    values() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeValues(this[kInternal].set);\x0d\n    }\x0d\n  }\x0d\n  const flagSetValues = NodeEnvironmentFlagsSet.prototype.values;\x0d\n  ObjectDefineProperty(NodeEnvironmentFlagsSet.prototype\x2C SymbolIterator\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: flagSetValues\x2C\x0d\n  });\x0d\n  ObjectDefineProperty(NodeEnvironmentFlagsSet.prototype\x2C 'keys'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: flagSetValues\x2C\x0d\n  });\x0d\n\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype.constructor);\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype);\x0d\n\x0d\n  return ObjectFreeze(new NodeEnvironmentFlagsSet(\x0d\n    allowedNodeEnvironmentFlags\x2C\x0d\n  ));\x0d\n}\x0d\n\x0d\n// Lazy load internal/trace_events_async_hooks only if the async_hooks\x0d\n// trace event category is enabled.\x0d\nlet traceEventsAsyncHook;\x0d\n// Dynamically enable/disable the traceEventsAsyncHook\x0d\nfunction toggleTraceCategoryState(asyncHooksEnabled) {\x0d\n  if (asyncHooksEnabled) {\x0d\n    if (!traceEventsAsyncHook) {\x0d\n      traceEventsAsyncHook =\x0d\n        require('internal/trace_events_async_hooks').createHook();\x0d\n    }\x0d\n    traceEventsAsyncHook.enable();\x0d\n  } else if (traceEventsAsyncHook) {\x0d\n    traceEventsAsyncHook.disable();\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  toggleTraceCategoryState\x2C\x0d\n  assert\x2C\x0d\n  buildAllowedFlags\x2C\x0d\n  wrapProcessMethods\x2C\x0d\n  hrtime\x2C\x0d\n  hrtimeBigInt\x2C\x0d\n};\x0d\n
code-source-info,0x125aa78a6ac,27,12795,13102,C0O12820C4O12850C10O12886C16O12918C21O12962C26O12963C30O12907C32O12989C35O13010C40O13010C46O13030C52O13063C55O13084C60O13084C65O13101,,
code-creation,JS,10,102325,0x125aa78b604,62,setupInspectorHooks node:internal/process/pre_execution:468:29,0x1d9b727f5a0,~
code-source-info,0x125aa78b604,67,15169,15736,C0O15518C6O15522C11O15547C17O15617C23O15617C28O15584C33O15599C38O15664C44O15664C49O15692C54O15693C61O15735,,
code-creation,JS,10,102378,0x125aa78b884,79,setupNavigator node:internal/process/pre_execution:330:24,0x1d9b727f1b8,~
code-source-info,0x125aa78b884,67,10703,11090,C0O10711C5O10715C9O10735C17O10763C23O10763C29O10824C30O10831C31O10926C38O10947C49O10926C54O11000C65O11031C72O11000C78O11089,,
code-creation,JS,10,102421,0x125aa78b9cc,19,getEmbedderOptions node:internal/options:32:28,0x1d9b7247828,~
code-source-info,0x125aa78b9cc,17,791,913,C0O799C6O828C11O846C14O844C16O887C18O910,,
new,MemoryChunk,0x9b20b40000,262144
new,MemoryChunk,0x7ff734380000,262144
code-creation,JS,11,102608,0x7ff734383040,2488,defineLazyProperties node:internal/util:591:30,0x1d9b7246088,^
script-source,16,node:internal/util,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBufferPrototypeGetByteLength\x2C\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  Error\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ObjectValues\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeGetDotAll\x2C\x0d\n  RegExpPrototypeGetGlobal\x2C\x0d\n  RegExpPrototypeGetHasIndices\x2C\x0d\n  RegExpPrototypeGetIgnoreCase\x2C\x0d\n  RegExpPrototypeGetMultiline\x2C\x0d\n  RegExpPrototypeGetSticky\x2C\x0d\n  RegExpPrototypeGetUnicode\x2C\x0d\n  RegExpPrototypeGetSource\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolReplace\x2C\x0d\n  SymbolSplit\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x2C\x0d\n  }\x2C\x0d\n  isErrorStackTraceLimitWritable\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  overrideStackTrace\x2C\x0d\n} = require('internal/errors');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\nconst {\x0d\n  isArrayBufferDetached: _isArrayBufferDetached\x2C\x0d\n  guessHandleType: _guessHandleType\x2C\x0d\n  privateSymbols: {\x0d\n    arrow_message_private_symbol\x2C\x0d\n    decorated_private_symbol\x2C\x0d\n  }\x2C\x0d\n  sleep: _sleep\x2C\x0d\n} = internalBinding('util');\x0d\nconst { isNativeError\x2C isPromise } = internalBinding('types');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { encodings } = internalBinding('string_decoder');\x0d\n\x0d\nconst noCrypto = !process.versions.openssl;\x0d\n\x0d\nconst experimentalWarnings = new SafeSet();\x0d\n\x0d\nconst colorRegExp = /\\u001b\\[\\d\\d?m/g; // eslint-disable-line no-control-regex\x0d\n\x0d\nlet uvBinding;\x0d\n\x0d\nfunction lazyUv() {\x0d\n  uvBinding ??= internalBinding('uv');\x0d\n  return uvBinding;\x0d\n}\x0d\n\x0d\nfunction removeColors(str) {\x0d\n  return StringPrototypeReplace(str\x2C colorRegExp\x2C '');\x0d\n}\x0d\n\x0d\nfunction isError(e) {\x0d\n  // An error could be an instance of Error while not being a native error\x0d\n  // or could be from a different realm and not be instance of Error but still\x0d\n  // be a native error.\x0d\n  return isNativeError(e) || e instanceof Error;\x0d\n}\x0d\n\x0d\n// Keep a list of deprecation codes that have been warned on so we only warn on\x0d\n// each one once.\x0d\nconst codesWarned = new SafeSet();\x0d\n\x0d\nlet validateString;\x0d\n\x0d\nfunction getDeprecationWarningEmitter(\x0d\n  code\x2C msg\x2C deprecated\x2C useEmitSync\x2C\x0d\n  shouldEmitWarning = () => true\x2C\x0d\n) {\x0d\n  let warned = false;\x0d\n  return function() {\x0d\n    if (!warned && shouldEmitWarning()) {\x0d\n      warned = true;\x0d\n      if (code !== undefined) {\x0d\n        if (!codesWarned.has(code)) {\x0d\n          const emitWarning = useEmitSync ?\x0d\n            require('internal/process/warning').emitWarningSync :\x0d\n            process.emitWarning;\x0d\n          emitWarning(msg\x2C 'DeprecationWarning'\x2C code\x2C deprecated);\x0d\n          codesWarned.add(code);\x0d\n        }\x0d\n      } else {\x0d\n        process.emitWarning(msg\x2C 'DeprecationWarning'\x2C deprecated);\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction isPendingDeprecation() {\x0d\n  return getOptionValue('--pending-deprecation') &&\x0d\n    !getOptionValue('--no-deprecation');\x0d\n}\x0d\n\x0d\n// Internal deprecator for pending --pending-deprecation. This can be invoked\x0d\n// at snapshot building time as the warning permission is only queried at\x0d\n// run time.\x0d\nfunction pendingDeprecate(fn\x2C msg\x2C code) {\x0d\n  const emitDeprecationWarning = getDeprecationWarningEmitter(\x0d\n    code\x2C msg\x2C deprecated\x2C false\x2C isPendingDeprecation\x2C\x0d\n  );\x0d\n  function deprecated(...args) {\x0d\n    emitDeprecationWarning();\x0d\n    return ReflectApply(fn\x2C this\x2C args);\x0d\n  }\x0d\n  return deprecated;\x0d\n}\x0d\n\x0d\n// Mark that a method should not be used.\x0d\n// Returns a modified function which warns once by default.\x0d\n// If --no-deprecation is set\x2C then it is a no-op.\x0d\nfunction deprecate(fn\x2C msg\x2C code\x2C useEmitSync) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateString === undefined)\x0d\n    ({ validateString } = require('internal/validators'));\x0d\n\x0d\n  if (code !== undefined)\x0d\n    validateString(code\x2C 'code');\x0d\n\x0d\n  const emitDeprecationWarning = getDeprecationWarningEmitter(\x0d\n    code\x2C msg\x2C deprecated\x2C useEmitSync\x2C\x0d\n  );\x0d\n\x0d\n  function deprecated(...args) {\x0d\n    // TODO(joyeecheung): use getOptionValue('--no-deprecation') instead.\x0d\n    if (!process.noDeprecation) {\x0d\n      emitDeprecationWarning();\x0d\n    }\x0d\n    if (new.target) {\x0d\n      return ReflectConstruct(fn\x2C args\x2C new.target);\x0d\n    }\x0d\n    return ReflectApply(fn\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  // The wrapper will keep the same prototype as fn to maintain prototype chain\x0d\n  ObjectSetPrototypeOf(deprecated\x2C fn);\x0d\n  if (fn.prototype) {\x0d\n    // Setting this (rather than using Object.setPrototype\x2C as above) ensures\x0d\n    // that calling the unwrapped constructor gives an instanceof the wrapped\x0d\n    // constructor.\x0d\n    deprecated.prototype = fn.prototype;\x0d\n  }\x0d\n\x0d\n  return deprecated;\x0d\n}\x0d\n\x0d\nfunction decorateErrorStack(err) {\x0d\n  if (!(isError(err) && err.stack) || err[decorated_private_symbol])\x0d\n    return;\x0d\n\x0d\n  const arrow = err[arrow_message_private_symbol];\x0d\n\x0d\n  if (arrow) {\x0d\n    err.stack = arrow + err.stack;\x0d\n    err[decorated_private_symbol] = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction assertCrypto() {\x0d\n  if (noCrypto)\x0d\n    throw new ERR_NO_CRYPTO();\x0d\n}\x0d\n\x0d\n// Return undefined if there is no match.\x0d\n// Move the "slow cases" to a separate function to make sure this function gets\x0d\n// inlined properly. That prioritizes the common case.\x0d\nfunction normalizeEncoding(enc) {\x0d\n  if (enc == null || enc === 'utf8' || enc === 'utf-8') return 'utf8';\x0d\n  return slowCases(enc);\x0d\n}\x0d\n\x0d\nfunction slowCases(enc) {\x0d\n  switch (enc.length) {\x0d\n    case 4:\x0d\n      if (enc === 'UTF8') return 'utf8';\x0d\n      if (enc === 'ucs2' || enc === 'UCS2') return 'utf16le';\x0d\n      enc = StringPrototypeToLowerCase(enc);\x0d\n      if (enc === 'utf8') return 'utf8';\x0d\n      if (enc === 'ucs2') return 'utf16le';\x0d\n      break;\x0d\n    case 3:\x0d\n      if (enc === 'hex' || enc === 'HEX' ||\x0d\n      StringPrototypeToLowerCase(enc) === 'hex')\x0d\n        return 'hex';\x0d\n      break;\x0d\n    case 5:\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      if (enc === 'UTF-8') return 'utf8';\x0d\n      if (enc === 'ASCII') return 'ascii';\x0d\n      if (enc === 'UCS-2') return 'utf16le';\x0d\n      enc = StringPrototypeToLowerCase(enc);\x0d\n      if (enc === 'utf-8') return 'utf8';\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      break;\x0d\n    case 6:\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      if (enc === 'BASE64') return 'base64';\x0d\n      if (enc === 'LATIN1' || enc === 'BINARY') return 'latin1';\x0d\n      enc = StringPrototypeToLowerCase(enc);\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      break;\x0d\n    case 7:\x0d\n      if (enc === 'utf16le' || enc === 'UTF16LE' ||\x0d\n      StringPrototypeToLowerCase(enc) === 'utf16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 8:\x0d\n      if (enc === 'utf-16le' || enc === 'UTF-16LE' ||\x0d\n      StringPrototypeToLowerCase(enc) === 'utf-16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 9:\x0d\n      if (enc === 'base64url' || enc === 'BASE64URL' ||\x0d\n      StringPrototypeToLowerCase(enc) === 'base64url')\x0d\n        return 'base64url';\x0d\n      break;\x0d\n    default:\x0d\n      if (enc === '') return 'utf8';\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitExperimentalWarning(feature) {\x0d\n  if (experimentalWarnings.has(feature)) return;\x0d\n  const msg = `${feature} is an experimental feature and might change at any time`;\x0d\n  experimentalWarnings.add(feature);\x0d\n  process.emitWarning(msg\x2C 'ExperimentalWarning');\x0d\n}\x0d\n\x0d\nfunction filterDuplicateStrings(items\x2C low) {\x0d\n  const map = new SafeMap();\x0d\n  for (let i = 0; i < items.length; i++) {\x0d\n    const item = items[i];\x0d\n    const key = StringPrototypeToLowerCase(item);\x0d\n    if (low) {\x0d\n      map.set(key\x2C key);\x0d\n    } else {\x0d\n      map.set(key\x2C item);\x0d\n    }\x0d\n  }\x0d\n  return ArrayPrototypeSort(ArrayFrom(map.values()));\x0d\n}\x0d\n\x0d\nfunction cachedResult(fn) {\x0d\n  let result;\x0d\n  return () => {\x0d\n    if (result === undefined)\x0d\n      result = fn();\x0d\n    return ArrayPrototypeSlice(result);\x0d\n  };\x0d\n}\x0d\n\x0d\n// Useful for Wrapping an ES6 Class with a constructor Function that\x0d\n// does not require the new keyword. For instance:\x0d\n//   class A { constructor(x) {this.x = x;}}\x0d\n//   const B = createClassWrapper(A);\x0d\n//   B() instanceof A // true\x0d\n//   B() instanceof B // true\x0d\nfunction createClassWrapper(type) {\x0d\n  function fn(...args) {\x0d\n    return ReflectConstruct(type\x2C args\x2C new.target || type);\x0d\n  }\x0d\n  // Mask the wrapper function name and length values\x0d\n  ObjectDefineProperties(fn\x2C {\x0d\n    name: { __proto__: null\x2C value: type.name }\x2C\x0d\n    length: { __proto__: null\x2C value: type.length }\x2C\x0d\n  });\x0d\n  ObjectSetPrototypeOf(fn\x2C type);\x0d\n  fn.prototype = type.prototype;\x0d\n  return fn;\x0d\n}\x0d\n\x0d\nlet signalsToNamesMapping;\x0d\nfunction getSignalsToNamesMapping() {\x0d\n  if (signalsToNamesMapping !== undefined)\x0d\n    return signalsToNamesMapping;\x0d\n\x0d\n  signalsToNamesMapping = { __proto__: null };\x0d\n  for (const key in signals) {\x0d\n    signalsToNamesMapping[signals[key]] = key;\x0d\n  }\x0d\n\x0d\n  return signalsToNamesMapping;\x0d\n}\x0d\n\x0d\nfunction convertToValidSignal(signal) {\x0d\n  if (typeof signal === 'number' && getSignalsToNamesMapping()[signal])\x0d\n    return signal;\x0d\n\x0d\n  if (typeof signal === 'string') {\x0d\n    const signalName = signals[StringPrototypeToUpperCase(signal)];\x0d\n    if (signalName) return signalName;\x0d\n  }\x0d\n\x0d\n  throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n}\x0d\n\x0d\nfunction getConstructorOf(obj) {\x0d\n  while (obj) {\x0d\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\x0d\n    if (descriptor !== undefined &&\x0d\n        typeof descriptor.value === 'function' &&\x0d\n        descriptor.value.name !== '') {\x0d\n      return descriptor.value;\x0d\n    }\x0d\n\x0d\n    obj = ObjectGetPrototypeOf(obj);\x0d\n  }\x0d\n\x0d\n  return null;\x0d\n}\x0d\n\x0d\nlet cachedURL;\x0d\nlet cachedCWD;\x0d\n\x0d\n/**\x0d\n * Get the current working directory while accounting for the possibility that it has been deleted.\x0d\n * `process.cwd()` can fail if the parent directory is deleted while the process runs.\x0d\n * @returns {URL} The current working directory or the volume root if it cannot be determined.\x0d\n */\x0d\nfunction getCWDURL() {\x0d\n  const { sep } = require('path');\x0d\n  const { pathToFileURL } = require('internal/url');\x0d\n\x0d\n  let cwd;\x0d\n\x0d\n  try {\x0d\n    // The implementation of `process.cwd()` already uses proper cache when it can.\x0d\n    // It's a relatively cheap call performance-wise for the most common use case.\x0d\n    cwd = process.cwd();\x0d\n  } catch {\x0d\n    cachedURL ??= pathToFileURL(sep);\x0d\n  }\x0d\n\x0d\n  if (cwd != null && cwd !== cachedCWD) {\x0d\n    cachedURL = pathToFileURL(cwd + sep);\x0d\n    cachedCWD = cwd;\x0d\n  }\x0d\n\x0d\n  return cachedURL;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorName(err) {\x0d\n  const entry = uvErrmapGet(err);\x0d\n  return entry ? entry[0] : `Unknown system error ${err}`;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorMap() {\x0d\n  return lazyUv().getErrorMap();\x0d\n}\x0d\n\x0d\nconst kCustomPromisifiedSymbol = SymbolFor('nodejs.util.promisify.custom');\x0d\nconst kCustomPromisifyArgsSymbol = Symbol('customPromisifyArgs');\x0d\n\x0d\nlet validateFunction;\x0d\n\x0d\nfunction promisify(original) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateFunction === undefined)\x0d\n    ({ validateFunction } = require('internal/validators'));\x0d\n\x0d\n  validateFunction(original\x2C 'original');\x0d\n\x0d\n  if (original[kCustomPromisifiedSymbol]) {\x0d\n    const fn = original[kCustomPromisifiedSymbol];\x0d\n\x0d\n    validateFunction(fn\x2C 'util.promisify.custom');\x0d\n\x0d\n    return ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  // Names to create an object from in case the callback receives multiple\x0d\n  // arguments\x2C e.g. ['bytesRead'\x2C 'buffer'] for fs.read.\x0d\n  const argumentNames = original[kCustomPromisifyArgsSymbol];\x0d\n\x0d\n  function fn(...args) {\x0d\n    return new Promise((resolve\x2C reject) => {\x0d\n      ArrayPrototypePush(args\x2C (err\x2C ...values) => {\x0d\n        if (err) {\x0d\n          return reject(err);\x0d\n        }\x0d\n        if (argumentNames !== undefined && values.length > 1) {\x0d\n          const obj = {};\x0d\n          for (let i = 0; i < argumentNames.length; i++)\x0d\n            obj[argumentNames[i]] = values[i];\x0d\n          resolve(obj);\x0d\n        } else {\x0d\n          resolve(values[0]);\x0d\n        }\x0d\n      });\x0d\n      if (isPromise(ReflectApply(original\x2C this\x2C args))) {\x0d\n        process.emitWarning('Calling promisify on a function that returns a Promise is likely a mistake.'\x2C\x0d\n                            'DeprecationWarning'\x2C 'DEP0174');\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  ObjectSetPrototypeOf(fn\x2C ObjectGetPrototypeOf(original));\x0d\n\x0d\n  ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x2C\x0d\n  });\x0d\n\x0d\n  const descriptors = ObjectGetOwnPropertyDescriptors(original);\x0d\n  const propertiesValues = ObjectValues(descriptors);\x0d\n  for (let i = 0; i < propertiesValues.length; i++) {\x0d\n    // We want to use null-prototype objects to not rely on globally mutable\x0d\n    // %Object.prototype%.\x0d\n    ObjectSetPrototypeOf(propertiesValues[i]\x2C null);\x0d\n  }\x0d\n  return ObjectDefineProperties(fn\x2C descriptors);\x0d\n}\x0d\n\x0d\npromisify.custom = kCustomPromisifiedSymbol;\x0d\n\x0d\n// The built-in Array#join is slower in v8 6.0\x0d\nfunction join(output\x2C separator) {\x0d\n  let str = '';\x0d\n  if (output.length !== 0) {\x0d\n    const lastIndex = output.length - 1;\x0d\n    for (let i = 0; i < lastIndex; i++) {\x0d\n      // It is faster not to use a template string here\x0d\n      str += output[i];\x0d\n      str += separator;\x0d\n    }\x0d\n    str += output[lastIndex];\x0d\n  }\x0d\n  return str;\x0d\n}\x0d\n\x0d\n// As of V8 6.6\x2C depending on the size of the array\x2C this is anywhere\x0d\n// between 1.5-10x faster than the two-arg version of Array#splice()\x0d\nfunction spliceOne(list\x2C index) {\x0d\n  for (; index + 1 < list.length; index++)\x0d\n    list[index] = list[index + 1];\x0d\n  list.pop();\x0d\n}\x0d\n\x0d\nconst kNodeModulesRE = /^(.*)[\\\\/]node_modules[\\\\/]/;\x0d\n\x0d\nlet getStructuredStack;\x0d\n\x0d\nfunction isInsideNodeModules() {\x0d\n  if (getStructuredStack === undefined) {\x0d\n    // Lazy-load to avoid a circular dependency.\x0d\n    const { runInNewContext } = require('vm');\x0d\n    // Use `runInNewContext()` to get something tamper-proof and\x0d\n    // side-effect-free. Since this is currently only used for a deprecated API\x2C\x0d\n    // the perf implications should be okay.\x0d\n    getStructuredStack = runInNewContext(`(function() {\x0d\n      try { Error.stackTraceLimit = Infinity; } catch {}\x0d\n      return function structuredStack() {\x0d\n        const e = new Error();\x0d\n        overrideStackTrace.set(e\x2C (err\x2C trace) => trace);\x0d\n        return e.stack;\x0d\n      };\x0d\n    })()`\x2C { overrideStackTrace }\x2C { filename: 'structured-stack' });\x0d\n  }\x0d\n\x0d\n  const stack = getStructuredStack();\x0d\n\x0d\n  // Iterate over all stack frames and look for the first one not coming\x0d\n  // from inside Node.js itself:\x0d\n  if (ArrayIsArray(stack)) {\x0d\n    for (const frame of stack) {\x0d\n      const filename = frame.getFileName();\x0d\n      // If a filename does not start with / or contain \\\x2C\x0d\n      // it's likely from Node.js core.\x0d\n      if (RegExpPrototypeExec(/^\\/|\\\\/\x2C filename) === null)\x0d\n        continue;\x0d\n      return RegExpPrototypeExec(kNodeModulesRE\x2C filename) !== null;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction once(callback) {\x0d\n  let called = false;\x0d\n  return function(...args) {\x0d\n    if (called) return;\x0d\n    called = true;\x0d\n    return ReflectApply(callback\x2C this\x2C args);\x0d\n  };\x0d\n}\x0d\n\x0d\nlet validateUint32;\x0d\n\x0d\nfunction sleep(msec) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateUint32 === undefined)\x0d\n    ({ validateUint32 } = require('internal/validators'));\x0d\n\x0d\n  validateUint32(msec\x2C 'msec');\x0d\n  _sleep(msec);\x0d\n}\x0d\n\x0d\nfunction createDeferredPromise() {\x0d\n  let resolve;\x0d\n  let reject;\x0d\n  const promise = new Promise((res\x2C rej) => {\x0d\n    resolve = res;\x0d\n    reject = rej;\x0d\n  });\x0d\n\x0d\n  return { promise\x2C resolve\x2C reject };\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#define-the-operations\x0d\nfunction defineOperation(target\x2C name\x2C method) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    value: method\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-interfaces\x0d\nfunction exposeInterface(target\x2C name\x2C interfaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: interfaceObject\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-namespaces\x0d\nfunction exposeNamespace(target\x2C name\x2C namespaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: namespaceObject\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction exposeGetterAndSetter(target\x2C name\x2C getter\x2C setter = undefined) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    get: getter\x2C\x0d\n    set: setter\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction defineLazyProperties(target\x2C id\x2C keys\x2C enumerable = true) {\x0d\n  const descriptors = { __proto__: null };\x0d\n  let mod;\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const key = keys[i];\x0d\n    let lazyLoadedValue;\x0d\n    function set(value) {\x0d\n      ObjectDefineProperty(target\x2C key\x2C {\x0d\n        __proto__: null\x2C\x0d\n        writable: true\x2C\x0d\n        value\x2C\x0d\n      });\x0d\n    }\x0d\n    ObjectDefineProperty(set\x2C 'name'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: `set ${key}`\x2C\x0d\n    });\x0d\n    function get() {\x0d\n      mod ??= require(id);\x0d\n      if (lazyLoadedValue === undefined) {\x0d\n        lazyLoadedValue = mod[key];\x0d\n        set(lazyLoadedValue);\x0d\n      }\x0d\n      return lazyLoadedValue;\x0d\n    }\x0d\n    ObjectDefineProperty(get\x2C 'name'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: `get ${key}`\x2C\x0d\n    });\x0d\n    descriptors[key] = {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable\x2C\x0d\n      get\x2C\x0d\n      set\x2C\x0d\n    };\x0d\n  }\x0d\n  ObjectDefineProperties(target\x2C descriptors);\x0d\n}\x0d\n\x0d\nfunction defineReplaceableLazyAttribute(target\x2C id\x2C keys\x2C writable = true\x2C check) {\x0d\n  let mod;\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const key = keys[i];\x0d\n    let value;\x0d\n    let setterCalled = false;\x0d\n\x0d\n    function get() {\x0d\n      if (check !== undefined) {\x0d\n        FunctionPrototypeCall(check\x2C this);\x0d\n      }\x0d\n      if (setterCalled) {\x0d\n        return value;\x0d\n      }\x0d\n      mod ??= require(id);\x0d\n      value ??= mod[key];\x0d\n      return value;\x0d\n    }\x0d\n\x0d\n    ObjectDefineProperty(get\x2C 'name'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: `get ${key}`\x2C\x0d\n    });\x0d\n\x0d\n    function set(val) {\x0d\n      setterCalled = true;\x0d\n      value = val;\x0d\n    }\x0d\n    ObjectDefineProperty(set\x2C 'name'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: `set ${key}`\x2C\x0d\n    });\x0d\n\x0d\n    ObjectDefineProperty(target\x2C key\x2C {\x0d\n      __proto__: null\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      get\x2C\x0d\n      set: writable ? set : undefined\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction exposeLazyInterfaces(target\x2C id\x2C keys) {\x0d\n  defineLazyProperties(target\x2C id\x2C keys\x2C false);\x0d\n}\x0d\n\x0d\nlet _DOMException;\x0d\nconst lazyDOMExceptionClass = () => {\x0d\n  _DOMException ??= internalBinding('messaging').DOMException;\x0d\n  return _DOMException;\x0d\n};\x0d\n\x0d\nconst lazyDOMException = (message\x2C name) => {\x0d\n  _DOMException ??= internalBinding('messaging').DOMException;\x0d\n  if (isErrorStackTraceLimitWritable()) {\x0d\n    const limit = Error.stackTraceLimit;\x0d\n    Error.stackTraceLimit = 0;\x0d\n    const ex = new _DOMException(message\x2C name);\x0d\n    Error.stackTraceLimit = limit;\x0d\n    ErrorCaptureStackTrace(ex\x2C lazyDOMException);\x0d\n    return ex;\x0d\n  }\x0d\n  return new _DOMException(message\x2C name);\x0d\n\x0d\n};\x0d\n\x0d\nconst kEnumerableProperty = { __proto__: null };\x0d\nkEnumerableProperty.enumerable = true;\x0d\nObjectFreeze(kEnumerableProperty);\x0d\n\x0d\nconst kEmptyObject = ObjectFreeze({ __proto__: null });\x0d\n\x0d\nfunction filterOwnProperties(source\x2C keys) {\x0d\n  const filtered = { __proto__: null };\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const key = keys[i];\x0d\n    if (ObjectPrototypeHasOwnProperty(source\x2C key)) {\x0d\n      filtered[key] = source[key];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return filtered;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Mimics `obj[key] = value` but ignoring potential prototype inheritance.\x0d\n * @param {any} obj\x0d\n * @param {string} key\x0d\n * @param {any} value\x0d\n * @returns {any}\x0d\n */\x0d\nfunction setOwnProperty(obj\x2C key\x2C value) {\x0d\n  return ObjectDefineProperty(obj\x2C key\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value\x2C\x0d\n    writable: true\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nlet internalGlobal;\x0d\nfunction getInternalGlobal() {\x0d\n  if (internalGlobal == null) {\x0d\n    // Lazy-load to avoid a circular dependency.\x0d\n    const { runInNewContext } = require('vm');\x0d\n    internalGlobal = runInNewContext('this'\x2C undefined\x2C { contextName: 'internal' });\x0d\n  }\x0d\n  return internalGlobal;\x0d\n}\x0d\n\x0d\nfunction SideEffectFreeRegExpPrototypeExec(regex\x2C string) {\x0d\n  const { RegExp: RegExpFromAnotherRealm } = getInternalGlobal();\x0d\n  return FunctionPrototypeCall(RegExpFromAnotherRealm.prototype.exec\x2C regex\x2C string);\x0d\n}\x0d\n\x0d\nconst crossRelmRegexes = new SafeWeakMap();\x0d\nfunction getCrossRelmRegex(regex) {\x0d\n  const cached = crossRelmRegexes.get(regex);\x0d\n  if (cached) return cached;\x0d\n\x0d\n  let flagString = '';\x0d\n  if (RegExpPrototypeGetHasIndices(regex)) flagString += 'd';\x0d\n  if (RegExpPrototypeGetGlobal(regex)) flagString += 'g';\x0d\n  if (RegExpPrototypeGetIgnoreCase(regex)) flagString += 'i';\x0d\n  if (RegExpPrototypeGetMultiline(regex)) flagString += 'm';\x0d\n  if (RegExpPrototypeGetDotAll(regex)) flagString += 's';\x0d\n  if (RegExpPrototypeGetUnicode(regex)) flagString += 'u';\x0d\n  if (RegExpPrototypeGetSticky(regex)) flagString += 'y';\x0d\n\x0d\n  const { RegExp: RegExpFromAnotherRealm } = getInternalGlobal();\x0d\n  const crossRelmRegex = new RegExpFromAnotherRealm(RegExpPrototypeGetSource(regex)\x2C flagString);\x0d\n  crossRelmRegexes.set(regex\x2C crossRelmRegex);\x0d\n  return crossRelmRegex;\x0d\n}\x0d\n\x0d\nfunction SideEffectFreeRegExpPrototypeSymbolReplace(regex\x2C string\x2C replacement) {\x0d\n  return getCrossRelmRegex(regex)[SymbolReplace](string\x2C replacement);\x0d\n}\x0d\n\x0d\nfunction SideEffectFreeRegExpPrototypeSymbolSplit(regex\x2C string\x2C limit = undefined) {\x0d\n  return getCrossRelmRegex(regex)[SymbolSplit](string\x2C limit);\x0d\n}\x0d\n\x0d\n\x0d\nfunction isArrayBufferDetached(value) {\x0d\n  if (ArrayBufferPrototypeGetByteLength(value) === 0) {\x0d\n    return _isArrayBufferDetached(value);\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Helper function to lazy-load an initialize-once value.\x0d\n * @template T Return value of initializer\x0d\n * @param {()=>T} initializer Initializer of the lazily loaded value.\x0d\n * @returns {()=>T}\x0d\n */\x0d\nfunction getLazy(initializer) {\x0d\n  let value;\x0d\n  let initialized = false;\x0d\n  return function() {\x0d\n    if (initialized === false) {\x0d\n      value = initializer();\x0d\n      initialized = true;\x0d\n    }\x0d\n    return value;\x0d\n  };\x0d\n}\x0d\n\x0d\n// Setup user-facing NODE_V8_COVERAGE environment variable that writes\x0d\n// ScriptCoverage objects to a specified directory.\x0d\nfunction setupCoverageHooks(dir) {\x0d\n  const cwd = require('internal/process/execution').tryGetCwd();\x0d\n  const { resolve } = require('path');\x0d\n  const coverageDirectory = resolve(cwd\x2C dir);\x0d\n  const { sourceMapCacheToObject } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n\x0d\n  if (process.features.inspector) {\x0d\n    internalBinding('profiler').setCoverageDirectory(coverageDirectory);\x0d\n    internalBinding('profiler').setSourceMapCacheGetter(sourceMapCacheToObject);\x0d\n  } else {\x0d\n    process.emitWarning('The inspector is disabled\x2C ' +\x0d\n                        'coverage could not be collected'\x2C\x0d\n                        'Warning');\x0d\n    return '';\x0d\n  }\x0d\n  return coverageDirectory;\x0d\n}\x0d\n\x0d\n\x0d\nconst handleTypes = ['TCP'\x2C 'TTY'\x2C 'UDP'\x2C 'FILE'\x2C 'PIPE'\x2C 'UNKNOWN'];\x0d\nfunction guessHandleType(fd) {\x0d\n  const type = _guessHandleType(fd);\x0d\n  return handleTypes[type];\x0d\n}\x0d\n\x0d\nclass WeakReference {\x0d\n  #weak = null;\x0d\n  #strong = null;\x0d\n  #refCount = 0;\x0d\n  constructor(object) {\x0d\n    this.#weak = new SafeWeakRef(object);\x0d\n  }\x0d\n\x0d\n  incRef() {\x0d\n    this.#refCount++;\x0d\n    if (this.#refCount === 1) {\x0d\n      const derefed = this.#weak.deref();\x0d\n      if (derefed !== undefined) {\x0d\n        this.#strong = derefed;\x0d\n      }\x0d\n    }\x0d\n    return this.#refCount;\x0d\n  }\x0d\n\x0d\n  decRef() {\x0d\n    this.#refCount--;\x0d\n    if (this.#refCount === 0) {\x0d\n      this.#strong = null;\x0d\n    }\x0d\n    return this.#refCount;\x0d\n  }\x0d\n\x0d\n  get() {\x0d\n    return this.#weak.deref();\x0d\n  }\x0d\n}\x0d\n\x0d\nconst encodingsMap = { __proto__: null };\x0d\nfor (let i = 0; i < encodings.length; ++i)\x0d\n  encodingsMap[encodings[i]] = i;\x0d\n\x0d\nmodule.exports = {\x0d\n  getLazy\x2C\x0d\n  assertCrypto\x2C\x0d\n  cachedResult\x2C\x0d\n  convertToValidSignal\x2C\x0d\n  createClassWrapper\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  decorateErrorStack\x2C\x0d\n  defineOperation\x2C\x0d\n  defineLazyProperties\x2C\x0d\n  defineReplaceableLazyAttribute\x2C\x0d\n  deprecate\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  encodingsMap\x2C\x0d\n  exposeInterface\x2C\x0d\n  exposeLazyInterfaces\x2C\x0d\n  exposeNamespace\x2C\x0d\n  exposeGetterAndSetter\x2C\x0d\n  filterDuplicateStrings\x2C\x0d\n  filterOwnProperties\x2C\x0d\n  getConstructorOf\x2C\x0d\n  getCWDURL\x2C\x0d\n  getInternalGlobal\x2C\x0d\n  getSystemErrorMap\x2C\x0d\n  getSystemErrorName\x2C\x0d\n  guessHandleType\x2C\x0d\n  isArrayBufferDetached\x2C\x0d\n  isError\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  join\x2C\x0d\n  lazyDOMException\x2C\x0d\n  lazyDOMExceptionClass\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  once\x2C\x0d\n  promisify\x2C\x0d\n  SideEffectFreeRegExpPrototypeExec\x2C\x0d\n  SideEffectFreeRegExpPrototypeSymbolReplace\x2C\x0d\n  SideEffectFreeRegExpPrototypeSymbolSplit\x2C\x0d\n  sleep\x2C\x0d\n  spliceOne\x2C\x0d\n  setupCoverageHooks\x2C\x0d\n  removeColors\x2C\x0d\n\x0d\n  // Symbol used to customize promisify conversion\x0d\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\x0d\n\x0d\n  // Symbol used to provide a custom inspect function for an object as an\x0d\n  // alternative to using 'inspect'\x0d\n  customInspectSymbol: SymbolFor('nodejs.util.inspect.custom')\x2C\x0d\n\x0d\n  // Used by the buffer module to capture an internal reference to the\x0d\n  // default isEncoding implementation\x2C just in case userland overrides it.\x0d\n  kIsEncodingSymbol: Symbol('kIsEncodingSymbol')\x2C\x0d\n  kVmBreakFirstLineSymbol: Symbol('kVmBreakFirstLineSymbol')\x2C\x0d\n\x0d\n  kEmptyObject\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n  setOwnProperty\x2C\x0d\n  pendingDeprecate\x2C\x0d\n  WeakReference\x2C\x0d\n};\x0d\n
code-source-info,0x7ff734383040,16,17194,18136,,,
code-creation,JS,11,103884,0x7ff734383a40,600,requireBuiltin node:internal/bootstrap/realm:420:24,0xa4fec38c80,^
script-source,9,node:internal/bootstrap/realm,// This file is executed in every realm that is created by Node.js\x2C including\x0d\n// the context of main thread\x2C worker threads\x2C and ShadowRealms.\x0d\n// Only per-realm internal states and bindings should be bootstrapped in this\x0d\n// file and no globals should be exposed to the user code.\x0d\n//\x0d\n// This file creates the internal module & binding loaders used by built-in\x0d\n// modules. In contrast\x2C user land modules are loaded using\x0d\n// lib/internal/modules/cjs/loader.js (CommonJS Modules) or\x0d\n// lib/internal/modules/esm/* (ES Modules).\x0d\n//\x0d\n// This file is compiled and run by node.cc before bootstrap/node.js\x0d\n// was called\x2C therefore the loaders are bootstrapped before we start to\x0d\n// actually bootstrap Node.js. It creates the following objects:\x0d\n//\x0d\n// C++ binding loaders:\x0d\n// - process.binding(): the legacy C++ binding loader\x2C accessible from user land\x0d\n//   because it is an object attached to the global process object.\x0d\n//   These C++ bindings are created using NODE_BUILTIN_MODULE_CONTEXT_AWARE()\x0d\n//   and have their nm_flags set to NM_F_BUILTIN. We do not make any guarantees\x0d\n//   about the stability of these bindings\x2C but still have to take care of\x0d\n//   compatibility issues caused by them from time to time.\x0d\n// - process._linkedBinding(): intended to be used by embedders to add\x0d\n//   additional C++ bindings in their applications. These C++ bindings\x0d\n//   can be created using NODE_BINDING_CONTEXT_AWARE_CPP() with the flag\x0d\n//   NM_F_LINKED.\x0d\n// - internalBinding(): the private internal C++ binding loader\x2C inaccessible\x0d\n//   from user land unless through `require('internal/test/binding')`.\x0d\n//   These C++ bindings are created using NODE_BINDING_CONTEXT_AWARE_INTERNAL()\x0d\n//   and have their nm_flags set to NM_F_INTERNAL.\x0d\n//\x0d\n// Internal JavaScript module loader:\x0d\n// - BuiltinModule: a minimal module system used to load the JavaScript core\x0d\n//   modules found in lib/**/*.js and deps/**/*.js. All core modules are\x0d\n//   compiled into the node binary via node_javascript.cc generated by js2c.py\x2C\x0d\n//   so they can be loaded faster without the cost of I/O. This class makes the\x0d\n//   lib/internal/*\x2C deps/internal/* modules and internalBinding() available by\x0d\n//   default to core modules\x2C and lets the core modules require itself via\x0d\n//   require('internal/bootstrap/realm') even when this file is not written in\x0d\n//   CommonJS style.\x0d\n//\x0d\n// Other objects:\x0d\n// - process.moduleLoadList: an array recording the bindings and the modules\x0d\n//   loaded in the process and the order in which they are loaded.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by node::RunBootstrapping()\x0d\n/* global process\x2C getLinkedBinding\x2C getInternalBinding\x2C primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Error\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectGet\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Set up process.moduleLoadList.\x0d\nconst moduleLoadList = [];\x0d\nObjectDefineProperty(process\x2C 'moduleLoadList'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: moduleLoadList\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x2C\x0d\n});\x0d\n\x0d\n\x0d\n// processBindingAllowList contains the name of bindings that are allowed\x0d\n// for access via process.binding(). This is used to provide a transition\x0d\n// path for modules that are being moved over to internalBinding.\x0d\n// Certain bindings may not actually correspond to an internalBinding any\x0d\n// more\x2C we just implement them as legacy wrappers instead. See the\x0d\n// legacyWrapperList.\x0d\nconst processBindingAllowList = new SafeSet([\x0d\n  'buffer'\x2C\x0d\n  'cares_wrap'\x2C\x0d\n  'config'\x2C\x0d\n  'constants'\x2C\x0d\n  'contextify'\x2C\x0d\n  'fs'\x2C\x0d\n  'fs_event_wrap'\x2C\x0d\n  'icu'\x2C\x0d\n  'inspector'\x2C\x0d\n  'js_stream'\x2C\x0d\n  'os'\x2C\x0d\n  'pipe_wrap'\x2C\x0d\n  'process_wrap'\x2C\x0d\n  'spawn_sync'\x2C\x0d\n  'stream_wrap'\x2C\x0d\n  'tcp_wrap'\x2C\x0d\n  'tls_wrap'\x2C\x0d\n  'tty_wrap'\x2C\x0d\n  'udp_wrap'\x2C\x0d\n  'uv'\x2C\x0d\n  'zlib'\x2C\x0d\n]);\x0d\n\x0d\nconst runtimeDeprecatedList = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'crypto'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'v8'\x2C\x0d\n]);\x0d\n\x0d\nconst legacyWrapperList = new SafeSet([\x0d\n  'natives'\x2C\x0d\n  'util'\x2C\x0d\n]);\x0d\n\x0d\n// The code bellow assumes that the two lists must not contain any modules\x0d\n// beginning with "internal/".\x0d\n// Modules that can only be imported via the node: scheme.\x0d\nconst schemelessBlockList = new SafeSet([\x0d\n  'sea'\x2C\x0d\n  'test'\x2C\x0d\n  'test/reporters'\x2C\x0d\n]);\x0d\n// Modules that will only be enabled at run time.\x0d\nconst experimentalModuleList = new SafeSet();\x0d\n\x0d\n// Set up process.binding() and process._linkedBinding().\x0d\n{\x0d\n  const bindingObj = { __proto__: null };\x0d\n\x0d\n  process.binding = function binding(module) {\x0d\n    module = String(module);\x0d\n    const mod = bindingObj[module];\x0d\n    if (typeof mod === 'object') {\x0d\n      return mod;\x0d\n    }\x0d\n    // Deprecated specific process.binding() modules\x2C but not all\x2C allow\x0d\n    // selective fallback to internalBinding for the deprecated ones.\x0d\n    if (runtimeDeprecatedList.has(module)) {\x0d\n      process.emitWarning(\x0d\n        `Access to process.binding('${module}') is deprecated.`\x2C\x0d\n        'DeprecationWarning'\x2C\x0d\n        'DEP0111');\x0d\n      return internalBinding(module);\x0d\n    }\x0d\n    if (legacyWrapperList.has(module)) {\x0d\n      return requireBuiltin('internal/legacy/processbinding')[module]();\x0d\n    }\x0d\n    if (processBindingAllowList.has(module)) {\x0d\n      return internalBinding(module);\x0d\n    }\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    throw new Error(`No such module: ${module}`);\x0d\n  };\x0d\n\x0d\n  process._linkedBinding = function _linkedBinding(module) {\x0d\n    module = String(module);\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object')\x0d\n      mod = bindingObj[module] = getLinkedBinding(module);\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Set up internalBinding() in the closure.\x0d\n * @type {import('typings/globals').internalBinding}\x0d\n */\x0d\nlet internalBinding;\x0d\n{\x0d\n  const bindingObj = { __proto__: null };\x0d\n  // eslint-disable-next-line no-global-assign\x0d\n  internalBinding = function internalBinding(module) {\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object') {\x0d\n      mod = bindingObj[module] = getInternalBinding(module);\x0d\n      ArrayPrototypePush(moduleLoadList\x2C `Internal Binding ${module}`);\x0d\n    }\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst selfId = 'internal/bootstrap/realm';\x0d\nconst {\x0d\n  builtinIds\x2C\x0d\n  compileFunction\x2C\x0d\n  setInternalLoaders\x2C\x0d\n} = internalBinding('builtins');\x0d\n\x0d\nconst { ModuleWrap } = internalBinding('module_wrap');\x0d\nObjectSetPrototypeOf(ModuleWrap.prototype\x2C null);\x0d\n\x0d\nconst getOwn = (target\x2C property\x2C receiver) => {\x0d\n  return ObjectPrototypeHasOwnProperty(target\x2C property) ?\x0d\n    ReflectGet(target\x2C property\x2C receiver) :\x0d\n    undefined;\x0d\n};\x0d\n\x0d\nconst publicBuiltinIds = builtinIds\x0d\n  .filter((id) =>\x0d\n    !StringPrototypeStartsWith(id\x2C 'internal/') &&\x0d\n      !experimentalModuleList.has(id)\x2C\x0d\n  );\x0d\n// Do not expose the loaders to user land even with --expose-internals.\x0d\nconst internalBuiltinIds = builtinIds\x0d\n  .filter((id) => StringPrototypeStartsWith(id\x2C 'internal/') && id !== selfId);\x0d\n\x0d\n// When --expose-internals is on we'll add the internal builtin ids to these.\x0d\nlet canBeRequiredByUsersList = new SafeSet(publicBuiltinIds);\x0d\nlet canBeRequiredByUsersWithoutSchemeList =\x0d\n  new SafeSet(publicBuiltinIds.filter((id) => !schemelessBlockList.has(id)));\x0d\n\x0d\n/**\x0d\n * An internal abstraction for the built-in JavaScript modules of Node.js.\x0d\n * Be careful not to expose this to user land unless --expose-internals is\x0d\n * used\x2C in which case there is no compatibility guarantee about this class.\x0d\n */\x0d\nclass BuiltinModule {\x0d\n  /**\x0d\n   * A map from the module IDs to the module instances.\x0d\n   * @type {Map<string\x2C BuiltinModule>}\x0d\n   */\x0d\n  static map = new SafeMap(\x0d\n    ArrayPrototypeMap(builtinIds\x2C (id) => [id\x2C new BuiltinModule(id)])\x2C\x0d\n  );\x0d\n\x0d\n  constructor(id) {\x0d\n    this.filename = `${id}.js`;\x0d\n    this.id = id;\x0d\n\x0d\n    // The CJS exports object of the module.\x0d\n    this.exports = {};\x0d\n    // States used to work around circular dependencies.\x0d\n    this.loaded = false;\x0d\n    this.loading = false;\x0d\n\x0d\n    // The following properties are used by the ESM implementation and only\x0d\n    // initialized when the built-in module is loaded by users.\x0d\n    /**\x0d\n     * The C++ ModuleWrap binding used to interface with the ESM implementation.\x0d\n     * @type {ModuleWrap|undefined}\x0d\n     */\x0d\n    this.module = undefined;\x0d\n    /**\x0d\n     * Exported names for the ESM imports.\x0d\n     * @type {string[]|undefined}\x0d\n     */\x0d\n    this.exportKeys = undefined;\x0d\n  }\x0d\n\x0d\n  static allowRequireByUsers(id) {\x0d\n    if (id === selfId) {\x0d\n      // No code because this is an assertion against bugs.\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new Error(`Should not allow ${id}`);\x0d\n    }\x0d\n    canBeRequiredByUsersList.add(id);\x0d\n    if (!schemelessBlockList.has(id)) {\x0d\n      canBeRequiredByUsersWithoutSchemeList.add(id);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  static setRealmAllowRequireByUsers(ids) {\x0d\n    canBeRequiredByUsersList =\x0d\n      new SafeSet(ArrayPrototypeFilter(ids\x2C (id) => ArrayPrototypeIncludes(publicBuiltinIds\x2C id)));\x0d\n    canBeRequiredByUsersWithoutSchemeList =\x0d\n      new SafeSet(ArrayPrototypeFilter(ids\x2C (id) => !schemelessBlockList.has(id)));\x0d\n  }\x0d\n\x0d\n  // To be called during pre-execution when --expose-internals is on.\x0d\n  // Enables the user-land module loader to access internal modules.\x0d\n  static exposeInternals() {\x0d\n    for (let i = 0; i < internalBuiltinIds.length; ++i) {\x0d\n      BuiltinModule.allowRequireByUsers(internalBuiltinIds[i]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  static exists(id) {\x0d\n    return BuiltinModule.map.has(id);\x0d\n  }\x0d\n\x0d\n  static canBeRequiredByUsers(id) {\x0d\n    return canBeRequiredByUsersList.has(id);\x0d\n  }\x0d\n\x0d\n  static canBeRequiredWithoutScheme(id) {\x0d\n    return canBeRequiredByUsersWithoutSchemeList.has(id);\x0d\n  }\x0d\n\x0d\n  static normalizeRequirableId(id) {\x0d\n    if (StringPrototypeStartsWith(id\x2C 'node:')) {\x0d\n      const normalizedId = StringPrototypeSlice(id\x2C 5);\x0d\n      if (BuiltinModule.canBeRequiredByUsers(normalizedId)) {\x0d\n        return normalizedId;\x0d\n      }\x0d\n    } else if (BuiltinModule.canBeRequiredWithoutScheme(id)) {\x0d\n      return id;\x0d\n    }\x0d\n\x0d\n    return undefined;\x0d\n  }\x0d\n\x0d\n  static isBuiltin(id) {\x0d\n    return BuiltinModule.canBeRequiredWithoutScheme(id) || (\x0d\n      typeof id === 'string' &&\x0d\n        StringPrototypeStartsWith(id\x2C 'node:') &&\x0d\n        BuiltinModule.canBeRequiredByUsers(StringPrototypeSlice(id\x2C 5))\x0d\n    );\x0d\n  }\x0d\n\x0d\n  static getCanBeRequiredByUsersWithoutSchemeList() {\x0d\n    return ArrayFrom(canBeRequiredByUsersWithoutSchemeList);\x0d\n  }\x0d\n\x0d\n  static getSchemeOnlyModuleNames() {\x0d\n    return ArrayFrom(schemelessBlockList);\x0d\n  }\x0d\n\x0d\n  // Used by user-land module loaders to compile and load builtins.\x0d\n  compileForPublicLoader() {\x0d\n    if (!BuiltinModule.canBeRequiredByUsers(this.id)) {\x0d\n      // No code because this is an assertion against bugs\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new Error(`Should not compile ${this.id} for public use`);\x0d\n    }\x0d\n    this.compileForInternalLoader();\x0d\n    if (!this.exportKeys) {\x0d\n      // When using --expose-internals\x2C we do not want to reflect the named\x0d\n      // exports from core modules as this can trigger unnecessary getters.\x0d\n      const internal = StringPrototypeStartsWith(this.id\x2C 'internal/');\x0d\n      this.exportKeys = internal ? [] : ObjectKeys(this.exports);\x0d\n    }\x0d\n    return this.exports;\x0d\n  }\x0d\n\x0d\n  getESMFacade() {\x0d\n    if (this.module) return this.module;\x0d\n    const url = `node:${this.id}`;\x0d\n    const builtin = this;\x0d\n    const exportsKeys = ArrayPrototypeSlice(this.exportKeys);\x0d\n    if (!ArrayPrototypeIncludes(exportsKeys\x2C 'default')) {\x0d\n      ArrayPrototypePush(exportsKeys\x2C 'default');\x0d\n    }\x0d\n    this.module = new ModuleWrap(\x0d\n      url\x2C undefined\x2C exportsKeys\x2C\x0d\n      function() {\x0d\n        builtin.syncExports();\x0d\n        this.setExport('default'\x2C builtin.exports);\x0d\n      });\x0d\n    // Ensure immediate sync execution to capture exports now\x0d\n    this.module.instantiate();\x0d\n    this.module.evaluate(-1\x2C false);\x0d\n    return this.module;\x0d\n  }\x0d\n\x0d\n  // Provide named exports for all builtin libraries so that the libraries\x0d\n  // may be imported in a nicer way for ESM users. The default export is left\x0d\n  // as the entire namespace (module.exports) and updates when this function is\x0d\n  // called so that APMs and other behavior are supported.\x0d\n  syncExports() {\x0d\n    const names = this.exportKeys;\x0d\n    if (this.module) {\x0d\n      for (let i = 0; i < names.length; i++) {\x0d\n        const exportName = names[i];\x0d\n        if (exportName === 'default') continue;\x0d\n        this.module.setExport(exportName\x2C\x0d\n                              getOwn(this.exports\x2C exportName\x2C this.exports));\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  compileForInternalLoader() {\x0d\n    if (this.loaded || this.loading) {\x0d\n      return this.exports;\x0d\n    }\x0d\n\x0d\n    const id = this.id;\x0d\n    this.loading = true;\x0d\n\x0d\n    try {\x0d\n      const requireFn = StringPrototypeStartsWith(this.id\x2C 'internal/deps/') ?\x0d\n        requireWithFallbackInDeps : requireBuiltin;\x0d\n\x0d\n      const fn = compileFunction(id);\x0d\n      // Arguments must match the parameters specified in\x0d\n      // BuiltinLoader::LookupAndCompile().\x0d\n      fn(this.exports\x2C requireFn\x2C this\x2C process\x2C internalBinding\x2C primordials);\x0d\n\x0d\n      this.loaded = true;\x0d\n    } finally {\x0d\n      this.loading = false;\x0d\n    }\x0d\n\x0d\n    // "NativeModule" is a legacy name of "BuiltinModule". We keep it\x0d\n    // here to avoid breaking users who parse process.moduleLoadList.\x0d\n    ArrayPrototypePush(moduleLoadList\x2C `NativeModule ${id}`);\x0d\n    return this.exports;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Think of this as module.exports in this file even though it is not\x0d\n// written in CommonJS style.\x0d\nconst loaderExports = {\x0d\n  internalBinding\x2C\x0d\n  BuiltinModule\x2C\x0d\n  require: requireBuiltin\x2C\x0d\n};\x0d\n\x0d\nfunction requireBuiltin(id) {\x0d\n  if (id === selfId) {\x0d\n    return loaderExports;\x0d\n  }\x0d\n\x0d\n  const mod = BuiltinModule.map.get(id);\x0d\n  // Can't load the internal errors module from here\x2C have to use a raw error.\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  if (!mod) throw new TypeError(`Missing internal module '${id}'`);\x0d\n  return mod.compileForInternalLoader();\x0d\n}\x0d\n\x0d\n// Allow internal modules from dependencies to require\x0d\n// other modules from dependencies by providing fallbacks.\x0d\nfunction requireWithFallbackInDeps(request) {\x0d\n  if (StringPrototypeStartsWith(request\x2C 'node:')) {\x0d\n    request = StringPrototypeSlice(request\x2C 5);\x0d\n  } else if (!BuiltinModule.map.has(request)) {\x0d\n    request = `internal/deps/${request}`;\x0d\n  }\x0d\n  return requireBuiltin(request);\x0d\n}\x0d\n\x0d\nfunction setupPrepareStackTrace() {\x0d\n  const {\x0d\n    setEnhanceStackForFatalException\x2C\x0d\n    setPrepareStackTraceCallback\x2C\x0d\n  } = internalBinding('errors');\x0d\n  const {\x0d\n    prepareStackTraceCallback\x2C\x0d\n    ErrorPrepareStackTrace\x2C\x0d\n    fatalExceptionStackEnhancers: {\x0d\n      beforeInspector\x2C\x0d\n      afterInspector\x2C\x0d\n    }\x2C\x0d\n  } = requireBuiltin('internal/errors');\x0d\n  // Tell our PrepareStackTraceCallback passed to the V8 API\x0d\n  // to call prepareStackTrace().\x0d\n  setPrepareStackTraceCallback(prepareStackTraceCallback);\x0d\n  // Set the function used to enhance the error stack for printing\x0d\n  setEnhanceStackForFatalException(beforeInspector\x2C afterInspector);\x0d\n  // Setup the default Error.prepareStackTrace.\x0d\n  ObjectDefineProperty(Error\x2C 'prepareStackTrace'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: ErrorPrepareStackTrace\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\n// Store the internal loaders in C++.\x0d\nsetInternalLoaders(internalBinding\x2C requireBuiltin);\x0d\n\x0d\n// Setup per-realm bindings.\x0d\nsetupPrepareStackTrace();\x0d\n
code-source-info,0x7ff734383a40,9,13946,14298,,,
code-creation,JS,11,104703,0x7ff734383cc0,1152,compileForInternalLoader node:internal/bootstrap/realm:383:27,0xa4fec38a00,^
code-source-info,0x7ff734383cc0,9,12893,13717,,,
code-creation,JS,11,104728,0x7ff734384180,476,internalBinding node:internal/bootstrap/realm:184:45,0xa4fec38160,^
code-source-info,0x7ff734384180,9,6188,6433,,,
code-creation,JS,11,104748,0x7ff734384380,288,getCLIOptionsFromBinding node:internal/options:18:34,0x1d9b72476a0,^
code-source-info,0x7ff734384380,17,514,620,,,
code-creation,JS,11,104768,0x7ff7343844c0,504,getOptionValue node:internal/options:44:24,0x1d9b72478d8,^
code-source-info,0x7ff7343844c0,17,1028,1278,,,
code-creation,JS,11,104789,0x7ff734384700,424,addReadOnlyProcessAlias node:internal/process/pre_execution:279:33,0x1d9b727f0b0,^
code-source-info,0x7ff734384700,67,9260,9520,,,
code-creation,JS,11,104811,0x7ff734384900,132,exposeLazyInterfaces node:internal/util:674:30,0x1d9b7246aa8,^
code-source-info,0x7ff734384900,16,19114,19187,,,
code-creation,JS,10,104915,0x125aa78ec84,126,setupWarningHandler node:internal/process/pre_execution:292:29,0x1d9b727f108,~
code-source-info,0x125aa78ec84,67,9552,10062,C0O9552C11O9619C19O9619C24O9573C30O9589C36O9659C46O9663C57O9708C62O9712C69O9729C74O9745C79O9753C90O9753C96O9884C103O9888C108O9919C120O9919C125O10061,,
code-creation,JS,10,105004,0x125aa78efbc,103,setupUndici node:internal/process/pre_execution:314:21,0x1d9b727f160,~
code-source-info,0x125aa78efbc,67,10161,10572,C0O10169C8O10173C14O10223C23O10253C30O10286C37O10318C44O10350C51O10388C56O10393C60O10413C72O10434C78O10485C85O10506C96O10485C102O10571,,
code-creation,JS,10,105079,0x125aa78f3f4,172,setupWebCrypto node:internal/process/pre_execution:343:24,0x1d9b727f210,~
code-source-info,0x125aa78f3f4,67,11221,12181,C0O11229C5O11233C9O11253C17O11281C23O11281C29O11342C30O11349C31O11360C37O11364C42O11389C48O11409C55O11448C73O11409C78O11731C89O11760C94O11731C101O11874C108O11895C121O11965C152O11965C165O11874C171O12180,,
code-creation,JS,10,105176,0x125aa78f8c4,70,setupCustomEvent node:internal/process/pre_execution:391:26,0x1d9b727f2e8,~
code-source-info,0x125aa78f8c4,67,12852,13111,C0O12860C5O12864C9O12884C17O12912C23O12912C29O12975C30O12982C31O13015C37O13015C42O12999C47O13052C54O13068C63O13052C69O13110,,
code-creation,JS,10,105234,0x125aa78fa94,64,setupCodeCoverage node:internal/process/pre_execution:376:27,0x1d9b727f290,~
code-source-info,0x125aa78fa94,67,12211,12717,C0O12523C3O12535C8O12539C16O12567C22O12567C28O12622C31O12630C38O12660C44O12687C49O12691C54O12660C58O12651C63O12716,,
code-creation,JS,10,105286,0x125aa78fc74,75,setupDebugEnv node:internal/process/pre_execution:422:23,0x1d9b727f418,~
code-source-info,0x125aa78fc74,67,13637,13851,C0O13645C6O13645C11O13678C19O13706C24O13710C29O13679C34O13726C42O13730C48O13775C54O13775C59O13810C64O13824C69O13825C74O13850,,
code-creation,JS,10,105371,0x125aa78ffe4,153,initializeDebugEnv node:internal/util/debuglog:21:28,0x1d9b724d6f0,~
script-source,22,node:internal/util/debuglog,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect\x2C format\x2C formatWithOptions } = require('internal/util/inspect');\x0d\n\x0d\n// `debugImpls` and `testEnabled` are deliberately not initialized so any call\x0d\n// to `debuglog()` before `initializeDebugEnv()` is called will throw.\x0d\nlet debugImpls;\x0d\nlet testEnabled;\x0d\n\x0d\n\x0d\n// `debugEnv` is initial value of process.env.NODE_DEBUG\x0d\nfunction initializeDebugEnv(debugEnv) {\x0d\n  debugImpls = { __proto__: null };\x0d\n  if (debugEnv) {\x0d\n    // This is run before any user code\x2C it's OK not to use primordials.\x0d\n    debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g\x2C '\\\\$&')\x0d\n      .replaceAll('*'\x2C '.*')\x0d\n      .replaceAll('\x2C'\x2C '$|^');\x0d\n    const debugEnvRegex = new RegExp(`^${debugEnv}$`\x2C 'i');\x0d\n    testEnabled = (str) => RegExpPrototypeExec(debugEnvRegex\x2C str) !== null;\x0d\n  } else {\x0d\n    testEnabled = () => false;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Emits warning when user sets\x0d\n// NODE_DEBUG=http or NODE_DEBUG=http2.\x0d\nfunction emitWarningIfNeeded(set) {\x0d\n  if ('HTTP' === set || 'HTTP2' === set) {\x0d\n    process.emitWarning('Setting the NODE_DEBUG environment variable ' +\x0d\n      'to \\'' + StringPrototypeToLowerCase(set) + '\\' can expose sensitive ' +\x0d\n      'data (such as passwords\x2C tokens and authentication headers) ' +\x0d\n      'in the resulting log.');\x0d\n  }\x0d\n}\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nlet utilColors;\x0d\nfunction lazyUtilColors() {\x0d\n  utilColors ??= require('internal/util/colors');\x0d\n  return utilColors;\x0d\n}\x0d\n\x0d\nfunction debuglogImpl(enabled\x2C set) {\x0d\n  if (debugImpls[set] === undefined) {\x0d\n    if (enabled) {\x0d\n      const pid = process.pid;\x0d\n      emitWarningIfNeeded(set);\x0d\n      debugImpls[set] = function debug(...args) {\x0d\n        const colors = lazyUtilColors().shouldColorize(process.stderr);\x0d\n        const msg = formatWithOptions({ colors }\x2C ...args);\x0d\n        const coloredPID = inspect(pid\x2C { colors });\x0d\n        process.stderr.write(format('%s %s: %s\\n'\x2C set\x2C coloredPID\x2C msg));\x0d\n      };\x0d\n    } else {\x0d\n      debugImpls[set] = noop;\x0d\n    }\x0d\n  }\x0d\n  return debugImpls[set];\x0d\n}\x0d\n\x0d\n// debuglogImpl depends on process.pid and process.env.NODE_DEBUG\x2C\x0d\n// so it needs to be called lazily in top scopes of internal modules\x0d\n// that may be loaded before these run time states are allowed to\x0d\n// be accessed.\x0d\nfunction debuglog(set\x2C cb) {\x0d\n  function init() {\x0d\n    set = StringPrototypeToUpperCase(set);\x0d\n    enabled = testEnabled(set);\x0d\n  }\x0d\n  let debug = (...args) => {\x0d\n    init();\x0d\n    // Only invokes debuglogImpl() when the debug function is\x0d\n    // called for the first time.\x0d\n    debug = debuglogImpl(enabled\x2C set);\x0d\n    if (typeof cb === 'function')\x0d\n      cb(debug);\x0d\n    switch (args.length) {\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  let enabled;\x0d\n  let test = () => {\x0d\n    init();\x0d\n    test = () => enabled;\x0d\n    return enabled;\x0d\n  };\x0d\n  const logger = (...args) => {\x0d\n    switch (args.length) {\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  ObjectDefineProperty(logger\x2C 'enabled'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return test();\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n  });\x0d\n  return logger;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  debuglog\x2C\x0d\n  initializeDebugEnv\x2C\x0d\n};\x0d\n
code-source-info,0x125aa78ffe4,22,550,1008,C0O566C7O577C13O603C24O718C38O718C45O763C56O764C63O793C74O794C82O845C94O860C110O845C115O845C117O884C126O896C138O974C145O986C152O1007,,
code-creation,JS,10,105585,0x125aa790684,31,initializeReport node:internal/process/pre_execution:410:26,0x1d9b727f398,~
code-source-info,0x125aa790684,67,13377,13611,C0O13385C11O13406C16O13502C24O13385C30O13610,,
code-creation,JS,10,105700,0x125aa790f24,573,initializePermission node:internal/process/pre_execution:575:30,0x1d9b727f700,~
code-source-info,0x125aa790f
code-creation,JS,10,105787,0x125aa791364,34, node:internal/process/pre_execution:632:53,0x125aa790bb8,~
code-source-info,0x125aa791364,67,20750,20915,C0O20783C5O20783C10O20822C16O20841C26O20847C31O20841C33O20914,,
code-creation,JS,10,105831,0x125aa7914dc,35,initializeSourceMapsHandlers node:internal/process/pre_execution:713:38,0x1d9b727f898,~
code-source-info,0x125aa7914dc,67,23567,23733,C0O23617C6O23617C11O23588C16O23669C18O23690C24O23690C29O23669C34O23732,,
code-creation,JS,10,105901,0x125aa7916bc,94,setSourceMapsEnabled node:internal/source_map/source_map_cache:55:30,0x1d9b72682d0,~
script-source,43,node:internal/source_map/source_map_cache,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectKeys\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeCodePointAt\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n} = primordials;\x0d\n\x0d\n// See https://sourcemaps.info/spec.html for SourceMap V3 specification.\x0d\nconst { Buffer } = require('buffer');\x0d\nlet debug = require('internal/util/debuglog').debuglog('source_map'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nconst { validateBoolean } = require('internal/validators');\x0d\nconst {\x0d\n  setSourceMapsEnabled: setSourceMapsNative\x2C\x0d\n} = internalBinding('errors');\x0d\nconst {\x0d\n  setInternalPrepareStackTrace\x2C\x0d\n} = require('internal/errors');\x0d\nconst { getLazy } = require('internal/util');\x0d\n\x0d\n// Since the CJS module cache is mutable\x2C which leads to memory leaks when\x0d\n// modules are deleted\x2C we use a WeakMap so that the source map cache will\x0d\n// be purged automatically:\x0d\nconst getCjsSourceMapCache = getLazy(() => {\x0d\n  const { IterableWeakMap } = require('internal/util/iterable_weak_map');\x0d\n  return new IterableWeakMap();\x0d\n});\x0d\n\x0d\n// The esm cache is not mutable\x2C so we can use a Map without memory concerns:\x0d\nconst esmSourceMapCache = new SafeMap();\x0d\n// The generated sources is not mutable\x2C so we can use a Map without memory concerns:\x0d\nconst generatedSourceMapCache = new SafeMap();\x0d\nconst kLeadingProtocol = /^\\w+:\\/\\//;\x0d\nconst kSourceMappingURLMagicComment = /\\/[*/]#\\s+sourceMappingURL=(?<sourceMappingURL>[^\\s]+)/g;\x0d\nconst kSourceURLMagicComment = /\\/[*/]#\\s+sourceURL=(?<sourceURL>[^\\s]+)/g;\x0d\n\x0d\nconst { isAbsolute } = require('path');\x0d\nconst { fileURLToPath\x2C pathToFileURL\x2C URL } = require('internal/url');\x0d\n\x0d\nlet SourceMap;\x0d\n\x0d\n// This is configured with --enable-source-maps during pre-execution.\x0d\nlet sourceMapsEnabled = false;\x0d\nfunction getSourceMapsEnabled() {\x0d\n  return sourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction setSourceMapsEnabled(val) {\x0d\n  validateBoolean(val\x2C 'val');\x0d\n\x0d\n  setSourceMapsNative(val);\x0d\n  if (val) {\x0d\n    const {\x0d\n      prepareStackTraceWithSourceMaps\x2C\x0d\n    } = require('internal/source_map/prepare_stack_trace');\x0d\n    setInternalPrepareStackTrace(prepareStackTraceWithSourceMaps);\x0d\n  } else if (sourceMapsEnabled !== undefined) {\x0d\n    // Reset prepare stack trace callback only when disabling source maps.\x0d\n    const {\x0d\n      defaultPrepareStackTrace\x2C\x0d\n    } = require('internal/errors');\x0d\n    setInternalPrepareStackTrace(defaultPrepareStackTrace);\x0d\n  }\x0d\n\x0d\n  sourceMapsEnabled = val;\x0d\n}\x0d\n\x0d\nfunction extractSourceURLMagicComment(content) {\x0d\n  let match;\x0d\n  let matchSourceURL;\x0d\n  // A while loop is used here to get the last occurrence of sourceURL.\x0d\n  // This is needed so that we don't match sourceURL in string literals.\x0d\n  while ((match = RegExpPrototypeExec(kSourceURLMagicComment\x2C content))) {\x0d\n    matchSourceURL = match;\x0d\n  }\x0d\n  if (matchSourceURL == null) {\x0d\n    return null;\x0d\n  }\x0d\n  let sourceURL = matchSourceURL.groups.sourceURL;\x0d\n  if (sourceURL != null && RegExpPrototypeExec(kLeadingProtocol\x2C sourceURL) === null) {\x0d\n    sourceURL = pathToFileURL(sourceURL).href;\x0d\n  }\x0d\n  return sourceURL;\x0d\n}\x0d\n\x0d\nfunction extractSourceMapURLMagicComment(content) {\x0d\n  let match;\x0d\n  let lastMatch;\x0d\n  // A while loop is used here to get the last occurrence of sourceMappingURL.\x0d\n  // This is needed so that we don't match sourceMappingURL in string literals.\x0d\n  while ((match = RegExpPrototypeExec(kSourceMappingURLMagicComment\x2C content))) {\x0d\n    lastMatch = match;\x0d\n  }\x0d\n  if (lastMatch == null) {\x0d\n    return null;\x0d\n  }\x0d\n  return lastMatch.groups.sourceMappingURL;\x0d\n}\x0d\n\x0d\nfunction maybeCacheSourceMap(filename\x2C content\x2C cjsModuleInstance\x2C isGeneratedSource\x2C sourceURL\x2C sourceMapURL) {\x0d\n  const sourceMapsEnabled = getSourceMapsEnabled();\x0d\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\x0d\n  const { normalizeReferrerURL } = require('internal/modules/helpers');\x0d\n  filename = normalizeReferrerURL(filename);\x0d\n  if (filename === undefined) {\x0d\n    // This is most likely an invalid filename in sourceURL of [eval]-wrapper.\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (sourceMapURL === undefined) {\x0d\n    sourceMapURL = extractSourceMapURLMagicComment(content);\x0d\n  }\x0d\n\x0d\n  // Bail out when there is no source map url.\x0d\n  if (typeof sourceMapURL !== 'string') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // FIXME: callers should obtain sourceURL from v8 and pass it\x0d\n  // rather than leaving it undefined and extract by regex.\x0d\n  if (sourceURL === undefined) {\x0d\n    sourceURL = extractSourceURLMagicComment(content);\x0d\n  }\x0d\n\x0d\n  const data = dataFromUrl(filename\x2C sourceMapURL);\x0d\n  const url = data ? null : sourceMapURL;\x0d\n  if (cjsModuleInstance) {\x0d\n    getCjsSourceMapCache().set(cjsModuleInstance\x2C {\x0d\n      __proto__: null\x2C\x0d\n      filename\x2C\x0d\n      lineLengths: lineLengths(content)\x2C\x0d\n      data\x2C\x0d\n      url\x2C\x0d\n      sourceURL\x2C\x0d\n    });\x0d\n  } else if (isGeneratedSource) {\x0d\n    const entry = {\x0d\n      __proto__: null\x2C\x0d\n      lineLengths: lineLengths(content)\x2C\x0d\n      data\x2C\x0d\n      url\x2C\x0d\n      sourceURL\x2C\x0d\n    };\x0d\n    generatedSourceMapCache.set(filename\x2C entry);\x0d\n    if (sourceURL) {\x0d\n      generatedSourceMapCache.set(sourceURL\x2C entry);\x0d\n    }\x0d\n  } else {\x0d\n    // If there is no cjsModuleInstance and is not generated source assume we are in a\x0d\n    // "modules/esm" context.\x0d\n    const entry = {\x0d\n      __proto__: null\x2C\x0d\n      lineLengths: lineLengths(content)\x2C\x0d\n      data\x2C\x0d\n      url\x2C\x0d\n      sourceURL\x2C\x0d\n    };\x0d\n    esmSourceMapCache.set(filename\x2C entry);\x0d\n    if (sourceURL) {\x0d\n      esmSourceMapCache.set(sourceURL\x2C entry);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeCacheGeneratedSourceMap(content) {\x0d\n  const sourceMapsEnabled = getSourceMapsEnabled();\x0d\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\x0d\n\x0d\n  const sourceURL = extractSourceURLMagicComment(content);\x0d\n  if (sourceURL === null) {\x0d\n    return;\x0d\n  }\x0d\n  try {\x0d\n    maybeCacheSourceMap(sourceURL\x2C content\x2C null\x2C true\x2C sourceURL);\x0d\n  } catch (err) {\x0d\n    // This can happen if the filename is not a valid URL.\x0d\n    // If we fail to cache the source map\x2C we should not fail the whole process.\x0d\n    debug(err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction dataFromUrl(sourceURL\x2C sourceMappingURL) {\x0d\n  try {\x0d\n    const url = new URL(sourceMappingURL);\x0d\n    switch (url.protocol) {\x0d\n      case 'data:':\x0d\n        return sourceMapFromDataUrl(sourceURL\x2C url.pathname);\x0d\n      default:\x0d\n        debug(`unknown protocol ${url.protocol}`);\x0d\n        return null;\x0d\n    }\x0d\n  } catch (err) {\x0d\n    debug(err);\x0d\n    // If no scheme is present\x2C we assume we are dealing with a file path.\x0d\n    const mapURL = new URL(sourceMappingURL\x2C sourceURL).href;\x0d\n    return sourceMapFromFile(mapURL);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Cache the length of each line in the file that a source map was extracted\x0d\n// from. This allows translation from byte offset V8 coverage reports\x2C\x0d\n// to line/column offset Source Map V3.\x0d\nfunction lineLengths(content) {\x0d\n  const contentLength = content.length;\x0d\n  const output = [];\x0d\n  let lineLength = 0;\x0d\n  for (let i = 0; i < contentLength; i++\x2C lineLength++) {\x0d\n    const codePoint = StringPrototypeCodePointAt(content\x2C i);\x0d\n\x0d\n    // We purposefully keep \\r as part of the line-length calculation\x2C in\x0d\n    // cases where there is a \\r\\n separator\x2C so that this can be taken into\x0d\n    // account in coverage calculations.\x0d\n    // codepoints for \\n (new line)\x2C \\u2028 (line separator) and \\u2029 (paragraph separator)\x0d\n    if (codePoint === 10 || codePoint === 0x2028 || codePoint === 0x2029) {\x0d\n      ArrayPrototypePush(output\x2C lineLength);\x0d\n      lineLength = -1; // To not count the matched codePoint such as \\n character\x0d\n    }\x0d\n  }\x0d\n  ArrayPrototypePush(output\x2C lineLength);\x0d\n  return output;\x0d\n}\x0d\n\x0d\n\x0d\nfunction sourceMapFromFile(mapURL) {\x0d\n  try {\x0d\n    const fs = require('fs');\x0d\n    const content = fs.readFileSync(fileURLToPath(mapURL)\x2C 'utf8');\x0d\n    const data = JSONParse(content);\x0d\n    return sourcesToAbsolute(mapURL\x2C data);\x0d\n  } catch (err) {\x0d\n    debug(err);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// data:[<mediatype>][;base64]\x2C<data> see:\x0d\n// https://tools.ietf.org/html/rfc2397#section-2\x0d\nfunction sourceMapFromDataUrl(sourceURL\x2C url) {\x0d\n  const { 0: format\x2C 1: data } = StringPrototypeSplit(url\x2C '\x2C');\x0d\n  const splitFormat = StringPrototypeSplit(format\x2C ';');\x0d\n  const contentType = splitFormat[0];\x0d\n  const base64 = splitFormat[splitFormat.length - 1] === 'base64';\x0d\n  if (contentType === 'application/json') {\x0d\n    const decodedData = base64 ?\x0d\n      Buffer.from(data\x2C 'base64').toString('utf8') : data;\x0d\n    try {\x0d\n      const parsedData = JSONParse(decodedData);\x0d\n      return sourcesToAbsolute(sourceURL\x2C parsedData);\x0d\n    } catch (err) {\x0d\n      debug(err);\x0d\n      return null;\x0d\n    }\x0d\n  } else {\x0d\n    debug(`unknown content-type ${contentType}`);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// If the sources are not absolute URLs after prepending of the "sourceRoot"\x2C\x0d\n// the sources are resolved relative to the SourceMap (like resolving script\x0d\n// src in a html document).\x0d\n// If the sources are absolute paths\x2C the sources are converted to absolute file URLs.\x0d\nfunction sourcesToAbsolute(baseURL\x2C data) {\x0d\n  data.sources = data.sources.map((source) => {\x0d\n    source = (data.sourceRoot || '') + source;\x0d\n    if (isAbsolute(source)) {\x0d\n      return pathToFileURL(source).href;\x0d\n    }\x0d\n    return new URL(source\x2C baseURL).href;\x0d\n  });\x0d\n  // The sources array is now resolved to absolute URLs\x2C sourceRoot should\x0d\n  // be updated to noop.\x0d\n  data.sourceRoot = '';\x0d\n  return data;\x0d\n}\x0d\n\x0d\n// WARNING: The `sourceMapCacheToObject` and `appendCJSCache` run during\x0d\n// shutdown. In particular\x2C they also run when Workers are terminated\x2C making\x0d\n// it important that they do not call out to any user-provided code\x2C including\x0d\n// built-in prototypes that might have been tampered with.\x0d\n\x0d\n// Get serialized representation of source-map cache\x2C this is used\x0d\n// to persist a cache of source-maps to disk when NODE_V8_COVERAGE is enabled.\x0d\nfunction sourceMapCacheToObject() {\x0d\n  const obj = { __proto__: null };\x0d\n\x0d\n  for (const { 0: k\x2C 1: v } of esmSourceMapCache) {\x0d\n    obj[k] = v;\x0d\n  }\x0d\n\x0d\n  appendCJSCache(obj);\x0d\n\x0d\n  if (ObjectKeys(obj).length === 0) {\x0d\n    return undefined;\x0d\n  }\x0d\n  return obj;\x0d\n}\x0d\n\x0d\nfunction appendCJSCache(obj) {\x0d\n  for (const value of getCjsSourceMapCache()) {\x0d\n    obj[value.filename] = {\x0d\n      __proto__: null\x2C\x0d\n      lineLengths: value.lineLengths\x2C\x0d\n      data: value.data\x2C\x0d\n      url: value.url\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction findSourceMap(sourceURL) {\x0d\n  if (RegExpPrototypeExec(kLeadingProtocol\x2C sourceURL) === null) {\x0d\n    sourceURL = pathToFileURL(sourceURL).href;\x0d\n  }\x0d\n  if (!SourceMap) {\x0d\n    SourceMap = require('internal/source_map/source_map').SourceMap;\x0d\n  }\x0d\n  let entry = esmSourceMapCache.get(sourceURL) ?? generatedSourceMapCache.get(sourceURL);\x0d\n  if (entry === undefined) {\x0d\n    for (const value of getCjsSourceMapCache()) {\x0d\n      const filename = value.filename;\x0d\n      const cachedSourceURL = value.sourceURL;\x0d\n      if (sourceURL === filename || sourceURL === cachedSourceURL) {\x0d\n        entry = value;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (entry === undefined) {\x0d\n    return undefined;\x0d\n  }\x0d\n  let sourceMap = entry.sourceMap;\x0d\n  if (sourceMap === undefined) {\x0d\n    sourceMap = new SourceMap(entry.data\x2C { lineLengths: entry.lineLengths });\x0d\n    entry.sourceMap = sourceMap;\x0d\n  }\x0d\n  return sourceMap;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  findSourceMap\x2C\x0d\n  getSourceMapsEnabled\x2C\x0d\n  setSourceMapsEnabled\x2C\x0d\n  maybeCacheSourceMap\x2C\x0d\n  maybeCacheGeneratedSourceMap\x2C\x0d\n  sourceMapCacheToObject\x2C\x0d\n};\x0d\n
code-source-info,0x125aa7916bc,43,1825,2398,C0O1836C8O1836C13O1870C18O1870C22O1899C26O1972C32O1972C37O1930C42O2029C47O2029C53O2102C59O2272C65O2272C70O2237C75O2305C80O2305C84O2371C86O2389C93O2397,,
code-creation,JS,10,106475,0x125aa792344,30, node:internal/validators:216:41,0x1d9b7243360,~
script-source,15,node:internal/validators,/* eslint jsdoc/require-jsdoc: "error" */\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_SOCKET_BAD_PORT: { HideStackFramesError: ERR_SOCKET_BAD_PORT }\x2C\x0d\n    ERR_INVALID_ARG_TYPE: { HideStackFramesError: ERR_INVALID_ARG_TYPE }\x2C\x0d\n    ERR_INVALID_ARG_VALUE: { HideStackFramesError: ERR_INVALID_ARG_VALUE }\x2C\x0d\n    ERR_OUT_OF_RANGE: { HideStackFramesError: ERR_OUT_OF_RANGE }\x2C\x0d\n    ERR_UNKNOWN_SIGNAL: { HideStackFramesError: ERR_UNKNOWN_SIGNAL }\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst { normalizeEncoding } = require('internal/util');\x0d\nconst {\x0d\n  isAsyncFunction\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\n/**\x0d\n * @param {*} value\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isInt32(value) {\x0d\n  return value === (value | 0);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {*} value\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isUint32(value) {\x0d\n  return value === (value >>> 0);\x0d\n}\x0d\n\x0d\nconst octalReg = /^[0-7]+$/;\x0d\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string';\x0d\n\x0d\n/**\x0d\n * Parse and validate values that will be converted into mode_t (the S_*\x0d\n * constants). Only valid numbers and octal strings are allowed. They could be\x0d\n * converted to 32-bit unsigned integers or non-negative signed integers in the\x0d\n * C++ land\x2C but any value higher than 0o777 will result in platform-specific\x0d\n * behaviors.\x0d\n * @param {*} value Values to be validated\x0d\n * @param {string} name Name of the argument\x0d\n * @param {number} [def] If specified\x2C will be returned for invalid values\x0d\n * @returns {number}\x0d\n */\x0d\nfunction parseFileMode(value\x2C name\x2C def) {\x0d\n  value ??= def;\x0d\n  if (typeof value === 'string') {\x0d\n    if (RegExpPrototypeExec(octalReg\x2C value) === null) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C modeDesc);\x0d\n    }\x0d\n    value = NumberParseInt(value\x2C 8);\x0d\n  }\x0d\n\x0d\n  validateUint32(value\x2C name);\x0d\n  return value;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @callback validateInteger\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @param {number} [min]\x0d\n * @param {number} [max]\x0d\n * @returns {asserts value is number}\x0d\n */\x0d\n\x0d\n/** @type {validateInteger} */\x0d\nconst validateInteger = hideStackFrames(\x0d\n  (value\x2C name\x2C min = NumberMIN_SAFE_INTEGER\x2C max = NumberMAX_SAFE_INTEGER) => {\x0d\n    if (typeof value !== 'number')\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    if (!NumberIsInteger(value))\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    if (value < min || value > max)\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n  }\x2C\x0d\n);\x0d\n\x0d\n/**\x0d\n * @callback validateInt32\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @param {number} [min]\x0d\n * @param {number} [max]\x0d\n * @returns {asserts value is number}\x0d\n */\x0d\n\x0d\n/** @type {validateInt32} */\x0d\nconst validateInt32 = hideStackFrames(\x0d\n  (value\x2C name\x2C min = -2147483648\x2C max = 2147483647) => {\x0d\n    // The defaults for min and max correspond to the limits of 32-bit integers.\x0d\n    if (typeof value !== 'number') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    }\x0d\n    if (!NumberIsInteger(value)) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    }\x0d\n    if (value < min || value > max) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n  }\x2C\x0d\n);\x0d\n\x0d\n/**\x0d\n * @callback validateUint32\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @param {number|boolean} [positive=false]\x0d\n * @returns {asserts value is number}\x0d\n */\x0d\n\x0d\n/** @type {validateUint32} */\x0d\nconst validateUint32 = hideStackFrames((value\x2C name\x2C positive = false) => {\x0d\n  if (typeof value !== 'number') {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n  }\x0d\n  if (!NumberIsInteger(value)) {\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n  }\x0d\n  const min = positive ? 1 : 0;\x0d\n  // 2 ** 32 === 4294967296\x0d\n  const max = 4_294_967_295;\x0d\n  if (value < min || value > max) {\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateString\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is string}\x0d\n */\x0d\n\x0d\n/** @type {validateString} */\x0d\nconst validateString = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'string')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'string'\x2C value);\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateNumber\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @param {number} [min]\x0d\n * @param {number} [max]\x0d\n * @returns {asserts value is number}\x0d\n */\x0d\n\x0d\n/** @type {validateNumber} */\x0d\nconst validateNumber = hideStackFrames((value\x2C name\x2C min = undefined\x2C max) => {\x0d\n  if (typeof value !== 'number')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n\x0d\n  if ((min != null && value < min) || (max != null && value > max) ||\x0d\n    ((min != null || max != null) && NumberIsNaN(value))) {\x0d\n    throw new ERR_OUT_OF_RANGE(\x0d\n      name\x2C\x0d\n      `${min != null ? `>= ${min}` : ''}${min != null && max != null ? ' && ' : ''}${max != null ? `<= ${max}` : ''}`\x2C\x0d\n      value);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateOneOf\x0d\n * @template T\x0d\n * @param {T} value\x0d\n * @param {string} name\x0d\n * @param {T[]} oneOf\x0d\n */\x0d\n\x0d\n/** @type {validateOneOf} */\x0d\nconst validateOneOf = hideStackFrames((value\x2C name\x2C oneOf) => {\x0d\n  if (!ArrayPrototypeIncludes(oneOf\x2C value)) {\x0d\n    const allowed = ArrayPrototypeJoin(\x0d\n      ArrayPrototypeMap(oneOf\x2C (v) =>\x0d\n        (typeof v === 'string' ? `'${v}'` : String(v)))\x2C\x0d\n      '\x2C ');\x0d\n    const reason = 'must be one of: ' + allowed;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateBoolean\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is boolean}\x0d\n */\x0d\n\x0d\n/** @type {validateBoolean} */\x0d\nconst validateBoolean = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'boolean')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'boolean'\x2C value);\x0d\n});\x0d\n\x0d\nconst kValidateObjectNone = 0;\x0d\nconst kValidateObjectAllowNullable = 1 << 0;\x0d\nconst kValidateObjectAllowArray = 1 << 1;\x0d\nconst kValidateObjectAllowFunction = 1 << 2;\x0d\nconst kValidateObjectAllowObjects = kValidateObjectAllowArray |\x0d\n  kValidateObjectAllowFunction;\x0d\nconst kValidateObjectAllowObjectsAndNull = kValidateObjectAllowNullable |\x0d\n  kValidateObjectAllowArray |\x0d\n  kValidateObjectAllowFunction;\x0d\n\x0d\n/**\x0d\n * @callback validateObject\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @param {number} [options]\x0d\n */\x0d\n\x0d\n/** @type {validateObject} */\x0d\nconst validateObject = hideStackFrames(\x0d\n  (value\x2C name\x2C options = kValidateObjectNone) => {\x0d\n    if (options === kValidateObjectNone) {\x0d\n      if (value === null || ArrayIsArray(value)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\x0d\n      }\x0d\n\x0d\n      if (typeof value !== 'object') {\x0d\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\x0d\n      }\x0d\n    } else {\x0d\n      const throwOnNullable = (kValidateObjectAllowNullable & options) === 0;\x0d\n\x0d\n      if (throwOnNullable && value === null) {\x0d\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\x0d\n      }\x0d\n\x0d\n      const throwOnArray = (kValidateObjectAllowArray & options) === 0;\x0d\n\x0d\n      if (throwOnArray && ArrayIsArray(value)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\x0d\n      }\x0d\n\x0d\n      const throwOnFunction = (kValidateObjectAllowFunction & options) === 0;\x0d\n      const typeofValue = typeof value;\x0d\n\x0d\n      if (typeofValue !== 'object' && (throwOnFunction || typeofValue !== 'function')) {\x0d\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\x0d\n      }\x0d\n    }\x0d\n  });\x0d\n\x0d\n/**\x0d\n * @callback validateDictionary - We are using the Web IDL Standard definition\x0d\n *                                of "dictionary" here\x2C which means any value\x0d\n *                                whose Type is either Undefined\x2C Null\x2C or\x0d\n *                                Object (which includes functions).\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @see https://webidl.spec.whatwg.org/#es-dictionary\x0d\n * @see https://tc39.es/ecma262/#table-typeof-operator-results\x0d\n */\x0d\n\x0d\n/** @type {validateDictionary} */\x0d\nconst validateDictionary = hideStackFrames(\x0d\n  (value\x2C name) => {\x0d\n    if (value != null && typeof value !== 'object' && typeof value !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'a dictionary'\x2C value);\x0d\n    }\x0d\n  });\x0d\n\x0d\n/**\x0d\n * @callback validateArray\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @param {number} [minLength]\x0d\n * @returns {asserts value is any[]}\x0d\n */\x0d\n\x0d\n/** @type {validateArray} */\x0d\nconst validateArray = hideStackFrames((value\x2C name\x2C minLength = 0) => {\x0d\n  if (!ArrayIsArray(value)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Array'\x2C value);\x0d\n  }\x0d\n  if (value.length < minLength) {\x0d\n    const reason = `must be longer than ${minLength}`;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateStringArray\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is string[]}\x0d\n */\x0d\n\x0d\n/** @type {validateStringArray} */\x0d\nconst validateStringArray = hideStackFrames((value\x2C name) => {\x0d\n  validateArray(value\x2C name);\x0d\n  for (let i = 0; i < value.length; ++i) {\x0d\n    // Don't use validateString here for performance reasons\x2C as\x0d\n    // we would generate intermediate strings for the name.\x0d\n    if (typeof value[i] !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(`${name}[${i}]`\x2C 'string'\x2C value[i]);\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateBooleanArray\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is boolean[]}\x0d\n */\x0d\n\x0d\n/** @type {validateBooleanArray} */\x0d\nconst validateBooleanArray = hideStackFrames((value\x2C name) => {\x0d\n  validateArray(value\x2C name);\x0d\n  for (let i = 0; i < value.length; ++i) {\x0d\n    // Don't use validateBoolean here for performance reasons\x2C as\x0d\n    // we would generate intermediate strings for the name.\x0d\n    if (value[i] !== true && value[i] !== false) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(`${name}[${i}]`\x2C 'boolean'\x2C value[i]);\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateAbortSignalArray\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is AbortSignal[]}\x0d\n */\x0d\n\x0d\n/** @type {validateAbortSignalArray} */\x0d\nfunction validateAbortSignalArray(value\x2C name) {\x0d\n  validateArray(value\x2C name);\x0d\n  for (let i = 0; i < value.length; i++) {\x0d\n    const signal = value[i];\x0d\n    const indexedName = `${name}[${i}]`;\x0d\n    if (signal == null) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(indexedName\x2C 'AbortSignal'\x2C signal);\x0d\n    }\x0d\n    validateAbortSignal(signal\x2C indexedName);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {*} signal\x0d\n * @param {string} [name='signal']\x0d\n * @returns {asserts signal is keyof signals}\x0d\n */\x0d\nconst validateSignalName = hideStackFrames((signal\x2C name = 'signal') => {\x0d\n  validateString(signal\x2C name);\x0d\n\x0d\n  if (signals[signal] === undefined) {\x0d\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\x0d\n      throw new ERR_UNKNOWN_SIGNAL(signal +\x0d\n                                   ' (signals must use all capital letters)');\x0d\n    }\x0d\n\x0d\n    throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateBuffer\x0d\n * @param {*} buffer\x0d\n * @param {string} [name='buffer']\x0d\n * @returns {asserts buffer is ArrayBufferView}\x0d\n */\x0d\n\x0d\n/** @type {validateBuffer} */\x0d\nconst validateBuffer = hideStackFrames((buffer\x2C name = 'buffer') => {\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C\x0d\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @param {string} data\x0d\n * @param {string} encoding\x0d\n */\x0d\nconst validateEncoding = hideStackFrames((data\x2C encoding) => {\x0d\n  const normalizedEncoding = normalizeEncoding(encoding);\x0d\n  const length = data.length;\x0d\n\x0d\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('encoding'\x2C encoding\x2C\x0d\n                                    `is invalid for data of length ${length}`);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Check that the port number is not NaN when coerced to a number\x2C\x0d\n * is an integer and that it falls within the legal range of port numbers.\x0d\n * @param {*} port\x0d\n * @param {string} [name='Port']\x0d\n * @param {boolean} [allowZero=true]\x0d\n * @returns {number}\x0d\n */\x0d\nconst validatePort = hideStackFrames((port\x2C name = 'Port'\x2C allowZero = true) => {\x0d\n  if ((typeof port !== 'number' && typeof port !== 'string') ||\x0d\n      (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\x0d\n      +port !== (+port >>> 0) ||\x0d\n      port > 0xFFFF ||\x0d\n      (port === 0 && !allowZero)) {\x0d\n    throw new ERR_SOCKET_BAD_PORT(name\x2C port\x2C allowZero);\x0d\n  }\x0d\n  return port | 0;\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateAbortSignal\x0d\n * @param {*} signal\x0d\n * @param {string} name\x0d\n */\x0d\n\x0d\n/** @type {validateAbortSignal} */\x0d\nconst validateAbortSignal = hideStackFrames((signal\x2C name) => {\x0d\n  if (signal !== undefined &&\x0d\n      (signal === null ||\x0d\n       typeof signal !== 'object' ||\x0d\n       !('aborted' in signal))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateFunction\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is Function}\x0d\n */\x0d\n\x0d\n/** @type {validateFunction} */\x0d\nconst validateFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validatePlainFunction\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is Function}\x0d\n */\x0d\n\x0d\n/** @type {validatePlainFunction} */\x0d\nconst validatePlainFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function' || isAsyncFunction(value))\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateUndefined\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is undefined}\x0d\n */\x0d\n\x0d\n/** @type {validateUndefined} */\x0d\nconst validateUndefined = hideStackFrames((value\x2C name) => {\x0d\n  if (value !== undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'undefined'\x2C value);\x0d\n});\x0d\n\x0d\n/**\x0d\n * @template T\x0d\n * @param {T} value\x0d\n * @param {string} name\x0d\n * @param {T[]} union\x0d\n */\x0d\nfunction validateUnion(value\x2C name\x2C union) {\x0d\n  if (!ArrayPrototypeIncludes(union\x2C value)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C `('${ArrayPrototypeJoin(union\x2C '|')}')`\x2C value);\x0d\n  }\x0d\n}\x0d\n\x0d\n/*\x0d\n  The rules for the Link header field are described here:\x0d\n  https://www.rfc-editor.org/rfc/rfc8288.html#section-3\x0d\n\x0d\n  This regex validates any string surrounded by angle brackets\x0d\n  (not necessarily a valid URI reference) followed by zero or more\x0d\n  link-params separated by semicolons.\x0d\n*/\x0d\nconst linkValueRegExp = /^(?:<[^>]*>)(?:\\s*;\\s*[^;"\\s]+(?:=(")?[^;"\\s]*\\1)?)*$/;\x0d\n\x0d\n/**\x0d\n * @param {any} value\x0d\n * @param {string} name\x0d\n */\x0d\nconst validateLinkHeaderFormat = hideStackFrames((value\x2C name) => {\x0d\n  if (\x0d\n    typeof value === 'undefined' ||\x0d\n    !RegExpPrototypeExec(linkValueRegExp\x2C value)\x0d\n  ) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      name\x2C\x0d\n      value\x2C\x0d\n      'must be an array or string of format "</styles.css>; rel=preload; as=style"'\x2C\x0d\n    );\x0d\n  }\x0d\n});\x0d\n\x0d\nconst validateInternalField = hideStackFrames((object\x2C fieldKey\x2C className) => {\x0d\n  if (typeof object !== 'object' || object === null || !ObjectPrototypeHasOwnProperty(object\x2C fieldKey)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('this'\x2C className\x2C object);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @param {any} hints\x0d\n * @return {string}\x0d\n */\x0d\nconst validateLinkHeaderValue = hideStackFrames((hints) => {\x0d\n  if (typeof hints === 'string') {\x0d\n    validateLinkHeaderFormat.withoutStackTrace(hints\x2C 'hints');\x0d\n    return hints;\x0d\n  } else if (ArrayIsArray(hints)) {\x0d\n    const hintsLength = hints.length;\x0d\n    let result = '';\x0d\n\x0d\n    if (hintsLength === 0) {\x0d\n      return result;\x0d\n    }\x0d\n\x0d\n    for (let i = 0; i < hintsLength; i++) {\x0d\n      const link = hints[i];\x0d\n      validateLinkHeaderFormat.withoutStackTrace(link\x2C 'hints');\x0d\n      result += link;\x0d\n\x0d\n      if (i !== hintsLength - 1) {\x0d\n        result += '\x2C ';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return result;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE(\x0d\n    'hints'\x2C\x0d\n    hints\x2C\x0d\n    'must be an array or string of format "</styles.css>; rel=preload; as=style"'\x2C\x0d\n  );\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  isInt32\x2C\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateStringArray\x2C\x0d\n  validateBooleanArray\x2C\x0d\n  validateAbortSignalArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateDictionary\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n  kValidateObjectNone\x2C\x0d\n  kValidateObjectAllowNullable\x2C\x0d\n  kValidateObjectAllowArray\x2C\x0d\n  kValidateObjectAllowFunction\x2C\x0d\n  kValidateObjectAllowObjects\x2C\x0d\n  kValidateObjectAllowObjectsAndNull\x2C\x0d\n  validateOneOf\x2C\x0d\n  validatePlainFunction\x2C\x0d\n  validatePort\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n  validateUndefined\x2C\x0d\n  validateUnion\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateLinkHeaderValue\x2C\x0d\n  validateInternalField\x2C\x0d\n};\x0d\n
code-source-info,0x125aa792344,15,6102,6219,C0O6124C6O6161C22O6167C27O6161C29O6218,,
code-creation,JS,10,107361,0x125aa793734,10,setInternalPrepareStackTrace node:internal/errors:113:38,0xa4fec39fc0,~
script-source,10,node:internal/errors,/* eslint node-core/documented-errors: "error" */\x0d\n/* eslint node-core/alphabetize-errors: "error" */\x0d\n/* eslint node-core/prefer-util-format-errors: "error" */\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// The whole point behind this internal module is to allow Node.js to no\x0d\n// longer be forced to treat every error message change as a semver-major\x0d\n// change. The NodeError classes here all expose a `code` property whose\x0d\n// value statically and permanently identifies the error. While the error\x0d\n// message may change\x2C the code should not.\x0d\n\x0d\nconst {\x0d\n  AggregateError\x2C\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Error\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  ErrorPrototypeToString\x2C\x0d\n  JSONStringify\x2C\x0d\n  MapPrototypeGet\x2C\x0d\n  MathAbs\x2C\x0d\n  MathMax\x2C\x0d\n  Number\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectIsExtensible\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RangeError\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SyntaxError\x2C\x0d\n  TypeError\x2C\x0d\n  URIError\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst kIsNodeError = Symbol('kIsNodeError');\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst messages = new SafeMap();\x0d\nconst codes = {};\x0d\n\x0d\nconst classRegExp = /^[A-Z][a-zA-Z0-9]*$/;\x0d\n\x0d\n// Sorted by a rough estimate on most frequently used entries.\x0d\nconst kTypes = [\x0d\n  'string'\x2C\x0d\n  'function'\x2C\x0d\n  'number'\x2C\x0d\n  'object'\x2C\x0d\n  // Accept 'Function' and 'Object' as alternative to the lower cased version.\x0d\n  'Function'\x2C\x0d\n  'Object'\x2C\x0d\n  'boolean'\x2C\x0d\n  'bigint'\x2C\x0d\n  'symbol'\x2C\x0d\n];\x0d\n\x0d\nconst MainContextError = Error;\x0d\nconst overrideStackTrace = new SafeWeakMap();\x0d\nlet internalPrepareStackTrace = defaultPrepareStackTrace;\x0d\n\x0d\n/**\x0d\n * The default implementation of `Error.prepareStackTrace` with simple\x0d\n * concatenation of stack frames.\x0d\n * Read more about `Error.prepareStackTrace` at https://v8.dev/docs/stack-trace-api#customizing-stack-traces.\x0d\n */\x0d\nfunction defaultPrepareStackTrace(error\x2C trace) {\x0d\n  // Normal error formatting:\x0d\n  //\x0d\n  // Error: Message\x0d\n  //     at function (file)\x0d\n  //     at file\x0d\n  let errorString;\x0d\n  if (kIsNodeError in error) {\x0d\n    errorString = `${error.name} [${error.code}]: ${error.message}`;\x0d\n  } else {\x0d\n    errorString = ErrorPrototypeToString(error);\x0d\n  }\x0d\n  if (trace.length === 0) {\x0d\n    return errorString;\x0d\n  }\x0d\n  return `${errorString}\\n    at ${ArrayPrototypeJoin(trace\x2C '\\n    at ')}`;\x0d\n}\x0d\n\x0d\nfunction setInternalPrepareStackTrace(callback) {\x0d\n  internalPrepareStackTrace = callback;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Every realm has its own prepareStackTraceCallback. When `error.stack` is\x0d\n * accessed\x2C if the error is created in a shadow realm\x2C the shadow realm's\x0d\n * prepareStackTraceCallback is invoked. Otherwise\x2C the principal realm's\x0d\n * prepareStackTraceCallback is invoked. Note that accessing `error.stack`\x0d\n * of error objects created in a VM Context will always invoke the\x0d\n * prepareStackTraceCallback of the principal realm.\x0d\n * @param {object} globalThis The global object of the realm that the error was\x0d\n *   created in. When the error object is created in a VM Context\x2C this is the\x0d\n *   global object of that VM Context.\x0d\n * @param {object} error The error object.\x0d\n * @param {CallSite[]} trace An array of CallSite objects\x2C read more at https://v8.dev/docs/stack-trace-api#customizing-stack-traces.\x0d\n * @returns {string}\x0d\n */\x0d\nfunction prepareStackTraceCallback(globalThis\x2C error\x2C trace) {\x0d\n  // API for node internals to override error stack formatting\x0d\n  // without interfering with userland code.\x0d\n  if (overrideStackTrace.has(error)) {\x0d\n    const f = overrideStackTrace.get(error);\x0d\n    overrideStackTrace.delete(error);\x0d\n    return f(error\x2C trace);\x0d\n  }\x0d\n\x0d\n  // Polyfill of V8's Error.prepareStackTrace API.\x0d\n  // https://crbug.com/v8/7848\x0d\n  // `globalThis` is the global that contains the constructor which\x0d\n  // created `error`.\x0d\n  if (typeof globalThis.Error?.prepareStackTrace === 'function') {\x0d\n    return globalThis.Error.prepareStackTrace(error\x2C trace);\x0d\n  }\x0d\n  // We still have legacy usage that depends on the main context's `Error`\x0d\n  // being used\x2C even when the error is from a different context.\x0d\n  // TODO(devsnek): evaluate if this can be eventually deprecated/removed.\x0d\n  if (typeof MainContextError.prepareStackTrace === 'function') {\x0d\n    return MainContextError.prepareStackTrace(error\x2C trace);\x0d\n  }\x0d\n\x0d\n  // If the Error.prepareStackTrace was not a function\x2C fallback to the\x0d\n  // internal implementation.\x0d\n  return internalPrepareStackTrace(error\x2C trace);\x0d\n}\x0d\n\x0d\n/**\x0d\n * The default Error.prepareStackTrace implementation.\x0d\n */\x0d\nfunction ErrorPrepareStackTrace(error\x2C trace) {\x0d\n  return internalPrepareStackTrace(error\x2C trace);\x0d\n}\x0d\n\x0d\nconst aggregateTwoErrors = (innerError\x2C outerError) => {\x0d\n  if (innerError && outerError && innerError !== outerError) {\x0d\n    if (ArrayIsArray(outerError.errors)) {\x0d\n      // If `outerError` is already an `AggregateError`.\x0d\n      ArrayPrototypePush(outerError.errors\x2C innerError);\x0d\n      return outerError;\x0d\n    }\x0d\n    let err;\x0d\n    if (isErrorStackTraceLimitWritable()) {\x0d\n      const limit = Error.stackTraceLimit;\x0d\n      Error.stackTraceLimit = 0;\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      err = new AggregateError(new SafeArrayIterator([\x0d\n        outerError\x2C\x0d\n        innerError\x2C\x0d\n      ])\x2C outerError.message);\x0d\n      Error.stackTraceLimit = limit;\x0d\n      ErrorCaptureStackTrace(err\x2C aggregateTwoErrors);\x0d\n    } else {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      err = new AggregateError(new SafeArrayIterator([\x0d\n        outerError\x2C\x0d\n        innerError\x2C\x0d\n      ])\x2C outerError.message);\x0d\n    }\x0d\n    err.code = outerError.code;\x0d\n    return err;\x0d\n  }\x0d\n  return innerError || outerError;\x0d\n};\x0d\n\x0d\nclass NodeAggregateError extends AggregateError {\x0d\n  constructor(errors\x2C message) {\x0d\n    super(new SafeArrayIterator(errors)\x2C message);\x0d\n    this.code = errors[0]?.code;\x0d\n  }\x0d\n\x0d\n  get [kIsNodeError]() {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  get ['constructor']() {\x0d\n    return AggregateError;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\n// Lazily loaded\x0d\nlet util;\x0d\n\x0d\nlet internalUtil = null;\x0d\nfunction lazyInternalUtil() {\x0d\n  internalUtil ??= require('internal/util');\x0d\n  return internalUtil;\x0d\n}\x0d\n\x0d\nlet internalUtilInspect = null;\x0d\nfunction lazyInternalUtilInspect() {\x0d\n  internalUtilInspect ??= require('internal/util/inspect');\x0d\n  return internalUtilInspect;\x0d\n}\x0d\n\x0d\nlet utilColors;\x0d\nfunction lazyUtilColors() {\x0d\n  utilColors ??= require('internal/util/colors');\x0d\n  return utilColors;\x0d\n}\x0d\n\x0d\nlet buffer;\x0d\nfunction lazyBuffer() {\x0d\n  buffer ??= require('buffer').Buffer;\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction isErrorStackTraceLimitWritable() {\x0d\n  // Do no touch Error.stackTraceLimit as V8 would attempt to install\x0d\n  // it again during deserialization.\x0d\n  if (require('internal/v8/startup_snapshot').namespace.isBuildingSnapshot()) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  const desc = ObjectGetOwnPropertyDescriptor(Error\x2C 'stackTraceLimit');\x0d\n  if (desc === undefined) {\x0d\n    return ObjectIsExtensible(Error);\x0d\n  }\x0d\n\x0d\n  return ObjectPrototypeHasOwnProperty(desc\x2C 'writable') ?\x0d\n    desc.writable :\x0d\n    desc.set !== undefined;\x0d\n}\x0d\n\x0d\nfunction inspectWithNoCustomRetry(obj\x2C options) {\x0d\n  const utilInspect = lazyInternalUtilInspect();\x0d\n\x0d\n  try {\x0d\n    return utilInspect.inspect(obj\x2C options);\x0d\n  } catch {\x0d\n    return utilInspect.inspect(obj\x2C { ...options\x2C customInspect: false });\x0d\n  }\x0d\n}\x0d\n\x0d\n// A specialized Error that includes an additional info property with\x0d\n// additional information about the error condition.\x0d\n// It has the properties present in a UVException but with a custom error\x0d\n// message followed by the uv error code and uv error message.\x0d\n// It also has its own error code with the original uv error context put into\x0d\n// `err.info`.\x0d\n// The context passed into this error must have .code\x2C .syscall and .message\x2C\x0d\n// and may have .path and .dest.\x0d\nclass SystemError extends Error {\x0d\n  constructor(key\x2C context) {\x0d\n    super();\x0d\n    const prefix = getMessage(key\x2C []\x2C this);\x0d\n    let message = `${prefix}: ${context.syscall} returned ` +\x0d\n                  `${context.code} (${context.message})`;\x0d\n\x0d\n    if (context.path !== undefined)\x0d\n      message += ` ${context.path}`;\x0d\n    if (context.dest !== undefined)\x0d\n      message += ` => ${context.dest}`;\x0d\n\x0d\n    this.code = key;\x0d\n\x0d\n    ObjectDefineProperties(this\x2C {\x0d\n      [kIsNodeError]: {\x0d\n        __proto__: null\x2C\x0d\n        value: true\x2C\x0d\n        enumerable: false\x2C\x0d\n        writable: false\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n      name: {\x0d\n        __proto__: null\x2C\x0d\n        value: 'SystemError'\x2C\x0d\n        enumerable: false\x2C\x0d\n        writable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n      message: {\x0d\n        __proto__: null\x2C\x0d\n        value: message\x2C\x0d\n        enumerable: false\x2C\x0d\n        writable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n      info: {\x0d\n        __proto__: null\x2C\x0d\n        value: context\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x2C\x0d\n        writable: false\x2C\x0d\n      }\x2C\x0d\n      errno: {\x0d\n        __proto__: null\x2C\x0d\n        get() {\x0d\n          return context.errno;\x0d\n        }\x2C\x0d\n        set: (value) => {\x0d\n          context.errno = value;\x0d\n        }\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n      syscall: {\x0d\n        __proto__: null\x2C\x0d\n        get() {\x0d\n          return context.syscall;\x0d\n        }\x2C\x0d\n        set: (value) => {\x0d\n          context.syscall = value;\x0d\n        }\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n    });\x0d\n\x0d\n    if (context.path !== undefined) {\x0d\n      // TODO(BridgeAR): Investigate why and when the `.toString()` was\x0d\n      // introduced. The `path` and `dest` properties in the context seem to\x0d\n      // always be of type string. We should probably just remove the\x0d\n      // `.toString()` and `Buffer.from()` operations and set the value on the\x0d\n      // context as the user did.\x0d\n      ObjectDefineProperty(this\x2C 'path'\x2C {\x0d\n        __proto__: null\x2C\x0d\n        get() {\x0d\n          return context.path != null ?\x0d\n            context.path.toString() : context.path;\x0d\n        }\x2C\x0d\n        set: (value) => {\x0d\n          context.path = value ?\x0d\n            lazyBuffer().from(value.toString()) : undefined;\x0d\n        }\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      });\x0d\n    }\x0d\n\x0d\n    if (context.dest !== undefined) {\x0d\n      ObjectDefineProperty(this\x2C 'dest'\x2C {\x0d\n        __proto__: null\x2C\x0d\n        get() {\x0d\n          return context.dest != null ?\x0d\n            context.dest.toString() : context.dest;\x0d\n        }\x2C\x0d\n        set: (value) => {\x0d\n          context.dest = value ?\x0d\n            lazyBuffer().from(value.toString()) : undefined;\x0d\n        }\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  toString() {\x0d\n    return `${this.name} [${this.code}]: ${this.message}`;\x0d\n  }\x0d\n\x0d\n  [SymbolFor('nodejs.util.inspect.custom')](recurseTimes\x2C ctx) {\x0d\n    return lazyInternalUtilInspect().inspect(this\x2C {\x0d\n      ...ctx\x2C\x0d\n      getters: true\x2C\x0d\n      customInspect: false\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction makeSystemErrorWithCode(key) {\x0d\n  return class NodeError extends SystemError {\x0d\n    constructor(ctx) {\x0d\n      super(key\x2C ctx);\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\n// This is a special error type that is only used for the E function.\x0d\nclass HideStackFramesError extends Error {\x0d\n}\x0d\n\x0d\nfunction makeNodeErrorForHideStackFrame(Base\x2C clazz) {\x0d\n  class HideStackFramesError extends Base {\x0d\n    constructor(...args) {\x0d\n      if (isErrorStackTraceLimitWritable()) {\x0d\n        const limit = Error.stackTraceLimit;\x0d\n        Error.stackTraceLimit = 0;\x0d\n        super(...args);\x0d\n        Error.stackTraceLimit = limit;\x0d\n      } else {\x0d\n        super(...args);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // This is a workaround for wpt tests that expect that the error\x0d\n    // constructor has a `name` property of the base class.\x0d\n    get ['constructor']() {\x0d\n      return clazz;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return HideStackFramesError;\x0d\n}\x0d\n\x0d\nfunction makeNodeErrorWithCode(Base\x2C key) {\x0d\n  const msg = messages.get(key);\x0d\n  const expectedLength = typeof msg !== 'string' ? -1 : getExpectedArgumentLength(msg);\x0d\n\x0d\n  switch (expectedLength) {\x0d\n    case 0: {\x0d\n      class NodeError extends Base {\x0d\n        code = key;\x0d\n\x0d\n        constructor(...args) {\x0d\n          assert(\x0d\n            args.length === 0\x2C\x0d\n            `Code: ${key}; The provided arguments length (${args.length}) does not ` +\x0d\n              `match the required ones (${expectedLength}).`\x2C\x0d\n          );\x0d\n          super(msg);\x0d\n        }\x0d\n\x0d\n        // This is a workaround for wpt tests that expect that the error\x0d\n        // constructor has a `name` property of the base class.\x0d\n        get ['constructor']() {\x0d\n          return Base;\x0d\n        }\x0d\n\x0d\n        get [kIsNodeError]() {\x0d\n          return true;\x0d\n        }\x0d\n\x0d\n        toString() {\x0d\n          return `${this.name} [${key}]: ${this.message}`;\x0d\n        }\x0d\n      }\x0d\n      return NodeError;\x0d\n    }\x0d\n    case -1: {\x0d\n      class NodeError extends Base {\x0d\n        code = key;\x0d\n\x0d\n        constructor(...args) {\x0d\n          super();\x0d\n          ObjectDefineProperty(this\x2C 'message'\x2C {\x0d\n            __proto__: null\x2C\x0d\n            value: getMessage(key\x2C args\x2C this)\x2C\x0d\n            enumerable: false\x2C\x0d\n            writable: true\x2C\x0d\n            configurable: true\x2C\x0d\n          });\x0d\n        }\x0d\n\x0d\n        // This is a workaround for wpt tests that expect that the error\x0d\n        // constructor has a `name` property of the base class.\x0d\n        get ['constructor']() {\x0d\n          return Base;\x0d\n        }\x0d\n\x0d\n        get [kIsNodeError]() {\x0d\n          return true;\x0d\n        }\x0d\n\x0d\n        toString() {\x0d\n          return `${this.name} [${key}]: ${this.message}`;\x0d\n        }\x0d\n      }\x0d\n      return NodeError;\x0d\n    }\x0d\n    default: {\x0d\n\x0d\n      class NodeError extends Base {\x0d\n        code = key;\x0d\n\x0d\n        constructor(...args) {\x0d\n          assert(\x0d\n            args.length === expectedLength\x2C\x0d\n            `Code: ${key}; The provided arguments length (${args.length}) does not ` +\x0d\n              `match the required ones (${expectedLength}).`\x2C\x0d\n          );\x0d\n\x0d\n          ArrayPrototypeUnshift(args\x2C msg);\x0d\n          super(ReflectApply(lazyInternalUtilInspect().format\x2C null\x2C args));\x0d\n        }\x0d\n\x0d\n        // This is a workaround for wpt tests that expect that the error\x0d\n        // constructor has a `name` property of the base class.\x0d\n        get ['constructor']() {\x0d\n          return Base;\x0d\n        }\x0d\n\x0d\n        get [kIsNodeError]() {\x0d\n          return true;\x0d\n        }\x0d\n\x0d\n        toString() {\x0d\n          return `${this.name} [${key}]: ${this.message}`;\x0d\n        }\x0d\n      }\x0d\n      return NodeError;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * This function removes unnecessary frames from Node.js core errors.\x0d\n * @template {(...args: unknown[]) => unknown} T\x0d\n * @param {T} fn\x0d\n * @returns {T}\x0d\n */\x0d\nfunction hideStackFrames(fn) {\x0d\n  function wrappedFn(...args) {\x0d\n    try {\x0d\n      return ReflectApply(fn\x2C this\x2C args);\x0d\n    } catch (error) {\x0d\n      Error.stackTraceLimit && ErrorCaptureStackTrace(error\x2C wrappedFn);\x0d\n      throw error;\x0d\n    }\x0d\n  }\x0d\n  wrappedFn.withoutStackTrace = fn;\x0d\n  return wrappedFn;\x0d\n}\x0d\n\x0d\n// Utility function for registering the error codes. Only used here. Exported\x0d\n// *only* to allow for testing.\x0d\nfunction E(sym\x2C val\x2C def\x2C ...otherClasses) {\x0d\n  // Special case for SystemError that formats the error message differently\x0d\n  // The SystemErrors only have SystemError as their base classes.\x0d\n  messages.set(sym\x2C val);\x0d\n\x0d\n  const ErrClass = def === SystemError ?\x0d\n    makeSystemErrorWithCode(sym) :\x0d\n    makeNodeErrorWithCode(def\x2C sym);\x0d\n\x0d\n  if (otherClasses.length !== 0) {\x0d\n    if (otherClasses.includes(HideStackFramesError)) {\x0d\n      if (otherClasses.length !== 1) {\x0d\n        otherClasses.forEach((clazz) => {\x0d\n          if (clazz !== HideStackFramesError) {\x0d\n            ErrClass[clazz.name] = makeNodeErrorWithCode(clazz\x2C sym);\x0d\n            ErrClass[clazz.name].HideStackFramesError = makeNodeErrorForHideStackFrame(ErrClass[clazz.name]\x2C clazz);\x0d\n          }\x0d\n        });\x0d\n      }\x0d\n    } else {\x0d\n      otherClasses.forEach((clazz) => {\x0d\n        ErrClass[clazz.name] = makeNodeErrorWithCode(clazz\x2C sym);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (otherClasses.includes(HideStackFramesError)) {\x0d\n    ErrClass.HideStackFramesError = makeNodeErrorForHideStackFrame(ErrClass\x2C def);\x0d\n  }\x0d\n\x0d\n  codes[sym] = ErrClass;\x0d\n}\x0d\n\x0d\nfunction getExpectedArgumentLength(msg) {\x0d\n  let expectedLength = 0;\x0d\n  const regex = /%[dfijoOs]/g;\x0d\n  while (RegExpPrototypeExec(regex\x2C msg) !== null) expectedLength++;\x0d\n  return expectedLength;\x0d\n}\x0d\n\x0d\nfunction getMessage(key\x2C args\x2C self) {\x0d\n  const msg = messages.get(key);\x0d\n\x0d\n  if (typeof msg === 'function') {\x0d\n    assert(\x0d\n      msg.length <= args.length\x2C // Default options do not count.\x0d\n      `Code: ${key}; The provided arguments length (${args.length}) does not ` +\x0d\n        `match the required ones (${msg.length}).`\x2C\x0d\n    );\x0d\n    return ReflectApply(msg\x2C self\x2C args);\x0d\n  }\x0d\n\x0d\n  const expectedLength = getExpectedArgumentLength(msg);\x0d\n  assert(\x0d\n    expectedLength === args.length\x2C\x0d\n    `Code: ${key}; The provided arguments length (${args.length}) does not ` +\x0d\n      `match the required ones (${expectedLength}).`\x2C\x0d\n  );\x0d\n  if (args.length === 0)\x0d\n    return msg;\x0d\n\x0d\n  ArrayPrototypeUnshift(args\x2C msg);\x0d\n  return ReflectApply(lazyInternalUtilInspect().format\x2C null\x2C args);\x0d\n}\x0d\n\x0d\nlet uvBinding;\x0d\n\x0d\nfunction lazyUv() {\x0d\n  uvBinding ??= internalBinding('uv');\x0d\n  return uvBinding;\x0d\n}\x0d\n\x0d\nconst uvUnmappedError = ['UNKNOWN'\x2C 'unknown error'];\x0d\n\x0d\nfunction uvErrmapGet(name) {\x0d\n  uvBinding = lazyUv();\x0d\n  uvBinding.errmap ??= uvBinding.getErrorMap();\x0d\n  return MapPrototypeGet(uvBinding.errmap\x2C name);\x0d\n}\x0d\n\x0d\n/**\x0d\n * This creates an error compatible with errors produced in the C++\x0d\n * function UVException using a context object with data assembled in C++.\x0d\n * The goal is to migrate them to ERR_* errors later when compatibility is\x0d\n * not a concern.\x0d\n */\x0d\nclass UVException extends Error {\x0d\n  /**\x0d\n   * @param {object} ctx\x0d\n   */\x0d\n  constructor(ctx) {\x0d\n    const { 0: code\x2C 1: uvmsg } = uvErrmapGet(ctx.errno) || uvUnmappedError;\x0d\n    let message = `${code}: ${ctx.message || uvmsg}\x2C ${ctx.syscall}`;\x0d\n\x0d\n    let path;\x0d\n    let dest;\x0d\n    if (ctx.path) {\x0d\n      path = ctx.path.toString();\x0d\n      message += ` '${path}'`;\x0d\n    }\x0d\n    if (ctx.dest) {\x0d\n      dest = ctx.dest.toString();\x0d\n      message += ` -> '${dest}'`;\x0d\n    }\x0d\n\x0d\n    super(message);\x0d\n\x0d\n    for (const prop of ObjectKeys(ctx)) {\x0d\n      if (prop === 'message' || prop === 'path' || prop === 'dest') {\x0d\n        continue;\x0d\n      }\x0d\n      this[prop] = ctx[prop];\x0d\n    }\x0d\n\x0d\n    this.code = code;\x0d\n    if (path) {\x0d\n      this.path = path;\x0d\n    }\x0d\n    if (dest) {\x0d\n      this.dest = dest;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get ['constructor']() {\x0d\n    return Error;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * This creates an error compatible with errors produced in the C++\x0d\n * This function should replace the deprecated\x0d\n * `exceptionWithHostPort()` function.\x0d\n */\x0d\nclass UVExceptionWithHostPort extends Error {\x0d\n  /**\x0d\n   * @param {number} err - A libuv error number\x0d\n   * @param {string} syscall\x0d\n   * @param {string} address\x0d\n   * @param {number} [port]\x0d\n   */\x0d\n  constructor(err\x2C syscall\x2C address\x2C port) {\x0d\n    const { 0: code\x2C 1: uvmsg } = uvErrmapGet(err) || uvUnmappedError;\x0d\n    const message = `${syscall} ${code}: ${uvmsg}`;\x0d\n    let details = '';\x0d\n\x0d\n    if (port && port > 0) {\x0d\n      details = ` ${address}:${port}`;\x0d\n    } else if (address) {\x0d\n      details = ` ${address}`;\x0d\n    }\x0d\n\x0d\n    super(`${message}${details}`);\x0d\n\x0d\n    this.code = code;\x0d\n    this.errno = err;\x0d\n    this.syscall = syscall;\x0d\n    this.address = address;\x0d\n    if (port) {\x0d\n      this.port = port;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get ['constructor']() {\x0d\n    return Error;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * This used to be util._errnoException().\x0d\n */\x0d\nclass ErrnoException extends Error {\x0d\n  /**\x0d\n   * @param {number} err - A libuv error number\x0d\n   * @param {string} syscall\x0d\n   * @param {string} [original] err\x0d\n   */\x0d\n  constructor(err\x2C syscall\x2C original) {\x0d\n    // TODO(joyeecheung): We have to use the type-checked\x0d\n    // getSystemErrorName(err) to guard against invalid arguments from users.\x0d\n    // This can be replaced with [ code ] = errmap.get(err) when this method\x0d\n    // is no longer exposed to user land.\x0d\n    util ??= require('util');\x0d\n    const code = util.getSystemErrorName(err);\x0d\n    const message = original ?\x0d\n      `${syscall} ${code} ${original}` : `${syscall} ${code}`;\x0d\n\x0d\n    super(message);\x0d\n\x0d\n    this.errno = err;\x0d\n    this.code = code;\x0d\n    this.syscall = syscall;\x0d\n  }\x0d\n\x0d\n  get ['constructor']() {\x0d\n    return Error;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Deprecated\x2C new Error is `UVExceptionWithHostPort()`\x0d\n * New function added the error description directly\x0d\n * from C++. this method for backwards compatibility\x0d\n * @param {number} err - A libuv error number\x0d\n * @param {string} syscall\x0d\n * @param {string} address\x0d\n * @param {number} [port]\x0d\n * @param {string} [additional]\x0d\n * @returns {Error}\x0d\n */\x0d\nclass ExceptionWithHostPort extends Error {\x0d\n  constructor(err\x2C syscall\x2C address\x2C port\x2C additional) {\x0d\n    // TODO(joyeecheung): We have to use the type-checked\x0d\n    // getSystemErrorName(err) to guard against invalid arguments from users.\x0d\n    // This can be replaced with [ code ] = errmap.get(err) when this method\x0d\n    // is no longer exposed to user land.\x0d\n    util ??= require('util');\x0d\n    const code = util.getSystemErrorName(err);\x0d\n    let details = '';\x0d\n    if (port && port > 0) {\x0d\n      details = ` ${address}:${port}`;\x0d\n    } else if (address) {\x0d\n      details = ` ${address}`;\x0d\n    }\x0d\n    if (additional) {\x0d\n      details += ` - Local (${additional})`;\x0d\n    }\x0d\n\x0d\n    super(`${syscall} ${code}${details}`);\x0d\n\x0d\n    this.errno = err;\x0d\n    this.code = code;\x0d\n    this.syscall = syscall;\x0d\n    this.address = address;\x0d\n    if (port) {\x0d\n      this.port = port;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get ['constructor']() {\x0d\n    return Error;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass DNSException extends Error {\x0d\n  /**\x0d\n   * @param {number|string} code - A libuv error number or a c-ares error code\x0d\n   * @param {string} syscall\x0d\n   * @param {string} [hostname]\x0d\n   */\x0d\n  constructor(code\x2C syscall\x2C hostname) {\x0d\n    let errno;\x0d\n    // If `code` is of type number\x2C it is a libuv error number\x2C else it is a\x0d\n    // c-ares error code.\x0d\n    // TODO(joyeecheung): translate c-ares error codes into numeric ones and\x0d\n    // make them available in a property that's not error.errno (since they\x0d\n    // can be in conflict with libuv error codes). Also make sure\x0d\n    // util.getSystemErrorName() can understand them when an being informed that\x0d\n    // the number is a c-ares error code.\x0d\n    if (typeof code === 'number') {\x0d\n      errno = code;\x0d\n      // ENOTFOUND is not a proper POSIX error\x2C but this error has been in place\x0d\n      // long enough that it's not practical to remove it.\x0d\n      if (code === lazyUv().UV_EAI_NODATA || code === lazyUv().UV_EAI_NONAME) {\x0d\n        code = 'ENOTFOUND'; // Fabricated error name.\x0d\n      } else {\x0d\n        code = lazyInternalUtil().getSystemErrorName(code);\x0d\n      }\x0d\n    }\x0d\n    super(`${syscall} ${code}${hostname ? ` ${hostname}` : ''}`);\x0d\n    this.errno = errno;\x0d\n    this.code = code;\x0d\n    this.syscall = syscall;\x0d\n    if (hostname) {\x0d\n      this.hostname = hostname;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get ['constructor']() {\x0d\n    return Error;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass ConnResetException extends Error {\x0d\n  constructor(msg) {\x0d\n    super(msg);\x0d\n    this.code = 'ECONNRESET';\x0d\n  }\x0d\n\x0d\n  get ['constructor']() {\x0d\n    return Error;\x0d\n  }\x0d\n}\x0d\n\x0d\nlet maxStack_ErrorName;\x0d\nlet maxStack_ErrorMessage;\x0d\n\x0d\n/**\x0d\n * Returns true if `err.name` and `err.message` are equal to engine-specific\x0d\n * values indicating max call stack size has been exceeded.\x0d\n * "Maximum call stack size exceeded" in V8.\x0d\n * @param {Error} err\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isStackOverflowError(err) {\x0d\n  if (maxStack_ErrorMessage === undefined) {\x0d\n    try {\x0d\n      function overflowStack() { overflowStack(); }\x0d\n      overflowStack();\x0d\n    } catch (err) {\x0d\n      maxStack_ErrorMessage = err.message;\x0d\n      maxStack_ErrorName = err.name;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return err && err.name === maxStack_ErrorName &&\x0d\n         err.message === maxStack_ErrorMessage;\x0d\n}\x0d\n\x0d\n// Only use this for integers! Decimal numbers do not work with this function.\x0d\nfunction addNumericalSeparator(val) {\x0d\n  let res = '';\x0d\n  let i = val.length;\x0d\n  const start = val[0] === '-' ? 1 : 0;\x0d\n  for (; i >= start + 4; i -= 3) {\x0d\n    res = `_${StringPrototypeSlice(val\x2C i - 3\x2C i)}${res}`;\x0d\n  }\x0d\n  return `${StringPrototypeSlice(val\x2C 0\x2C i)}${res}`;\x0d\n}\x0d\n\x0d\n// Used to enhance the stack that will be picked up by the inspector\x0d\nconst kEnhanceStackBeforeInspector = Symbol('kEnhanceStackBeforeInspector');\x0d\n\x0d\n// These are supposed to be called only on fatal exceptions before\x0d\n// the process exits.\x0d\nconst fatalExceptionStackEnhancers = {\x0d\n  beforeInspector(error) {\x0d\n    if (typeof error[kEnhanceStackBeforeInspector] !== 'function') {\x0d\n      return error.stack;\x0d\n    }\x0d\n\x0d\n    try {\x0d\n      // Set the error.stack here so it gets picked up by the\x0d\n      // inspector.\x0d\n      error.stack = error[kEnhanceStackBeforeInspector]();\x0d\n    } catch {\x0d\n      // We are just enhancing the error. If it fails\x2C ignore it.\x0d\n    }\x0d\n    return error.stack;\x0d\n  }\x2C\x0d\n  afterInspector(error) {\x0d\n    const originalStack = error.stack;\x0d\n    let useColors = true;\x0d\n    // Some consoles do not convert ANSI escape sequences to colors\x2C\x0d\n    // rather display them directly to the stdout. On those consoles\x2C\x0d\n    // libuv emulates colors by intercepting stdout stream and calling\x0d\n    // corresponding Windows API functions for setting console colors.\x0d\n    // However\x2C fatal error are handled differently and we cannot easily\x0d\n    // highlight them. On Windows\x2C detecting whether a console supports\x0d\n    // ANSI escape sequences is not reliable.\x0d\n    if (isWindows) {\x0d\n      const info = internalBinding('os').getOSInformation();\x0d\n      const ver = ArrayPrototypeMap(StringPrototypeSplit(info[2]\x2C '.')\x2C\x0d\n                                    Number);\x0d\n      if (ver[0] !== 10 || ver[2] < 14393) {\x0d\n        useColors = false;\x0d\n      }\x0d\n    }\x0d\n    const {\x0d\n      inspect\x2C\x0d\n      inspectDefaultOptions: {\x0d\n        colors: defaultColors\x2C\x0d\n      }\x2C\x0d\n    } = lazyInternalUtilInspect();\x0d\n    const colors = useColors && (lazyUtilColors().shouldColorize(process.stderr) || defaultColors);\x0d\n    try {\x0d\n      return inspect(error\x2C {\x0d\n        colors\x2C\x0d\n        customInspect: false\x2C\x0d\n        depth: MathMax(inspect.defaultOptions.depth\x2C 5)\x2C\x0d\n      });\x0d\n    } catch {\x0d\n      return originalStack;\x0d\n    }\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nconst {\x0d\n  privateSymbols: {\x0d\n    arrow_message_private_symbol\x2C\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\n// Ensures the printed error line is from user code.\x0d\nfunction setArrowMessage(err\x2C arrowMessage) {\x0d\n  err[arrow_message_private_symbol] = arrowMessage;\x0d\n}\x0d\n\x0d\n// Hide stack lines before the first user code line.\x0d\nfunction hideInternalStackFrames(error) {\x0d\n  overrideStackTrace.set(error\x2C (error\x2C stackFrames) => {\x0d\n    let frames = stackFrames;\x0d\n    if (typeof stackFrames === 'object') {\x0d\n      frames = ArrayPrototypeFilter(\x0d\n        stackFrames\x2C\x0d\n        (frm) => !StringPrototypeStartsWith(frm.getFileName() || ''\x2C\x0d\n                                            'node:internal')\x2C\x0d\n      );\x0d\n    }\x0d\n    ArrayPrototypeUnshift(frames\x2C error);\x0d\n    return ArrayPrototypeJoin(frames\x2C '\\n    at ');\x0d\n  });\x0d\n}\x0d\n\x0d\n// Node uses an AbortError that isn't exactly the same as the DOMException\x0d\n// to make usage of the error in userland and readable-stream easier.\x0d\n// It is a regular error with `.code` and `.name`.\x0d\nclass AbortError extends Error {\x0d\n  constructor(message = 'The operation was aborted'\x2C options = undefined) {\x0d\n    if (options !== undefined && typeof options !== 'object') {\x0d\n      throw new codes.ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\x0d\n    }\x0d\n    super(message\x2C options);\x0d\n    this.code = 'ABORT_ERR';\x0d\n    this.name = 'AbortError';\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * This creates a generic Node.js error.\x0d\n * @param {string} message The error message.\x0d\n * @param {object} errorProperties Object with additional properties to be added to the error.\x0d\n * @returns {Error}\x0d\n */\x0d\nconst genericNodeError = hideStackFrames(function genericNodeError(message\x2C errorProperties) {\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  ObjectAssign(err\x2C errorProperties);\x0d\n  return err;\x0d\n});\x0d\n\x0d\n/**\x0d\n * Determine the specific type of a value for type-mismatch errors.\x0d\n * @param {*} value\x0d\n * @returns {string}\x0d\n */\x0d\nfunction determineSpecificType(value) {\x0d\n  if (value === null) {\x0d\n    return 'null';\x0d\n  } else if (value === undefined) {\x0d\n    return 'undefined';\x0d\n  }\x0d\n\x0d\n  const type = typeof value;\x0d\n\x0d\n  switch (type) {\x0d\n    case 'bigint':\x0d\n      return `type bigint (${value}n)`;\x0d\n    case 'number':\x0d\n      if (value === 0) {\x0d\n        return 1 / value === -Infinity ? 'type number (-0)' : 'type number (0)';\x0d\n      } else if (value !== value) { // eslint-disable-line no-self-compare\x0d\n        return 'type number (NaN)';\x0d\n      } else if (value === Infinity) {\x0d\n        return 'type number (Infinity)';\x0d\n      } else if (value === -Infinity) {\x0d\n        return 'type number (-Infinity)';\x0d\n      }\x0d\n      return `type number (${value})`;\x0d\n    case 'boolean':\x0d\n      return value ? 'type boolean (true)' : 'type boolean (false)';\x0d\n    case 'symbol':\x0d\n      return `type symbol (${String(value)})`;\x0d\n    case 'function':\x0d\n      return `function ${value.name}`;\x0d\n    case 'object':\x0d\n      if (value.constructor && 'name' in value.constructor) {\x0d\n        return `an instance of ${value.constructor.name}`;\x0d\n      }\x0d\n      return `${lazyInternalUtilInspect().inspect(value\x2C { depth: -1 })}`;\x0d\n    case 'string':\x0d\n      value.length > 28 && (value = `${StringPrototypeSlice(value\x2C 0\x2C 25)}...`);\x0d\n      if (StringPrototypeIndexOf(value\x2C "'") === -1) {\x0d\n        return `type string ('${value}')`;\x0d\n      }\x0d\n      return `type string (${JSONStringify(value)})`;\x0d\n    default:\x0d\n      value = lazyInternalUtilInspect().inspect(value\x2C { colors: false });\x0d\n      if (value.length > 28) {\x0d\n        value = `${StringPrototypeSlice(value\x2C 0\x2C 25)}...`;\x0d\n      }\x0d\n\x0d\n      return `type ${type} (${value})`;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Create a list string in the form like 'A and B' or 'A\x2C B\x2C ...\x2C and Z'.\x0d\n * We cannot use Intl.ListFormat because it's not available in\x0d\n * --without-intl builds.\x0d\n * @param {string[]} array An array of strings.\x0d\n * @param {string} [type] The list type to be inserted before the last element.\x0d\n * @returns {string}\x0d\n */\x0d\nfunction formatList(array\x2C type = 'and') {\x0d\n  switch (array.length) {\x0d\n    case 0: return '';\x0d\n    case 1: return `${array[0]}`;\x0d\n    case 2: return `${array[0]} ${type} ${array[1]}`;\x0d\n    case 3: return `${array[0]}\x2C ${array[1]}\x2C ${type} ${array[2]}`;\x0d\n    default:\x0d\n      return `${ArrayPrototypeJoin(ArrayPrototypeSlice(array\x2C 0\x2C -1)\x2C '\x2C ')}\x2C ${type} ${array[array.length - 1]}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  AbortError\x2C\x0d\n  aggregateTwoErrors\x2C\x0d\n  NodeAggregateError\x2C\x0d\n  codes\x2C\x0d\n  ConnResetException\x2C\x0d\n  DNSException\x2C\x0d\n  // This is exported only to facilitate testing.\x0d\n  determineSpecificType\x2C\x0d\n  E\x2C\x0d\n  ErrnoException\x2C\x0d\n  ExceptionWithHostPort\x2C\x0d\n  fatalExceptionStackEnhancers\x2C\x0d\n  formatList\x2C\x0d\n  genericNodeError\x2C\x0d\n  getMessage\x2C\x0d\n  hideInternalStackFrames\x2C\x0d\n  hideStackFrames\x2C\x0d\n  inspectWithNoCustomRetry\x2C\x0d\n  isErrorStackTraceLimitWritable\x2C\x0d\n  isStackOverflowError\x2C\x0d\n  kEnhanceStackBeforeInspector\x2C\x0d\n  kIsNodeError\x2C\x0d\n  defaultPrepareStackTrace\x2C\x0d\n  setInternalPrepareStackTrace\x2C\x0d\n  overrideStackTrace\x2C\x0d\n  prepareStackTraceCallback\x2C\x0d\n  ErrorPrepareStackTrace\x2C\x0d\n  setArrowMessage\x2C\x0d\n  SystemError\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  UVException\x2C\x0d\n  UVExceptionWithHostPort\x2C\x0d\n};\x0d\n\x0d\n// To declare an error message\x2C use the E(sym\x2C val\x2C def) function above. The sym\x0d\n// must be an upper case string. The val can be either a function or a string.\x0d\n// The def must be an error class.\x0d\n// The return value of the function must be a string.\x0d\n// Examples:\x0d\n// E('EXAMPLE_KEY1'\x2C 'This is the error value'\x2C Error);\x0d\n// E('EXAMPLE_KEY2'\x2C (a\x2C b) => return `${a} ${b}`\x2C RangeError);\x0d\n//\x0d\n// Once an error code has been assigned\x2C the code itself MUST NOT change and\x0d\n// any given error code must never be reused to identify a different error.\x0d\n//\x0d\n// Any error code added here should also be added to the documentation\x0d\n//\x0d\n// Note: Please try to keep these in alphabetical order\x0d\n//\x0d\n// Note: Node.js specific errors must begin with the prefix ERR_\x0d\n\x0d\nE('ERR_ACCESS_DENIED'\x2C\x0d\n  'Access to this API has been restricted. Permission: %s'\x2C\x0d\n  Error);\x0d\nE('ERR_AMBIGUOUS_ARGUMENT'\x2C 'The "%s" argument is ambiguous. %s'\x2C TypeError);\x0d\nE('ERR_ARG_NOT_ITERABLE'\x2C '%s must be iterable'\x2C TypeError);\x0d\nE('ERR_ASSERTION'\x2C '%s'\x2C Error);\x0d\nE('ERR_ASYNC_CALLBACK'\x2C '%s must be a function'\x2C TypeError);\x0d\nE('ERR_ASYNC_TYPE'\x2C 'Invalid name for async "type": %s'\x2C TypeError);\x0d\nE('ERR_BROTLI_INVALID_PARAM'\x2C '%s is not a valid Brotli parameter'\x2C RangeError);\x0d\nE('ERR_BUFFER_OUT_OF_BOUNDS'\x2C\x0d\n  // Using a default argument here is important so the argument is not counted\x0d\n  // towards `Function#length`.\x0d\n  (name = undefined) => {\x0d\n    if (name) {\x0d\n      return `"${name}" is outside of buffer bounds`;\x0d\n    }\x0d\n    return 'Attempt to access memory outside buffer bounds';\x0d\n  }\x2C RangeError);\x0d\nE('ERR_BUFFER_TOO_LARGE'\x2C\x0d\n  'Cannot create a Buffer larger than %s bytes'\x2C\x0d\n  RangeError);\x0d\nE('ERR_CANNOT_WATCH_SIGINT'\x2C 'Cannot watch for SIGINT signals'\x2C Error);\x0d\nE('ERR_CHILD_CLOSED_BEFORE_REPLY'\x2C\x0d\n  'Child closed before reply received'\x2C Error);\x0d\nE('ERR_CHILD_PROCESS_IPC_REQUIRED'\x2C\x0d\n  "Forked processes must have an IPC channel\x2C missing value 'ipc' in %s"\x2C\x0d\n  Error);\x0d\nE('ERR_CHILD_PROCESS_STDIO_MAXBUFFER'\x2C '%s maxBuffer length exceeded'\x2C\x0d\n  RangeError);\x0d\nE('ERR_CONSOLE_WRITABLE_STREAM'\x2C\x0d\n  'Console expects a writable stream instance for %s'\x2C TypeError);\x0d\nE('ERR_CONTEXT_NOT_INITIALIZED'\x2C 'context used is not initialized'\x2C Error);\x0d\nE('ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED'\x2C\x0d\n  'Custom engines not supported by this OpenSSL'\x2C Error);\x0d\nE('ERR_CRYPTO_ECDH_INVALID_FORMAT'\x2C 'Invalid ECDH format: %s'\x2C TypeError);\x0d\nE('ERR_CRYPTO_ECDH_INVALID_PUBLIC_KEY'\x2C\x0d\n  'Public key is not valid for specified curve'\x2C Error);\x0d\nE('ERR_CRYPTO_ENGINE_UNKNOWN'\x2C 'Engine "%s" was not found'\x2C Error);\x0d\nE('ERR_CRYPTO_FIPS_FORCED'\x2C\x0d\n  'Cannot set FIPS mode\x2C it was forced with --force-fips at startup.'\x2C Error);\x0d\nE('ERR_CRYPTO_FIPS_UNAVAILABLE'\x2C 'Cannot set FIPS mode in a non-FIPS build.'\x2C\x0d\n  Error);\x0d\nE('ERR_CRYPTO_HASH_FINALIZED'\x2C 'Digest already called'\x2C Error);\x0d\nE('ERR_CRYPTO_HASH_UPDATE_FAILED'\x2C 'Hash update failed'\x2C Error);\x0d\nE('ERR_CRYPTO_INCOMPATIBLE_KEY'\x2C 'Incompatible %s: %s'\x2C Error);\x0d\nE('ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS'\x2C 'The selected key encoding %s %s.'\x2C\x0d\n  Error);\x0d\nE('ERR_CRYPTO_INVALID_DIGEST'\x2C 'Invalid digest: %s'\x2C TypeError);\x0d\nE('ERR_CRYPTO_INVALID_JWK'\x2C 'Invalid JWK data'\x2C TypeError);\x0d\nE('ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE'\x2C\x0d\n  'Invalid key object type %s\x2C expected %s.'\x2C TypeError);\x0d\nE('ERR_CRYPTO_INVALID_STATE'\x2C 'Invalid state for operation %s'\x2C Error);\x0d\nE('ERR_CRYPTO_PBKDF2_ERROR'\x2C 'PBKDF2 error'\x2C Error);\x0d\nE('ERR_CRYPTO_SCRYPT_INVALID_PARAMETER'\x2C 'Invalid scrypt parameter'\x2C Error);\x0d\nE('ERR_CRYPTO_SCRYPT_NOT_SUPPORTED'\x2C 'Scrypt algorithm not supported'\x2C Error);\x0d\n// Switch to TypeError. The current implementation does not seem right.\x0d\nE('ERR_CRYPTO_SIGN_KEY_REQUIRED'\x2C 'No key provided to sign'\x2C Error);\x0d\nE('ERR_DEBUGGER_ERROR'\x2C '%s'\x2C Error);\x0d\nE('ERR_DEBUGGER_STARTUP_ERROR'\x2C '%s'\x2C Error);\x0d\nE('ERR_DIR_CLOSED'\x2C 'Directory handle was closed'\x2C Error);\x0d\nE('ERR_DIR_CONCURRENT_OPERATION'\x2C\x0d\n  'Cannot do synchronous work on directory handle with concurrent ' +\x0d\n  'asynchronous operations'\x2C Error);\x0d\nE('ERR_DNS_SET_SERVERS_FAILED'\x2C 'c-ares failed to set servers: "%s" [%s]'\x2C\x0d\n  Error);\x0d\nE('ERR_DOMAIN_CALLBACK_NOT_AVAILABLE'\x2C\x0d\n  'A callback was registered through ' +\x0d\n     'process.setUncaughtExceptionCaptureCallback()\x2C which is mutually ' +\x0d\n     'exclusive with using the `domain` module'\x2C\x0d\n  Error);\x0d\nE('ERR_DOMAIN_CANNOT_SET_UNCAUGHT_EXCEPTION_CAPTURE'\x2C\x0d\n  'The `domain` module is in use\x2C which is mutually exclusive with calling ' +\x0d\n     'process.setUncaughtExceptionCaptureCallback()'\x2C\x0d\n  Error);\x0d\nE('ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION'\x2C\x0d\n  'Deserialize main function is already configured.'\x2C Error);\x0d\nE('ERR_ENCODING_INVALID_ENCODED_DATA'\x2C function(encoding\x2C ret) {\x0d\n  this.errno = ret;\x0d\n  return `The encoded data was not valid for encoding ${encoding}`;\x0d\n}\x2C TypeError);\x0d\nE('ERR_ENCODING_NOT_SUPPORTED'\x2C 'The "%s" encoding is not supported'\x2C\x0d\n  RangeError);\x0d\nE('ERR_EVAL_ESM_CANNOT_PRINT'\x2C '--print cannot be used with ESM input'\x2C Error);\x0d\nE('ERR_EVENT_RECURSION'\x2C 'The event "%s" is already being dispatched'\x2C Error);\x0d\nE('ERR_FALSY_VALUE_REJECTION'\x2C function(reason) {\x0d\n  this.reason = reason;\x0d\n  return 'Promise was rejected with falsy value';\x0d\n}\x2C Error\x2C HideStackFramesError);\x0d\nE('ERR_FEATURE_UNAVAILABLE_ON_PLATFORM'\x2C\x0d\n  'The feature %s is unavailable on the current platform' +\x0d\n  '\x2C which is being used to run Node.js'\x2C\x0d\n  TypeError);\x0d\nE('ERR_FS_CP_DIR_TO_NON_DIR'\x2C\x0d\n  'Cannot overwrite directory with non-directory'\x2C SystemError);\x0d\nE('ERR_FS_CP_EEXIST'\x2C 'Target already exists'\x2C SystemError);\x0d\nE('ERR_FS_CP_EINVAL'\x2C 'Invalid src or dest'\x2C SystemError);\x0d\nE('ERR_FS_CP_FIFO_PIPE'\x2C 'Cannot copy a FIFO pipe'\x2C SystemError);\x0d\nE('ERR_FS_CP_NON_DIR_TO_DIR'\x2C\x0d\n  'Cannot overwrite non-directory with directory'\x2C SystemError);\x0d\nE('ERR_FS_CP_SOCKET'\x2C 'Cannot copy a socket file'\x2C SystemError);\x0d\nE('ERR_FS_CP_SYMLINK_TO_SUBDIRECTORY'\x2C\x0d\n  'Cannot overwrite symlink in subdirectory of self'\x2C SystemError);\x0d\nE('ERR_FS_CP_UNKNOWN'\x2C 'Cannot copy an unknown file type'\x2C SystemError);\x0d\nE('ERR_FS_EISDIR'\x2C 'Path is a directory'\x2C SystemError\x2C HideStackFramesError);\x0d\nE('ERR_FS_FILE_TOO_LARGE'\x2C 'File size (%s) is greater than 2 GiB'\x2C RangeError);\x0d\nE('ERR_FS_INVALID_SYMLINK_TYPE'\x2C\x0d\n  'Symlink type must be one of "dir"\x2C "file"\x2C or "junction". Received "%s"'\x2C\x0d\n  Error); // Switch to TypeError. The current implementation does not seem right\x0d\nE('ERR_HTTP2_ALTSVC_INVALID_ORIGIN'\x2C\x0d\n  'HTTP/2 ALTSVC frames require a valid origin'\x2C TypeError);\x0d\nE('ERR_HTTP2_ALTSVC_LENGTH'\x2C\x0d\n  'HTTP/2 ALTSVC frames are limited to 16382 bytes'\x2C TypeError);\x0d\nE('ERR_HTTP2_CONNECT_AUTHORITY'\x2C\x0d\n  ':authority header is required for CONNECT requests'\x2C Error);\x0d\nE('ERR_HTTP2_CONNECT_PATH'\x2C\x0d\n  'The :path header is forbidden for CONNECT requests'\x2C Error);\x0d\nE('ERR_HTTP2_CONNECT_SCHEME'\x2C\x0d\n  'The :scheme header is forbidden for CONNECT requests'\x2C Error);\x0d\nE('ERR_HTTP2_GOAWAY_SESSION'\x2C\x0d\n  'New streams cannot be created after receiving a GOAWAY'\x2C Error);\x0d\nE('ERR_HTTP2_HEADERS_AFTER_RESPOND'\x2C\x0d\n  'Cannot specify additional headers after response initiated'\x2C Error);\x0d\nE('ERR_HTTP2_HEADERS_SENT'\x2C 'Response has already been initiated.'\x2C Error);\x0d\nE('ERR_HTTP2_HEADER_SINGLE_VALUE'\x2C\x0d\n  'Header field "%s" must only have a single value'\x2C TypeError);\x0d\nE('ERR_HTTP2_INFO_STATUS_NOT_ALLOWED'\x2C\x0d\n  'Informational status codes cannot be used'\x2C RangeError);\x0d\nE('ERR_HTTP2_INVALID_CONNECTION_HEADERS'\x2C\x0d\n  'HTTP/1 Connection specific headers are forbidden: "%s"'\x2C TypeError);\x0d\nE('ERR_HTTP2_INVALID_HEADER_VALUE'\x2C\x0d\n  'Invalid value "%s" for header "%s"'\x2C TypeError\x2C HideStackFramesError);\x0d\nE('ERR_HTTP2_INVALID_INFO_STATUS'\x2C\x0d\n  'Invalid informational status code: %s'\x2C RangeError);\x0d\nE('ERR_HTTP2_INVALID_ORIGIN'\x2C\x0d\n  'HTTP/2 ORIGIN frames require a valid origin'\x2C TypeError);\x0d\nE('ERR_HTTP2_INVALID_PACKED_SETTINGS_LENGTH'\x2C\x0d\n  'Packed settings length must be a multiple of six'\x2C RangeError);\x0d\nE('ERR_HTTP2_INVALID_PSEUDOHEADER'\x2C\x0d\n  '"%s" is an invalid pseudoheader or is used incorrectly'\x2C TypeError\x2C HideStackFramesError);\x0d\nE('ERR_HTTP2_INVALID_SESSION'\x2C 'The session has been destroyed'\x2C Error);\x0d\nE('ERR_HTTP2_INVALID_SETTING_VALUE'\x2C\x0d\n  // Using default arguments here is important so the arguments are not counted\x0d\n  // towards `Function#length`.\x0d\n  function(name\x2C actual\x2C min = undefined\x2C max = undefined) {\x0d\n    this.actual = actual;\x0d\n    if (min !== undefined) {\x0d\n      this.min = min;\x0d\n      this.max = max;\x0d\n    }\x0d\n    return `Invalid value for setting "${name}": ${actual}`;\x0d\n  }\x2C TypeError\x2C RangeError\x2C HideStackFramesError);\x0d\nE('ERR_HTTP2_INVALID_STREAM'\x2C 'The stream has been destroyed'\x2C Error);\x0d\nE('ERR_HTTP2_MAX_PENDING_SETTINGS_ACK'\x2C\x0d\n  'Maximum number of pending settings acknowledgements'\x2C Error);\x0d\nE('ERR_HTTP2_NESTED_PUSH'\x2C\x0d\n  'A push stream cannot initiate another push stream.'\x2C Error);\x0d\nE('ERR_HTTP2_NO_MEM'\x2C 'Out of memory'\x2C Error);\x0d\nE('ERR_HTTP2_NO_SOCKET_MANIPULATION'\x2C\x0d\n  'HTTP/2 sockets should not be directly manipulated (e.g. read and written)'\x2C\x0d\n  Error);\x0d\nE('ERR_HTTP2_ORIGIN_LENGTH'\x2C\x0d\n  'HTTP/2 ORIGIN frames are limited to 16382 bytes'\x2C TypeError);\x0d\nE('ERR_HTTP2_OUT_OF_STREAMS'\x2C\x0d\n  'No stream ID is available because maximum stream ID has been reached'\x2C\x0d\n  Error);\x0d\nE('ERR_HTTP2_PAYLOAD_FORBIDDEN'\x2C\x0d\n  'Responses with %s status must not have a payload'\x2C Error);\x0d\nE('ERR_HTTP2_PING_CANCEL'\x2C 'HTTP2 ping cancelled'\x2C Error);\x0d\nE('ERR_HTTP2_PING_LENGTH'\x2C 'HTTP2 ping payload must be 8 bytes'\x2C RangeError);\x0d\nE('ERR_HTTP2_PSEUDOHEADER_NOT_ALLOWED'\x2C\x0d\n  'Cannot set HTTP/2 pseudo-headers'\x2C TypeError\x2C HideStackFramesError);\x0d\nE('ERR_HTTP2_PUSH_DISABLED'\x2C 'HTTP/2 client has disabled push streams'\x2C Error);\x0d\nE('ERR_HTTP2_SEND_FILE'\x2C 'Directories cannot be sent'\x2C Error);\x0d\nE('ERR_HTTP2_SEND_FILE_NOSEEK'\x2C\x0d\n  'Offset or length can only be specified for regular files'\x2C Error);\x0d\nE('ERR_HTTP2_SESSION_ERROR'\x2C 'Session closed with error code %s'\x2C Error);\x0d\nE('ERR_HTTP2_SETTINGS_CANCEL'\x2C 'HTTP2 session settings canceled'\x2C Error);\x0d\nE('ERR_HTTP2_SOCKET_BOUND'\x2C\x0d\n  'The socket is already bound to an Http2Session'\x2C Error);\x0d\nE('ERR_HTTP2_SOCKET_UNBOUND'\x2C\x0d\n  'The socket has been disconnected from the Http2Session'\x2C Error);\x0d\nE('ERR_HTTP2_STATUS_101'\x2C\x0d\n  'HTTP status code 101 (Switching Protocols) is forbidden in HTTP/2'\x2C Error);\x0d\nE('ERR_HTTP2_STATUS_INVALID'\x2C 'Invalid status code: %s'\x2C RangeError);\x0d\nE('ERR_HTTP2_STREAM_CANCEL'\x2C function(error) {\x0d\n  let msg = 'The pending stream has been canceled';\x0d\n  if (error) {\x0d\n    this.cause = error;\x0d\n    if (typeof error.message === 'string')\x0d\n      msg += ` (caused by: ${error.message})`;\x0d\n  }\x0d\n  return msg;\x0d\n}\x2C Error);\x0d\nE('ERR_HTTP2_STREAM_ERROR'\x2C 'Stream closed with error code %s'\x2C Error);\x0d\nE('ERR_HTTP2_STREAM_SELF_DEPENDENCY'\x2C\x0d\n  'A stream cannot depend on itself'\x2C Error);\x0d\nE('ERR_HTTP2_TOO_MANY_CUSTOM_SETTINGS'\x2C\x0d\n  'Number of custom settings exceeds MAX_ADDITIONAL_SETTINGS'\x2C Error);\x0d\nE('ERR_HTTP2_TOO_MANY_INVALID_FRAMES'\x2C 'Too many invalid HTTP/2 frames'\x2C Error);\x0d\nE('ERR_HTTP2_TRAILERS_ALREADY_SENT'\x2C\x0d\n  'Trailing headers have already been sent'\x2C Error);\x0d\nE('ERR_HTTP2_TRAILERS_NOT_READY'\x2C\x0d\n  'Trailing headers cannot be sent until after the wantTrailers event is ' +\x0d\n  'emitted'\x2C Error);\x0d\nE('ERR_HTTP2_UNSUPPORTED_PROTOCOL'\x2C 'protocol "%s" is unsupported.'\x2C Error);\x0d\nE('ERR_HTTP_BODY_NOT_ALLOWED'\x2C\x0d\n  'Adding content for this request method or response status is not allowed.'\x2C Error);\x0d\nE('ERR_HTTP_CONTENT_LENGTH_MISMATCH'\x2C\x0d\n  'Response body\\'s content-length of %s byte(s) does not match the content-length of %s byte(s) set in header'\x2C Error);\x0d\nE('ERR_HTTP_HEADERS_SENT'\x2C\x0d\n  'Cannot %s headers after they are sent to the client'\x2C Error);\x0d\nE('ERR_HTTP_INVALID_HEADER_VALUE'\x2C\x0d\n  'Invalid value "%s" for header "%s"'\x2C TypeError\x2C HideStackFramesError);\x0d\nE('ERR_HTTP_INVALID_STATUS_CODE'\x2C 'Invalid status code: %s'\x2C RangeError);\x0d\nE('ERR_HTTP_REQUEST_TIMEOUT'\x2C 'Request timeout'\x2C Error);\x0d\nE('ERR_HTTP_SOCKET_ASSIGNED'\x2C\x0d\n  'ServerResponse has an already assigned socket'\x2C Error);\x0d\nE('ERR_HTTP_SOCKET_ENCODING'\x2C\x0d\n  'Changing the socket encoding is not allowed per RFC7230 Section 3.'\x2C Error);\x0d\nE('ERR_HTTP_TRAILER_INVALID'\x2C\x0d\n  'Trailers are invalid with this transfer encoding'\x2C Error);\x0d\nE('ERR_ILLEGAL_CONSTRUCTOR'\x2C 'Illegal constructor'\x2C TypeError);\x0d\nE('ERR_IMPORT_ATTRIBUTE_MISSING'\x2C\x0d\n  'Module "%s" needs an import attribute of "%s: %s"'\x2C TypeError);\x0d\nE('ERR_IMPORT_ATTRIBUTE_TYPE_INCOMPATIBLE'\x2C\x0d\n  'Module "%s" is not of type "%s"'\x2C TypeError);\x0d\nE('ERR_IMPORT_ATTRIBUTE_UNSUPPORTED'\x2C\x0d\n  'Import attribute "%s" with value "%s" is not supported'\x2C TypeError);\x0d\nE('ERR_INCOMPATIBLE_OPTION_PAIR'\x2C\x0d\n  'Option "%s" cannot be used in combination with option "%s"'\x2C TypeError\x2C HideStackFramesError);\x0d\nE('ERR_INPUT_TYPE_NOT_ALLOWED'\x2C '--input-type can only be used with string ' +\x0d\n  'input via --eval\x2C --print\x2C or STDIN'\x2C Error);\x0d\nE('ERR_INSPECTOR_ALREADY_ACTIVATED'\x2C\x0d\n  'Inspector is already activated. Close it with inspector.close() ' +\x0d\n  'before activating it again.'\x2C\x0d\n  Error);\x0d\nE('ERR_INSPECTOR_ALREADY_CONNECTED'\x2C '%s is already connected'\x2C Error);\x0d\nE('ERR_INSPECTOR_CLOSED'\x2C 'Session was closed'\x2C Error);\x0d\nE('ERR_INSPECTOR_COMMAND'\x2C 'Inspector error %d: %s'\x2C Error);\x0d\nE('ERR_INSPECTOR_NOT_ACTIVE'\x2C 'Inspector is not active'\x2C Error);\x0d\nE('ERR_INSPECTOR_NOT_AVAILABLE'\x2C 'Inspector is not available'\x2C Error);\x0d\nE('ERR_INSPECTOR_NOT_CONNECTED'\x2C 'Session is not connected'\x2C Error);\x0d\nE('ERR_INSPECTOR_NOT_WORKER'\x2C 'Current thread is not a worker'\x2C Error);\x0d\nE('ERR_INTERNAL_ASSERTION'\x2C (message) => {\x0d\n  const suffix = 'This is caused by either a bug in Node.js ' +\x0d\n    'or incorrect usage of Node.js internals.\\n' +\x0d\n    'Please open an issue with this stack trace at ' +\x0d\n    'https://github.com/nodejs/node/issues\\n';\x0d\n  return message === undefined ? suffix : `${message}\\n${suffix}`;\x0d\n}\x2C Error);\x0d\nE('ERR_INVALID_ADDRESS_FAMILY'\x2C function(addressType\x2C host\x2C port) {\x0d\n  this.host = host;\x0d\n  this.port = port;\x0d\n  return `Invalid address family: ${addressType} ${host}:${port}`;\x0d\n}\x2C RangeError);\x0d\nE('ERR_INVALID_ARG_TYPE'\x2C\x0d\n  (name\x2C expected\x2C actual) => {\x0d\n    assert(typeof name === 'string'\x2C "'name' must be a string");\x0d\n    if (!ArrayIsArray(expected)) {\x0d\n      expected = [expected];\x0d\n    }\x0d\n\x0d\n    let msg = 'The ';\x0d\n    if (StringPrototypeEndsWith(name\x2C ' argument')) {\x0d\n      // For cases like 'first argument'\x0d\n      msg += `${name} `;\x0d\n    } else {\x0d\n      const type = StringPrototypeIncludes(name\x2C '.') ? 'property' : 'argument';\x0d\n      msg += `"${name}" ${type} `;\x0d\n    }\x0d\n    msg += 'must be ';\x0d\n\x0d\n    const types = [];\x0d\n    const instances = [];\x0d\n    const other = [];\x0d\n\x0d\n    for (const value of expected) {\x0d\n      assert(typeof value === 'string'\x2C\x0d\n             'All expected entries have to be of type string');\x0d\n      if (ArrayPrototypeIncludes(kTypes\x2C value)) {\x0d\n        ArrayPrototypePush(types\x2C StringPrototypeToLowerCase(value));\x0d\n      } else if (RegExpPrototypeExec(classRegExp\x2C value) !== null) {\x0d\n        ArrayPrototypePush(instances\x2C value);\x0d\n      } else {\x0d\n        assert(value !== 'object'\x2C\x0d\n               'The value "object" should be written as "Object"');\x0d\n        ArrayPrototypePush(other\x2C value);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Special handle `object` in case other instances are allowed to outline\x0d\n    // the differences between each other.\x0d\n    if (instances.length > 0) {\x0d\n      const pos = ArrayPrototypeIndexOf(types\x2C 'object');\x0d\n      if (pos !== -1) {\x0d\n        ArrayPrototypeSplice(types\x2C pos\x2C 1);\x0d\n        ArrayPrototypePush(instances\x2C 'Object');\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (types.length > 0) {\x0d\n      msg += `${types.length > 1 ? 'one of type' : 'of type'} ${formatList(types\x2C 'or')}`;\x0d\n      if (instances.length > 0 || other.length > 0)\x0d\n        msg += ' or ';\x0d\n    }\x0d\n\x0d\n    if (instances.length > 0) {\x0d\n      msg += `an instance of ${formatList(instances\x2C 'or')}`;\x0d\n      if (other.length > 0)\x0d\n        msg += ' or ';\x0d\n    }\x0d\n\x0d\n    if (other.length > 0) {\x0d\n      if (other.length > 1) {\x0d\n        msg += `one of ${formatList(other\x2C 'or')}`;\x0d\n      } else {\x0d\n        if (StringPrototypeToLowerCase(other[0]) !== other[0])\x0d\n          msg += 'an ';\x0d\n        msg += `${other[0]}`;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    msg += `. Received ${determineSpecificType(actual)}`;\x0d\n\x0d\n    return msg;\x0d\n  }\x2C TypeError\x2C HideStackFramesError);\x0d\nE('ERR_INVALID_ARG_VALUE'\x2C (name\x2C value\x2C reason = 'is invalid') => {\x0d\n  let inspected = lazyInternalUtilInspect().inspect(value);\x0d\n  if (inspected.length > 128) {\x0d\n    inspected = `${StringPrototypeSlice(inspected\x2C 0\x2C 128)}...`;\x0d\n  }\x0d\n  const type = StringPrototypeIncludes(name\x2C '.') ? 'property' : 'argument';\x0d\n  return `The ${type} '${name}' ${reason}. Received ${inspected}`;\x0d\n}\x2C TypeError\x2C RangeError\x2C HideStackFramesError);\x0d\nE('ERR_INVALID_ASYNC_ID'\x2C 'Invalid %s value: %s'\x2C RangeError);\x0d\nE('ERR_INVALID_BUFFER_SIZE'\x2C\x0d\n  'Buffer size must be a multiple of %s'\x2C RangeError);\x0d\nE('ERR_INVALID_CHAR'\x2C\x0d\n  // Using a default argument here is important so the argument is not counted\x0d\n  // towards `Function#length`.\x0d\n  (name\x2C field = undefined) => {\x0d\n    let msg = `Invalid character in ${name}`;\x0d\n    if (field !== undefined) {\x0d\n      msg += ` ["${field}"]`;\x0d\n    }\x0d\n    return msg;\x0d\n  }\x2C TypeError\x2C HideStackFramesError);\x0d\nE('ERR_INVALID_CURSOR_POS'\x2C\x0d\n  'Cannot set cursor row without setting its column'\x2C TypeError);\x0d\nE('ERR_INVALID_FD'\x2C\x0d\n  '"fd" must be a positive integer: %s'\x2C RangeError);\x0d\nE('ERR_INVALID_FD_TYPE'\x2C 'Unsupported fd type: %s'\x2C TypeError);\x0d\nE('ERR_INVALID_FILE_URL_HOST'\x2C\x0d\n  'File URL host must be "localhost" or empty on %s'\x2C TypeError);\x0d\nE('ERR_INVALID_FILE_URL_PATH'\x2C 'File URL path %s'\x2C TypeError);\x0d\nE('ERR_INVALID_HANDLE_TYPE'\x2C 'This handle type cannot be sent'\x2C TypeError);\x0d\nE('ERR_INVALID_HTTP_TOKEN'\x2C '%s must be a valid HTTP token ["%s"]'\x2C TypeError\x2C HideStackFramesError);\x0d\nE('ERR_INVALID_IP_ADDRESS'\x2C 'Invalid IP address: %s'\x2C TypeError);\x0d\nE('ERR_INVALID_MIME_SYNTAX'\x2C (production\x2C str\x2C invalidIndex) => {\x0d\n  const msg = invalidIndex !== -1 ? ` at ${invalidIndex}` : '';\x0d\n  return `The MIME syntax for a ${production} in "${str}" is invalid` + msg;\x0d\n}\x2C TypeError);\x0d\nE('ERR_INVALID_MODULE_SPECIFIER'\x2C (request\x2C reason\x2C base = undefined) => {\x0d\n  return `Invalid module "${request}" ${reason}${base ?\x0d\n    ` imported from ${base}` : ''}`;\x0d\n}\x2C TypeError);\x0d\nE('ERR_INVALID_PACKAGE_CONFIG'\x2C (path\x2C base\x2C message) => {\x0d\n  return `Invalid package config ${path}${base ? ` while importing ${base}` :\x0d\n    ''}${message ? `. ${message}` : ''}`;\x0d\n}\x2C Error);\x0d\nE('ERR_INVALID_PACKAGE_TARGET'\x2C\x0d\n  (pkgPath\x2C key\x2C target\x2C isImport = false\x2C base = undefined) => {\x0d\n    const relError = typeof target === 'string' && !isImport &&\x0d\n      target.length && !StringPrototypeStartsWith(target\x2C './');\x0d\n    if (key === '.') {\x0d\n      assert(isImport === false);\x0d\n      return `Invalid "exports" main target ${JSONStringify(target)} defined ` +\x0d\n        `in the package config ${pkgPath}package.json${base ?\x0d\n          ` imported from ${base}` : ''}${relError ?\x0d\n          '; targets must start with "./"' : ''}`;\x0d\n    }\x0d\n    return `Invalid "${isImport ? 'imports' : 'exports'}" target ${\x0d\n      JSONStringify(target)} defined for '${key}' in the package config ${\x0d\n      pkgPath}package.json${base ? ` imported from ${base}` : ''}${relError ?\x0d\n      '; targets must start with "./"' : ''}`;\x0d\n  }\x2C Error);\x0d\nE('ERR_INVALID_PROTOCOL'\x2C\x0d\n  'Protocol "%s" not supported. Expected "%s"'\x2C\x0d\n  TypeError);\x0d\nE('ERR_INVALID_REPL_EVAL_CONFIG'\x2C\x0d\n  'Cannot specify both "breakEvalOnSigint" and "eval" for REPL'\x2C TypeError);\x0d\nE('ERR_INVALID_REPL_INPUT'\x2C '%s'\x2C TypeError);\x0d\nE('ERR_INVALID_RETURN_PROPERTY'\x2C (input\x2C name\x2C prop\x2C value) => {\x0d\n  return `Expected a valid ${input} to be returned for the "${prop}" from the` +\x0d\n         ` "${name}" hook but got ${determineSpecificType(value)}.`;\x0d\n}\x2C TypeError);\x0d\nE('ERR_INVALID_RETURN_PROPERTY_VALUE'\x2C (input\x2C name\x2C prop\x2C value) => {\x0d\n  return `Expected ${input} to be returned for the "${prop}" from the` +\x0d\n         ` "${name}" hook but got ${determineSpecificType(value)}.`;\x0d\n}\x2C TypeError);\x0d\nE('ERR_INVALID_RETURN_VALUE'\x2C (input\x2C name\x2C value) => {\x0d\n  const type = determineSpecificType(value);\x0d\n\x0d\n  return `Expected ${input} to be returned from the "${name}"` +\x0d\n         ` function but got ${type}.`;\x0d\n}\x2C TypeError\x2C RangeError);\x0d\nE('ERR_INVALID_STATE'\x2C 'Invalid state: %s'\x2C Error\x2C TypeError\x2C RangeError);\x0d\nE('ERR_INVALID_SYNC_FORK_INPUT'\x2C\x0d\n  'Asynchronous forks do not support ' +\x0d\n    'Buffer\x2C TypedArray\x2C DataView or string input: %s'\x2C\x0d\n  TypeError);\x0d\nE('ERR_INVALID_THIS'\x2C 'Value of "this" must be of type %s'\x2C TypeError);\x0d\nE('ERR_INVALID_TUPLE'\x2C '%s must be an iterable %s tuple'\x2C TypeError);\x0d\nE('ERR_INVALID_URI'\x2C 'URI malformed'\x2C URIError);\x0d\nE('ERR_INVALID_URL'\x2C function(input\x2C base = null) {\x0d\n  this.input = input;\x0d\n\x0d\n  if (base != null) {\x0d\n    this.base = base;\x0d\n  }\x0d\n\x0d\n  // Don't include URL in message.\x0d\n  // (See https://github.com/nodejs/node/pull/38614)\x0d\n  return 'Invalid URL';\x0d\n}\x2C TypeError);\x0d\nE('ERR_INVALID_URL_SCHEME'\x2C\x0d\n  (expected) => {\x0d\n    if (typeof expected === 'string')\x0d\n      expected = [expected];\x0d\n    assert(expected.length <= 2);\x0d\n    const res = expected.length === 2 ?\x0d\n      `one of scheme ${expected[0]} or ${expected[1]}` :\x0d\n      `of scheme ${expected[0]}`;\x0d\n    return `The URL must be ${res}`;\x0d\n  }\x2C TypeError);\x0d\nE('ERR_IPC_CHANNEL_CLOSED'\x2C 'Channel closed'\x2C Error);\x0d\nE('ERR_IPC_DISCONNECTED'\x2C 'IPC channel is already disconnected'\x2C Error);\x0d\nE('ERR_IPC_ONE_PIPE'\x2C 'Child process can have only one IPC pipe'\x2C Error);\x0d\nE('ERR_IPC_SYNC_FORK'\x2C 'IPC cannot be used with synchronous forks'\x2C Error);\x0d\nE(\x0d\n  'ERR_LOADER_CHAIN_INCOMPLETE'\x2C\x0d\n  '"%s" did not call the next hook in its chain and did not' +\x0d\n  ' explicitly signal a short circuit. If this is intentional\x2C include' +\x0d\n  ' `shortCircuit: true` in the hook\\'s return.'\x2C\x0d\n  Error\x2C\x0d\n);\x0d\nE('ERR_MANIFEST_ASSERT_INTEGRITY'\x2C\x0d\n  (moduleURL\x2C realIntegrities) => {\x0d\n    let msg = `The content of "${\x0d\n      moduleURL\x0d\n    }" does not match the expected integrity.`;\x0d\n    if (realIntegrities.size) {\x0d\n      const sri = ArrayPrototypeJoin(\x0d\n        ArrayFrom(realIntegrities.entries()\x2C\x0d\n                  ({ 0: alg\x2C 1: dgs }) => `${alg}-${dgs}`)\x2C\x0d\n        ' '\x2C\x0d\n      );\x0d\n      msg += ` Integrities found are: ${sri}`;\x0d\n    } else {\x0d\n      msg += ' The resource was not found in the policy.';\x0d\n    }\x0d\n    return msg;\x0d\n  }\x2C Error);\x0d\nE('ERR_MANIFEST_DEPENDENCY_MISSING'\x2C\x0d\n  'Manifest resource %s does not list %s as a dependency specifier for ' +\x0d\n  'conditions: %s'\x2C\x0d\n  Error);\x0d\nE('ERR_MANIFEST_INTEGRITY_MISMATCH'\x2C\x0d\n  'Manifest resource %s has multiple entries but integrity lists do not match'\x2C\x0d\n  SyntaxError);\x0d\nE('ERR_MANIFEST_INVALID_RESOURCE_FIELD'\x2C\x0d\n  'Manifest resource %s has invalid property value for %s'\x2C\x0d\n  TypeError);\x0d\nE('ERR_MANIFEST_INVALID_SPECIFIER'\x2C\x0d\n  'Manifest resource %s has invalid dependency mapping %s'\x2C\x0d\n  TypeError);\x0d\nE('ERR_MANIFEST_TDZ'\x2C 'Manifest initialization has not yet run'\x2C Error);\x0d\nE('ERR_MANIFEST_UNKNOWN_ONERROR'\x2C\x0d\n  'Manifest specified unknown error behavior "%s".'\x2C\x0d\n  SyntaxError);\x0d\nE('ERR_METHOD_NOT_IMPLEMENTED'\x2C 'The %s method is not implemented'\x2C Error);\x0d\nE('ERR_MISSING_ARGS'\x2C\x0d\n  (...args) => {\x0d\n    assert(args.length > 0\x2C 'At least one arg needs to be specified');\x0d\n    let msg = 'The ';\x0d\n    const len = args.length;\x0d\n    const wrap = (a) => `"${a}"`;\x0d\n    args = ArrayPrototypeMap(\x0d\n      args\x2C\x0d\n      (a) => (ArrayIsArray(a) ?\x0d\n        ArrayPrototypeJoin(ArrayPrototypeMap(a\x2C wrap)\x2C ' or ') :\x0d\n        wrap(a))\x2C\x0d\n    );\x0d\n    msg += `${formatList(args)} argument${len > 1 ? 's' : ''}`;\x0d\n    return `${msg} must be specified`;\x0d\n  }\x2C TypeError);\x0d\nE('ERR_MISSING_OPTION'\x2C '%s is required'\x2C TypeError);\x0d\nE('ERR_MODULE_NOT_FOUND'\x2C function(path\x2C base\x2C exactUrl) {\x0d\n  if (exactUrl) {\x0d\n    lazyInternalUtil().setOwnProperty(this\x2C 'url'\x2C `${exactUrl}`);\x0d\n  }\x0d\n  return `Cannot find ${\x0d\n    exactUrl ? 'module' : 'package'} '${path}' imported from ${base}`;\x0d\n}\x2C Error);\x0d\nE('ERR_MULTIPLE_CALLBACK'\x2C 'Callback called multiple times'\x2C Error);\x0d\nE('ERR_NAPI_CONS_FUNCTION'\x2C 'Constructor must be a function'\x2C TypeError);\x0d\nE('ERR_NAPI_INVALID_DATAVIEW_ARGS'\x2C\x0d\n  'byte_offset + byte_length should be less than or equal to the size in ' +\x0d\n    'bytes of the array passed in'\x2C\x0d\n  RangeError);\x0d\nE('ERR_NAPI_INVALID_TYPEDARRAY_ALIGNMENT'\x2C\x0d\n  'start offset of %s should be a multiple of %s'\x2C RangeError);\x0d\nE('ERR_NAPI_INVALID_TYPEDARRAY_LENGTH'\x2C\x0d\n  'Invalid typed array length'\x2C RangeError);\x0d\nE('ERR_NETWORK_IMPORT_BAD_RESPONSE'\x2C\x0d\n  "import '%s' received a bad response: %s"\x2C Error);\x0d\nE('ERR_NETWORK_IMPORT_DISALLOWED'\x2C\x0d\n  "import of '%s' by %s is not supported: %s"\x2C Error);\x0d\nE('ERR_NOT_BUILDING_SNAPSHOT'\x2C\x0d\n  'Operation cannot be invoked when not building startup snapshot'\x2C Error);\x0d\nE('ERR_NOT_IN_SINGLE_EXECUTABLE_APPLICATION'\x2C\x0d\n  'Operation cannot be invoked when not in a single-executable application'\x2C Error);\x0d\nE('ERR_NOT_SUPPORTED_IN_SNAPSHOT'\x2C '%s is not supported in startup snapshot'\x2C Error);\x0d\nE('ERR_NO_CRYPTO'\x2C\x0d\n  'Node.js is not compiled with OpenSSL crypto support'\x2C Error);\x0d\nE('ERR_NO_ICU'\x2C\x0d\n  '%s is not supported on Node.js compiled without ICU'\x2C TypeError);\x0d\nE('ERR_OPERATION_FAILED'\x2C 'Operation failed: %s'\x2C Error\x2C TypeError);\x0d\nE('ERR_OUT_OF_RANGE'\x2C\x0d\n  (str\x2C range\x2C input\x2C replaceDefaultBoolean = false) => {\x0d\n    assert(range\x2C 'Missing "range" argument');\x0d\n    let msg = replaceDefaultBoolean ? str :\x0d\n      `The value of "${str}" is out of range.`;\x0d\n    let received;\x0d\n    if (NumberIsInteger(input) && MathAbs(input) > 2 ** 32) {\x0d\n      received = addNumericalSeparator(String(input));\x0d\n    } else if (typeof input === 'bigint') {\x0d\n      received = String(input);\x0d\n      if (input > 2n ** 32n || input < -(2n ** 32n)) {\x0d\n        received = addNumericalSeparator(received);\x0d\n      }\x0d\n      received += 'n';\x0d\n    } else {\x0d\n      received = lazyInternalUtilInspect().inspect(input);\x0d\n    }\x0d\n    msg += ` It must be ${range}. Received ${received}`;\x0d\n    return msg;\x0d\n  }\x2C RangeError\x2C HideStackFramesError);\x0d\nE('ERR_PACKAGE_IMPORT_NOT_DEFINED'\x2C (specifier\x2C packagePath\x2C base) => {\x0d\n  return `Package import specifier "${specifier}" is not defined${packagePath ?\x0d\n    ` in package ${packagePath}package.json` : ''} imported from ${base}`;\x0d\n}\x2C TypeError);\x0d\nE('ERR_PACKAGE_PATH_NOT_EXPORTED'\x2C (pkgPath\x2C subpath\x2C base = undefined) => {\x0d\n  if (subpath === '.')\x0d\n    return `No "exports" main defined in ${pkgPath}package.json${base ?\x0d\n      ` imported from ${base}` : ''}`;\x0d\n  return `Package subpath '${subpath}' is not defined by "exports" in ${\x0d\n    pkgPath}package.json${base ? ` imported from ${base}` : ''}`;\x0d\n}\x2C Error);\x0d\nE('ERR_PARSE_ARGS_INVALID_OPTION_VALUE'\x2C '%s'\x2C TypeError);\x0d\nE('ERR_PARSE_ARGS_UNEXPECTED_POSITIONAL'\x2C "Unexpected argument '%s'. This " +\x0d\n  'command does not take positional arguments'\x2C TypeError);\x0d\nE('ERR_PARSE_ARGS_UNKNOWN_OPTION'\x2C (option\x2C allowPositionals) => {\x0d\n  const suggestDashDash = allowPositionals ? '. To specify a positional ' +\x0d\n    "argument starting with a '-'\x2C place it at the end of the command after " +\x0d\n    `'--'\x2C as in '-- ${JSONStringify(option)}` : '';\x0d\n  return `Unknown option '${option}'${suggestDashDash}`;\x0d\n}\x2C TypeError);\x0d\nE('ERR_PERFORMANCE_INVALID_TIMESTAMP'\x2C\x0d\n  '%d is not a valid timestamp'\x2C TypeError);\x0d\nE('ERR_PERFORMANCE_MEASURE_INVALID_OPTIONS'\x2C '%s'\x2C TypeError);\x0d\nE('ERR_REQUIRE_ESM'\x2C\x0d\n  function(filename\x2C hasEsmSyntax\x2C parentPath = null\x2C packageJsonPath = null) {\x0d\n    hideInternalStackFrames(this);\x0d\n    let msg = `require() of ES Module ${filename}${parentPath ? ` from ${\x0d\n      parentPath}` : ''} not supported.`;\x0d\n    if (!packageJsonPath) {\x0d\n      if (StringPrototypeEndsWith(filename\x2C '.mjs'))\x0d\n        msg += `\\nInstead change the require of ${filename} to a dynamic ` +\x0d\n            'import() which is available in all CommonJS modules.';\x0d\n      return msg;\x0d\n    }\x0d\n    const path = require('path');\x0d\n    const basename = parentPath && path.basename(filename) ===\x0d\n      path.basename(parentPath) ? filename : path.basename(filename);\x0d\n    if (hasEsmSyntax) {\x0d\n      msg += `\\nInstead change the require of ${basename} in ${parentPath} to` +\x0d\n        ' a dynamic import() which is available in all CommonJS modules.';\x0d\n      return msg;\x0d\n    }\x0d\n    msg += `\\n${basename} is treated as an ES module file as it is a .js ` +\x0d\n      'file whose nearest parent package.json contains "type": "module" ' +\x0d\n      'which declares all .js files in that package scope as ES modules.' +\x0d\n      `\\nInstead either rename ${basename} to end in .cjs\x2C change the requiring ` +\x0d\n      'code to use dynamic import() which is available in all CommonJS ' +\x0d\n      'modules\x2C or change "type": "module" to "type": "commonjs" in ' +\x0d\n      `${packageJsonPath} to treat all .js files as CommonJS (using .mjs for ` +\x0d\n      'all ES modules instead).\\n';\x0d\n    return msg;\x0d\n  }\x2C Error);\x0d\nE('ERR_SCRIPT_EXECUTION_INTERRUPTED'\x2C\x0d\n  'Script execution was interrupted by `SIGINT`'\x2C Error);\x0d\nE('ERR_SERVER_ALREADY_LISTEN'\x2C\x0d\n  'Listen method has been called more than once without closing.'\x2C Error);\x0d\nE('ERR_SERVER_NOT_RUNNING'\x2C 'Server is not running.'\x2C Error);\x0d\nE('ERR_SINGLE_EXECUTABLE_APPLICATION_ASSET_NOT_FOUND'\x2C\x0d\n  'Cannot find asset %s for the single executable application'\x2C Error);\x0d\nE('ERR_SOCKET_ALREADY_BOUND'\x2C 'Socket is already bound'\x2C Error);\x0d\nE('ERR_SOCKET_BAD_BUFFER_SIZE'\x2C\x0d\n  'Buffer size must be a positive integer'\x2C TypeError);\x0d\nE('ERR_SOCKET_BAD_PORT'\x2C (name\x2C port\x2C allowZero = true) => {\x0d\n  assert(typeof allowZero === 'boolean'\x2C\x0d\n         "The 'allowZero' argument must be of type boolean.");\x0d\n  const operator = allowZero ? '>=' : '>';\x0d\n  return `${name} should be ${operator} 0 and < 65536. Received ${determineSpecificType(port)}.`;\x0d\n}\x2C RangeError\x2C HideStackFramesError);\x0d\nE('ERR_SOCKET_BAD_TYPE'\x2C\x0d\n  'Bad socket type specified. Valid types are: udp4\x2C udp6'\x2C TypeError);\x0d\nE('ERR_SOCKET_BUFFER_SIZE'\x2C\x0d\n  'Could not get or set buffer size'\x2C\x0d\n  SystemError);\x0d\nE('ERR_SOCKET_CLOSED'\x2C 'Socket is closed'\x2C Error);\x0d\nE('ERR_SOCKET_CLOSED_BEFORE_CONNECTION'\x2C\x0d\n  'Socket closed before the connection was established'\x2C\x0d\n  Error);\x0d\nE('ERR_SOCKET_CONNECTION_TIMEOUT'\x2C\x0d\n  'Socket connection timeout'\x2C Error);\x0d\nE('ERR_SOCKET_DGRAM_IS_CONNECTED'\x2C 'Already connected'\x2C Error);\x0d\nE('ERR_SOCKET_DGRAM_NOT_CONNECTED'\x2C 'Not connected'\x2C Error);\x0d\nE('ERR_SOCKET_DGRAM_NOT_RUNNING'\x2C 'Not running'\x2C Error);\x0d\nE('ERR_SRI_PARSE'\x2C\x0d\n  'Subresource Integrity string %j had an unexpected %j at position %d'\x2C\x0d\n  SyntaxError);\x0d\nE('ERR_STREAM_ALREADY_FINISHED'\x2C\x0d\n  'Cannot call %s after a stream was finished'\x2C\x0d\n  Error);\x0d\nE('ERR_STREAM_CANNOT_PIPE'\x2C 'Cannot pipe\x2C not readable'\x2C Error);\x0d\nE('ERR_STREAM_DESTROYED'\x2C 'Cannot call %s after a stream was destroyed'\x2C Error);\x0d\nE('ERR_STREAM_NULL_VALUES'\x2C 'May not write null values to stream'\x2C TypeError);\x0d\nE('ERR_STREAM_PREMATURE_CLOSE'\x2C 'Premature close'\x2C Error);\x0d\nE('ERR_STREAM_PUSH_AFTER_EOF'\x2C 'stream.push() after EOF'\x2C Error);\x0d\nE('ERR_STREAM_UNSHIFT_AFTER_END_EVENT'\x2C\x0d\n  'stream.unshift() after end event'\x2C Error);\x0d\nE('ERR_STREAM_WRAP'\x2C 'Stream has StringDecoder set or is in objectMode'\x2C Error);\x0d\nE('ERR_STREAM_WRITE_AFTER_END'\x2C 'write after end'\x2C Error);\x0d\nE('ERR_SYNTHETIC'\x2C 'JavaScript Callstack'\x2C Error);\x0d\nE('ERR_SYSTEM_ERROR'\x2C 'A system error occurred'\x2C SystemError\x2C HideStackFramesError);\x0d\nE('ERR_TAP_LEXER_ERROR'\x2C function(errorMsg) {\x0d\n  hideInternalStackFrames(this);\x0d\n  return errorMsg;\x0d\n}\x2C Error);\x0d\nE('ERR_TAP_PARSER_ERROR'\x2C function(errorMsg\x2C details\x2C tokenCausedError\x2C source) {\x0d\n  hideInternalStackFrames(this);\x0d\n  this.cause = tokenCausedError;\x0d\n  const { column\x2C line\x2C start\x2C end } = tokenCausedError.location;\x0d\n  const errorDetails = `${details} at line ${line}\x2C column ${column} (start ${start}\x2C end ${end})`;\x0d\n  return errorMsg + errorDetails;\x0d\n}\x2C SyntaxError);\x0d\nE('ERR_TAP_VALIDATION_ERROR'\x2C function(errorMsg) {\x0d\n  hideInternalStackFrames(this);\x0d\n  return errorMsg;\x0d\n}\x2C Error);\x0d\nE('ERR_TEST_FAILURE'\x2C function(error\x2C failureType) {\x0d\n  hideInternalStackFrames(this);\x0d\n  assert(typeof failureType === 'string' || typeof failureType === 'symbol'\x2C\x0d\n         "The 'failureType' argument must be of type string or symbol.");\x0d\n\x0d\n  let msg = error?.message ?? error;\x0d\n\x0d\n  if (typeof msg !== 'string') {\x0d\n    msg = inspectWithNoCustomRetry(msg);\x0d\n  }\x0d\n\x0d\n  this.failureType = failureType;\x0d\n  this.cause = error;\x0d\n  return msg;\x0d\n}\x2C Error);\x0d\nE('ERR_TLS_ALPN_CALLBACK_INVALID_RESULT'\x2C (value\x2C protocols) => {\x0d\n  return `ALPN callback returned a value (${\x0d\n    value\x0d\n  }) that did not match any of the client's offered protocols (${\x0d\n    protocols.join('\x2C ')\x0d\n  })`;\x0d\n}\x2C TypeError);\x0d\nE('ERR_TLS_ALPN_CALLBACK_WITH_PROTOCOLS'\x2C\x0d\n  'The ALPNCallback and ALPNProtocols TLS options are mutually exclusive'\x2C\x0d\n  TypeError);\x0d\nE('ERR_TLS_CERT_ALTNAME_FORMAT'\x2C 'Invalid subject alternative name string'\x2C\x0d\n  SyntaxError);\x0d\nE('ERR_TLS_CERT_ALTNAME_INVALID'\x2C function(reason\x2C host\x2C cert) {\x0d\n  this.reason = reason;\x0d\n  this.host = host;\x0d\n  this.cert = cert;\x0d\n  return `Hostname/IP does not match certificate's altnames: ${reason}`;\x0d\n}\x2C Error);\x0d\nE('ERR_TLS_DH_PARAM_SIZE'\x2C 'DH parameter size %s is less than 2048'\x2C Error);\x0d\nE('ERR_TLS_HANDSHAKE_TIMEOUT'\x2C 'TLS handshake timeout'\x2C Error);\x0d\nE('ERR_TLS_INVALID_CONTEXT'\x2C '%s must be a SecureContext'\x2C TypeError);\x0d\nE('ERR_TLS_INVALID_PROTOCOL_VERSION'\x2C\x0d\n  '%j is not a valid %s TLS protocol version'\x2C TypeError);\x0d\nE('ERR_TLS_INVALID_STATE'\x2C 'TLS socket connection must be securely established'\x2C\x0d\n  Error);\x0d\nE('ERR_TLS_PROTOCOL_VERSION_CONFLICT'\x2C\x0d\n  'TLS protocol version %j conflicts with secureProtocol %j'\x2C TypeError);\x0d\nE('ERR_TLS_RENEGOTIATION_DISABLED'\x2C\x0d\n  'TLS session renegotiation disabled for this socket'\x2C Error);\x0d\n\x0d\n// This should probably be a `TypeError`.\x0d\nE('ERR_TLS_REQUIRED_SERVER_NAME'\x2C\x0d\n  '"servername" is required parameter for Server.addContext'\x2C Error);\x0d\nE('ERR_TLS_SESSION_ATTACK'\x2C 'TLS session renegotiation attack detected'\x2C Error);\x0d\nE('ERR_TLS_SNI_FROM_SERVER'\x2C\x0d\n  'Cannot issue SNI from a TLS server-side socket'\x2C Error);\x0d\nE('ERR_TRACE_EVENTS_CATEGORY_REQUIRED'\x2C\x0d\n  'At least one category is required'\x2C TypeError);\x0d\nE('ERR_TRACE_EVENTS_UNAVAILABLE'\x2C 'Trace events are unavailable'\x2C Error);\x0d\n\x0d\n// This should probably be a `RangeError`.\x0d\nE('ERR_TTY_INIT_FAILED'\x2C 'TTY initialization failed'\x2C SystemError);\x0d\nE('ERR_UNAVAILABLE_DURING_EXIT'\x2C 'Cannot call function in process exit ' +\x0d\n  'handler'\x2C Error);\x0d\nE('ERR_UNCAUGHT_EXCEPTION_CAPTURE_ALREADY_SET'\x2C\x0d\n  '`process.setupUncaughtExceptionCapture()` was called while a capture ' +\x0d\n    'callback was already active'\x2C\x0d\n  Error);\x0d\nE('ERR_UNESCAPED_CHARACTERS'\x2C '%s contains unescaped characters'\x2C TypeError);\x0d\nE('ERR_UNHANDLED_ERROR'\x2C\x0d\n  // Using a default argument here is important so the argument is not counted\x0d\n  // towards `Function#length`.\x0d\n  (err = undefined) => {\x0d\n    const msg = 'Unhandled error.';\x0d\n    if (err === undefined) return msg;\x0d\n    return `${msg} (${err})`;\x0d\n  }\x2C Error);\x0d\nE('ERR_UNKNOWN_BUILTIN_MODULE'\x2C 'No such built-in module: %s'\x2C Error);\x0d\nE('ERR_UNKNOWN_CREDENTIAL'\x2C '%s identifier does not exist: %s'\x2C Error);\x0d\nE('ERR_UNKNOWN_ENCODING'\x2C 'Unknown encoding: %s'\x2C TypeError);\x0d\nE('ERR_UNKNOWN_FILE_EXTENSION'\x2C 'Unknown file extension "%s" for %s'\x2C TypeError);\x0d\nE('ERR_UNKNOWN_MODULE_FORMAT'\x2C 'Unknown module format: %s for URL %s'\x2C\x0d\n  RangeError);\x0d\nE('ERR_UNKNOWN_SIGNAL'\x2C 'Unknown signal: %s'\x2C TypeError\x2C HideStackFramesError);\x0d\nE('ERR_UNSUPPORTED_DIR_IMPORT'\x2C function(path\x2C base\x2C exactUrl) {\x0d\n  lazyInternalUtil().setOwnProperty(this\x2C 'url'\x2C exactUrl);\x0d\n  return `Directory import '${path}' is not supported ` +\x0d\n    `resolving ES modules imported from ${base}`;\x0d\n}\x2C Error);\x0d\nE('ERR_UNSUPPORTED_ESM_URL_SCHEME'\x2C (url\x2C supported) => {\x0d\n  let msg = `Only URLs with a scheme in: ${formatList(supported)} are supported by the default ESM loader`;\x0d\n  if (isWindows && url.protocol.length === 2) {\x0d\n    msg +=\x0d\n      '. On Windows\x2C absolute paths must be valid file:// URLs';\x0d\n  }\x0d\n  msg += `. Received protocol '${url.protocol}'`;\x0d\n  return msg;\x0d\n}\x2C Error);\x0d\nE('ERR_UNSUPPORTED_RESOLVE_REQUEST'\x2C\x0d\n  'Failed to resolve module specifier "%s" from "%s": Invalid relative URL or base scheme is not hierarchical.'\x2C\x0d\n  TypeError);\x0d\nE('ERR_USE_AFTER_CLOSE'\x2C '%s was closed'\x2C Error);\x0d\n\x0d\n// This should probably be a `TypeError`.\x0d\nE('ERR_VALID_PERFORMANCE_ENTRY_TYPE'\x2C\x0d\n  'At least one valid performance entry type is required'\x2C Error);\x0d\nE('ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING'\x2C\x0d\n  'A dynamic import callback was not specified.'\x2C TypeError);\x0d\nE('ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING_FLAG'\x2C\x0d\n  'A dynamic import callback was invoked without --experimental-vm-modules'\x2C\x0d\n  TypeError);\x0d\nE('ERR_VM_MODULE_ALREADY_LINKED'\x2C 'Module has already been linked'\x2C Error);\x0d\nE('ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA'\x2C\x0d\n  'Cached data cannot be created for a module which has been evaluated'\x2C Error);\x0d\nE('ERR_VM_MODULE_DIFFERENT_CONTEXT'\x2C\x0d\n  'Linked modules must use the same context'\x2C Error);\x0d\nE('ERR_VM_MODULE_LINK_FAILURE'\x2C function(message\x2C cause) {\x0d\n  this.cause = cause;\x0d\n  return message;\x0d\n}\x2C Error);\x0d\nE('ERR_VM_MODULE_NOT_MODULE'\x2C\x0d\n  'Provided module is not an instance of Module'\x2C Error);\x0d\nE('ERR_VM_MODULE_STATUS'\x2C 'Module status %s'\x2C Error);\x0d\nE('ERR_WASI_ALREADY_STARTED'\x2C 'WASI instance has already started'\x2C Error);\x0d\nE('ERR_WEBASSEMBLY_RESPONSE'\x2C 'WebAssembly response %s'\x2C TypeError);\x0d\nE('ERR_WORKER_INIT_FAILED'\x2C 'Worker initialization failure: %s'\x2C Error);\x0d\nE('ERR_WORKER_INVALID_EXEC_ARGV'\x2C (errors\x2C msg = 'invalid execArgv flags') =>\x0d\n  `Initiated Worker with ${msg}: ${ArrayPrototypeJoin(errors\x2C '\x2C ')}`\x2C\x0d\n  Error);\x0d\nE('ERR_WORKER_NOT_RUNNING'\x2C 'Worker instance not running'\x2C Error);\x0d\nE('ERR_WORKER_OUT_OF_MEMORY'\x2C\x0d\n  'Worker terminated due to reaching memory limit: %s'\x2C Error);\x0d\nE('ERR_WORKER_PATH'\x2C (filename) =>\x0d\n  'The worker script or module filename must be an absolute path or a ' +\x0d\n  'relative path starting with \\'./\\' or \\'../\\'.' +\x0d\n  (StringPrototypeStartsWith(filename\x2C 'file://') ?\x0d\n    ' Wrap file:// URLs with `new URL`.' : ''\x0d\n  ) +\x0d\n  (StringPrototypeStartsWith(filename\x2C 'data:text/javascript') ?\x0d\n    ' Wrap data: URLs with `new URL`.' : ''\x0d\n  ) +\x0d\n  ` Received "${filename}"`\x2C\x0d\n  TypeError);\x0d\nE('ERR_WORKER_UNSERIALIZABLE_ERROR'\x2C\x0d\n  'Serializing an uncaught exception failed'\x2C Error);\x0d\nE('ERR_WORKER_UNSUPPORTED_OPERATION'\x2C\x0d\n  '%s is not supported in workers'\x2C TypeError);\x0d\nE('ERR_ZLIB_INITIALIZATION_FAILED'\x2C 'Initialization failed'\x2C Error);\x0d\n
code-source-info,0x125aa793734,10,2920,2976,C0O2936C2O2962C9O2975,,
code-creation,JS,10,110461,0x125aa7978d4,348,initializeDeprecations node:internal/process/pre_execution:486:32,0x1d9b727f5f8,~
code-source-info,0x125aa7978d4,67,15967,17947,C0O15997C6O15997C11O15983C16O16053C24O16053C29O16248C35O16248C40O16290C46O16290C51O16344C73O16336C101O16336C104O16680C112O16700C116O16743C127O16818C138O16910C149O16864C158O16728C167O16971C170O16698C174O16325C239O17255C245O17255C250O17234C255O17285C257O17314C268O17335C275O17481C279O17314C284O17518C288O17549C294O17585C304O17663C311O17567C316O17565C320O17752C326O17794C337O17776C342O17774C347O17946,,
code-creation,JS,10,110578,0x125aa797c74,65,initializeDns node:internal/dns/utils:204:23,0x172de401e38,~
script-source,70,node:internal/dns/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  NumberParseInt\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst errors = require('internal/errors');\x0d\nconst { isIP } = require('internal/net');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateInt32\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nlet binding;\x0d\nfunction lazyBinding() {\x0d\n  binding ??= internalBinding('cares_wrap');\x0d\n  return binding;\x0d\n}\x0d\nconst IANA_DNS_PORT = 53;\x0d\nconst IPv6RE = /^\\[([^[\\]]*)\\]/;\x0d\nconst addrSplitRE = /(^.+?)(?::(\\d+))?$/;\x0d\nconst {\x0d\n  ERR_DNS_SET_SERVERS_FAILED\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_IP_ADDRESS\x2C\x0d\n} = errors.codes;\x0d\n\x0d\nconst {\x0d\n  namespace: {\x0d\n    addSerializeCallback\x2C\x0d\n    addDeserializeCallback\x2C\x0d\n    isBuildingSnapshot\x2C\x0d\n  }\x2C\x0d\n} = require('internal/v8/startup_snapshot');\x0d\n\x0d\nfunction validateTimeout(options) {\x0d\n  const { timeout = -1 } = { ...options };\x0d\n  validateInt32(timeout\x2C 'options.timeout'\x2C -1);\x0d\n  return timeout;\x0d\n}\x0d\n\x0d\nfunction validateTries(options) {\x0d\n  const { tries = 4 } = { ...options };\x0d\n  validateInt32(tries\x2C 'options.tries'\x2C 1);\x0d\n  return tries;\x0d\n}\x0d\n\x0d\nconst kSerializeResolver = Symbol('dns:resolver:serialize');\x0d\nconst kDeserializeResolver = Symbol('dns:resolver:deserialize');\x0d\nconst kSnapshotStates = Symbol('dns:resolver:config');\x0d\nconst kInitializeHandle = Symbol('dns:resolver:initializeHandle');\x0d\nconst kSetServersInteral = Symbol('dns:resolver:setServers');\x0d\n\x0d\n// Resolver instances correspond 1:1 to c-ares channels.\x0d\n\x0d\nclass ResolverBase {\x0d\n  constructor(options = undefined) {\x0d\n    const timeout = validateTimeout(options);\x0d\n    const tries = validateTries(options);\x0d\n    // If we are building snapshot\x2C save the states of the resolver along\x0d\n    // the way.\x0d\n    if (isBuildingSnapshot()) {\x0d\n      this[kSnapshotStates] = { timeout\x2C tries };\x0d\n    }\x0d\n    this[kInitializeHandle](timeout\x2C tries);\x0d\n  }\x0d\n\x0d\n  [kInitializeHandle](timeout\x2C tries) {\x0d\n    const { ChannelWrap } = lazyBinding();\x0d\n    this._handle = new ChannelWrap(timeout\x2C tries);\x0d\n  }\x0d\n\x0d\n  cancel() {\x0d\n    this._handle.cancel();\x0d\n  }\x0d\n\x0d\n  getServers() {\x0d\n    return ArrayPrototypeMap(this._handle.getServers() || []\x2C (val) => {\x0d\n      if (!val[1] || val[1] === IANA_DNS_PORT)\x0d\n        return val[0];\x0d\n\x0d\n      const host = isIP(val[0]) === 6 ? `[${val[0]}]` : val[0];\x0d\n      return `${host}:${val[1]}`;\x0d\n    });\x0d\n  }\x0d\n\x0d\n  setServers(servers) {\x0d\n    validateArray(servers\x2C 'servers');\x0d\n\x0d\n    // Cache the original servers because in the event of an error while\x0d\n    // setting the servers\x2C c-ares won't have any servers available for\x0d\n    // resolution.\x0d\n    const newSet = [];\x0d\n    ArrayPrototypeForEach(servers\x2C (serv\x2C index) => {\x0d\n      validateString(serv\x2C `servers[${index}]`);\x0d\n      let ipVersion = isIP(serv);\x0d\n\x0d\n      if (ipVersion !== 0)\x0d\n        return ArrayPrototypePush(newSet\x2C [ipVersion\x2C serv\x2C IANA_DNS_PORT]);\x0d\n\x0d\n      const match = RegExpPrototypeExec(IPv6RE\x2C serv);\x0d\n\x0d\n      // Check for an IPv6 in brackets.\x0d\n      if (match) {\x0d\n        ipVersion = isIP(match[1]);\x0d\n\x0d\n        if (ipVersion !== 0) {\x0d\n          const port = NumberParseInt(\x0d\n            RegExpPrototypeSymbolReplace(addrSplitRE\x2C serv\x2C '$2')) || IANA_DNS_PORT;\x0d\n          return ArrayPrototypePush(newSet\x2C [ipVersion\x2C match[1]\x2C port]);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      // addr::port\x0d\n      const addrSplitMatch = RegExpPrototypeExec(addrSplitRE\x2C serv);\x0d\n\x0d\n      if (addrSplitMatch) {\x0d\n        const hostIP = addrSplitMatch[1];\x0d\n        const port = addrSplitMatch[2] || IANA_DNS_PORT;\x0d\n\x0d\n        ipVersion = isIP(hostIP);\x0d\n\x0d\n        if (ipVersion !== 0) {\x0d\n          return ArrayPrototypePush(\x0d\n            newSet\x2C [ipVersion\x2C hostIP\x2C NumberParseInt(port)]);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      throw new ERR_INVALID_IP_ADDRESS(serv);\x0d\n    });\x0d\n\x0d\n    this[kSetServersInteral](newSet\x2C servers);\x0d\n  }\x0d\n\x0d\n  [kSetServersInteral](newSet\x2C servers) {\x0d\n    const orig = ArrayPrototypeMap(this._handle.getServers() || []\x2C (val) => {\x0d\n      val.unshift(isIP(val[0]));\x0d\n      return val;\x0d\n    });\x0d\n    const errorNumber = this._handle.setServers(newSet);\x0d\n\x0d\n    if (errorNumber !== 0) {\x0d\n      // Reset the servers to the old servers\x2C because ares probably unset them.\x0d\n      this._handle.setServers(orig);\x0d\n      const { strerror } = lazyBinding();\x0d\n      const err = strerror(errorNumber);\x0d\n      throw new ERR_DNS_SET_SERVERS_FAILED(err\x2C servers);\x0d\n    }\x0d\n\x0d\n    if (isBuildingSnapshot()) {\x0d\n      this[kSnapshotStates].servers = newSet;\x0d\n    }\x0d\n  }\x0d\n\x0d\n\x0d\n  setLocalAddress(ipv4\x2C ipv6) {\x0d\n    validateString(ipv4\x2C 'ipv4');\x0d\n\x0d\n    if (ipv6 !== undefined) {\x0d\n      validateString(ipv6\x2C 'ipv6');\x0d\n    }\x0d\n\x0d\n    this._handle.setLocalAddress(ipv4\x2C ipv6);\x0d\n\x0d\n    if (isBuildingSnapshot()) {\x0d\n      this[kSnapshotStates].localAddress = { ipv4\x2C ipv6 };\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): consider exposing this if custom DNS resolvers\x0d\n  // end up being useful for snapshot users.\x0d\n  [kSerializeResolver]() {\x0d\n    this._handle = null;  // We'll restore it during deserialization.\x0d\n    addDeserializeCallback(function deserializeResolver(resolver) {\x0d\n      resolver[kDeserializeResolver]();\x0d\n    }\x2C this);\x0d\n  }\x0d\n\x0d\n  [kDeserializeResolver]() {\x0d\n    const { timeout\x2C tries\x2C localAddress\x2C servers } = this[kSnapshotStates];\x0d\n    this[kInitializeHandle](timeout\x2C tries);\x0d\n    if (localAddress) {\x0d\n      const { ipv4\x2C ipv6 } = localAddress;\x0d\n      this._handle.setLocalAddress(ipv4\x2C ipv6);\x0d\n    }\x0d\n    if (servers) {\x0d\n      this[kSetServersInteral](servers\x2C servers);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nlet defaultResolver;\x0d\nlet dnsOrder;\x0d\n\x0d\nfunction initializeDns() {\x0d\n  const orderFromCLI = getOptionValue('--dns-result-order');\x0d\n  if (!orderFromCLI) {\x0d\n    dnsOrder ??= 'verbatim';\x0d\n  } else {\x0d\n    // Allow the deserialized application to override order from CLI.\x0d\n    dnsOrder = orderFromCLI;\x0d\n  }\x0d\n\x0d\n  if (!isBuildingSnapshot()) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  addSerializeCallback(() => {\x0d\n    defaultResolver?.[kSerializeResolver]();\x0d\n  });\x0d\n}\x0d\n\x0d\nconst resolverKeys = [\x0d\n  'getServers'\x2C\x0d\n  'resolve'\x2C\x0d\n  'resolve4'\x2C\x0d\n  'resolve6'\x2C\x0d\n  'resolveAny'\x2C\x0d\n  'resolveCaa'\x2C\x0d\n  'resolveCname'\x2C\x0d\n  'resolveMx'\x2C\x0d\n  'resolveNaptr'\x2C\x0d\n  'resolveNs'\x2C\x0d\n  'resolvePtr'\x2C\x0d\n  'resolveSoa'\x2C\x0d\n  'resolveSrv'\x2C\x0d\n  'resolveTxt'\x2C\x0d\n  'reverse'\x2C\x0d\n];\x0d\n\x0d\nfunction getDefaultResolver() {\x0d\n  // We do this here instead of pre-execution so that the default resolver is\x0d\n  // only ever created when the user loads any dns module.\x0d\n  if (defaultResolver === undefined) {\x0d\n    defaultResolver = new ResolverBase();\x0d\n  }\x0d\n  return defaultResolver;\x0d\n}\x0d\n\x0d\nfunction setDefaultResolver(resolver) {\x0d\n  defaultResolver = resolver;\x0d\n}\x0d\n\x0d\nfunction bindDefaultResolver(target\x2C source) {\x0d\n  const defaultResolver = getDefaultResolver();\x0d\n  ArrayPrototypeForEach(resolverKeys\x2C (key) => {\x0d\n    target[key] = FunctionPrototypeBind(source[key]\x2C defaultResolver);\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction validateHints(hints) {\x0d\n  const { AI_ADDRCONFIG\x2C AI_ALL\x2C AI_V4MAPPED } = lazyBinding();\x0d\n  if ((hints & ~(AI_ADDRCONFIG | AI_ALL | AI_V4MAPPED)) !== 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('hints'\x2C hints);\x0d\n  }\x0d\n}\x0d\n\x0d\nlet invalidHostnameWarningEmitted = false;\x0d\nfunction emitInvalidHostnameWarning(hostname) {\x0d\n  if (!invalidHostnameWarningEmitted) {\x0d\n    process.emitWarning(\x0d\n      `The provided hostname "${hostname}" is not a valid ` +\x0d\n      'hostname\x2C and is supported in the dns module solely for compatibility.'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0118'\x2C\x0d\n    );\x0d\n    invalidHostnameWarningEmitted = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getDefaultVerbatim() {\x0d\n  return dnsOrder !== 'ipv4first';\x0d\n}\x0d\n\x0d\nfunction setDefaultResultOrder(value) {\x0d\n  validateOneOf(value\x2C 'dnsOrder'\x2C ['verbatim'\x2C 'ipv4first']);\x0d\n  dnsOrder = value;\x0d\n}\x0d\n\x0d\nfunction getDefaultResultOrder() {\x0d\n  return dnsOrder;\x0d\n}\x0d\n\x0d\nfunction createResolverClass(resolver) {\x0d\n  const resolveMap = { __proto__: null };\x0d\n\x0d\n  class Resolver extends ResolverBase {}\x0d\n\x0d\n  Resolver.prototype.resolveAny = resolveMap.ANY = resolver('queryAny');\x0d\n  Resolver.prototype.resolve4 = resolveMap.A = resolver('queryA');\x0d\n  Resolver.prototype.resolve6 = resolveMap.AAAA = resolver('queryAaaa');\x0d\n  Resolver.prototype.resolveCaa = resolveMap.CAA = resolver('queryCaa');\x0d\n  Resolver.prototype.resolveCname = resolveMap.CNAME = resolver('queryCname');\x0d\n  Resolver.prototype.resolveMx = resolveMap.MX = resolver('queryMx');\x0d\n  Resolver.prototype.resolveNs = resolveMap.NS = resolver('queryNs');\x0d\n  Resolver.prototype.resolveTxt = resolveMap.TXT = resolver('queryTxt');\x0d\n  Resolver.prototype.resolveSrv = resolveMap.SRV = resolver('querySrv');\x0d\n  Resolver.prototype.resolvePtr = resolveMap.PTR = resolver('queryPtr');\x0d\n  Resolver.prototype.resolveNaptr = resolveMap.NAPTR = resolver('queryNaptr');\x0d\n  Resolver.prototype.resolveSoa = resolveMap.SOA = resolver('querySoa');\x0d\n  Resolver.prototype.reverse = resolver('getHostByAddr');\x0d\n\x0d\n  return {\x0d\n    resolveMap\x2C\x0d\n    Resolver\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\n// ERROR CODES\x0d\nconst errorCodes = {\x0d\n  NODATA: 'ENODATA'\x2C\x0d\n  FORMERR: 'EFORMERR'\x2C\x0d\n  SERVFAIL: 'ESERVFAIL'\x2C\x0d\n  NOTFOUND: 'ENOTFOUND'\x2C\x0d\n  NOTIMP: 'ENOTIMP'\x2C\x0d\n  REFUSED: 'EREFUSED'\x2C\x0d\n  BADQUERY: 'EBADQUERY'\x2C\x0d\n  BADNAME: 'EBADNAME'\x2C\x0d\n  BADFAMILY: 'EBADFAMILY'\x2C\x0d\n  BADRESP: 'EBADRESP'\x2C\x0d\n  CONNREFUSED: 'ECONNREFUSED'\x2C\x0d\n  TIMEOUT: 'ETIMEOUT'\x2C\x0d\n  EOF: 'EOF'\x2C\x0d\n  FILE: 'EFILE'\x2C\x0d\n  NOMEM: 'ENOMEM'\x2C\x0d\n  DESTRUCTION: 'EDESTRUCTION'\x2C\x0d\n  BADSTR: 'EBADSTR'\x2C\x0d\n  BADFLAGS: 'EBADFLAGS'\x2C\x0d\n  NONAME: 'ENONAME'\x2C\x0d\n  BADHINTS: 'EBADHINTS'\x2C\x0d\n  NOTINITIALIZED: 'ENOTINITIALIZED'\x2C\x0d\n  LOADIPHLPAPI: 'ELOADIPHLPAPI'\x2C\x0d\n  ADDRGETNETWORKPARAMS: 'EADDRGETNETWORKPARAMS'\x2C\x0d\n  CANCELLED: 'ECANCELLED'\x2C\x0d\n};\x0d\n\x0d\nmodule.exports = {\x0d\n  bindDefaultResolver\x2C\x0d\n  getDefaultResolver\x2C\x0d\n  setDefaultResolver\x2C\x0d\n  validateHints\x2C\x0d\n  validateTimeout\x2C\x0d\n  validateTries\x2C\x0d\n  emitInvalidHostnameWarning\x2C\x0d\n  getDefaultVerbatim\x2C\x0d\n  getDefaultResultOrder\x2C\x0d\n  setDefaultResultOrder\x2C\x0d\n  errorCodes\x2C\x0d\n  createResolverClass\x2C\x0d\n  initializeDns\x2C\x0d\n};\x0d\n
code-source-info,0x125aa797c74,70,5693,6073,C0O5722C8O5722C13O5763C15O5789C25O5798C29O5902C31O5911C37O5937C42O5942C47O5971C48O5978C49O5989C59O5989C64O6072,,
code-creation,JS,10,111080,0x125aa798a54,84,setupSymbolDisposePolyfill node:internal/process/pre_execution:166:36,0x1d9b727ef50,~
code-source-info,0x125aa798a54,67,4892,5615,C0O5065C5O5083C13O5112C24O5133C31O5246C37O5112C42O5364C45O5382C53O5416C64O5437C71O5555C77O5416C83O5614,,
code-creation,JS,10,111140,0x125aa798c14,21,assert node:internal/assert:11:16,0xa4fec3e3e8,~
script-source,11,node:internal/assert,'use strict';\x0d\n\x0d\nlet error;\x0d\nfunction lazyError() {\x0d\n  if (!error) {\x0d\n    error = require('internal/errors').codes.ERR_INTERNAL_ASSERTION;\x0d\n  }\x0d\n  return error;\x0d\n}\x0d\n\x0d\nfunction assert(value\x2C message) {\x0d\n  if (!value) {\x0d\n    const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n    throw new ERR_INTERNAL_ASSERTION(message);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction fail(message) {\x0d\n  const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n  throw new ERR_INTERNAL_ASSERTION(message);\x0d\n}\x0d\n\x0d\nassert.fail = fail;\x0d\n\x0d\nmodule.exports = assert;\x0d\n
code-source-info,0x125aa798c14,11,182,322,C0O204C4O254C7O254C11O272C13O278C18O272C20O321,,
code-creation,JS,10,111273,0x125aa799184,430,readPolicyFromDisk node:internal/process/pre_execution:641:28,0x1d9b727f790,~
code-source-info,0x125aa
code-creation,JS,10,111375,0x125aa799594,49,setupStacktracePrinterOnSigint node:internal/process/pre_execution:400:40,0x1d9b727f340,~
code-source-info,0x125aa799594,67,13154,13348,C0O13162C8O13167C14O13208C15O13215C16O13251C22O13251C27O13232C32O13303C38O13337C43O13337C48O13347,,
code-creation,JS,10,111419,0x125aa799734,35,initializeReportSignalHandlers node:internal/process/pre_execution:430:40,0x1d9b727f470,~
code-source-info,0x125aa799734,67,13955,14109,C0O13963C8O13967C14O14041C20O14041C25O14020C30O14082C34O14108,,
code-creation,JS,10,111474,0x125aa799a3c,153,initializeHeapSnapshotSignalHandlers node:internal/process/pre_execution:437:46,0x1d9b727f4c8,~
code-source-info,0x125aa799a3c,67,14158,14870,C0O14158C20O14181C30O14181C34O14181C36O14247C44O14247C48O14247C50O14288C54O14306C55O14313C56O14319C64O14319C69O14349C77O14350C82O14411C90O14411C95O14389C101O14592C106O14600C117O14600C123O14732C130O14736C135O14765C147O14765C152O14869,,
code-creation,JS,10,111543,0x125aa799d7c,138,setupChildProcessIpcChannel node:internal/process/pre_execution:547:37,0x1d9b727f650,~
code-source-info,0x125aa799d7c,67,17987,18533,C0O17995C3O18007C8O18011C14O18050C20O18050C25O18096C33O18119C38O18123C46O18096C52O18150C53O18160C57O18150C61O18244C64O18259C73O18320C76O18328C81O18332C90O18380C93O18395C102O18439C108O18439C113O18463C118O18464C124O18504C127O18519C132O18504C137O18532,,
code-creation,JS,10,111608,0x125aa799f9c,63,initializeClusterIPC node:internal/process/pre_execution:566:30,0x1d9b727f6a8,~
code-source-info,0x125aa799f9c,67,18566,18814,C0O18574C3O18586C10O18590C18O18605C23O18609C29O18648C35O18648C40O18681C45O18681C49O18772C52O18787C62O18813,,
code-creation,JS,10,111666,0x125aa79a0dc,52,runDeserializeCallbacks node:internal/v8/startup_snapshot:39:33,0x1d9b7271020,~
script-source,54,node:internal/v8/startup_snapshot,'use strict';\x0d\n\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_NOT_BUILDING_SNAPSHOT\x2C\x0d\n    ERR_NOT_SUPPORTED_IN_SNAPSHOT\x2C\x0d\n    ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  setSerializeCallback\x2C\x0d\n  setDeserializeCallback\x2C\x0d\n  setDeserializeMainFunction: _setDeserializeMainFunction\x2C\x0d\n  isBuildingSnapshotBuffer\x2C\x0d\n} = internalBinding('mksnapshot');\x0d\n\x0d\nfunction isBuildingSnapshot() {\x0d\n  return isBuildingSnapshotBuffer[0];\x0d\n}\x0d\n\x0d\nfunction throwIfNotBuildingSnapshot() {\x0d\n  if (!isBuildingSnapshot()) {\x0d\n    throw new ERR_NOT_BUILDING_SNAPSHOT();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction throwIfBuildingSnapshot(reason) {\x0d\n  if (isBuildingSnapshot()) {\x0d\n    throw new ERR_NOT_SUPPORTED_IN_SNAPSHOT(reason);\x0d\n  }\x0d\n}\x0d\n\x0d\nconst deserializeCallbacks = [];\x0d\nlet deserializeCallbackIsSet = false;\x0d\nfunction runDeserializeCallbacks() {\x0d\n  while (deserializeCallbacks.length > 0) {\x0d\n    const { 0: callback\x2C 1: data } = deserializeCallbacks.shift();\x0d\n    callback(data);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addDeserializeCallback(callback\x2C data) {\x0d\n  throwIfNotBuildingSnapshot();\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n  if (!deserializeCallbackIsSet) {\x0d\n    // TODO(joyeecheung): when the main function handling is done in JS\x2C\x0d\n    // the deserialize callbacks can always be invoked. For now only\x0d\n    // store it in C++ when it's actually used to avoid unnecessary\x0d\n    // C++ -> JS costs.\x0d\n    setDeserializeCallback(runDeserializeCallbacks);\x0d\n    deserializeCallbackIsSet = true;\x0d\n  }\x0d\n  deserializeCallbacks.push([callback\x2C data]);\x0d\n}\x0d\n\x0d\nconst serializeCallbacks = [];\x0d\nfunction runSerializeCallbacks() {\x0d\n  while (serializeCallbacks.length > 0) {\x0d\n    const { 0: callback\x2C 1: data } = serializeCallbacks.shift();\x0d\n    callback(data);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addSerializeCallback(callback\x2C data) {\x0d\n  throwIfNotBuildingSnapshot();\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n  serializeCallbacks.push([callback\x2C data]);\x0d\n}\x0d\n\x0d\nfunction initializeCallbacks() {\x0d\n  // Only run the serialize callbacks in snapshot building mode\x2C otherwise\x0d\n  // they throw.\x0d\n  if (isBuildingSnapshot()) {\x0d\n    setSerializeCallback(runSerializeCallbacks);\x0d\n  }\x0d\n}\x0d\n\x0d\nlet deserializeMainIsSet = false;\x0d\nfunction setDeserializeMainFunction(callback\x2C data) {\x0d\n  throwIfNotBuildingSnapshot();\x0d\n  // TODO(joyeecheung): In lib/internal/bootstrap/node.js\x2C create a default\x0d\n  // main function to run the lib/internal/main scripts and make sure that\x0d\n  // the main function set in the snapshot building process takes precedence.\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n  if (deserializeMainIsSet) {\x0d\n    throw new ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION();\x0d\n  }\x0d\n  deserializeMainIsSet = true;\x0d\n\x0d\n  _setDeserializeMainFunction(function deserializeMain() {\x0d\n    const {\x0d\n      prepareMainThreadExecution\x2C\x0d\n      markBootstrapComplete\x2C\x0d\n    } = require('internal/process/pre_execution');\x0d\n\x0d\n    // This should be in sync with run_main_module.js until we make that\x0d\n    // a built-in main function.\x0d\n    // TODO(joyeecheung): make a copy of argv[0] and insert it as argv[1].\x0d\n    prepareMainThreadExecution(false);\x0d\n    markBootstrapComplete();\x0d\n    callback(data);\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  initializeCallbacks\x2C\x0d\n  runDeserializeCallbacks\x2C\x0d\n  throwIfBuildingSnapshot\x2C\x0d\n  // Exposed to require('v8').startupSnapshot\x0d\n  namespace: {\x0d\n    addDeserializeCallback\x2C\x0d\n    addSerializeCallback\x2C\x0d\n    setDeserializeMainFunction\x2C\x0d\n    isBuildingSnapshot\x2C\x0d\n  }\x2C\x0d\n};\x0d\n
code-source-info,0x125aa79a0dc,54,901,1047,C0O944C5O937C11O944C16O989C19O1010C24O1010C31O967C38O980C42O1024C46O909C51O1046,,
code-creation,JS,10,111879,0x125aa79a614,88,setupUserModules node:internal/process/pre_execution:191:26,0x1d9b727efa8,~
code-source-info,0x125aa79a614,67,5644,6305,C10O5678C13O5678C16O5704C19O5704C23O5829C29O5829C34O5761C39O5794C44O5869C49O5877C54O5869C58O5911C61O5919C66O5911C70O6166C74O6198C77O6198C80O6273C83O6273C87O6304,,
code-creation,JS,10,111925,0x125aa79a77c,21,initializeCJSLoader node:internal/process/pre_execution:691:29,0x1d9b727f7e8,~
code-source-info,0x125aa79a77c,67,22828,22924,C0O22862C6O22862C11O22844C16O22905C20O22923,,
code-creation,JS,10,112046,0x125aa79a924,90,initializeCJS node:internal/modules/cjs/loader:382:23,0x1d9b727bd88,~
script-source,63,node:internal/modules/cjs/loader,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypePushApply\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  ArrayPrototypeUnshiftApply\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototype\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Proxy\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectSet\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharAt\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Map used to store CJS parsing data.\x0d\nconst cjsParseCache = new SafeWeakMap();\x0d\n/**\x0d\n * Map of already-loaded CJS modules to use.\x0d\n */\x0d\nconst cjsExportsCache = new SafeWeakMap();\x0d\n\x0d\n// Set first due to cycle with ESM loader functions.\x0d\nmodule.exports = {\x0d\n  cjsExportsCache\x2C\x0d\n  cjsParseCache\x2C\x0d\n  initializeCJS\x2C\x0d\n  Module\x2C\x0d\n  wrapSafe\x2C\x0d\n};\x0d\n\x0d\nconst { BuiltinModule } = require('internal/bootstrap/realm');\x0d\nconst {\x0d\n  maybeCacheSourceMap\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C isURL } = require('internal/url');\x0d\nconst {\x0d\n  pendingDeprecate\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  kEmptyObject\x2C\x0d\n  setOwnProperty\x2C\x0d\n  getLazy\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  internalCompileFunction\x2C\x0d\n  makeContextifyScript\x2C\x0d\n  runScriptInThisContext\x2C\x0d\n} = require('internal/vm');\x0d\nconst { containsModuleSyntax } = internalBinding('contextify');\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst fs = require('fs');\x0d\nconst path = require('path');\x0d\nconst { internalModuleStat } = internalBinding('fs');\x0d\nconst { safeGetenv } = internalBinding('credentials');\x0d\nconst {\x0d\n  privateSymbols: {\x0d\n    require_private_symbol\x2C\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\nconst {\x0d\n  getCjsConditions\x2C\x0d\n  initializeCjsConditions\x2C\x0d\n  loadBuiltinModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  setHasStartedUserCJSExecution\x2C\x0d\n  stripBOM\x2C\x0d\n  toRealPath\x2C\x0d\n} = require('internal/modules/helpers');\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst { getOptionValue\x2C getEmbedderOptions } = require('internal/options');\x0d\nconst policy = getLazy(\x0d\n  () => (getOptionValue('--experimental-policy') ? require('internal/process/policy') : null)\x2C\x0d\n);\x0d\nconst shouldReportRequiredModules = getLazy(() => process.env.WATCH_REPORT_DEPENDENCIES);\x0d\n\x0d\nconst permission = require('internal/process/permission');\x0d\nconst {\x0d\n  vm_dynamic_import_default_internal\x2C\x0d\n} = internalBinding('symbols');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n    ERR_REQUIRE_ESM\x2C\x0d\n    ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  }\x2C\x0d\n  setArrowMessage\x2C\x0d\n} = require('internal/errors');\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x2C\x0d\n  CHAR_DOT\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n} = require('internal/constants');\x0d\n\x0d\nconst {\x0d\n  isProxy\x2C\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst relativeResolveCache = { __proto__: null };\x0d\n\x0d\nlet requireDepth = 0;\x0d\nlet isPreloading = false;\x0d\nlet statCache = null;\x0d\n\x0d\n/**\x0d\n * Our internal implementation of `require`.\x0d\n * @param {Module} module Parent module of what is being required\x0d\n * @param {string} id Specifier of the child module being imported\x0d\n */\x0d\nfunction internalRequire(module\x2C id) {\x0d\n  validateString(id\x2C 'id');\x0d\n  if (id === '') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('id'\x2C id\x2C\x0d\n                                    'must be a non-empty string');\x0d\n  }\x0d\n  requireDepth++;\x0d\n  try {\x0d\n    return Module._load(id\x2C module\x2C /* isMain */ false);\x0d\n  } finally {\x0d\n    requireDepth--;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Get a path's properties\x2C using an in-memory cache to minimize lookups.\x0d\n * @param {string} filename Absolute path to the file\x0d\n */\x0d\nfunction stat(filename) {\x0d\n  filename = path.toNamespacedPath(filename);\x0d\n  if (statCache !== null) {\x0d\n    const result = statCache.get(filename);\x0d\n    if (result !== undefined) { return result; }\x0d\n  }\x0d\n  const result = internalModuleStat(filename);\x0d\n  if (statCache !== null && result >= 0) {\x0d\n    // Only set cache when `internalModuleStat(filename)` succeeds.\x0d\n    statCache.set(filename\x2C result);\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nlet _stat = stat;\x0d\nObjectDefineProperty(Module\x2C '_stat'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() { return _stat; }\x2C\x0d\n  set(stat) {\x0d\n    emitExperimentalWarning('Module._stat');\x0d\n    _stat = stat;\x0d\n    return true;\x0d\n  }\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\n/**\x0d\n * Update the parent's children array with the child module.\x0d\n * @param {Module} parent Module requiring the children\x0d\n * @param {Module} child Module being required\x0d\n * @param {boolean} scan Add the child to the parent's children if not already present\x0d\n */\x0d\nfunction updateChildren(parent\x2C child\x2C scan) {\x0d\n  const children = parent?.children;\x0d\n  if (children && !(scan && ArrayPrototypeIncludes(children\x2C child))) {\x0d\n    ArrayPrototypePush(children\x2C child);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tell the watch mode that a module was required.\x0d\n * @param {string} filename Absolute path of the module\x0d\n */\x0d\nfunction reportModuleToWatchMode(filename) {\x0d\n  if (shouldReportRequiredModules() && process.send) {\x0d\n    process.send({ 'watch:require': [filename] });\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tell the watch mode that a module was not found.\x0d\n * @param {string} basePath The absolute path that errored\x0d\n * @param {string[]} extensions The extensions that were tried\x0d\n */\x0d\nfunction reportModuleNotFoundToWatchMode(basePath\x2C extensions) {\x0d\n  if (shouldReportRequiredModules() && process.send) {\x0d\n    process.send({ 'watch:require': ArrayPrototypeMap(extensions\x2C (ext) => path.resolve(`${basePath}${ext}`)) });\x0d\n  }\x0d\n}\x0d\n\x0d\n/** @type {Map<Module\x2C Module>} */\x0d\nconst moduleParentCache = new SafeWeakMap();\x0d\n/**\x0d\n * Create a new module instance.\x0d\n * @param {string} id\x0d\n * @param {Module} parent\x0d\n */\x0d\nfunction Module(id = ''\x2C parent) {\x0d\n  this.id = id;\x0d\n  this.path = path.dirname(id);\x0d\n  setOwnProperty(this\x2C 'exports'\x2C {});\x0d\n  moduleParentCache.set(this\x2C parent);\x0d\n  updateChildren(parent\x2C this\x2C false);\x0d\n  this.filename = null;\x0d\n  this.loaded = false;\x0d\n  this.children = [];\x0d\n  let redirects;\x0d\n  const manifest = policy()?.manifest;\x0d\n  if (manifest) {\x0d\n    const moduleURL = pathToFileURL(id);\x0d\n    redirects = manifest.getDependencyMapper(moduleURL);\x0d\n    // TODO(rafaelgss): remove the necessity of this branch\x0d\n    setOwnProperty(this\x2C 'require'\x2C makeRequireFunction(this\x2C redirects));\x0d\n    // eslint-disable-next-line no-proto\x0d\n    setOwnProperty(this.__proto__\x2C 'require'\x2C makeRequireFunction(this\x2C redirects));\x0d\n  }\x0d\n  this[require_private_symbol] = internalRequire;\x0d\n}\x0d\n\x0d\n/** @type {Record<string\x2C Module>} */\x0d\nModule._cache = { __proto__: null };\x0d\n/** @type {Record<string\x2C string>} */\x0d\nModule._pathCache = { __proto__: null };\x0d\n/** @type {Record<string\x2C (module: Module\x2C filename: string) => void>} */\x0d\nModule._extensions = { __proto__: null };\x0d\n/** @type {string[]} */\x0d\nlet modulePaths = [];\x0d\n/** @type {string[]} */\x0d\nModule.globalPaths = [];\x0d\n\x0d\nlet patched = false;\x0d\n\x0d\n/**\x0d\n * Add the CommonJS wrapper around a module's source code.\x0d\n * @param {string} script Module source code\x0d\n */\x0d\nlet wrap = function(script) { // eslint-disable-line func-style\x0d\n  return Module.wrapper[0] + script + Module.wrapper[1];\x0d\n};\x0d\n\x0d\nconst wrapper = [\x0d\n  '(function (exports\x2C require\x2C module\x2C __filename\x2C __dirname) { '\x2C\x0d\n  '\\n});'\x2C\x0d\n];\x0d\n\x0d\nlet wrapperProxy = new Proxy(wrapper\x2C {\x0d\n  __proto__: null\x2C\x0d\n\x0d\n  set(target\x2C property\x2C value\x2C receiver) {\x0d\n    patched = true;\x0d\n    return ReflectSet(target\x2C property\x2C value\x2C receiver);\x0d\n  }\x2C\x0d\n\x0d\n  defineProperty(target\x2C property\x2C descriptor) {\x0d\n    patched = true;\x0d\n    return ObjectDefineProperty(target\x2C property\x2C descriptor);\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrap'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return wrap;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrap = value;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrapper'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return wrapperProxy;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrapperProxy = value;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nconst isPreloadingDesc = { get() { return isPreloading; } };\x0d\nObjectDefineProperty(Module.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\nObjectDefineProperty(BuiltinModule.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\n\x0d\n/**\x0d\n * Get the parent of the current module from our cache.\x0d\n */\x0d\nfunction getModuleParent() {\x0d\n  return moduleParentCache.get(this);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Set the parent of the current module in our cache.\x0d\n * @param {Module} value\x0d\n */\x0d\nfunction setModuleParent(value) {\x0d\n  moduleParentCache.set(this\x2C value);\x0d\n}\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module.prototype\x2C 'parent'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: pendingDeprecate(\x0d\n    getModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x2C\x0d\n  )\x2C\x0d\n  set: pendingDeprecate(\x0d\n    setModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x2C\x0d\n  )\x2C\x0d\n});\x0d\nModule._debug = pendingDeprecate(debug\x2C 'Module._debug is deprecated.'\x2C 'DEP0077');\x0d\nModule.isBuiltin = BuiltinModule.isBuiltin;\x0d\n\x0d\n/**\x0d\n * Prepare to run CommonJS code.\x0d\n * This function is called during pre-execution\x2C before any user code is run.\x0d\n */\x0d\nfunction initializeCJS() {\x0d\n  // This need to be done at runtime in case --expose-internals is set.\x0d\n  const builtinModules = BuiltinModule.getCanBeRequiredByUsersWithoutSchemeList();\x0d\n  Module.builtinModules = ObjectFreeze(builtinModules);\x0d\n\x0d\n  initializeCjsConditions();\x0d\n\x0d\n  if (!getEmbedderOptions().noGlobalSearchPaths) {\x0d\n    Module._initPaths();\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): deprecate this in favor of a proper hook?\x0d\n  Module.runMain =\x0d\n    require('internal/modules/run_main').executeUserEntryPoint;\x0d\n}\x0d\n\x0d\n// Given a module name\x2C and a list of paths to test\x2C returns the first\x0d\n// matching file in the following precedence.\x0d\n//\x0d\n// require("a.<ext>")\x0d\n//   -> a.<ext>\x0d\n//\x0d\n// require("a")\x0d\n//   -> a\x0d\n//   -> a.<ext>\x0d\n//   -> a/index.<ext>\x0d\n\x0d\nlet _readPackage = packageJsonReader.readPackage;\x0d\nObjectDefineProperty(Module\x2C '_readPackage'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() { return _readPackage; }\x2C\x0d\n  set(readPackage) {\x0d\n    emitExperimentalWarning('Module._readPackage');\x0d\n    _readPackage = readPackage;\x0d\n    return true;\x0d\n  }\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\n/**\x0d\n * Try to load a specifier as a package.\x0d\n * @param {string} requestPath The path to what we are trying to load\x0d\n * @param {string[]} exts File extensions to try appending in order to resolve the file\x0d\n * @param {boolean} isMain Whether the file is the main entry point of the app\x0d\n * @param {string} originalPath The specifier passed to `require`\x0d\n */\x0d\nfunction tryPackage(requestPath\x2C exts\x2C isMain\x2C originalPath) {\x0d\n  const { main: pkg\x2C pjsonPath } = _readPackage(requestPath);\x0d\n\x0d\n  if (!pkg) {\x0d\n    return tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n  }\x0d\n\x0d\n  const filename = path.resolve(requestPath\x2C pkg);\x0d\n  let actual = tryFile(filename\x2C isMain) ||\x0d\n    tryExtensions(filename\x2C exts\x2C isMain) ||\x0d\n    tryExtensions(path.resolve(filename\x2C 'index')\x2C exts\x2C isMain);\x0d\n  if (actual === false) {\x0d\n    actual = tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n    if (!actual) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const err = new Error(\x0d\n        `Cannot find module '${filename}'. ` +\x0d\n        'Please verify that the package.json has a valid "main" entry'\x2C\x0d\n      );\x0d\n      err.code = 'MODULE_NOT_FOUND';\x0d\n      err.path = pjsonPath;\x0d\n      err.requestPath = originalPath;\x0d\n      // TODO(BridgeAR): Add the requireStack as well.\x0d\n      throw err;\x0d\n    } else {\x0d\n      process.emitWarning(\x0d\n        `Invalid 'main' field in '${pjsonPath}' of '${pkg}'. ` +\x0d\n          'Please either fix that or report it to the module author'\x2C\x0d\n        'DeprecationWarning'\x2C\x0d\n        'DEP0128'\x2C\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  return actual;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Check if the file exists and is not a directory if using `--preserve-symlinks` and `isMain` is false or\x0d\n * `--preserve-symlinks-main` and `isMain` is true \x2C keep symlinks intact\x2C otherwise resolve to the absolute realpath.\x0d\n * @param {string} requestPath The path to the file to load.\x0d\n * @param {boolean} isMain Whether the file is the main module.\x0d\n */\x0d\nfunction tryFile(requestPath\x2C isMain) {\x0d\n  const rc = _stat(requestPath);\x0d\n  if (rc !== 0) { return; }\x0d\n  if (getOptionValue(isMain ? '--preserve-symlinks-main' : '--preserve-symlinks')) {\x0d\n    return path.resolve(requestPath);\x0d\n  }\x0d\n  return toRealPath(requestPath);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Given a path\x2C check if the file exists with any of the set extensions.\x0d\n * @param {string} basePath The path and filename without extension\x0d\n * @param {string[]} exts The extensions to try\x0d\n * @param {boolean} isMain Whether the module is the main module\x0d\n */\x0d\nfunction tryExtensions(basePath\x2C exts\x2C isMain) {\x0d\n  for (let i = 0; i < exts.length; i++) {\x0d\n    const filename = tryFile(basePath + exts[i]\x2C isMain);\x0d\n\x0d\n    if (filename) {\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Find the longest (possibly multi-dot) extension registered in `Module._extensions`.\x0d\n * @param {string} filename The filename to find the longest registered extension for.\x0d\n */\x0d\nfunction findLongestRegisteredExtension(filename) {\x0d\n  const name = path.basename(filename);\x0d\n  let currentExtension;\x0d\n  let index;\x0d\n  let startIndex = 0;\x0d\n  while ((index = StringPrototypeIndexOf(name\x2C '.'\x2C startIndex)) !== -1) {\x0d\n    startIndex = index + 1;\x0d\n    if (index === 0) { continue; } // Skip dotfiles like .gitignore\x0d\n    currentExtension = StringPrototypeSlice(name\x2C index);\x0d\n    if (Module._extensions[currentExtension]) { return currentExtension; }\x0d\n  }\x0d\n  return '.js';\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tries to get the absolute file path of the parent module.\x0d\n * @param {Module} parent The parent module object.\x0d\n */\x0d\nfunction trySelfParentPath(parent) {\x0d\n  if (!parent) { return false; }\x0d\n\x0d\n  if (parent.filename) {\x0d\n    return parent.filename;\x0d\n  } else if (parent.id === '<repl>' || parent.id === 'internal/preload') {\x0d\n    try {\x0d\n      return process.cwd() + path.sep;\x0d\n    } catch {\x0d\n      return false;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Attempt to resolve a module request using the parent module package metadata.\x0d\n * @param {string} parentPath The path of the parent module\x0d\n * @param {string} request The module request to resolve\x0d\n */\x0d\nfunction trySelf(parentPath\x2C request) {\x0d\n  if (!parentPath) { return false; }\x0d\n\x0d\n  const pkg = packageJsonReader.getNearestParentPackageJSON(parentPath);\x0d\n  if (pkg?.data.exports === undefined || pkg.data.name === undefined) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  let expansion;\x0d\n  if (request === pkg.data.name) {\x0d\n    expansion = '.';\x0d\n  } else if (StringPrototypeStartsWith(request\x2C `${pkg.data.name}/`)) {\x0d\n    expansion = '.' + StringPrototypeSlice(request\x2C pkg.data.name.length);\x0d\n  } else {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    const { packageExportsResolve } = require('internal/modules/esm/resolve');\x0d\n    return finalizeEsmResolution(packageExportsResolve(\x0d\n      pathToFileURL(pkg.path + '/package.json')\x2C expansion\x2C pkg.data\x2C\x0d\n      pathToFileURL(parentPath)\x2C getCjsConditions())\x2C parentPath\x2C pkg.path);\x0d\n  } catch (e) {\x0d\n    if (e.code === 'ERR_MODULE_NOT_FOUND') {\x0d\n      throw createEsmNotFoundErr(request\x2C pkg.path + '/package.json');\x0d\n    }\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * This only applies to requests of a specific form:\x0d\n * 1. `name/.*`\x0d\n * 2. `@scope/name/.*`\x0d\n */\x0d\nconst EXPORTS_PATTERN = /^((?:@[^/\\\\%]+\\/)?[^./\\\\%][^/\\\\%]*)(\\/.*)?$/;\x0d\n\x0d\n/**\x0d\n * Resolves the exports for a given module path and request.\x0d\n * @param {string} nmPath The path to the module.\x0d\n * @param {string} request The request for the module.\x0d\n */\x0d\nfunction resolveExports(nmPath\x2C request) {\x0d\n  // The implementation's behavior is meant to mirror resolution in ESM.\x0d\n  const { 1: name\x2C 2: expansion = '' } =\x0d\n    RegExpPrototypeExec(EXPORTS_PATTERN\x2C request) || kEmptyObject;\x0d\n  if (!name) { return; }\x0d\n  const pkgPath = path.resolve(nmPath\x2C name);\x0d\n  const pkg = _readPackage(pkgPath);\x0d\n  if (pkg.exists && pkg.exports != null) {\x0d\n    try {\x0d\n      const { packageExportsResolve } = require('internal/modules/esm/resolve');\x0d\n      return finalizeEsmResolution(packageExportsResolve(\x0d\n        pathToFileURL(pkgPath + '/package.json')\x2C '.' + expansion\x2C pkg\x2C null\x2C\x0d\n        getCjsConditions())\x2C null\x2C pkgPath);\x0d\n    } catch (e) {\x0d\n      if (e.code === 'ERR_MODULE_NOT_FOUND') {\x0d\n        throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Get the absolute path to a module.\x0d\n * @param {string} request Relative or absolute file path\x0d\n * @param {Array<string>} paths Folders to search as file paths\x0d\n * @param {boolean} isMain Whether the request is the main app entry point\x0d\n * @returns {string | false}\x0d\n */\x0d\nModule._findPath = function(request\x2C paths\x2C isMain) {\x0d\n  const absoluteRequest = path.isAbsolute(request);\x0d\n  if (absoluteRequest) {\x0d\n    paths = [''];\x0d\n  } else if (!paths || paths.length === 0) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  const cacheKey = request + '\\x00' + ArrayPrototypeJoin(paths\x2C '\\x00');\x0d\n  const entry = Module._pathCache[cacheKey];\x0d\n  if (entry) {\x0d\n    return entry;\x0d\n  }\x0d\n\x0d\n  let exts;\x0d\n  const trailingSlash = request.length > 0 &&\x0d\n    (StringPrototypeCharCodeAt(request\x2C request.length - 1) === CHAR_FORWARD_SLASH || (\x0d\n      StringPrototypeCharCodeAt(request\x2C request.length - 1) === CHAR_DOT &&\x0d\n      (\x0d\n        request.length === 1 ||\x0d\n        StringPrototypeCharCodeAt(request\x2C request.length - 2) === CHAR_FORWARD_SLASH ||\x0d\n        (StringPrototypeCharCodeAt(request\x2C request.length - 2) === CHAR_DOT && (\x0d\n          request.length === 2 ||\x0d\n          StringPrototypeCharCodeAt(request\x2C request.length - 3) === CHAR_FORWARD_SLASH\x0d\n        ))\x0d\n      )\x0d\n    ));\x0d\n\x0d\n  const isRelative = StringPrototypeCharCodeAt(request\x2C 0) === CHAR_DOT &&\x0d\n    (\x0d\n      request.length === 1 ||\x0d\n      StringPrototypeCharCodeAt(request\x2C 1) === CHAR_FORWARD_SLASH ||\x0d\n      (isWindows && StringPrototypeCharCodeAt(request\x2C 1) === CHAR_BACKWARD_SLASH) ||\x0d\n      (StringPrototypeCharCodeAt(request\x2C 1) === CHAR_DOT && ((\x0d\n        request.length === 2 ||\x0d\n        StringPrototypeCharCodeAt(request\x2C 2) === CHAR_FORWARD_SLASH) ||\x0d\n        (isWindows && StringPrototypeCharCodeAt(request\x2C 2) === CHAR_BACKWARD_SLASH)))\x0d\n    );\x0d\n  let insidePath = true;\x0d\n  if (isRelative) {\x0d\n    const normalizedRequest = path.normalize(request);\x0d\n    if (StringPrototypeStartsWith(normalizedRequest\x2C '..')) {\x0d\n      insidePath = false;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // For each path\x0d\n  for (let i = 0; i < paths.length; i++) {\x0d\n    // Don't search further if path doesn't exist\x0d\n    // or doesn't have permission to it\x0d\n    const curPath = paths[i];\x0d\n    if (insidePath && curPath &&\x0d\n      ((permission.isEnabled() && !permission.has('fs.read'\x2C curPath)) || _stat(curPath) < 1)\x0d\n    ) {\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    if (!absoluteRequest) {\x0d\n      const exportsResolved = resolveExports(curPath\x2C request);\x0d\n      if (exportsResolved) {\x0d\n        return exportsResolved;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    const basePath = path.resolve(curPath\x2C request);\x0d\n    let filename;\x0d\n\x0d\n    const rc = _stat(basePath);\x0d\n    if (!trailingSlash) {\x0d\n      if (rc === 0) {  // File.\x0d\n        if (!isMain) {\x0d\n          if (getOptionValue('--preserve-symlinks')) {\x0d\n            filename = path.resolve(basePath);\x0d\n          } else {\x0d\n            filename = toRealPath(basePath);\x0d\n          }\x0d\n        } else if (getOptionValue('--preserve-symlinks-main')) {\x0d\n          // For the main module\x2C we use the --preserve-symlinks-main flag instead\x0d\n          // mainly for backward compatibility\x2C as the preserveSymlinks flag\x0d\n          // historically has not applied to the main module.  Most likely this\x0d\n          // was intended to keep .bin/ binaries working\x2C as following those\x0d\n          // symlinks is usually required for the imports in the corresponding\x0d\n          // files to resolve; that said\x2C in some use cases following symlinks\x0d\n          // causes bigger problems which is why the --preserve-symlinks-main option\x0d\n          // is needed.\x0d\n          filename = path.resolve(basePath);\x0d\n        } else {\x0d\n          filename = toRealPath(basePath);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (!filename) {\x0d\n        // Try it with each of the extensions\x0d\n        if (exts === undefined) {\x0d\n          exts = ObjectKeys(Module._extensions);\x0d\n        }\x0d\n        filename = tryExtensions(basePath\x2C exts\x2C isMain);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (!filename && rc === 1) {  // Directory.\x0d\n      // try it with each of the extensions at "index"\x0d\n      if (exts === undefined) {\x0d\n        exts = ObjectKeys(Module._extensions);\x0d\n      }\x0d\n      filename = tryPackage(basePath\x2C exts\x2C isMain\x2C request);\x0d\n    }\x0d\n\x0d\n    if (filename) {\x0d\n      Module._pathCache[cacheKey] = filename;\x0d\n      return filename;\x0d\n    }\x0d\n\x0d\n    const extensions = [''];\x0d\n    if (exts !== undefined) {\x0d\n      ArrayPrototypePushApply(extensions\x2C exts);\x0d\n    }\x0d\n    reportModuleNotFoundToWatchMode(basePath\x2C extensions);\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n};\x0d\n\x0d\n/** `node_modules` character codes reversed */\x0d\nconst nmChars = [ 115\x2C 101\x2C 108\x2C 117\x2C 100\x2C 111\x2C 109\x2C 95\x2C 101\x2C 100\x2C 111\x2C 110 ];\x0d\nconst nmLen = nmChars.length;\x0d\nif (isWindows) {\x0d\n  /**\x0d\n   * Get the paths to the `node_modules` folder for a given path.\x0d\n   * @param {string} from `__dirname` of the module\x0d\n   */\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n\x0d\n    // return root node_modules when path is 'D:\\\\'.\x0d\n    // path.resolve will make sure from.length >=3 in Windows.\x0d\n    if (StringPrototypeCharCodeAt(from\x2C from.length - 1) ===\x0d\n          CHAR_BACKWARD_SLASH &&\x0d\n        StringPrototypeCharCodeAt(from\x2C from.length - 2) === CHAR_COLON) {\x0d\n      return [from + 'node_modules'];\x0d\n    }\x0d\n\x0d\n    /** @type {string[]} */\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      // The path segment separator check ('\\' and '/') was used to get\x0d\n      // node_modules path for every path segment.\x0d\n      // Use colon as an extra condition since we can get node_modules\x0d\n      // path for drive root like 'C:\\node_modules' and don't need to\x0d\n      // parse drive name.\x0d\n      if (code === CHAR_BACKWARD_SLASH ||\x0d\n          code === CHAR_FORWARD_SLASH ||\x0d\n          code === CHAR_COLON) {\x0d\n        if (p !== nmLen) {\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '\\\\node_modules'\x2C\x0d\n          );\x0d\n        }\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n} else { // posix\x0d\n  /**\x0d\n   * Get the paths to the `node_modules` folder for a given path.\x0d\n   * @param {string} from `__dirname` of the module\x0d\n   */\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n    // Return early not only to avoid unnecessary work\x2C but to *avoid* returning\x0d\n    // an array of two items for a root: [ '//node_modules'\x2C '/node_modules' ]\x0d\n    if (from === '/') {\x0d\n      return ['/node_modules'];\x0d\n    }\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n    /** @type {string[]} */\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        if (p !== nmLen) {\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '/node_modules'\x2C\x0d\n          );\x0d\n        }\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Append /node_modules to handle root paths.\x0d\n    ArrayPrototypePush(paths\x2C '/node_modules');\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Get the paths for module resolution.\x0d\n * @param {string} request\x0d\n * @param {Module} parent\x0d\n */\x0d\nModule._resolveLookupPaths = function(request\x2C parent) {\x0d\n  if (BuiltinModule.normalizeRequirableId(request)) {\x0d\n    debug('looking for %j in []'\x2C request);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  // Check for node modules paths.\x0d\n  if (StringPrototypeCharAt(request\x2C 0) !== '.' ||\x0d\n      (request.length > 1 &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '.' &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '/' &&\x0d\n      (!isWindows || StringPrototypeCharAt(request\x2C 1) !== '\\\\'))) {\x0d\n\x0d\n    /** @type {string[]} */\x0d\n    let paths;\x0d\n    if (parent?.paths?.length) {\x0d\n      paths = ArrayPrototypeSlice(modulePaths);\x0d\n      ArrayPrototypeUnshiftApply(paths\x2C parent.paths);\x0d\n    } else {\x0d\n      paths = modulePaths;\x0d\n    }\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C paths);\x0d\n    return paths.length > 0 ? paths : null;\x0d\n  }\x0d\n\x0d\n  // In REPL\x2C parent.filename is null.\x0d\n  if (!parent || !parent.id || !parent.filename) {\x0d\n    // Make require('./path/to/foo') work - normally the path is taken\x0d\n    // from realpath(__filename) but in REPL there is no filename\x0d\n    const mainPaths = ['.'];\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C mainPaths);\x0d\n    return mainPaths;\x0d\n  }\x0d\n\x0d\n  debug('RELATIVE: requested: %s from parent.id %s'\x2C request\x2C parent.id);\x0d\n\x0d\n  const parentDir = [path.dirname(parent.filename)];\x0d\n  debug('looking for %j'\x2C parentDir);\x0d\n  return parentDir;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Emits a warning when a non-existent property of module exports is accessed inside a circular dependency.\x0d\n * @param {string} prop The name of the non-existent property.\x0d\n */\x0d\nfunction emitCircularRequireWarning(prop) {\x0d\n  process.emitWarning(\x0d\n    `Accessing non-existent property '${String(prop)}' of module exports ` +\x0d\n    'inside circular dependency'\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n// A Proxy that can be used as the prototype of a module.exports object and\x0d\n// warns when non-existent properties are accessed.\x0d\nconst CircularRequirePrototypeWarningProxy = new Proxy({}\x2C {\x0d\n  __proto__: null\x2C\x0d\n\x0d\n  get(target\x2C prop) {\x0d\n    // Allow __esModule access in any case because it is used in the output\x0d\n    // of transpiled code to determine whether something comes from an\x0d\n    // ES module\x2C and is not used as a regular key of `module.exports`.\x0d\n    if (prop in target || prop === '__esModule') { return target[prop]; }\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x2C\x0d\n\x0d\n  getOwnPropertyDescriptor(target\x2C prop) {\x0d\n    if (ObjectPrototypeHasOwnProperty(target\x2C prop) || prop === '__esModule') {\x0d\n      return ObjectGetOwnPropertyDescriptor(target\x2C prop);\x0d\n    }\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n/**\x0d\n * Returns the exports object for a module that has a circular `require`.\x0d\n * If the exports object is a plain object\x2C it is wrapped in a proxy that warns\x0d\n * about circular dependencies.\x0d\n * @param {Module} module The module instance\x0d\n */\x0d\nfunction getExportsForCircularRequire(module) {\x0d\n  if (module.exports &&\x0d\n      !isProxy(module.exports) &&\x0d\n      ObjectGetPrototypeOf(module.exports) === ObjectPrototype &&\x0d\n      // Exclude transpiled ES6 modules / TypeScript code because those may\x0d\n      // employ unusual patterns for accessing 'module.exports'. That should\x0d\n      // be okay because ES6 modules have a different approach to circular\x0d\n      // dependencies anyway.\x0d\n      !module.exports.__esModule) {\x0d\n    // This is later unset once the module is done loading.\x0d\n    ObjectSetPrototypeOf(\x0d\n      module.exports\x2C CircularRequirePrototypeWarningProxy);\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Load a module from cache if it exists\x2C otherwise create a new module instance.\x0d\n * 1. If a module already exists in the cache: return its exports object.\x0d\n * 2. If the module is native: call\x0d\n *    `BuiltinModule.prototype.compileForPublicLoader()` and return the exports.\x0d\n * 3. Otherwise\x2C create a new module for the file and save it to the cache.\x0d\n *    Then have it load the file contents before returning its exports object.\x0d\n * @param {string} request Specifier of module to load via `require`\x0d\n * @param {string} parent Absolute path of the module importing the child\x0d\n * @param {boolean} isMain Whether the module is the main entry point\x0d\n */\x0d\nModule._load = function(request\x2C parent\x2C isMain) {\x0d\n  let relResolveCacheIdentifier;\x0d\n  if (parent) {\x0d\n    debug('Module._load REQUEST %s parent: %s'\x2C request\x2C parent.id);\x0d\n    // Fast path for (lazy loaded) modules in the same directory. The indirect\x0d\n    // caching is required to allow cache invalidation without changing the old\x0d\n    // cache key names.\x0d\n    relResolveCacheIdentifier = `${parent.path}\\x00${request}`;\x0d\n    const filename = relativeResolveCache[relResolveCacheIdentifier];\x0d\n    reportModuleToWatchMode(filename);\x0d\n    if (filename !== undefined) {\x0d\n      const cachedModule = Module._cache[filename];\x0d\n      if (cachedModule !== undefined) {\x0d\n        updateChildren(parent\x2C cachedModule\x2C true);\x0d\n        if (!cachedModule.loaded) {\x0d\n          return getExportsForCircularRequire(cachedModule);\x0d\n        }\x0d\n        return cachedModule.exports;\x0d\n      }\x0d\n      delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (StringPrototypeStartsWith(request\x2C 'node:')) {\x0d\n    // Slice 'node:' prefix\x0d\n    const id = StringPrototypeSlice(request\x2C 5);\x0d\n\x0d\n    if (!BuiltinModule.canBeRequiredByUsers(id)) {\x0d\n      throw new ERR_UNKNOWN_BUILTIN_MODULE(request);\x0d\n    }\x0d\n\x0d\n    const module = loadBuiltinModule(id\x2C request);\x0d\n    return module.exports;\x0d\n  }\x0d\n\x0d\n  const filename = Module._resolveFilename(request\x2C parent\x2C isMain);\x0d\n  const cachedModule = Module._cache[filename];\x0d\n  if (cachedModule !== undefined) {\x0d\n    updateChildren(parent\x2C cachedModule\x2C true);\x0d\n    if (!cachedModule.loaded) {\x0d\n      const parseCachedModule = cjsParseCache.get(cachedModule);\x0d\n      if (!parseCachedModule || parseCachedModule.loaded) {\x0d\n        return getExportsForCircularRequire(cachedModule);\x0d\n      }\x0d\n      parseCachedModule.loaded = true;\x0d\n    } else {\x0d\n      return cachedModule.exports;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (BuiltinModule.canBeRequiredWithoutScheme(filename)) {\x0d\n    const mod = loadBuiltinModule(filename\x2C request);\x0d\n    return mod.exports;\x0d\n  }\x0d\n\x0d\n  // Don't call updateChildren()\x2C Module constructor already does.\x0d\n  const module = cachedModule || new Module(filename\x2C parent);\x0d\n\x0d\n  if (isMain) {\x0d\n    setOwnProperty(process\x2C 'mainModule'\x2C module);\x0d\n    setOwnProperty(module.require\x2C 'main'\x2C process.mainModule);\x0d\n    module.id = '.';\x0d\n  }\x0d\n\x0d\n  reportModuleToWatchMode(filename);\x0d\n\x0d\n  Module._cache[filename] = module;\x0d\n  if (parent !== undefined) {\x0d\n    relativeResolveCache[relResolveCacheIdentifier] = filename;\x0d\n  }\x0d\n\x0d\n  let threw = true;\x0d\n  try {\x0d\n    module.load(filename);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw) {\x0d\n      delete Module._cache[filename];\x0d\n      if (parent !== undefined) {\x0d\n        delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n        const children = parent?.children;\x0d\n        if (ArrayIsArray(children)) {\x0d\n          const index = ArrayPrototypeIndexOf(children\x2C module);\x0d\n          if (index !== -1) {\x0d\n            ArrayPrototypeSplice(children\x2C index\x2C 1);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (module.exports &&\x0d\n               !isProxy(module.exports) &&\x0d\n               ObjectGetPrototypeOf(module.exports) ===\x0d\n                 CircularRequirePrototypeWarningProxy) {\x0d\n      ObjectSetPrototypeOf(module.exports\x2C ObjectPrototype);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Given a `require` string and its context\x2C get its absolute file path.\x0d\n * @param {string} request The specifier to resolve\x0d\n * @param {Module} parent The module containing the `require` call\x0d\n * @param {boolean} isMain Whether the module is the main entry point\x0d\n * @param {ResolveFilenameOptions} options Options object\x0d\n * @typedef {object} ResolveFilenameOptions\x0d\n * @property {string[]} paths Paths to search for modules in\x0d\n */\x0d\nModule._resolveFilename = function(request\x2C parent\x2C isMain\x2C options) {\x0d\n  if (BuiltinModule.normalizeRequirableId(request)) {\x0d\n    return request;\x0d\n  }\x0d\n\x0d\n  let paths;\x0d\n\x0d\n  if (typeof options === 'object' && options !== null) {\x0d\n    if (ArrayIsArray(options.paths)) {\x0d\n      const isRelative = StringPrototypeStartsWith(request\x2C './') ||\x0d\n          StringPrototypeStartsWith(request\x2C '../') ||\x0d\n          ((isWindows && StringPrototypeStartsWith(request\x2C '.\\\\')) ||\x0d\n          StringPrototypeStartsWith(request\x2C '..\\\\'));\x0d\n\x0d\n      if (isRelative) {\x0d\n        paths = options.paths;\x0d\n      } else {\x0d\n        const fakeParent = new Module(''\x2C null);\x0d\n\x0d\n        paths = [];\x0d\n\x0d\n        for (let i = 0; i < options.paths.length; i++) {\x0d\n          const path = options.paths[i];\x0d\n          fakeParent.paths = Module._nodeModulePaths(path);\x0d\n          const lookupPaths = Module._resolveLookupPaths(request\x2C fakeParent);\x0d\n\x0d\n          for (let j = 0; j < lookupPaths.length; j++) {\x0d\n            if (!ArrayPrototypeIncludes(paths\x2C lookupPaths[j])) {\x0d\n              ArrayPrototypePush(paths\x2C lookupPaths[j]);\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (options.paths === undefined) {\x0d\n      paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_VALUE('options.paths'\x2C options.paths);\x0d\n    }\x0d\n  } else {\x0d\n    paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n  }\x0d\n\x0d\n  if (request[0] === '#' && (parent?.filename || parent?.id === '<repl>')) {\x0d\n    const parentPath = parent?.filename ?? process.cwd() + path.sep;\x0d\n    const pkg = packageJsonReader.getNearestParentPackageJSON(parentPath) || { __proto__: null };\x0d\n    if (pkg.data?.imports != null) {\x0d\n      try {\x0d\n        const { packageImportsResolve } = require('internal/modules/esm/resolve');\x0d\n        return finalizeEsmResolution(\x0d\n          packageImportsResolve(request\x2C pathToFileURL(parentPath)\x2C\x0d\n                                getCjsConditions())\x2C parentPath\x2C\x0d\n          pkg.path);\x0d\n      } catch (e) {\x0d\n        if (e.code === 'ERR_MODULE_NOT_FOUND') {\x0d\n          throw createEsmNotFoundErr(request);\x0d\n        }\x0d\n        throw e;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Try module self resolution first\x0d\n  const parentPath = trySelfParentPath(parent);\x0d\n  const selfResolved = trySelf(parentPath\x2C request);\x0d\n  if (selfResolved) {\x0d\n    const cacheKey = request + '\\x00' +\x0d\n         (paths.length === 1 ? paths[0] : ArrayPrototypeJoin(paths\x2C '\\x00'));\x0d\n    Module._pathCache[cacheKey] = selfResolved;\x0d\n    return selfResolved;\x0d\n  }\x0d\n\x0d\n  // Look up the filename first\x2C since that's the cache key.\x0d\n  const filename = Module._findPath(request\x2C paths\x2C isMain);\x0d\n  if (filename) { return filename; }\x0d\n  const requireStack = [];\x0d\n  for (let cursor = parent;\x0d\n    cursor;\x0d\n    cursor = moduleParentCache.get(cursor)) {\x0d\n    ArrayPrototypePush(requireStack\x2C cursor.filename || cursor.id);\x0d\n  }\x0d\n  let message = `Cannot find module '${request}'`;\x0d\n  if (requireStack.length > 0) {\x0d\n    message = message + '\\nRequire stack:\\n- ' +\x0d\n              ArrayPrototypeJoin(requireStack\x2C '\\n- ');\x0d\n  }\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  err.requireStack = requireStack;\x0d\n  throw err;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Finishes resolving an ES module specifier into an absolute file path.\x0d\n * @param {string} resolved The resolved module specifier\x0d\n * @param {string} parentPath The path of the parent module\x0d\n * @param {string} pkgPath The path of the package.json file\x0d\n * @throws {ERR_INVALID_MODULE_SPECIFIER} If the resolved module specifier contains encoded `/` or `\\\\` characters\x0d\n * @throws {Error} If the module cannot be found\x0d\n */\x0d\nfunction finalizeEsmResolution(resolved\x2C parentPath\x2C pkgPath) {\x0d\n  const { encodedSepRegEx } = require('internal/modules/esm/resolve');\x0d\n  if (RegExpPrototypeExec(encodedSepRegEx\x2C resolved) !== null) {\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved\x2C 'must not include encoded "/" or "\\\\" characters'\x2C parentPath);\x0d\n  }\x0d\n  const filename = fileURLToPath(resolved);\x0d\n  const actual = tryFile(filename);\x0d\n  if (actual) {\x0d\n    return actual;\x0d\n  }\x0d\n  const err = createEsmNotFoundErr(filename\x2C\x0d\n                                   path.resolve(pkgPath\x2C 'package.json'));\x0d\n  throw err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates an error object for when a requested ES module cannot be found.\x0d\n * @param {string} request The name of the requested module\x0d\n * @param {string} [path] The path to the requested module\x0d\n */\x0d\nfunction createEsmNotFoundErr(request\x2C path) {\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(`Cannot find module '${request}'`);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  if (path) {\x0d\n    err.path = path;\x0d\n  }\x0d\n  // TODO(BridgeAR): Add the requireStack as well.\x0d\n  return err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Given a file name\x2C pass it to the proper extension handler.\x0d\n * @param {string} filename The `require` specifier\x0d\n */\x0d\nModule.prototype.load = function(filename) {\x0d\n  debug('load %j for module %j'\x2C filename\x2C this.id);\x0d\n\x0d\n  assert(!this.loaded);\x0d\n  this.filename = filename;\x0d\n  this.paths = Module._nodeModulePaths(path.dirname(filename));\x0d\n\x0d\n  const extension = findLongestRegisteredExtension(filename);\x0d\n  // allow .mjs to be overridden\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.mjs') && !Module._extensions['.mjs']) {\x0d\n    throw new ERR_REQUIRE_ESM(filename\x2C true);\x0d\n  }\x0d\n\x0d\n  Module._extensions[extension](this\x2C filename);\x0d\n  this.loaded = true;\x0d\n\x0d\n  // Create module entry at load time to snapshot exports correctly\x0d\n  const exports = this.exports;\x0d\n  // Preemptively cache for ESM loader.\x0d\n  if (!cjsExportsCache.has(this)) {\x0d\n    cjsExportsCache.set(this\x2C exports);\x0d\n  }\x0d\n};\x0d\n\x0d\n/**\x0d\n * Loads a module at the given file path. Returns that module's `exports` property.\x0d\n * Note: when using the experimental policy mechanism this function is overridden.\x0d\n * @param {string} id\x0d\n * @throws {ERR_INVALID_ARG_TYPE} When `id` is not a string\x0d\n */\x0d\nModule.prototype.require = function(id) {\x0d\n  validateString(id\x2C 'id');\x0d\n  if (id === '') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('id'\x2C id\x2C\x0d\n                                    'must be a non-empty string');\x0d\n  }\x0d\n  requireDepth++;\x0d\n  try {\x0d\n    return Module._load(id\x2C this\x2C /* isMain */ false);\x0d\n  } finally {\x0d\n    requireDepth--;\x0d\n  }\x0d\n};\x0d\n\x0d\n/**\x0d\n * Resolved path to `process.argv[1]` will be lazily placed here\x0d\n * (needed for setting breakpoint when called with `--inspect-brk`).\x0d\n * @type {string | undefined}\x0d\n */\x0d\nlet resolvedArgv;\x0d\nlet hasPausedEntry = false;\x0d\n/** @type {import('vm').Script} */\x0d\n\x0d\n/**\x0d\n * Wraps the given content in a script and runs it in a new context.\x0d\n * @param {string} filename The name of the file being loaded\x0d\n * @param {string} content The content of the file being loaded\x0d\n * @param {Module} cjsModuleInstance The CommonJS loader instance\x0d\n * @param {object} codeCache The SEA code cache\x0d\n */\x0d\nfunction wrapSafe(filename\x2C content\x2C cjsModuleInstance\x2C codeCache) {\x0d\n  const hostDefinedOptionId = vm_dynamic_import_default_internal;\x0d\n  const importModuleDynamically = vm_dynamic_import_default_internal;\x0d\n  if (patched) {\x0d\n    const wrapped = Module.wrap(content);\x0d\n    const script = makeContextifyScript(\x0d\n      wrapped\x2C                 // code\x0d\n      filename\x2C                // filename\x0d\n      0\x2C                       // lineOffset\x0d\n      0\x2C                       // columnOffset\x0d\n      undefined\x2C               // cachedData\x0d\n      false\x2C                   // produceCachedData\x0d\n      undefined\x2C               // parsingContext\x0d\n      hostDefinedOptionId\x2C     // hostDefinedOptionId\x0d\n      importModuleDynamically\x2C // importModuleDynamically\x0d\n    );\x0d\n\x0d\n    // Cache the source map for the module if present.\x0d\n    if (script.sourceMapURL) {\x0d\n      maybeCacheSourceMap(filename\x2C content\x2C this\x2C false\x2C undefined\x2C script.sourceMapURL);\x0d\n    }\x0d\n\x0d\n    return runScriptInThisContext(script\x2C true\x2C false);\x0d\n  }\x0d\n\x0d\n  const params = [ 'exports'\x2C 'require'\x2C 'module'\x2C '__filename'\x2C '__dirname' ];\x0d\n  try {\x0d\n    const result = internalCompileFunction(\x0d\n      content\x2C                           // code\x2C\x0d\n      filename\x2C                          // filename\x0d\n      0\x2C                                 // lineOffset\x0d\n      0\x2C                                 // columnOffset\x2C\x0d\n      codeCache\x2C                         // cachedData\x0d\n      false\x2C                             // produceCachedData\x0d\n      undefined\x2C                         // parsingContext\x0d\n      undefined\x2C                         // contextExtensions\x0d\n      params\x2C                            // params\x0d\n      hostDefinedOptionId\x2C               // hostDefinedOptionId\x0d\n      importModuleDynamically\x2C           // importModuleDynamically\x0d\n    );\x0d\n\x0d\n    // The code cache is used for SEAs only.\x0d\n    if (codeCache &&\x0d\n        result.cachedDataRejected !== false &&\x0d\n        internalBinding('sea').isSea()) {\x0d\n      process.emitWarning('Code cache data rejected.');\x0d\n    }\x0d\n\x0d\n    // Cache the source map for the module if present.\x0d\n    if (result.sourceMapURL) {\x0d\n      maybeCacheSourceMap(filename\x2C content\x2C this\x2C false\x2C undefined\x2C result.sourceMapURL);\x0d\n    }\x0d\n\x0d\n    return result.function;\x0d\n  } catch (err) {\x0d\n    if (process.mainModule === cjsModuleInstance) {\x0d\n      const { enrichCJSError } = require('internal/modules/esm/translators');\x0d\n      enrichCJSError(err\x2C content\x2C filename);\x0d\n    }\x0d\n    throw err;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Run the file contents in the correct scope or sandbox. Expose the correct helper variables (`require`\x2C `module`\x2C\x0d\n * `exports`) to the file. Returns exception\x2C if any.\x0d\n * @param {string} content The source code of the module\x0d\n * @param {string} filename The file path of the module\x0d\n */\x0d\nModule.prototype._compile = function(content\x2C filename) {\x0d\n  let moduleURL;\x0d\n  let redirects;\x0d\n  const manifest = policy()?.manifest;\x0d\n  if (manifest) {\x0d\n    moduleURL = pathToFileURL(filename);\x0d\n    redirects = manifest.getDependencyMapper(moduleURL);\x0d\n    manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  const compiledWrapper = wrapSafe(filename\x2C content\x2C this);\x0d\n\x0d\n  let inspectorWrapper = null;\x0d\n  if (getOptionValue('--inspect-brk') && process._eval == null) {\x0d\n    if (!resolvedArgv) {\x0d\n      // We enter the repl if we're not given a filename argument.\x0d\n      if (process.argv[1]) {\x0d\n        try {\x0d\n          resolvedArgv = Module._resolveFilename(process.argv[1]\x2C null\x2C false);\x0d\n        } catch {\x0d\n          // We only expect this codepath to be reached in the case of a\x0d\n          // preloaded module (it will fail earlier with the main entry)\x0d\n          assert(ArrayIsArray(getOptionValue('--require')));\x0d\n        }\x0d\n      } else {\x0d\n        resolvedArgv = 'repl';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Set breakpoint on module start\x0d\n    if (resolvedArgv && !hasPausedEntry && filename === resolvedArgv) {\x0d\n      hasPausedEntry = true;\x0d\n      inspectorWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n    }\x0d\n  }\x0d\n  const dirname = path.dirname(filename);\x0d\n  const require = makeRequireFunction(this\x2C redirects);\x0d\n  let result;\x0d\n  const exports = this.exports;\x0d\n  const thisValue = exports;\x0d\n  const module = this;\x0d\n  if (requireDepth === 0) { statCache = new SafeMap(); }\x0d\n  setHasStartedUserCJSExecution();\x0d\n  if (inspectorWrapper) {\x0d\n    result = inspectorWrapper(compiledWrapper\x2C thisValue\x2C exports\x2C\x0d\n                              require\x2C module\x2C filename\x2C dirname);\x0d\n  } else {\x0d\n    result = ReflectApply(compiledWrapper\x2C thisValue\x2C\x0d\n                          [exports\x2C require\x2C module\x2C filename\x2C dirname]);\x0d\n  }\x0d\n  if (requireDepth === 0) { statCache = null; }\x0d\n  return result;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Native handler for `.js` files.\x0d\n * @param {Module} module The module to compile\x0d\n * @param {string} filename The file path of the module\x0d\n */\x0d\nModule._extensions['.js'] = function(module\x2C filename) {\x0d\n  // If already analyzed the source\x2C then it will be cached.\x0d\n  const cached = cjsParseCache.get(module);\x0d\n  let content;\x0d\n  if (cached?.source) {\x0d\n    content = cached.source;\x0d\n    cached.source = undefined;\x0d\n  } else {\x0d\n    content = fs.readFileSync(filename\x2C 'utf8');\x0d\n  }\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.js')) {\x0d\n    const pkg = packageJsonReader.getNearestParentPackageJSON(filename);\x0d\n    // Function require shouldn't be used in ES modules.\x0d\n    if (pkg?.data.type === 'module') {\x0d\n      // This is an error path because `require` of a `.js` file in a `"type": "module"` scope is not allowed.\x0d\n      const parent = moduleParentCache.get(module);\x0d\n      const parentPath = parent?.filename;\x0d\n      const packageJsonPath = path.resolve(pkg.path\x2C 'package.json');\x0d\n      const usesEsm = containsModuleSyntax(content\x2C filename);\x0d\n      const err = new ERR_REQUIRE_ESM(filename\x2C usesEsm\x2C parentPath\x2C\x0d\n                                      packageJsonPath);\x0d\n      // Attempt to reconstruct the parent require frame.\x0d\n      if (Module._cache[parentPath]) {\x0d\n        let parentSource;\x0d\n        try {\x0d\n          parentSource = fs.readFileSync(parentPath\x2C 'utf8');\x0d\n        } catch {\x0d\n          // Continue regardless of error.\x0d\n        }\x0d\n        if (parentSource) {\x0d\n          const errLine = StringPrototypeSplit(\x0d\n            StringPrototypeSlice(err.stack\x2C StringPrototypeIndexOf(\x0d\n              err.stack\x2C '    at '))\x2C '\\n'\x2C 1)[0];\x0d\n          const { 1: line\x2C 2: col } =\x0d\n              RegExpPrototypeExec(/(\\d+):(\\d+)\\)/\x2C errLine) || [];\x0d\n          if (line && col) {\x0d\n            const srcLine = StringPrototypeSplit(parentSource\x2C '\\n')[line - 1];\x0d\n            const frame = `${parentPath}:${line}\\n${srcLine}\\n${\x0d\n              StringPrototypeRepeat(' '\x2C col - 1)}^\\n`;\x0d\n            setArrowMessage(err\x2C frame);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n      throw err;\x0d\n    }\x0d\n  }\x0d\n  module._compile(content\x2C filename);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Native handler for `.json` files.\x0d\n * @param {Module} module The module to compile\x0d\n * @param {string} filename The file path of the module\x0d\n */\x0d\nModule._extensions['.json'] = function(module\x2C filename) {\x0d\n  const content = fs.readFileSync(filename\x2C 'utf8');\x0d\n\x0d\n  const manifest = policy()?.manifest;\x0d\n  if (manifest) {\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    setOwnProperty(module\x2C 'exports'\x2C JSONParse(stripBOM(content)));\x0d\n  } catch (err) {\x0d\n    err.message = filename + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n};\x0d\n\x0d\n/**\x0d\n * Native handler for `.node` files.\x0d\n * @param {Module} module The module to compile\x0d\n * @param {string} filename The file path of the module\x0d\n */\x0d\nModule._extensions['.node'] = function(module\x2C filename) {\x0d\n  const manifest = policy()?.manifest;\x0d\n  if (manifest) {\x0d\n    const content = fs.readFileSync(filename);\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n  // Be aware this doesn't use `content`\x0d\n  return process.dlopen(module\x2C path.toNamespacedPath(filename));\x0d\n};\x0d\n\x0d\n/**\x0d\n * Creates a `require` function that can be used to load modules from the specified path.\x0d\n * @param {string} filename The path to the module\x0d\n */\x0d\nfunction createRequireFromPath(filename) {\x0d\n  // Allow a directory to be passed as the filename\x0d\n  const trailingSlash =\x0d\n    StringPrototypeEndsWith(filename\x2C '/') ||\x0d\n    (isWindows && StringPrototypeEndsWith(filename\x2C '\\\\'));\x0d\n\x0d\n  const proxyPath = trailingSlash ?\x0d\n    path.join(filename\x2C 'noop.js') :\x0d\n    filename;\x0d\n\x0d\n  const m = new Module(proxyPath);\x0d\n  m.filename = proxyPath;\x0d\n\x0d\n  m.paths = Module._nodeModulePaths(m.path);\x0d\n  return makeRequireFunction(m\x2C null);\x0d\n}\x0d\n\x0d\nconst createRequireError = 'must be a file URL object\x2C file URL string\x2C or ' +\x0d\n  'absolute path string';\x0d\n\x0d\n/**\x0d\n * Creates a new `require` function that can be used to load modules.\x0d\n * @param {string | URL} filename The path or URL to the module context for this `require`\x0d\n * @throws {ERR_INVALID_ARG_VALUE} If `filename` is not a string or URL\x2C or if it is a relative path that cannot be\x0d\n * resolved to an absolute path.\x0d\n */\x0d\nfunction createRequire(filename) {\x0d\n  let filepath;\x0d\n\x0d\n  if (isURL(filename) ||\x0d\n      (typeof filename === 'string' && !path.isAbsolute(filename))) {\x0d\n    try {\x0d\n      filepath = fileURLToPath(filename);\x0d\n    } catch {\x0d\n      throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C\x0d\n                                      createRequireError);\x0d\n    }\x0d\n  } else if (typeof filename !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C createRequireError);\x0d\n  } else {\x0d\n    filepath = filename;\x0d\n  }\x0d\n  return createRequireFromPath(filepath);\x0d\n}\x0d\n\x0d\nModule.createRequire = createRequire;\x0d\n\x0d\n/**\x0d\n * Define the paths to use for resolving a module.\x0d\n */\x0d\nModule._initPaths = function() {\x0d\n  const homeDir = isWindows ? process.env.USERPROFILE : safeGetenv('HOME');\x0d\n  const nodePath = isWindows ? process.env.NODE_PATH : safeGetenv('NODE_PATH');\x0d\n\x0d\n  // process.execPath is $PREFIX/bin/node except on Windows where it is\x0d\n  // $PREFIX\\node.exe where $PREFIX is the root of the Node.js installation.\x0d\n  const prefixDir = isWindows ?\x0d\n    path.resolve(process.execPath\x2C '..') :\x0d\n    path.resolve(process.execPath\x2C '..'\x2C '..');\x0d\n\x0d\n  const paths = [path.resolve(prefixDir\x2C 'lib'\x2C 'node')];\x0d\n\x0d\n  if (homeDir) {\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_libraries'));\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_modules'));\x0d\n  }\x0d\n\x0d\n  if (nodePath) {\x0d\n    ArrayPrototypeUnshiftApply(paths\x2C ArrayPrototypeFilter(\x0d\n      StringPrototypeSplit(nodePath\x2C path.delimiter)\x2C\x0d\n      Boolean\x2C\x0d\n    ));\x0d\n  }\x0d\n\x0d\n  modulePaths = paths;\x0d\n\x0d\n  // Clone as a shallow copy\x2C for introspection.\x0d\n  Module.globalPaths = ArrayPrototypeSlice(modulePaths);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Handle modules loaded via `--require`.\x0d\n * @param {string[]} requests The values of `--require`\x0d\n */\x0d\nModule._preloadModules = function(requests) {\x0d\n  if (!ArrayIsArray(requests)) { return; }\x0d\n\x0d\n  isPreloading = true;\x0d\n\x0d\n  // Preloaded modules have a dummy parent module which is deemed to exist\x0d\n  // in the current working directory. This seeds the search path for\x0d\n  // preloaded modules.\x0d\n  const parent = new Module('internal/preload'\x2C null);\x0d\n  try {\x0d\n    parent.paths = Module._nodeModulePaths(process.cwd());\x0d\n  } catch (e) {\x0d\n    if (e.code !== 'ENOENT') {\x0d\n      isPreloading = false;\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n  for (let n = 0; n < requests.length; n++) {\x0d\n    internalRequire(parent\x2C requests[n]);\x0d\n  }\x0d\n  isPreloading = false;\x0d\n};\x0d\n\x0d\n/**\x0d\n * If the user has overridden an export from a builtin module\x2C this function can ensure that the override is used in\x0d\n * both CommonJS and ES module contexts.\x0d\n */\x0d\nModule.syncBuiltinESMExports = function syncBuiltinESMExports() {\x0d\n  for (const mod of BuiltinModule.map.values()) {\x0d\n    if (BuiltinModule.canBeRequiredWithoutScheme(mod.id)) {\x0d\n      mod.syncExports();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nObjectDefineProperty(Module.prototype\x2C 'constructor'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    return policy() ? undefined : Module;\x0d\n  }\x2C\x0d\n  configurable: false\x2C\x0d\n  enumerable: false\x2C\x0d\n});\x0d\n\x0d\n// Backwards compatibility\x0d\nModule.Module = Module;\x0d\n
code-source-info,0x125aa79a924,63,10924,11416,C0O11028C5O11042C10O11042C15O11089C20O11113C23O11113C27O11111C31O11148C36O11148C39O11180C44O11185C48O11205C54O11234C57O11241C62O11241C66O11332C75O11354C80O11390C84O11347C89O11415,,
code-creation,JS,10,114437,0x125aa79dca4,19,getCanBeRequiredByUsersWithoutSchemeList node:internal/bootstrap/realm:322:50,0xa4fec38820,~
code-source-info,0x125aa79dca4,9,10636,10707,C0O10646C11O10663C14O10653C18O10702,,
code-creation,JS,10,114538,0x125aa79e0b4,156,initializeCjsConditions node:internal/modules/helpers:68:33,0x1d9b727d2f8,~
script-source,64,node:internal/modules/helpers,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { BuiltinModule } = require('internal/bootstrap/realm');\x0d\n\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst fs = require('fs'); // Import all of `fs` so that it can be monkey-patched.\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst path = require('path');\x0d\nconst { pathToFileURL\x2C fileURLToPath } = require('internal/url');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { setOwnProperty } = require('internal/util');\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nconst {\x0d\n  privateSymbols: {\x0d\n    require_private_symbol\x2C\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\nconst { canParse: URLCanParse } = internalBinding('url');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\n/** @typedef {import('internal/modules/cjs/loader.js').Module} Module */\x0d\n\x0d\n/**\x0d\n * Cache for storing resolved real paths of modules.\x0d\n * In order to minimize unnecessary lstat() calls\x2C this cache is a list of known-real paths.\x0d\n * Set to an empty Map to reset.\x0d\n * @type {Map<string\x2C string>}\x0d\n */\x0d\nconst realpathCache = new SafeMap();\x0d\n/**\x0d\n * Resolves the path of a given `require` specifier\x2C following symlinks.\x0d\n * @param {string} requestPath The `require` specifier\x0d\n */\x0d\nfunction toRealPath(requestPath) {\x0d\n  return fs.realpathSync(requestPath\x2C {\x0d\n    [internalFS.realpathCacheKey]: realpathCache\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\n/** @type {Set<string>} */\x0d\nlet cjsConditions;\x0d\n/**\x0d\n * Define the conditions that apply to the CommonJS loader.\x0d\n */\x0d\nfunction initializeCjsConditions() {\x0d\n  const userConditions = getOptionValue('--conditions');\x0d\n  const noAddons = getOptionValue('--no-addons');\x0d\n  const addonConditions = noAddons ? [] : ['node-addons'];\x0d\n  // TODO: Use this set when resolving pkg#exports conditions in loader.js.\x0d\n  cjsConditions = new SafeSet([\x0d\n    'require'\x2C\x0d\n    'node'\x2C\x0d\n    ...addonConditions\x2C\x0d\n    ...userConditions\x2C\x0d\n  ]);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Get the conditions that apply to the CommonJS loader.\x0d\n */\x0d\nfunction getCjsConditions() {\x0d\n  if (cjsConditions === undefined) {\x0d\n    initializeCjsConditions();\x0d\n  }\x0d\n  return cjsConditions;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Provide one of Node.js' public modules to user code.\x0d\n * @param {string} id - The identifier/specifier of the builtin module to load\x0d\n * @param {string} request - The module requiring or importing the builtin module\x0d\n */\x0d\nfunction loadBuiltinModule(id\x2C request) {\x0d\n  if (!BuiltinModule.canBeRequiredByUsers(id)) {\x0d\n    return;\x0d\n  }\x0d\n  /** @type {import('internal/bootstrap/realm.js').BuiltinModule} */\x0d\n  const mod = BuiltinModule.map.get(id);\x0d\n  debug('load built-in module %s'\x2C request);\x0d\n  // compileForPublicLoader() throws if canBeRequiredByUsers is false:\x0d\n  mod.compileForPublicLoader();\x0d\n  return mod;\x0d\n}\x0d\n\x0d\n/** @type {Module} */\x0d\nlet $Module = null;\x0d\n/**\x0d\n * Import the Module class on first use.\x0d\n */\x0d\nfunction lazyModule() {\x0d\n  $Module = $Module || require('internal/modules/cjs/loader').Module;\x0d\n  return $Module;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Invoke with `makeRequireFunction(module)` where `module` is the `Module` object to use as the context for the\x0d\n * `require()` function.\x0d\n * Use redirects to set up a mapping from a policy and restrict dependencies.\x0d\n */\x0d\nconst urlToFileCache = new SafeMap();\x0d\n/**\x0d\n * Create the module-scoped `require` function to pass into CommonJS modules.\x0d\n * @param {Module} mod - The module to create the `require` function for.\x0d\n * @param {ReturnType<import('internal/policy/manifest.js').Manifest['getDependencyMapper']>} redirects\x0d\n * @typedef {(specifier: string) => unknown} RequireFunction\x0d\n */\x0d\nfunction makeRequireFunction(mod\x2C redirects) {\x0d\n  // lazy due to cycle\x0d\n  const Module = lazyModule();\x0d\n  if (mod instanceof Module !== true) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('mod'\x2C 'Module'\x2C mod);\x0d\n  }\x0d\n\x0d\n  /** @type {RequireFunction} */\x0d\n  let require;\x0d\n  if (redirects) {\x0d\n    const id = mod.filename || mod.id;\x0d\n    const conditions = getCjsConditions();\x0d\n    const { resolve\x2C reaction } = redirects;\x0d\n    require = function require(specifier) {\x0d\n      let missing = true;\x0d\n      const destination = resolve(specifier\x2C conditions);\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const { href\x2C protocol } = destination;\x0d\n        if (protocol === 'node:') {\x0d\n          const specifier = destination.pathname;\x0d\n\x0d\n          if (BuiltinModule.canBeRequiredByUsers(specifier)) {\x0d\n            const mod = loadBuiltinModule(specifier\x2C href);\x0d\n            return mod.exports;\x0d\n          }\x0d\n          throw new ERR_UNKNOWN_BUILTIN_MODULE(specifier);\x0d\n        } else if (protocol === 'file:') {\x0d\n          let filepath = urlToFileCache.get(href);\x0d\n          if (!filepath) {\x0d\n            filepath = fileURLToPath(destination);\x0d\n            urlToFileCache.set(href\x2C filepath);\x0d\n          }\x0d\n          return mod[require_private_symbol](mod\x2C filepath);\x0d\n        }\x0d\n      }\x0d\n      if (missing) {\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          id\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C ')\x2C\x0d\n        ));\x0d\n      }\x0d\n      return mod[require_private_symbol](mod\x2C specifier);\x0d\n    };\x0d\n  } else {\x0d\n    require = function require(path) {\x0d\n      // When no policy manifest\x2C the original prototype.require is sustained\x0d\n      return mod.require(path);\x0d\n    };\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * The `resolve` method that gets attached to module-scope `require`.\x0d\n   * @param {string} request\x0d\n   * @param {Parameters<Module['_resolveFilename']>[3]} options\x0d\n   */\x0d\n  function resolve(request\x2C options) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveFilename(request\x2C mod\x2C false\x2C options);\x0d\n  }\x0d\n\x0d\n  require.resolve = resolve;\x0d\n\x0d\n  /**\x0d\n   * The `paths` method that gets attached to module-scope `require`.\x0d\n   * @param {string} request\x0d\n   */\x0d\n  function paths(request) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveLookupPaths(request\x2C mod);\x0d\n  }\x0d\n\x0d\n  resolve.paths = paths;\x0d\n\x0d\n  setOwnProperty(require\x2C 'main'\x2C process.mainModule);\x0d\n\x0d\n  // Enable support to add extra extension types.\x0d\n  require.extensions = Module._extensions;\x0d\n\x0d\n  require.cache = Module._cache;\x0d\n\x0d\n  return require;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\x0d\n * because the buffer-to-string conversion in `fs.readFileSync()`\x0d\n * translates it to FEFF\x2C the UTF-16 BOM.\x0d\n * @param {string} content\x0d\n */\x0d\nfunction stripBOM(content) {\x0d\n  if (StringPrototypeCharCodeAt(content) === 0xFEFF) {\x0d\n    content = StringPrototypeSlice(content\x2C 1);\x0d\n  }\x0d\n  return content;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Add built-in modules to a global or REPL scope object.\x0d\n * @param {Record<string\x2C unknown>} object - The object such as `globalThis` to add the built-in modules to.\x0d\n * @param {string} dummyModuleName - The label representing the set of built-in modules to add.\x0d\n */\x0d\nfunction addBuiltinLibsToObject(object\x2C dummyModuleName) {\x0d\n  // Make built-in modules available directly (loaded lazily).\x0d\n  const Module = require('internal/modules/cjs/loader').Module;\x0d\n  const { builtinModules } = Module;\x0d\n\x0d\n  // To require built-in modules in user-land and ignore modules whose\x0d\n  // `canBeRequiredByUsers` is false. So we create a dummy module object and not\x0d\n  // use `require()` directly.\x0d\n  const dummyModule = new Module(dummyModuleName);\x0d\n\x0d\n  ArrayPrototypeForEach(builtinModules\x2C (name) => {\x0d\n    // Neither add underscored modules\x2C nor ones that contain slashes (e.g.\x2C\x0d\n    // 'fs/promises') or ones that are already defined.\x0d\n    if (StringPrototypeStartsWith(name\x2C '_') ||\x0d\n        StringPrototypeIncludes(name\x2C '/') ||\x0d\n        ObjectPrototypeHasOwnProperty(object\x2C name)) {\x0d\n      return;\x0d\n    }\x0d\n    // Goals of this mechanism are:\x0d\n    // - Lazy loading of built-in modules\x0d\n    // - Having all built-in modules available as non-enumerable properties\x0d\n    // - Allowing the user to re-assign these variables as if there were no\x0d\n    //   pre-existing globals with the same name.\x0d\n\x0d\n    const setReal = (val) => {\x0d\n      // Deleting the property before re-assigning it disables the\x0d\n      // getter/setter mechanism.\x0d\n      delete object[name];\x0d\n      object[name] = val;\x0d\n    };\x0d\n\x0d\n    ObjectDefineProperty(object\x2C name\x2C {\x0d\n      __proto__: null\x2C\x0d\n      get: () => {\x0d\n        const lib = dummyModule.require(name);\x0d\n\x0d\n        try {\x0d\n          // Override the current getter/setter and set up a new\x0d\n          // non-enumerable property.\x0d\n          ObjectDefineProperty(object\x2C name\x2C {\x0d\n            __proto__: null\x2C\x0d\n            get: () => lib\x2C\x0d\n            set: setReal\x2C\x0d\n            configurable: true\x2C\x0d\n            enumerable: false\x2C\x0d\n          });\x0d\n        } catch {\x0d\n          // If the property is no longer configurable\x2C ignore the error.\x0d\n        }\x0d\n\x0d\n        return lib;\x0d\n      }\x2C\x0d\n      set: setReal\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Normalize the referrer name as a URL.\x0d\n * If it's a string containing an absolute path or a URL it's normalized as\x0d\n * a URL string.\x0d\n * Otherwise it's returned as undefined.\x0d\n * @param {string | null | undefined} referrerName\x0d\n * @returns {string | undefined}\x0d\n */\x0d\nfunction normalizeReferrerURL(referrerName) {\x0d\n  if (referrerName === null || referrerName === undefined) {\x0d\n    return undefined;\x0d\n  }\x0d\n\x0d\n  if (typeof referrerName === 'string') {\x0d\n    if (path.isAbsolute(referrerName)) {\x0d\n      return pathToFileURL(referrerName).href;\x0d\n    }\x0d\n\x0d\n    if (StringPrototypeStartsWith(referrerName\x2C 'file://') ||\x0d\n        URLCanParse(referrerName)) {\x0d\n      return referrerName;\x0d\n    }\x0d\n\x0d\n    return undefined;\x0d\n  }\x0d\n\x0d\n  assert.fail('Unreachable code reached by ' + inspect(referrerName));\x0d\n}\x0d\n\x0d\n\x0d\n// Whether we have started executing any user-provided CJS code.\x0d\n// This is set right before we call the wrapped CJS code (not after\x2C\x0d\n// in case we are half-way in the execution when internals check this).\x0d\n// Used for internal assertions.\x0d\nlet _hasStartedUserCJSExecution = false;\x0d\n// Similar to _hasStartedUserCJSExecution but for ESM. This is set\x0d\n// right before ESM evaluation in the default ESM loader. We do not\x0d\n// update this during vm SourceTextModule execution because at that point\x0d\n// some user code must already have been run to execute code via vm\x0d\n// there is little value checking whether any user JS code is run anyway.\x0d\nlet _hasStartedUserESMExecution = false;\x0d\n\x0d\nmodule.exports = {\x0d\n  addBuiltinLibsToObject\x2C\x0d\n  getCjsConditions\x2C\x0d\n  initializeCjsConditions\x2C\x0d\n  loadBuiltinModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n  toRealPath\x2C\x0d\n  hasStartedUserCJSExecution() {\x0d\n    return _hasStartedUserCJSExecution;\x0d\n  }\x2C\x0d\n  setHasStartedUserCJSExecution() {\x0d\n    _hasStartedUserCJSExecution = true;\x0d\n  }\x2C\x0d\n  hasStartedUserESMExecution() {\x0d\n    return _hasStartedUserESMExecution;\x0d\n  }\x2C\x0d\n  setHasStartedUserESMExecution() {\x0d\n    _hasStartedUserESMExecution = true;\x0d\n  }\x2C\x0d\n};\x0d\n
code-source-info,0x125aa79e0b4,64,2023,2394,C0O2054C8O2054C13O2106C19O2106C24O2164C35O2277C48O2344C93O2369C140O2293C148O2291C155O2393,,
code-creation,JS,10,115124,0x125aa79efcc,299,Module._initPaths node:internal/modules/cjs/loader:1521:29,0x1d9b727caf8,~
code-source-info,0x125aa79efcc,63,50745,51730,C0O50769C9O50789C14O50793C22O50807C28O50807C33O50847C40O50867C45O50871C53O50883C59O50883C64O51082C70O51099C73O51104C81O51120C89O51104C99O51143C102O51148C110O51164C121O51148C127O51206C137O51212C151O51212C163O51253C167O51273C175O51307C183O51307C190O51273C195O51350C201O51384C209O51384C216O51350C221O51430C225O51451C232O51485C237O51514C243O51550C248O51514C256O51569C259O51485C265O51451C270O51597C272O51609C278O51673C283O51694C289O51694C293O51692C298O51729,,
code-creation,JS,10,115386,0x125aa79f3f4,834,resolve node:path:162:10,0x1d9b725e030,~
script-source,30,node:path,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  CHAR_UPPERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_UPPERCASE_Z\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_DOT\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x2C\x0d\n  CHAR_QUESTION_MARK\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst platformIsWin32 = (process.platform === 'win32');\x0d\n\x0d\nfunction isPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isPosixPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isWindowsDeviceRoot(code) {\x0d\n  return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\x0d\n         (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\x0d\n}\x0d\n\x0d\n// Resolves . and .. elements in a path with directory names\x0d\nfunction normalizeString(path\x2C allowAboveRoot\x2C separator\x2C isPathSeparator) {\x0d\n  let res = '';\x0d\n  let lastSegmentLength = 0;\x0d\n  let lastSlash = -1;\x0d\n  let dots = 0;\x0d\n  let code = 0;\x0d\n  for (let i = 0; i <= path.length; ++i) {\x0d\n    if (i < path.length)\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n    else if (isPathSeparator(code))\x0d\n      break;\x0d\n    else\x0d\n      code = CHAR_FORWARD_SLASH;\x0d\n\x0d\n    if (isPathSeparator(code)) {\x0d\n      if (lastSlash === i - 1 || dots === 1) {\x0d\n        // NOOP\x0d\n      } else if (dots === 2) {\x0d\n        if (res.length < 2 || lastSegmentLength !== 2 ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 1) !== CHAR_DOT ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 2) !== CHAR_DOT) {\x0d\n          if (res.length > 2) {\x0d\n            const lastSlashIndex = StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            if (lastSlashIndex === -1) {\x0d\n              res = '';\x0d\n              lastSegmentLength = 0;\x0d\n            } else {\x0d\n              res = StringPrototypeSlice(res\x2C 0\x2C lastSlashIndex);\x0d\n              lastSegmentLength =\x0d\n                res.length - 1 - StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            }\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          } else if (res.length !== 0) {\x0d\n            res = '';\x0d\n            lastSegmentLength = 0;\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          }\x0d\n        }\x0d\n        if (allowAboveRoot) {\x0d\n          res += res.length > 0 ? `${separator}..` : '..';\x0d\n          lastSegmentLength = 2;\x0d\n        }\x0d\n      } else {\x0d\n        if (res.length > 0)\x0d\n          res += `${separator}${StringPrototypeSlice(path\x2C lastSlash + 1\x2C i)}`;\x0d\n        else\x0d\n          res = StringPrototypeSlice(path\x2C lastSlash + 1\x2C i);\x0d\n        lastSegmentLength = i - lastSlash - 1;\x0d\n      }\x0d\n      lastSlash = i;\x0d\n      dots = 0;\x0d\n    } else if (code === CHAR_DOT && dots !== -1) {\x0d\n      ++dots;\x0d\n    } else {\x0d\n      dots = -1;\x0d\n    }\x0d\n  }\x0d\n  return res;\x0d\n}\x0d\n\x0d\nfunction formatExt(ext) {\x0d\n  return ext ? `${ext[0] === '.' ? '' : '.'}${ext}` : '';\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} sep\x0d\n * @param {{\x0d\n *  dir?: string;\x0d\n *  root?: string;\x0d\n *  base?: string;\x0d\n *  name?: string;\x0d\n *  ext?: string;\x0d\n *  }} pathObject\x0d\n * @returns {string}\x0d\n */\x0d\nfunction _format(sep\x2C pathObject) {\x0d\n  validateObject(pathObject\x2C 'pathObject');\x0d\n  const dir = pathObject.dir || pathObject.root;\x0d\n  const base = pathObject.base ||\x0d\n    `${pathObject.name || ''}${formatExt(pathObject.ext)}`;\x0d\n  if (!dir) {\x0d\n    return base;\x0d\n  }\x0d\n  return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\x0d\n}\x0d\n\x0d\nconst win32 = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedDevice = '';\x0d\n    let resolvedTail = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1; i--) {\x0d\n      let path;\x0d\n      if (i >= 0) {\x0d\n        path = args[i];\x0d\n        validateString(path\x2C `paths[${i}]`);\x0d\n\x0d\n        // Skip empty entries\x0d\n        if (path.length === 0) {\x0d\n          continue;\x0d\n        }\x0d\n      } else if (resolvedDevice.length === 0) {\x0d\n        path = process.cwd();\x0d\n      } else {\x0d\n        // Windows has the concept of drive-specific current working\x0d\n        // directories. If we've resolved a drive letter but not yet an\x0d\n        // absolute path\x2C get cwd for that drive\x2C or the process cwd if\x0d\n        // the drive cwd is not available. We're sure the device is not\x0d\n        // a UNC path at this points\x2C because UNC paths are always absolute.\x0d\n        path = process.env[`=${resolvedDevice}`] || process.cwd();\x0d\n\x0d\n        // Verify that a cwd was found and that it actually points\x0d\n        // to our drive. If not\x2C default to the drive's root.\x0d\n        if (path === undefined ||\x0d\n            (StringPrototypeToLowerCase(StringPrototypeSlice(path\x2C 0\x2C 2)) !==\x0d\n            StringPrototypeToLowerCase(resolvedDevice) &&\x0d\n            StringPrototypeCharCodeAt(path\x2C 2) === CHAR_BACKWARD_SLASH)) {\x0d\n          path = `${resolvedDevice}\\\\`;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      const len = path.length;\x0d\n      let rootEnd = 0;\x0d\n      let device = '';\x0d\n      let isAbsolute = false;\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n      // Try to match a root\x0d\n      if (len === 1) {\x0d\n        if (isPathSeparator(code)) {\x0d\n          // `path` contains just a path separator\x0d\n          rootEnd = 1;\x0d\n          isAbsolute = true;\x0d\n        }\x0d\n      } else if (isPathSeparator(code)) {\x0d\n        // Possible UNC root\x0d\n\x0d\n        // If we started with a separator\x2C we know we at least have an\x0d\n        // absolute path of some kind (UNC or otherwise)\x0d\n        isAbsolute = true;\x0d\n\x0d\n        if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n          // Matched double path separator at beginning\x0d\n          let j = 2;\x0d\n          let last = j;\x0d\n          // Match 1 or more non-path separators\x0d\n          while (j < len &&\x0d\n                 !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more path separators\x0d\n            while (j < len &&\x0d\n                   isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j < len && j !== last) {\x0d\n              // Matched!\x0d\n              last = j;\x0d\n              // Match 1 or more non-path separators\x0d\n              while (j < len &&\x0d\n                     !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n                j++;\x0d\n              }\x0d\n              if (j === len || j !== last) {\x0d\n                // We matched a UNC root\x0d\n                device =\x0d\n                  `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n                rootEnd = j;\x0d\n              }\x0d\n            }\x0d\n          }\x0d\n        } else {\x0d\n          rootEnd = 1;\x0d\n        }\x0d\n      } else if (isWindowsDeviceRoot(code) &&\x0d\n                  StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n        // Possible device root\x0d\n        device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n        rootEnd = 2;\x0d\n        if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n          // Treat separator following drive name as an absolute path\x0d\n          // indicator\x0d\n          isAbsolute = true;\x0d\n          rootEnd = 3;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (device.length > 0) {\x0d\n        if (resolvedDevice.length > 0) {\x0d\n          if (StringPrototypeToLowerCase(device) !==\x0d\n              StringPrototypeToLowerCase(resolvedDevice))\x0d\n            // This path points to another device so it is not applicable\x0d\n            continue;\x0d\n        } else {\x0d\n          resolvedDevice = device;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (resolvedAbsolute) {\x0d\n        if (resolvedDevice.length > 0)\x0d\n          break;\x0d\n      } else {\x0d\n        resolvedTail =\x0d\n          `${StringPrototypeSlice(path\x2C rootEnd)}\\\\${resolvedTail}`;\x0d\n        resolvedAbsolute = isAbsolute;\x0d\n        if (isAbsolute && resolvedDevice.length > 0) {\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C\x0d\n    // but handle relative paths to be safe (might happen when process.cwd()\x0d\n    // fails)\x0d\n\x0d\n    // Normalize the tail path\x0d\n    resolvedTail = normalizeString(resolvedTail\x2C !resolvedAbsolute\x2C '\\\\'\x2C\x0d\n                                   isPathSeparator);\x0d\n\x0d\n    return resolvedAbsolute ?\x0d\n      `${resolvedDevice}\\\\${resolvedTail}` :\x0d\n      `${resolvedDevice}${resolvedTail}` || '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = 0;\x0d\n    let device;\x0d\n    let isAbsolute = false;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    // Try to match a root\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a single char\x2C exit early to avoid\x0d\n      // unnecessary work\x0d\n      return isPosixPathSeparator(code) ? '\\\\' : path;\x0d\n    }\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      // If we started with a separator\x2C we know we at least have an absolute\x0d\n      // path of some kind (UNC or otherwise)\x0d\n      isAbsolute = true;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              // Return the normalized version of the UNC root since there\x0d\n              // is nothing left to process\x0d\n              return `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last)}\\\\`;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              device =\x0d\n                `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n              rootEnd = j;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      } else {\x0d\n        rootEnd = 1;\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n      rootEnd = 2;\x0d\n      if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        // Treat separator following drive name as an absolute path\x0d\n        // indicator\x0d\n        isAbsolute = true;\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let tail = rootEnd < len ?\x0d\n      normalizeString(StringPrototypeSlice(path\x2C rootEnd)\x2C\x0d\n                      !isAbsolute\x2C '\\\\'\x2C isPathSeparator) :\x0d\n      '';\x0d\n    if (tail.length === 0 && !isAbsolute)\x0d\n      tail = '.';\x0d\n    if (tail.length > 0 &&\x0d\n        isPathSeparator(StringPrototypeCharCodeAt(path\x2C len - 1)))\x0d\n      tail += '\\\\';\x0d\n    if (device === undefined) {\x0d\n      return isAbsolute ? `\\\\${tail}` : tail;\x0d\n    }\x0d\n    return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return false;\x0d\n\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n    return isPathSeparator(code) ||\x0d\n      // Possible device root\x0d\n      (len > 2 &&\x0d\n      isWindowsDeviceRoot(code) &&\x0d\n      StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n      isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)));\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    let joined;\x0d\n    let firstPart;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = firstPart = arg;\x0d\n        else\x0d\n          joined += `\\\\${arg}`;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n\x0d\n    // Make sure that the joined path doesn't start with two slashes\x2C because\x0d\n    // normalize() will mistake it for a UNC path then.\x0d\n    //\x0d\n    // This step is skipped when it is very clear that the user actually\x0d\n    // intended to point at a UNC path. This is assumed when the first\x0d\n    // non-empty string arguments starts with exactly two slashes followed by\x0d\n    // at least one more non-slash character.\x0d\n    //\x0d\n    // Note that for normalize() to treat a path as a UNC path it needs to\x0d\n    // have at least 2 components\x2C so we don't filter for that here.\x0d\n    // This means that the user can use join to construct UNC paths from\x0d\n    // a server name and a share name; for example:\x0d\n    //   path.join('//server'\x2C 'share') -> '\\\\\\\\server\\\\share\\\\')\x0d\n    let needsReplace = true;\x0d\n    let slashCount = 0;\x0d\n    if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 0))) {\x0d\n      ++slashCount;\x0d\n      const firstLen = firstPart.length;\x0d\n      if (firstLen > 1 &&\x0d\n          isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 1))) {\x0d\n        ++slashCount;\x0d\n        if (firstLen > 2) {\x0d\n          if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 2)))\x0d\n            ++slashCount;\x0d\n          else {\x0d\n            // We matched a UNC path in the first part\x0d\n            needsReplace = false;\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    if (needsReplace) {\x0d\n      // Find any more consecutive slashes we need to replace\x0d\n      while (slashCount < joined.length &&\x0d\n             isPathSeparator(StringPrototypeCharCodeAt(joined\x2C slashCount))) {\x0d\n        slashCount++;\x0d\n      }\x0d\n\x0d\n      // Replace the slashes if needed\x0d\n      if (slashCount >= 2)\x0d\n        joined = `\\\\${StringPrototypeSlice(joined\x2C slashCount)}`;\x0d\n    }\x0d\n\x0d\n    return win32.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * It will solve the relative path from `from` to `to`\x2C for instance\x0d\n   * from = 'C:\\\\orandea\\\\test\\\\aaa'\x0d\n   * to = 'C:\\\\orandea\\\\impl\\\\bbb'\x0d\n   * The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromOrig = win32.resolve(from);\x0d\n    const toOrig = win32.resolve(to);\x0d\n\x0d\n    if (fromOrig === toOrig)\x0d\n      return '';\x0d\n\x0d\n    from = StringPrototypeToLowerCase(fromOrig);\x0d\n    to = StringPrototypeToLowerCase(toOrig);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let fromStart = 0;\x0d\n    while (fromStart < from.length &&\x0d\n           StringPrototypeCharCodeAt(from\x2C fromStart) === CHAR_BACKWARD_SLASH) {\x0d\n      fromStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let fromEnd = from.length;\x0d\n    while (\x0d\n      fromEnd - 1 > fromStart &&\x0d\n      StringPrototypeCharCodeAt(from\x2C fromEnd - 1) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      fromEnd--;\x0d\n    }\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let toStart = 0;\x0d\n    while (toStart < to.length &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toStart) === CHAR_BACKWARD_SLASH) {\x0d\n      toStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let toEnd = to.length;\x0d\n    while (toEnd - 1 > toStart &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toEnd - 1) === CHAR_BACKWARD_SLASH) {\x0d\n      toEnd--;\x0d\n    }\x0d\n    const toLen = toEnd - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = fromLen < toLen ? fromLen : toLen;\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_BACKWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n\x0d\n    // We found a mismatch before the first common path separator was seen\x2C so\x0d\n    // return the original `to`.\x0d\n    if (i !== length) {\x0d\n      if (lastCommonSep === -1)\x0d\n        return toOrig;\x0d\n    } else {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 2) {\x0d\n          // We get here if `from` is the device root.\x0d\n          // For example: from='C:\\\\'; to='C:\\\\foo'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i);\x0d\n        }\x0d\n      }\x0d\n      if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 2) {\x0d\n          // We get here if `to` is the device root.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\x0d\n          lastCommonSep = 3;\x0d\n        }\x0d\n      }\x0d\n      if (lastCommonSep === -1)\x0d\n        lastCommonSep = 0;\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to` and\x0d\n    // `from`\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_BACKWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '\\\\..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    toStart += lastCommonSep;\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts\x0d\n    if (out.length > 0)\x0d\n      return `${out}${StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd)}`;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(toOrig\x2C toStart) === CHAR_BACKWARD_SLASH)\x0d\n      ++toStart;\x0d\n    return StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Note: this will *probably* throw somewhere.\x0d\n    if (typeof path !== 'string' || path.length === 0)\x0d\n      return path;\x0d\n\x0d\n    const resolvedPath = win32.resolve(path);\x0d\n\x0d\n    if (resolvedPath.length <= 2)\x0d\n      return path;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(resolvedPath\x2C 0) === CHAR_BACKWARD_SLASH) {\x0d\n      // Possible UNC root\x0d\n      if (StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_BACKWARD_SLASH) {\x0d\n        const code = StringPrototypeCharCodeAt(resolvedPath\x2C 2);\x0d\n        if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\x0d\n          // Matched non-long UNC root\x2C convert the path to a long UNC path\x0d\n          return `\\\\\\\\?\\\\UNC\\\\${StringPrototypeSlice(resolvedPath\x2C 2)}`;\x0d\n        }\x0d\n      }\x0d\n    } else if (\x0d\n      isWindowsDeviceRoot(StringPrototypeCharCodeAt(resolvedPath\x2C 0)) &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_COLON &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 2) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      // Matched device root\x2C convert the path to a long UNC path\x0d\n      return `\\\\\\\\?\\\\${resolvedPath}`;\x0d\n    }\x0d\n\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = -1;\x0d\n    let offset = 0;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a path separator\x2C exit early to avoid\x0d\n      // unnecessary work or a dot.\x0d\n      return isPathSeparator(code) ? path : '.';\x0d\n    }\x0d\n\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = offset = 1;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              return path;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n\x0d\n              // Offset by 1 to include the separator after the UNC root to\x0d\n              // treat it as a "normal root" on top of a (UNC) root\x0d\n              rootEnd = offset = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    // Possible device root\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      rootEnd =\x0d\n        len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)) ? 3 : 2;\x0d\n      offset = rootEnd;\x0d\n    }\x0d\n\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = len - 1; i >= offset; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1) {\x0d\n      if (rootEnd === -1)\x0d\n        return '.';\x0d\n\x0d\n      end = rootEnd;\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [suffix]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C suffix) {\x0d\n    if (suffix !== undefined)\x0d\n      validateString(suffix\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n    if (path.length >= 2 &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0)) &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      start = 2;\x0d\n    }\x0d\n\x0d\n    if (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\x0d\n      if (suffix === path)\x0d\n        return '';\x0d\n      let extIdx = suffix.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= start; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (isPathSeparator(code)) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(suffix\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n\x0d\n    if (path.length >= 2 &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0))) {\x0d\n      start = startPart = 2;\x0d\n    }\x0d\n\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '\\\\')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *  dir: string;\x0d\n   *  root: string;\x0d\n   *  base: string;\x0d\n   *  name: string;\x0d\n   *  ext: string;\x0d\n   *  }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n\x0d\n    const len = path.length;\x0d\n    let rootEnd = 0;\x0d\n    let code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      if (isPathSeparator(code)) {\x0d\n        // `path` contains just a path separator\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      ret.base = ret.name = path;\x0d\n      return ret;\x0d\n    }\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = 1;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              rootEnd = j;\x0d\n            } else if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              rootEnd = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      if (len <= 2) {\x0d\n        // `path` contains just a drive root\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      rootEnd = 2;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        if (len === 3) {\x0d\n          // `path` contains just a drive root\x2C exit early to avoid\x0d\n          // unnecessary work\x0d\n          ret.root = ret.dir = path;\x0d\n          return ret;\x0d\n        }\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n    if (rootEnd > 0)\x0d\n      ret.root = StringPrototypeSlice(path\x2C 0\x2C rootEnd);\x0d\n\x0d\n    let startDot = -1;\x0d\n    let startPart = rootEnd;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= rootEnd; --i) {\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n           startDot === end - 1 &&\x0d\n           startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C startPart\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // If the directory is the root\x2C use the entire root as the `dir` including\x0d\n    // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise\x2C strip out the\x0d\n    // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\x0d\n    if (startPart > 0 && startPart !== rootEnd)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else\x0d\n      ret.dir = ret.root;\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '\\\\'\x2C\x0d\n  delimiter: ';'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x2C\x0d\n};\x0d\n\x0d\nconst posixCwd = (() => {\x0d\n  if (platformIsWin32) {\x0d\n    // Converts Windows' backslash path separators to POSIX forward slashes\x0d\n    // and truncates any drive indicator\x0d\n    const regexp = /\\\\/g;\x0d\n    return () => {\x0d\n      const cwd = StringPrototypeReplace(process.cwd()\x2C regexp\x2C '/');\x0d\n      return StringPrototypeSlice(cwd\x2C StringPrototypeIndexOf(cwd\x2C '/'));\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // We're already on POSIX\x2C no need for any transformations\x0d\n  return () => process.cwd();\x0d\n})();\x0d\n\x0d\nconst posix = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedPath = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\x0d\n      const path = i >= 0 ? args[i] : posixCwd();\x0d\n      validateString(path\x2C `paths[${i}]`);\x0d\n\x0d\n      // Skip empty entries\x0d\n      if (path.length === 0) {\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      resolvedPath = `${path}/${resolvedPath}`;\x0d\n      resolvedAbsolute =\x0d\n        StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C but\x0d\n    // handle relative paths to be safe (might happen when process.cwd() fails)\x0d\n\x0d\n    // Normalize the path\x0d\n    resolvedPath = normalizeString(resolvedPath\x2C !resolvedAbsolute\x2C '/'\x2C\x0d\n                                   isPosixPathSeparator);\x0d\n\x0d\n    if (resolvedAbsolute) {\x0d\n      return `/${resolvedPath}`;\x0d\n    }\x0d\n    return resolvedPath.length > 0 ? resolvedPath : '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    const trailingSeparator =\x0d\n      StringPrototypeCharCodeAt(path\x2C path.length - 1) === CHAR_FORWARD_SLASH;\x0d\n\x0d\n    // Normalize the path\x0d\n    path = normalizeString(path\x2C !isAbsolute\x2C '/'\x2C isPosixPathSeparator);\x0d\n\x0d\n    if (path.length === 0) {\x0d\n      if (isAbsolute)\x0d\n        return '/';\x0d\n      return trailingSeparator ? './' : '.';\x0d\n    }\x0d\n    if (trailingSeparator)\x0d\n      path += '/';\x0d\n\x0d\n    return isAbsolute ? `/${path}` : path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    return path.length > 0 &&\x0d\n           StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n    let joined;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = arg;\x0d\n        else\x0d\n          joined += `/${arg}`;\x0d\n      }\x0d\n    }\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n    return posix.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim leading forward slashes.\x0d\n    from = posix.resolve(from);\x0d\n    to = posix.resolve(to);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromStart = 1;\x0d\n    const fromEnd = from.length;\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n    const toStart = 1;\x0d\n    const toLen = to.length - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = (fromLen < toLen ? fromLen : toLen);\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_FORWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n    if (i === length) {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) === CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='/foo/bar'; to='/foo/bar/baz'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 0) {\x0d\n          // We get here if `from` is the root\x0d\n          // For example: from='/'; to='/foo'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i);\x0d\n        }\x0d\n      } else if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='/foo/bar/baz'; to='/foo/bar'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 0) {\x0d\n          // We get here if `to` is the root.\x0d\n          // For example: from='/foo/bar'; to='/'\x0d\n          lastCommonSep = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to`\x0d\n    // and `from`.\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '/..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts.\x0d\n    return `${out}${StringPrototypeSlice(to\x2C toStart + lastCommonSep)}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Non-op on posix systems\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n    const hasRoot = StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = path.length - 1; i >= 1; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return hasRoot ? '/' : '.';\x0d\n    if (hasRoot && end === 1)\x0d\n      return '//';\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [suffix]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C suffix) {\x0d\n    if (suffix !== undefined)\x0d\n      validateString(suffix\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    if (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\x0d\n      if (suffix === path)\x0d\n        return '';\x0d\n      let extIdx = suffix.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= 0; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (code === CHAR_FORWARD_SLASH) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(suffix\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '/')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *   dir: string;\x0d\n   *   root: string;\x0d\n   *   base: string;\x0d\n   *   name: string;\x0d\n   *   ext: string;\x0d\n   *   }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let start;\x0d\n    if (isAbsolute) {\x0d\n      ret.root = '/';\x0d\n      start = 1;\x0d\n    } else {\x0d\n      start = 0;\x0d\n    }\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      const start = startPart === 0 && isAbsolute ? 1 : startPart;\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n          startDot === end - 1 &&\x0d\n          startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C start\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startPart > 0)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else if (isAbsolute)\x0d\n      ret.dir = '/';\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '/'\x2C\x0d\n  delimiter: ':'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x2C\x0d\n};\x0d\n\x0d\nposix.win32 = win32.win32 = win32;\x0d\nposix.posix = win32.posix = posix;\x0d\n\x0d\n// Legacy internal API\x2C docs-only deprecated: DEP0080\x0d\nwin32._makeLong = win32.toNamespacedPath;\x0d\nposix._makeLong = posix.toNamespacedPath;\x0d\n\x0d\nmodule.exports = platformIsWin32 ? win32 : posix;\x0d\n
code-source-info,0x125aa79f3f
code-creation,JS,10,117731,0x125aa7a2a1c,17,isPathSeparator node:path:52:25,0x1d9b725dc28,~
code-source-info,0x125aa7a2a1c,30,1794,1876,C0O1806C2O1822C4O1818C11O1853C13O1849C16O1873,,
code-creation,JS,10,117774,0x125aa7a2b1c,35,isWindowsDeviceRoot node:path:60:29,0x1d9b725ded0,~
code-source-info,0x125aa7a2b1c,30,1991,2136,C0O2003C2O2019C4O2016C11O2047C13O2044C20O2087C22O2084C29O2115C31O2112C34O2133,,
tick,0x7ff7b4b75447,117812,0,0x0,3,0x7ff7b3cc62d0,0x125aa79f025,0x125aa79a962,0x125aa79a78c,0x125aa79a621,0x125aa78346f,0x125aa781724,0x3151437ff27
code-creation,JS,10,117891,0x125aa7a2d4c,438,normalizeString node:path:66:25,0x1d9b725df28,~
code-source-info,0x125aa7a2d4c,30,2226,4212,C0O2292C3O2323C5O2345C8O2363C10O2380C12O2399C14O2412C18O2404C23O2445C27O2438C32O2460C37O2467C45O2517C51O2547C53O2571C58O2609C64O2641C66O2661C69O2655C76O2673C83O2713C85O2722C90O2748C97O2755C104O2780C111O2802C114O2837C118O2844C122O2802C130O2853C132O2849C140O2913C144O2920C148O2878C156O2925C161O2960C168O2967C173O3010C178O3010C184O3067C186O3086C191O3111C194O3136C198O3196C211O3202C217O3304C221O3311C228O3317C233O3315C237O3389C240O3417C242O3440C244O3476C250O3483C255O3505C258O3528C260O3564C263O3592C265O3615C267O3658C271O3702C277O3709C287O3718C302O3751C307O3818C313O3825C318O3841C320O3851C324O3863C329O3900C339O3863C357O3936C364O3979C374O3942C380O3997C382O4019C385O4031C389O4052C392O4074C396O4096C398O4109C400O4105C407O4126C412O4143C419O4172C422O2422C427O2386C435O4198C437O4209,,
code-creation,JS,11,118096,0x7ff73438ba40,5556,resolve node:path:162:10,0x1d9b725e030,^
code-source-info,0x7ff73438ba40,30,4971,9889,,,
code-creation,JS,11,118174,0x7ff7343849c0,100,next node:internal/per_context/primordials:336:9,0xa4fec31f28,^
script-source,6,node:internal/per_context/primordials,'use strict';\x0d\n\x0d\n/* eslint-disable node-core/prefer-primordials */\x0d\n\x0d\n// This file subclasses and stores the JS builtins that come from the VM\x0d\n// so that Node.js's builtin modules do not need to later look these up from\x0d\n// the global proxy\x2C which can be mutated by users.\x0d\n\x0d\n// Use of primordials have sometimes a dramatic impact on performance\x2C please\x0d\n// benchmark all changes made in performance-sensitive areas of the codebase.\x0d\n// See: https://github.com/nodejs/node/pull/38248\x0d\n\x0d\nconst {\x0d\n  defineProperty: ReflectDefineProperty\x2C\x0d\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ownKeys: ReflectOwnKeys\x2C\x0d\n} = Reflect;\x0d\n\x0d\n// `uncurryThis` is equivalent to `func => Function.prototype.call.bind(func)`.\x0d\n// It is using `bind.bind(call)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.call` after it may have been mutated by users.\x0d\nconst { apply\x2C bind\x2C call } = Function.prototype;\x0d\nconst uncurryThis = bind.bind(call);\x0d\nprimordials.uncurryThis = uncurryThis;\x0d\n\x0d\n// `applyBind` is equivalent to `func => Function.prototype.apply.bind(func)`.\x0d\n// It is using `bind.bind(apply)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.apply` after it may have been mutated by users.\x0d\nconst applyBind = bind.bind(apply);\x0d\nprimordials.applyBind = applyBind;\x0d\n\x0d\n// Methods that accept a variable number of arguments\x2C and thus it's useful to\x0d\n// also create `${prefix}${key}Apply`\x2C which uses `Function.prototype.apply`\x2C\x0d\n// instead of `Function.prototype.call`\x2C and thus doesn't require iterator\x0d\n// destructuring.\x0d\nconst varargsMethods = [\x0d\n  // 'ArrayPrototypeConcat' is omitted\x2C because it performs the spread\x0d\n  // on its own for arrays and array-likes with a truthy\x0d\n  // @@isConcatSpreadable symbol property.\x0d\n  'ArrayOf'\x2C\x0d\n  'ArrayPrototypePush'\x2C\x0d\n  'ArrayPrototypeUnshift'\x2C\x0d\n  // 'FunctionPrototypeCall' is omitted\x2C since there's 'ReflectApply'\x0d\n  // and 'FunctionPrototypeApply'.\x0d\n  'MathHypot'\x2C\x0d\n  'MathMax'\x2C\x0d\n  'MathMin'\x2C\x0d\n  'StringFromCharCode'\x2C\x0d\n  'StringFromCodePoint'\x2C\x0d\n  'StringPrototypeConcat'\x2C\x0d\n  'TypedArrayOf'\x2C\x0d\n];\x0d\n\x0d\nfunction getNewKey(key) {\x0d\n  return typeof key === 'symbol' ?\x0d\n    `Symbol${key.description[7].toUpperCase()}${key.description.slice(8)}` :\x0d\n    `${key[0].toUpperCase()}${key.slice(1)}`;\x0d\n}\x0d\n\x0d\nfunction copyAccessor(dest\x2C prefix\x2C key\x2C { enumerable\x2C get\x2C set }) {\x0d\n  ReflectDefineProperty(dest\x2C `${prefix}Get${key}`\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: uncurryThis(get)\x2C\x0d\n    enumerable\x2C\x0d\n  });\x0d\n  if (set !== undefined) {\x0d\n    ReflectDefineProperty(dest\x2C `${prefix}Set${key}`\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: uncurryThis(set)\x2C\x0d\n      enumerable\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamed(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          __proto__: null\x2C\x0d\n          // `src` is bound as the `this` so that the static `this` points\x0d\n          // to the object it was defined on\x2C\x0d\n          // e.g.: `ArrayOfApply` gets a `this` of `Array`:\x0d\n          value: applyBind(desc.value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamedBound(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = value.bind(src);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          __proto__: null\x2C\x0d\n          value: applyBind(value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPrototype(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = uncurryThis(value);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          __proto__: null\x2C\x0d\n          value: applyBind(value)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Create copies of configurable value properties of the global object\x0d\n[\x0d\n  'Proxy'\x2C\x0d\n  'globalThis'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  primordials[name] = globalThis[name];\x0d\n});\x0d\n\x0d\n// Create copies of URI handling functions\x0d\n[\x0d\n  decodeURI\x2C\x0d\n  decodeURIComponent\x2C\x0d\n  encodeURI\x2C\x0d\n  encodeURIComponent\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of legacy functions\x0d\n[\x0d\n  escape\x2C\x0d\n  eval\x2C\x0d\n  unescape\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of the namespace objects\x0d\n[\x0d\n  'Atomics'\x2C\x0d\n  'JSON'\x2C\x0d\n  'Math'\x2C\x0d\n  'Proxy'\x2C\x0d\n  'Reflect'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  copyPropsRenamed(globalThis[name]\x2C primordials\x2C name);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects\x0d\n[\x0d\n  'AggregateError'\x2C\x0d\n  'Array'\x2C\x0d\n  'ArrayBuffer'\x2C\x0d\n  'BigInt'\x2C\x0d\n  'BigInt64Array'\x2C\x0d\n  'BigUint64Array'\x2C\x0d\n  'Boolean'\x2C\x0d\n  'DataView'\x2C\x0d\n  'Date'\x2C\x0d\n  'Error'\x2C\x0d\n  'EvalError'\x2C\x0d\n  'FinalizationRegistry'\x2C\x0d\n  'Float32Array'\x2C\x0d\n  'Float64Array'\x2C\x0d\n  'Function'\x2C\x0d\n  'Int16Array'\x2C\x0d\n  'Int32Array'\x2C\x0d\n  'Int8Array'\x2C\x0d\n  'Map'\x2C\x0d\n  'Number'\x2C\x0d\n  'Object'\x2C\x0d\n  'RangeError'\x2C\x0d\n  'ReferenceError'\x2C\x0d\n  'RegExp'\x2C\x0d\n  'Set'\x2C\x0d\n  'String'\x2C\x0d\n  'Symbol'\x2C\x0d\n  'SyntaxError'\x2C\x0d\n  'TypeError'\x2C\x0d\n  'URIError'\x2C\x0d\n  'Uint16Array'\x2C\x0d\n  'Uint32Array'\x2C\x0d\n  'Uint8Array'\x2C\x0d\n  'Uint8ClampedArray'\x2C\x0d\n  'WeakMap'\x2C\x0d\n  'WeakRef'\x2C\x0d\n  'WeakSet'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = globalThis[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamed(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Define Symbol.dispose and Symbol.asyncDispose\x0d\n// Until these are defined by the environment.\x0d\n// TODO(MoLow): Remove this polyfill once Symbol.dispose and Symbol.asyncDispose are available in V8.\x0d\nprimordials.SymbolDispose ??= primordials.SymbolFor('nodejs.dispose');\x0d\nprimordials.SymbolAsyncDispose ??= primordials.SymbolFor('nodejs.asyncDispose');\x0d\n\x0d\n// Create copies of intrinsic objects that require a valid `this` to call\x0d\n// static methods.\x0d\n// Refs: https://www.ecma-international.org/ecma-262/#sec-promise.all\x0d\n[\x0d\n  'Promise'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = globalThis[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamedBound(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of abstract intrinsic objects that are not directly exposed\x0d\n// on the global object.\x0d\n// Refs: https://tc39.es/ecma262/#sec-%typedarray%-intrinsic-object\x0d\n[\x0d\n  { name: 'TypedArray'\x2C original: Reflect.getPrototypeOf(Uint8Array) }\x2C\x0d\n  { name: 'ArrayIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(Array.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n  { name: 'StringIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(String.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n].forEach(({ name\x2C original }) => {\x0d\n  primordials[name] = original;\x0d\n  // The static %TypedArray% methods require a valid `this`\x2C but can't be bound\x2C\x0d\n  // as they need a subclass constructor as the receiver:\x0d\n  copyPrototype(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\nprimordials.IteratorPrototype = Reflect.getPrototypeOf(primordials.ArrayIteratorPrototype);\x0d\n\x0d\n/* eslint-enable node-core/prefer-primordials */\x0d\n\x0d\nconst {\x0d\n  Array: ArrayConstructor\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  FinalizationRegistry\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Map\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  ReflectSet\x2C\x0d\n  ReflectGet\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototype\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeGetDotAll\x2C\x0d\n  RegExpPrototypeGetFlags\x2C\x0d\n  RegExpPrototypeGetGlobal\x2C\x0d\n  RegExpPrototypeGetHasIndices\x2C\x0d\n  RegExpPrototypeGetIgnoreCase\x2C\x0d\n  RegExpPrototypeGetMultiline\x2C\x0d\n  RegExpPrototypeGetSource\x2C\x0d\n  RegExpPrototypeGetSticky\x2C\x0d\n  RegExpPrototypeGetUnicode\x2C\x0d\n  Set\x2C\x0d\n  SymbolIterator\x2C\x0d\n  SymbolMatch\x2C\x0d\n  SymbolMatchAll\x2C\x0d\n  SymbolReplace\x2C\x0d\n  SymbolSearch\x2C\x0d\n  SymbolSpecies\x2C\x0d\n  SymbolSplit\x2C\x0d\n  WeakMap\x2C\x0d\n  WeakRef\x2C\x0d\n  WeakSet\x2C\x0d\n} = primordials;\x0d\n\x0d\n\x0d\n/**\x0d\n * Creates a class that can be safely iterated over.\x0d\n *\x0d\n * Because these functions are used by `makeSafe`\x2C which is exposed on the\x0d\n * `primordials` object\x2C it's important to use const references to the\x0d\n * primordials that they use.\x0d\n * @template {Iterable} T\x0d\n * @template {*} TReturn\x0d\n * @template {*} TNext\x0d\n * @param {(self: T) => IterableIterator<T>} factory\x0d\n * @param {(...args: [] | [TNext]) => IteratorResult<T\x2C TReturn>} next\x0d\n * @returns {Iterator<T\x2C TReturn\x2C TNext>}\x0d\n */\x0d\nconst createSafeIterator = (factory\x2C next) => {\x0d\n  class SafeIterator {\x0d\n    constructor(iterable) {\x0d\n      this._iterator = factory(iterable);\x0d\n    }\x0d\n    next() {\x0d\n      return next(this._iterator);\x0d\n    }\x0d\n    [SymbolIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x0d\n  ObjectSetPrototypeOf(SafeIterator.prototype\x2C null);\x0d\n  ObjectFreeze(SafeIterator.prototype);\x0d\n  ObjectFreeze(SafeIterator);\x0d\n  return SafeIterator;\x0d\n};\x0d\n\x0d\nprimordials.SafeArrayIterator = createSafeIterator(\x0d\n  primordials.ArrayPrototypeSymbolIterator\x2C\x0d\n  primordials.ArrayIteratorPrototypeNext\x2C\x0d\n);\x0d\nprimordials.SafeStringIterator = createSafeIterator(\x0d\n  primordials.StringPrototypeSymbolIterator\x2C\x0d\n  primordials.StringIteratorPrototypeNext\x2C\x0d\n);\x0d\n\x0d\nconst copyProps = (src\x2C dest) => {\x0d\n  ArrayPrototypeForEach(ReflectOwnKeys(src)\x2C (key) => {\x0d\n    if (!ReflectGetOwnPropertyDescriptor(dest\x2C key)) {\x0d\n      ReflectDefineProperty(\x0d\n        dest\x2C\x0d\n        key\x2C\x0d\n        { __proto__: null\x2C ...ReflectGetOwnPropertyDescriptor(src\x2C key) });\x0d\n    }\x0d\n  });\x0d\n};\x0d\n\x0d\n/**\x0d\n * @type {typeof primordials.makeSafe}\x0d\n */\x0d\nconst makeSafe = (unsafe\x2C safe) => {\x0d\n  if (SymbolIterator in unsafe.prototype) {\x0d\n    const dummy = new unsafe();\x0d\n    let next; // We can reuse the same `next` method.\x0d\n\x0d\n    ArrayPrototypeForEach(ReflectOwnKeys(unsafe.prototype)\x2C (key) => {\x0d\n      if (!ReflectGetOwnPropertyDescriptor(safe.prototype\x2C key)) {\x0d\n        const desc = ReflectGetOwnPropertyDescriptor(unsafe.prototype\x2C key);\x0d\n        if (\x0d\n          typeof desc.value === 'function' &&\x0d\n          desc.value.length === 0 &&\x0d\n          SymbolIterator in (FunctionPrototypeCall(desc.value\x2C dummy) ?? {})\x0d\n        ) {\x0d\n          const createIterator = uncurryThis(desc.value);\x0d\n          next ??= uncurryThis(createIterator(dummy).next);\x0d\n          const SafeIterator = createSafeIterator(createIterator\x2C next);\x0d\n          desc.value = function() {\x0d\n            return new SafeIterator(this);\x0d\n          };\x0d\n        }\x0d\n        ReflectDefineProperty(safe.prototype\x2C key\x2C { __proto__: null\x2C ...desc });\x0d\n      }\x0d\n    });\x0d\n  } else {\x0d\n    copyProps(unsafe.prototype\x2C safe.prototype);\x0d\n  }\x0d\n  copyProps(unsafe\x2C safe);\x0d\n\x0d\n  ObjectSetPrototypeOf(safe.prototype\x2C null);\x0d\n  ObjectFreeze(safe.prototype);\x0d\n  ObjectFreeze(safe);\x0d\n  return safe;\x0d\n};\x0d\nprimordials.makeSafe = makeSafe;\x0d\n\x0d\n// Subclass the constructors because we need to use their prototype\x0d\n// methods later.\x0d\n// Defining the `constructor` is necessary here to avoid the default\x0d\n// constructor which uses the user-mutable `%ArrayIteratorPrototype%.next`.\x0d\nprimordials.SafeMap = makeSafe(\x0d\n  Map\x2C\x0d\n  class SafeMap extends Map {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x2C\x0d\n);\x0d\nprimordials.SafeWeakMap = makeSafe(\x0d\n  WeakMap\x2C\x0d\n  class SafeWeakMap extends WeakMap {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x2C\x0d\n);\x0d\n\x0d\nprimordials.SafeSet = makeSafe(\x0d\n  Set\x2C\x0d\n  class SafeSet extends Set {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x2C\x0d\n);\x0d\nprimordials.SafeWeakSet = makeSafe(\x0d\n  WeakSet\x2C\x0d\n  class SafeWeakSet extends WeakSet {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x2C\x0d\n);\x0d\n\x0d\nprimordials.SafeFinalizationRegistry = makeSafe(\x0d\n  FinalizationRegistry\x2C\x0d\n  class SafeFinalizationRegistry extends FinalizationRegistry {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(cleanupCallback) { super(cleanupCallback); }\x0d\n  }\x2C\x0d\n);\x0d\nprimordials.SafeWeakRef = makeSafe(\x0d\n  WeakRef\x2C\x0d\n  class SafeWeakRef extends WeakRef {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(target) { super(target); }\x0d\n  }\x2C\x0d\n);\x0d\n\x0d\nconst SafePromise = makeSafe(\x0d\n  Promise\x2C\x0d\n  class SafePromise extends Promise {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(executor) { super(executor); }\x0d\n  }\x2C\x0d\n);\x0d\n\x0d\n/**\x0d\n * Attaches a callback that is invoked when the Promise is settled (fulfilled or\x0d\n * rejected). The resolved value cannot be modified from the callback.\x0d\n * Prefer using async functions when possible.\x0d\n * @param {Promise<any>} thisPromise\x0d\n * @param {() => void) | undefined | null} onFinally The callback to execute\x0d\n *        when the Promise is settled (fulfilled or rejected).\x0d\n * @returns {Promise} A Promise for the completion of the callback.\x0d\n */\x0d\nprimordials.SafePromisePrototypeFinally = (thisPromise\x2C onFinally) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    new SafePromise((a\x2C b) => PromisePrototypeThen(thisPromise\x2C a\x2C b))\x0d\n      .finally(onFinally)\x0d\n      .then(a\x2C b)\x2C\x0d\n  );\x0d\n\x0d\nprimordials.AsyncIteratorPrototype =\x0d\n  primordials.ReflectGetPrototypeOf(\x0d\n    primordials.ReflectGetPrototypeOf(\x0d\n      async function* () {}).prototype);\x0d\n\x0d\nconst arrayToSafePromiseIterable = (promises\x2C mapFn) =>\x0d\n  new primordials.SafeArrayIterator(\x0d\n    ArrayPrototypeMap(\x0d\n      promises\x2C\x0d\n      (promise\x2C i) =>\x0d\n        new SafePromise((a\x2C b) => PromisePrototypeThen(mapFn == null ? promise : mapFn(promise\x2C i)\x2C a\x2C b))\x2C\x0d\n    )\x2C\x0d\n  );\x0d\n\x0d\n/**\x0d\n * @template T\x2CU\x0d\n * @param {Array<T | PromiseLike<T>>} promises\x0d\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\x0d\n * @returns {Promise<Awaited<U>[]>}\x0d\n */\x0d\nprimordials.SafePromiseAll = (promises\x2C mapFn) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    SafePromise.all(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\x0d\n  );\x0d\n\x0d\n/**\x0d\n * Should only be used for internal functions\x2C this would produce similar\x0d\n * results as `Promise.all` but without prototype pollution\x2C and the return\x0d\n * value is not a genuine Array but an array-like object.\x0d\n * @template T\x2CU\x0d\n * @param {ArrayLike<T | PromiseLike<T>>} promises\x0d\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\x0d\n * @returns {Promise<ArrayLike<Awaited<U>>>}\x0d\n */\x0d\nprimordials.SafePromiseAllReturnArrayLike = (promises\x2C mapFn) =>\x0d\n  new Promise((resolve\x2C reject) => {\x0d\n    const { length } = promises;\x0d\n\x0d\n    const returnVal = ArrayConstructor(length);\x0d\n    ObjectSetPrototypeOf(returnVal\x2C null);\x0d\n    if (length === 0) resolve(returnVal);\x0d\n\x0d\n    let pendingPromises = length;\x0d\n    for (let i = 0; i < length; i++) {\x0d\n      const promise = mapFn != null ? mapFn(promises[i]\x2C i) : promises[i];\x0d\n      PromisePrototypeThen(PromiseResolve(promise)\x2C (result) => {\x0d\n        returnVal[i] = result;\x0d\n        if (--pendingPromises === 0) resolve(returnVal);\x0d\n      }\x2C reject);\x0d\n    }\x0d\n  });\x0d\n\x0d\n/**\x0d\n * Should only be used when we only care about waiting for all the promises to\x0d\n * resolve\x2C not what value they resolve to.\x0d\n * @template T\x2CU\x0d\n * @param {ArrayLike<T | PromiseLike<T>>} promises\x0d\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\x0d\n * @returns {Promise<void>}\x0d\n */\x0d\nprimordials.SafePromiseAllReturnVoid = (promises\x2C mapFn) =>\x0d\n  new Promise((resolve\x2C reject) => {\x0d\n    let pendingPromises = promises.length;\x0d\n    if (pendingPromises === 0) resolve();\x0d\n    const onFulfilled = () => {\x0d\n      if (--pendingPromises === 0) {\x0d\n        resolve();\x0d\n      }\x0d\n    };\x0d\n    for (let i = 0; i < promises.length; i++) {\x0d\n      const promise = mapFn != null ? mapFn(promises[i]\x2C i) : promises[i];\x0d\n      PromisePrototypeThen(PromiseResolve(promise)\x2C onFulfilled\x2C reject);\x0d\n    }\x0d\n  });\x0d\n\x0d\n/**\x0d\n * @template T\x2CU\x0d\n * @param {Array<T|PromiseLike<T>>} promises\x0d\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\x0d\n * @returns {Promise<PromiseSettledResult<any>[]>}\x0d\n */\x0d\nprimordials.SafePromiseAllSettled = (promises\x2C mapFn) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    SafePromise.allSettled(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\x0d\n  );\x0d\n\x0d\n/**\x0d\n * Should only be used when we only care about waiting for all the promises to\x0d\n * settle\x2C not what value they resolve or reject to.\x0d\n * @template T\x2CU\x0d\n * @param {ArrayLike<T|PromiseLike<T>>} promises\x0d\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\x0d\n * @returns {Promise<void>}\x0d\n */\x0d\nprimordials.SafePromiseAllSettledReturnVoid = (promises\x2C mapFn) => new Promise((resolve) => {\x0d\n  let pendingPromises = promises.length;\x0d\n  if (pendingPromises === 0) resolve();\x0d\n  const onSettle = () => {\x0d\n    if (--pendingPromises === 0) resolve();\x0d\n  };\x0d\n  for (let i = 0; i < promises.length; i++) {\x0d\n    const promise = mapFn != null ? mapFn(promises[i]\x2C i) : promises[i];\x0d\n    PromisePrototypeThen(PromiseResolve(promise)\x2C onSettle\x2C onSettle);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @template T\x2CU\x0d\n * @param {Array<T|PromiseLike<T>>} promises\x0d\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\x0d\n * @returns {Promise<Awaited<U>>}\x0d\n */\x0d\nprimordials.SafePromiseAny = (promises\x2C mapFn) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    SafePromise.any(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\x0d\n  );\x0d\n\x0d\n/**\x0d\n * @template T\x2CU\x0d\n * @param {Array<T|PromiseLike<T>>} promises\x0d\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\x0d\n * @returns {Promise<Awaited<U>>}\x0d\n */\x0d\nprimordials.SafePromiseRace = (promises\x2C mapFn) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    SafePromise.race(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\x0d\n  );\x0d\n\x0d\n\x0d\nconst {\x0d\n  exec: OriginalRegExpPrototypeExec\x2C\x0d\n  [SymbolMatch]: OriginalRegExpPrototypeSymbolMatch\x2C\x0d\n  [SymbolMatchAll]: OriginalRegExpPrototypeSymbolMatchAll\x2C\x0d\n  [SymbolReplace]: OriginalRegExpPrototypeSymbolReplace\x2C\x0d\n  [SymbolSearch]: OriginalRegExpPrototypeSymbolSearch\x2C\x0d\n  [SymbolSplit]: OriginalRegExpPrototypeSymbolSplit\x2C\x0d\n} = RegExpPrototype;\x0d\n\x0d\nclass RegExpLikeForStringSplitting {\x0d\n  #regex;\x0d\n  constructor() {\x0d\n    this.#regex = ReflectConstruct(RegExp\x2C arguments);\x0d\n  }\x0d\n\x0d\n  get lastIndex() {\x0d\n    return ReflectGet(this.#regex\x2C 'lastIndex');\x0d\n  }\x0d\n  set lastIndex(value) {\x0d\n    ReflectSet(this.#regex\x2C 'lastIndex'\x2C value);\x0d\n  }\x0d\n\x0d\n  exec() {\x0d\n    return ReflectApply(OriginalRegExpPrototypeExec\x2C this.#regex\x2C arguments);\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(RegExpLikeForStringSplitting.prototype\x2C null);\x0d\n\x0d\n/**\x0d\n * @param {RegExp} pattern\x0d\n * @returns {RegExp}\x0d\n */\x0d\nprimordials.hardenRegExp = function hardenRegExp(pattern) {\x0d\n  ObjectDefineProperties(pattern\x2C {\x0d\n    [SymbolMatch]: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: OriginalRegExpPrototypeSymbolMatch\x2C\x0d\n    }\x2C\x0d\n    [SymbolMatchAll]: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: OriginalRegExpPrototypeSymbolMatchAll\x2C\x0d\n    }\x2C\x0d\n    [SymbolReplace]: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: OriginalRegExpPrototypeSymbolReplace\x2C\x0d\n    }\x2C\x0d\n    [SymbolSearch]: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: OriginalRegExpPrototypeSymbolSearch\x2C\x0d\n    }\x2C\x0d\n    [SymbolSplit]: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: OriginalRegExpPrototypeSymbolSplit\x2C\x0d\n    }\x2C\x0d\n    constructor: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: {\x0d\n        [SymbolSpecies]: RegExpLikeForStringSplitting\x2C\x0d\n      }\x2C\x0d\n    }\x2C\x0d\n    dotAll: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetDotAll(pattern)\x2C\x0d\n    }\x2C\x0d\n    exec: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: OriginalRegExpPrototypeExec\x2C\x0d\n    }\x2C\x0d\n    global: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetGlobal(pattern)\x2C\x0d\n    }\x2C\x0d\n    hasIndices: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetHasIndices(pattern)\x2C\x0d\n    }\x2C\x0d\n    ignoreCase: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetIgnoreCase(pattern)\x2C\x0d\n    }\x2C\x0d\n    multiline: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetMultiline(pattern)\x2C\x0d\n    }\x2C\x0d\n    source: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetSource(pattern)\x2C\x0d\n    }\x2C\x0d\n    sticky: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetSticky(pattern)\x2C\x0d\n    }\x2C\x0d\n    unicode: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetUnicode(pattern)\x2C\x0d\n    }\x2C\x0d\n  });\x0d\n  ObjectDefineProperty(pattern\x2C 'flags'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    value: RegExpPrototypeGetFlags(pattern)\x2C\x0d\n  });\x0d\n  return pattern;\x0d\n};\x0d\n\x0d\n\x0d\n/**\x0d\n * @param {string} str\x0d\n * @param {RegExp} regexp\x0d\n * @returns {number}\x0d\n */\x0d\nprimordials.SafeStringPrototypeSearch = (str\x2C regexp) => {\x0d\n  regexp.lastIndex = 0;\x0d\n  const match = RegExpPrototypeExec(regexp\x2C str);\x0d\n  return match ? match.index : -1;\x0d\n};\x0d\n\x0d\nObjectSetPrototypeOf(primordials\x2C null);\x0d\nObjectFreeze(primordials);\x0d\n
code-source-info,0x7ff7343849c0,6,9927,9974,,,
code-creation,JS,11,119224,0x7ff734384a80,268,SafeSet node:internal/per_context/primordials:427:16,0xa4fec32dc8,^
code-source-info,0x7ff734384a80,6,12743,12760,,,
code-creation,JS,11,119244,0x7ff734384bc0,192,isPathSeparator node:path:52:25,0x1d9b725dc28,^
code-source-info,0x7ff734384bc0,30,1794,1876,,,
code-creation,JS,11,119283,0x7ff73438d040,2544,normalizeString node:path:66:25,0x1d9b725df28,^
code-source-info,0x7ff73438d040,30,2226,4212,,,
code-creation,JS,11,119304,0x7ff734384cc0,260, node:internal/validators:160:40,0x1d9b7243170,^
code-source-info,0x7ff734384cc0,15,4529,4644,,,
code-creation,JS,11,119326,0x7ff734384e00,356,isWindowsDeviceRoot node:path:60:29,0x1d9b725ded0,^
code-source-info,0x7ff734384e00,30,1991,2136,,,
code-creation,JS,10,119388,0x125aa7a5034,91,initializeESMLoader node:internal/process/pre_execution:696:29,0x1d9b727f840,~
code-source-info,0x125aa7a5034,67,22956,23526,C0O23008C6O23008C11O22990C16O23050C20O23221C28O23225C34O23344C40O23344C45O23292C50O23300C55O23318C60O23391C66O23391C71O23411C73O23421C77O23436C79O23456C83O23481C85O23500C90O23525,,
code-creation,JS,10,119460,0x125aa7a51a4,50,initializeESM node:internal/modules/esm/utils:241:23,0x1d9b727e518,~
script-source,66,node:internal/modules/esm/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  SafeSet\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  ObjectFreeze\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  privateSymbols: {\x0d\n    host_defined_option_symbol\x2C\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\nconst {\x0d\n  vm_dynamic_import_default_internal\x2C\x0d\n  vm_dynamic_import_main_context_default\x2C\x0d\n  vm_dynamic_import_missing_flag\x2C\x0d\n  vm_dynamic_import_no_callback\x2C\x0d\n} = internalBinding('symbols');\x0d\n\x0d\nconst {\x0d\n  ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING_FLAG\x2C\x0d\n  ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst {\x0d\n  loadPreloadModules\x2C\x0d\n  initializeFrozenIntrinsics\x2C\x0d\n} = require('internal/process/pre_execution');\x0d\nconst {\x0d\n  emitExperimentalWarning\x2C\x0d\n  getCWDURL\x2C\x0d\n  getLazy\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  setImportModuleDynamicallyCallback\x2C\x0d\n  setInitializeImportMetaObjectCallback\x2C\x0d\n} = internalBinding('module_wrap');\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  normalizeReferrerURL\x2C\x0d\n} = require('internal/modules/helpers');\x0d\n\x0d\nlet defaultConditions;\x0d\n/**\x0d\n * Returns the default conditions for ES module loading.\x0d\n */\x0d\nfunction getDefaultConditions() {\x0d\n  assert(defaultConditions !== undefined);\x0d\n  return defaultConditions;\x0d\n}\x0d\n\x0d\n/** @type {Set<string>} */\x0d\nlet defaultConditionsSet;\x0d\n/**\x0d\n * Returns the default conditions for ES module loading\x2C as a Set.\x0d\n */\x0d\nfunction getDefaultConditionsSet() {\x0d\n  assert(defaultConditionsSet !== undefined);\x0d\n  return defaultConditionsSet;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Initializes the default conditions for ESM module loading.\x0d\n * This function is called during pre-execution\x2C before any user code is run.\x0d\n */\x0d\nfunction initializeDefaultConditions() {\x0d\n  const userConditions = getOptionValue('--conditions');\x0d\n  const noAddons = getOptionValue('--no-addons');\x0d\n  const addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\n  defaultConditions = ObjectFreeze([\x0d\n    'node'\x2C\x0d\n    'import'\x2C\x0d\n    ...addonConditions\x2C\x0d\n    ...userConditions\x2C\x0d\n  ]);\x0d\n  defaultConditionsSet = new SafeSet(defaultConditions);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string[]} [conditions]\x0d\n * @returns {Set<string>}\x0d\n */\x0d\nfunction getConditionsSet(conditions) {\x0d\n  if (conditions !== undefined && conditions !== getDefaultConditions()) {\x0d\n    if (!ArrayIsArray(conditions)) {\x0d\n      throw new ERR_INVALID_ARG_VALUE('conditions'\x2C conditions\x2C\x0d\n                                      'expected an array');\x0d\n    }\x0d\n    return new SafeSet(conditions);\x0d\n  }\x0d\n  return getDefaultConditionsSet();\x0d\n}\x0d\n\x0d\n/**\x0d\n * @callback ImportModuleDynamicallyCallback\x0d\n * @param {string} specifier\x0d\n * @param {ModuleWrap|ContextifyScript|Function|vm.Module} callbackReferrer\x0d\n * @param {Record<string\x2C string>} attributes\x0d\n * @returns { Promise<void> }\x0d\n */\x0d\n\x0d\n/**\x0d\n * @callback InitializeImportMetaCallback\x0d\n * @param {object} meta\x0d\n * @param {ModuleWrap|ContextifyScript|Function|vm.Module} callbackReferrer\x0d\n */\x0d\n\x0d\n/**\x0d\n * @typedef {{\x0d\n *   callbackReferrer: ModuleWrap|ContextifyScript|Function|vm.Module\x0d\n *   initializeImportMeta? : InitializeImportMetaCallback\x2C\x0d\n *   importModuleDynamically? : ImportModuleDynamicallyCallback\x0d\n * }} ModuleRegistry\x0d\n */\x0d\n\x0d\n/**\x0d\n * @type {WeakMap<symbol\x2C ModuleRegistry>}\x0d\n */\x0d\nconst moduleRegistries = new SafeWeakMap();\x0d\n\x0d\n/**\x0d\n * @typedef {ContextifyScript|Function|ModuleWrap|ContextifiedObject} Referrer\x0d\n * A referrer can be a Script Record\x2C a Cyclic Module Record\x2C or a Realm Record\x0d\n * as defined in https://tc39.es/ecma262/#sec-HostLoadImportedModule.\x0d\n *\x0d\n * In Node.js\x2C a referrer is represented by a wrapper object of these records.\x0d\n * A referrer object has a field |host_defined_option_symbol| initialized with\x0d\n * a symbol.\x0d\n */\x0d\n\x0d\n/**\x0d\n * V8 would make sure that as long as import() can still be initiated from\x0d\n * the referrer\x2C the symbol referenced by |host_defined_option_symbol| should\x0d\n * be alive\x2C which in term would keep the settings object alive through the\x0d\n * WeakMap\x2C and in turn that keeps the referrer object alive\x2C which would be\x0d\n * passed into the callbacks.\x0d\n * The reference goes like this:\x0d\n * [v8::internal::Script] (via host defined options) ----1--> [idSymbol]\x0d\n * [callbackReferrer] (via host_defined_option_symbol) ------2------^  |\x0d\n *                                 ^----------3---- (via WeakMap)------\x0d\n * 1+3 makes sure that as long as import() can still be initiated\x2C the\x0d\n * referrer wrap is still around and can be passed into the callbacks.\x0d\n * 2 is only there so that we can get the id symbol to configure the\x0d\n * weak map.\x0d\n * @param {Referrer} referrer The referrer to\x0d\n *   get the id symbol from. This is different from callbackReferrer which\x0d\n *   could be set by the caller.\x0d\n * @param {ModuleRegistry} registry\x0d\n */\x0d\nfunction registerModule(referrer\x2C registry) {\x0d\n  const idSymbol = referrer[host_defined_option_symbol];\x0d\n  if (idSymbol === vm_dynamic_import_no_callback ||\x0d\n      idSymbol === vm_dynamic_import_missing_flag ||\x0d\n      idSymbol === vm_dynamic_import_main_context_default ||\x0d\n      idSymbol === vm_dynamic_import_default_internal) {\x0d\n    // The referrer is compiled without custom callbacks\x2C so there is\x0d\n    // no registry to hold on to. We'll throw\x0d\n    // ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING when a callback is\x0d\n    // needed.\x0d\n    return;\x0d\n  }\x0d\n  // To prevent it from being GC'ed.\x0d\n  registry.callbackReferrer ??= referrer;\x0d\n  moduleRegistries.set(idSymbol\x2C registry);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Defines the `import.meta` object for a given module.\x0d\n * @param {symbol} symbol - Reference to the module.\x0d\n * @param {Record<string\x2C string | Function>} meta - The import.meta object to initialize.\x0d\n */\x0d\nfunction initializeImportMetaObject(symbol\x2C meta) {\x0d\n  if (moduleRegistries.has(symbol)) {\x0d\n    const { initializeImportMeta\x2C callbackReferrer } = moduleRegistries.get(symbol);\x0d\n    if (initializeImportMeta !== undefined) {\x0d\n      meta = initializeImportMeta(meta\x2C callbackReferrer);\x0d\n    }\x0d\n  }\x0d\n}\x0d\nconst getCascadedLoader = getLazy(\x0d\n  () => require('internal/process/esm_loader').esmLoader\x2C\x0d\n);\x0d\n\x0d\n/**\x0d\n * Proxy the dynamic import to the default loader.\x0d\n * @param {string} specifier - The module specifier string.\x0d\n * @param {Record<string\x2C string>} attributes - The import attributes object.\x0d\n * @param {string|null|undefined} referrerName - name of the referrer.\x0d\n * @returns {Promise<import('internal/modules/esm/loader.js').ModuleExports>} - The imported module object.\x0d\n */\x0d\nfunction defaultImportModuleDynamically(specifier\x2C attributes\x2C referrerName) {\x0d\n  const parentURL = normalizeReferrerURL(referrerName);\x0d\n  return getCascadedLoader().import(specifier\x2C parentURL\x2C attributes);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously imports a module dynamically using a callback function. The native callback.\x0d\n * @param {symbol} referrerSymbol - Referrer symbol of the registered script\x2C function\x2C module\x2C or contextified object.\x0d\n * @param {string} specifier - The module specifier string.\x0d\n * @param {Record<string\x2C string>} attributes - The import attributes object.\x0d\n * @param {string|null|undefined} referrerName - name of the referrer.\x0d\n * @returns {Promise<import('internal/modules/esm/loader.js').ModuleExports>} - The imported module object.\x0d\n * @throws {ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING} - If the callback function is missing.\x0d\n */\x0d\nasync function importModuleDynamicallyCallback(referrerSymbol\x2C specifier\x2C attributes\x2C referrerName) {\x0d\n  // For user-provided vm.constants.USE_MAIN_CONTEXT_DEFAULT_LOADER\x2C emit the warning\x0d\n  // and fall back to the default loader.\x0d\n  if (referrerSymbol === vm_dynamic_import_main_context_default) {\x0d\n    emitExperimentalWarning('vm.USE_MAIN_CONTEXT_DEFAULT_LOADER');\x0d\n    return defaultImportModuleDynamically(specifier\x2C attributes\x2C referrerName);\x0d\n  }\x0d\n  // For script compiled internally that should use the default loader to handle dynamic\x0d\n  // import\x2C proxy the request to the default loader without the warning.\x0d\n  if (referrerSymbol === vm_dynamic_import_default_internal) {\x0d\n    return defaultImportModuleDynamically(specifier\x2C attributes\x2C referrerName);\x0d\n  }\x0d\n\x0d\n  if (moduleRegistries.has(referrerSymbol)) {\x0d\n    const { importModuleDynamically\x2C callbackReferrer } = moduleRegistries.get(referrerSymbol);\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      return importModuleDynamically(specifier\x2C callbackReferrer\x2C attributes);\x0d\n    }\x0d\n  }\x0d\n  if (referrerSymbol === vm_dynamic_import_missing_flag) {\x0d\n    throw new ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING_FLAG();\x0d\n  }\x0d\n  throw new ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING();\x0d\n}\x0d\n\x0d\nlet _forceDefaultLoader = false;\x0d\n/**\x0d\n * Initializes handling of ES modules.\x0d\n * This is configured during pre-execution. Specifically it's set to true for\x0d\n * the loader worker in internal/main/worker_thread.js.\x0d\n * @param {boolean} [forceDefaultLoader=false] - A boolean indicating disabling custom loaders.\x0d\n */\x0d\nfunction initializeESM(forceDefaultLoader = false) {\x0d\n  _forceDefaultLoader = forceDefaultLoader;\x0d\n  initializeDefaultConditions();\x0d\n  // Setup per-realm callbacks that locate data or callbacks that we keep\x0d\n  // track of for different ESM modules.\x0d\n  setInitializeImportMetaObjectCallback(initializeImportMetaObject);\x0d\n  setImportModuleDynamicallyCallback(importModuleDynamicallyCallback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Determine whether custom loaders are disabled and it is forced to use the\x0d\n * default loader.\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction forceDefaultLoader() {\x0d\n  return _forceDefaultLoader;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Register module customization hooks.\x0d\n */\x0d\nasync function initializeHooks() {\x0d\n  const customLoaderURLs = getOptionValue('--experimental-loader');\x0d\n\x0d\n  const { Hooks } = require('internal/modules/esm/hooks');\x0d\n  const esmLoader = require('internal/process/esm_loader').esmLoader;\x0d\n\x0d\n  const hooks = new Hooks();\x0d\n  esmLoader.setCustomizations(hooks);\x0d\n\x0d\n  // We need the loader customizations to be set _before_ we start invoking\x0d\n  // `--require`\x2C otherwise loops can happen because a `--require` script\x0d\n  // might call `register(...)` before we've installed ourselves. These\x0d\n  // global values are magically set in `setupUserModules` just for us and\x0d\n  // we call them in the correct order.\x0d\n  // N.B.  This block appears here specifically in order to ensure that\x0d\n  // `--require` calls occur before `--loader` ones do.\x0d\n  loadPreloadModules();\x0d\n  initializeFrozenIntrinsics();\x0d\n\x0d\n  const parentURL = getCWDURL().href;\x0d\n  for (let i = 0; i < customLoaderURLs.length; i++) {\x0d\n    await hooks.register(\x0d\n      customLoaderURLs[i]\x2C\x0d\n      parentURL\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  return hooks;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  registerModule\x2C\x0d\n  initializeESM\x2C\x0d\n  initializeHooks\x2C\x0d\n  getDefaultConditions\x2C\x0d\n  getConditionsSet\x2C\x0d\n  loaderWorkerId: 'internal/modules/esm/worker'\x2C\x0d\n  forceDefaultLoader\x2C\x0d\n};\x0d\n
code-source-info,0x125aa7a51a4,66,8845,9216,C10O8879C12O8899C18O8924C21O8924C24O9075C32O9075C36O9145C44O9145C49O9215,,
code-creation,JS,10,119970,0x125aa7a5d0c,177,initializeDefaultConditions node:internal/modules/esm/utils:69:37,0x1d9b727e2b0,~
code-source-info,0x125aa7a5d0c,66,1726,2084,C0O1757C8O1757C13O1809C19O1809C24O1867C35O1905C48O1976C93O2001C138O1925C145O1923C151O2027C161O2050C169O2048C176O2083,,
code-creation,JS,10,120025,0x125aa7a5ec4,5,hasStartedUserCJSExecution node:internal/modules/helpers:344:29,0x1d9b727d5f8,~
code-source-info,0x125aa7a5ec4,64,11049,11099,C0O11059C4O11094,,
code-creation,JS,10,120053,0x125aa7a5f8c,5,hasStartedUserESMExecution node:internal/modules/helpers:350:29,0x1d9b727d6a8,~
code-source-info,0x125aa7a5f8c,64,11214,11264,C0O11224C4O11259,,
code-creation,JS,10,120094,0x125aa7a609c,53,loadPreloadModules node:internal/process/pre_execution:728:28,0x1d9b727f948,~
code-source-info,0x125aa7a609c,67,24031,24363,C0O24120C8O24120C13O24152C15O24189C21O24196C26O24278C32O24278C37O24231C42O24242C47O24323C52O24362,,
code-creation,JS,10,120149,0x125aa7a628c,50,initializeFrozenIntrinsics node:internal/process/pre_execution:720:36,0x1d9b727f8f0,~
code-source-info,0x125aa7a628c,67,23772,24000,C0O23780C8O23784C14O23830C17O23838C28O23838C34O23952C40O23952C45O23989C49O23999,,
code-creation,JS,10,120187,0x125aa7a63ac,22,markBootstrapComplete node:internal/process/pre_execution:741:31,0x1d9b727f9a0,~
code-source-info,0x125aa7a63ac,67,24397,24463,C0O24405C6O24405C11O24435C16O24436C21O24462,,
code-creation,Eval,10,120300,0x125aa7a68a4,5, node:internal/process/esm_loader:1:1,0x125aa7a66d0,~
script-source,80,node:internal/process/esm_loader,'use strict';\x0d\n\x0d\nconst { createModuleLoader } = require('internal/modules/esm/loader');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst {\x0d\n  hasUncaughtExceptionCaptureCallback\x2C\x0d\n} = require('internal/process/execution');\x0d\nconst { kEmptyObject\x2C getCWDURL } = require('internal/util');\x0d\n\x0d\nlet esmLoader;\x0d\n\x0d\nmodule.exports = {\x0d\n  get esmLoader() {\x0d\n    return esmLoader ??= createModuleLoader();\x0d\n  }\x2C\x0d\n  async loadESM(callback) {\x0d\n    esmLoader ??= createModuleLoader();\x0d\n    try {\x0d\n      const userImports = getOptionValue('--import');\x0d\n      if (userImports.length > 0) {\x0d\n        const parentURL = getCWDURL().href;\x0d\n        for (let i = 0; i < userImports.length; i++) {\x0d\n          await esmLoader.import(userImports[i]\x2C parentURL\x2C kEmptyObject);\x0d\n        }\x0d\n      } else {\x0d\n        esmLoader.forceLoadHooks();\x0d\n      }\x0d\n      await callback(esmLoader);\x0d\n    } catch (err) {\x0d\n      if (hasUncaughtExceptionCaptureCallback()) {\x0d\n        process._fatalException(err);\x0d\n        return;\x0d\n      }\x0d\n      internalBinding('errors').triggerUncaughtException(\x0d\n        err\x2C\x0d\n        true\x2C /* fromPromise */\x0d\n      );\x0d\n    }\x0d\n  }\x2C\x0d\n};\x0d\n
code-source-info,0x125aa7a68a4,80,0,1145,C0O0C4O1145,,
code-creation,JS,10,120375,0x125aa7a6aa4,137, node:internal/process/esm_loader:1:1,0x125aa7a6818,~
code-source-info,0x125aa7a6aa4,80,0,1145,C0O0C31O48C34O48C39O25C45O116C48O116C53O97C59O199C62O199C67O157C73O275C76O275C81O247C87O261C93O308C94O308C96O322C101O419C131O337C136O1144,,
code-creation,Eval,10,120754,0x125aa7a8d7c,5, node:internal/modules/esm/loader:1:1,0x125aa7a8920,~
script-source,81,node:internal/modules/esm/loader,'use strict';\x0d\n\x0d\n// This is needed to avoid cycles in esm/resolve <-> cjs/loader\x0d\nrequire('internal/modules/cjs/loader');\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  encodeURIComponent\x2C\x0d\n  hardenRegExp\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_REQUIRE_ESM\x2C\x0d\n  ERR_UNKNOWN_MODULE_FORMAT\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { pathToFileURL\x2C isURL } = require('internal/url');\x0d\nconst { emitExperimentalWarning } = require('internal/util');\x0d\nconst {\x0d\n  getDefaultConditions\x2C\x0d\n} = require('internal/modules/esm/utils');\x0d\nlet defaultResolve\x2C defaultLoad\x2C defaultLoadSync\x2C importMetaInitializer;\x0d\n\x0d\n/**\x0d\n * Lazy loads the module_map module and returns a new instance of ResolveCache.\x0d\n * @returns {import('./module_map.js').ResolveCache')}\x0d\n */\x0d\nfunction newResolveCache() {\x0d\n  const { ResolveCache } = require('internal/modules/esm/module_map');\x0d\n  return new ResolveCache();\x0d\n}\x0d\n\x0d\n/**\x0d\n * Generate a load cache (to store the final result of a load-chain for a particular module).\x0d\n * @returns {import('./module_map.js').LoadCache')}\x0d\n */\x0d\nfunction newLoadCache() {\x0d\n  const { LoadCache } = require('internal/modules/esm/module_map');\x0d\n  return new LoadCache();\x0d\n}\x0d\n\x0d\n/**\x0d\n * Lazy-load translators to avoid potentially unnecessary work at startup (ex if ESM is not used).\x0d\n * @returns {import('./translators.js').Translators}\x0d\n */\x0d\nfunction getTranslators() {\x0d\n  const { translators } = require('internal/modules/esm/translators');\x0d\n  return translators;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @type {HooksProxy}\x0d\n * Multiple loader instances exist for various\x2C specific reasons (see code comments at site).\x0d\n * In order to maintain consistency\x2C we use a single worker (sandbox)\x2C which must sit apart of an\x0d\n * individual loader instance.\x0d\n */\x0d\nlet hooksProxy;\x0d\n\x0d\n/**\x0d\n * @typedef {Record<string\x2C any>} ModuleExports\x0d\n */\x0d\n\x0d\n/**\x0d\n * @typedef {'builtin'|'commonjs'|'json'|'module'|'wasm'} ModuleFormat\x0d\n */\x0d\n\x0d\n/**\x0d\n * @typedef {ArrayBuffer|TypedArray|string} ModuleSource\x0d\n */\x0d\n\x0d\n/**\x0d\n * This class covers the base machinery of module loading. To add custom\x0d\n * behavior you can pass a customizations object and this object will be\x0d\n * used to do the loading/resolving/registration process.\x0d\n */\x0d\nclass ModuleLoader {\x0d\n  /**\x0d\n   * The conditions for resolving packages if `--conditions` is not used.\x0d\n   */\x0d\n  #defaultConditions = getDefaultConditions();\x0d\n\x0d\n  /**\x0d\n   * The index for assigning unique URLs to anonymous module evaluation\x0d\n   */\x0d\n  evalIndex = 0;\x0d\n\x0d\n  /**\x0d\n   * Registry of resolved specifiers\x0d\n   */\x0d\n  #resolveCache = newResolveCache();\x0d\n\x0d\n  /**\x0d\n   * Registry of loaded modules\x2C akin to `require.cache`\x0d\n   */\x0d\n  loadCache = newLoadCache();\x0d\n\x0d\n  /**\x0d\n   * Methods which translate input code or other information into ES modules\x0d\n   */\x0d\n  translators = getTranslators();\x0d\n\x0d\n  /**\x0d\n   * Truthy to allow the use of `import.meta.resolve`. This is needed\x0d\n   * currently because the `Hooks` class does not have `resolveSync`\x0d\n   * implemented and `import.meta.resolve` requires it.\x0d\n   */\x0d\n  allowImportMetaResolve;\x0d\n\x0d\n  /**\x0d\n   * Customizations to pass requests to.\x0d\n   *\x0d\n   * Note that this value _MUST_ be set with `setCustomizations`\x0d\n   * because it needs to copy `customizations.allowImportMetaResolve`\x0d\n   *  to this property and failure to do so will cause undefined\x0d\n   * behavior when invoking `import.meta.resolve`.\x0d\n   * @see {ModuleLoader.setCustomizations}\x0d\n   */\x0d\n  #customizations;\x0d\n\x0d\n  constructor(customizations) {\x0d\n    if (getOptionValue('--experimental-network-imports')) {\x0d\n      emitExperimentalWarning('Network Imports');\x0d\n    }\x0d\n    this.setCustomizations(customizations);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Change the currently activate customizations for this module\x0d\n   * loader to be the provided `customizations`.\x0d\n   *\x0d\n   * If present\x2C this class customizes its core functionality to the\x0d\n   * `customizations` object\x2C including registration\x2C loading\x2C and resolving.\x0d\n   * There are some responsibilities that this class _always_ takes\x0d\n   * care of\x2C like validating outputs\x2C so that the customizations object\x0d\n   * does not have to do so.\x0d\n   *\x0d\n   * The customizations object has the shape:\x0d\n   *\x0d\n   * ```ts\x0d\n   * interface LoadResult {\x0d\n   *   format: ModuleFormat;\x0d\n   *   source: ModuleSource;\x0d\n   * }\x0d\n   *\x0d\n   * interface ResolveResult {\x0d\n   *   format: string;\x0d\n   *   url: URL['href'];\x0d\n   * }\x0d\n   *\x0d\n   * interface Customizations {\x0d\n   *   allowImportMetaResolve: boolean;\x0d\n   *   load(url: string\x2C context: object): Promise<LoadResult>\x0d\n   *   resolve(\x0d\n   *     originalSpecifier:\x0d\n   *     string\x2C parentURL: string\x2C\x0d\n   *     importAttributes: Record<string\x2C string>\x0d\n   *   ): Promise<ResolveResult>\x0d\n   *   resolveSync(\x0d\n   *     originalSpecifier:\x0d\n   *     string\x2C parentURL: string\x2C\x0d\n   *     importAttributes: Record<string\x2C string>\x0d\n   *   ) ResolveResult;\x0d\n   *   register(specifier: string\x2C parentURL: string): any;\x0d\n   *   forceLoadHooks(): void;\x0d\n   * }\x0d\n   * ```\x0d\n   *\x0d\n   * Note that this class _also_ implements the `Customizations`\x0d\n   * interface\x2C as does `CustomizedModuleLoader` and `Hooks`.\x0d\n   *\x0d\n   * Calling this function alters how modules are loaded and should be\x0d\n   * invoked with care.\x0d\n   * @param {object} customizations\x0d\n   */\x0d\n  setCustomizations(customizations) {\x0d\n    this.#customizations = customizations;\x0d\n    if (customizations) {\x0d\n      this.allowImportMetaResolve = customizations.allowImportMetaResolve;\x0d\n    } else {\x0d\n      this.allowImportMetaResolve = true;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  async eval(\x0d\n    source\x2C\x0d\n    url = pathToFileURL(`${process.cwd()}/[eval${++this.evalIndex}]`).href\x2C\x0d\n  ) {\x0d\n    const evalInstance = (url) => {\x0d\n      const { ModuleWrap } = internalBinding('module_wrap');\x0d\n      const { registerModule } = require('internal/modules/esm/utils');\x0d\n      const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n      registerModule(module\x2C {\x0d\n        __proto__: null\x2C\x0d\n        initializeImportMeta: (meta\x2C wrap) => this.importMetaInitialize(meta\x2C { url })\x2C\x0d\n        importModuleDynamically: (specifier\x2C { url }\x2C importAttributes) => {\x0d\n          return this.import(specifier\x2C url\x2C importAttributes);\x0d\n        }\x2C\x0d\n      });\x0d\n\x0d\n      return module;\x0d\n    };\x0d\n    const ModuleJob = require('internal/modules/esm/module_job');\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C url\x2C undefined\x2C evalInstance\x2C false\x2C false);\x0d\n    this.loadCache.set(url\x2C undefined\x2C job);\x0d\n    const { module } = await job.run();\x0d\n\x0d\n    return {\x0d\n      __proto__: null\x2C\x0d\n      namespace: module.getNamespace()\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Get a (possibly still pending) module job from the cache\x2C\x0d\n   * or create one and return its Promise.\x0d\n   * @param {string} specifier The string after `from` in an `import` statement\x2C\x0d\n   *                           or the first parameter of an `import()`\x0d\n   *                           expression\x0d\n   * @param {string | undefined} parentURL The URL of the module importing this\x0d\n   *                                     one\x2C unless this is the Node.js entry\x0d\n   *                                     point.\x0d\n   * @param {Record<string\x2C string>} importAttributes Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  async getModuleJob(specifier\x2C parentURL\x2C importAttributes) {\x0d\n    const resolveResult = await this.resolve(specifier\x2C parentURL\x2C importAttributes);\x0d\n    return this.getJobFromResolveResult(resolveResult\x2C parentURL\x2C importAttributes);\x0d\n  }\x0d\n\x0d\n  getModuleJobSync(specifier\x2C parentURL\x2C importAttributes) {\x0d\n    const resolveResult = this.resolveSync(specifier\x2C parentURL\x2C importAttributes);\x0d\n    return this.getJobFromResolveResult(resolveResult\x2C parentURL\x2C importAttributes\x2C true);\x0d\n  }\x0d\n\x0d\n  getJobFromResolveResult(resolveResult\x2C parentURL\x2C importAttributes\x2C sync) {\x0d\n    const { url\x2C format } = resolveResult;\x0d\n    const resolvedImportAttributes = resolveResult.importAttributes ?? importAttributes;\x0d\n    let job = this.loadCache.get(url\x2C resolvedImportAttributes.type);\x0d\n\x0d\n    // CommonJS will set functions for lazy job evaluation.\x0d\n    if (typeof job === 'function') {\x0d\n      this.loadCache.set(url\x2C undefined\x2C job = job());\x0d\n    }\x0d\n\x0d\n    if (job === undefined) {\x0d\n      job = this.#createModuleJob(url\x2C resolvedImportAttributes\x2C parentURL\x2C format\x2C sync);\x0d\n    }\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Create and cache an object representing a loaded module.\x0d\n   * @param {string} url The absolute URL that was resolved for this module\x0d\n   * @param {Record<string\x2C string>} importAttributes Validations for the\x0d\n   *                                                  module import.\x0d\n   * @param {string} [parentURL] The absolute URL of the module importing this\x0d\n   *                             one\x2C unless this is the Node.js entry point\x0d\n   * @param {string} [format] The format hint possibly returned by the\x0d\n   *                          `resolve` hook\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  #createModuleJob(url\x2C importAttributes\x2C parentURL\x2C format\x2C sync) {\x0d\n    const callTranslator = ({ format: finalFormat\x2C responseURL\x2C source }\x2C isMain) => {\x0d\n      const translator = getTranslators().get(finalFormat);\x0d\n\x0d\n      if (!translator) {\x0d\n        throw new ERR_UNKNOWN_MODULE_FORMAT(finalFormat\x2C responseURL);\x0d\n      }\x0d\n\x0d\n      return FunctionPrototypeCall(translator\x2C this\x2C responseURL\x2C source\x2C isMain);\x0d\n    };\x0d\n    const context = { format\x2C importAttributes };\x0d\n\x0d\n    const moduleProvider = sync ?\x0d\n      (url\x2C isMain) => callTranslator(this.loadSync(url\x2C context)\x2C isMain) :\x0d\n      async (url\x2C isMain) => callTranslator(await this.load(url\x2C context)\x2C isMain);\x0d\n\x0d\n    const inspectBrk = (\x0d\n      parentURL === undefined &&\x0d\n      getOptionValue('--inspect-brk')\x0d\n    );\x0d\n\x0d\n    if (process.env.WATCH_REPORT_DEPENDENCIES && process.send) {\x0d\n      process.send({ 'watch:import': [url] });\x0d\n    }\x0d\n\x0d\n    const ModuleJob = require('internal/modules/esm/module_job');\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C\x0d\n      url\x2C\x0d\n      importAttributes\x2C\x0d\n      moduleProvider\x2C\x0d\n      parentURL === undefined\x2C\x0d\n      inspectBrk\x2C\x0d\n      sync\x2C\x0d\n    );\x0d\n\x0d\n    this.loadCache.set(url\x2C importAttributes.type\x2C job);\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * This method is usually called indirectly as part of the loading processes.\x0d\n   * Use directly with caution.\x0d\n   * @param {string} specifier The first parameter of an `import()` expression.\x0d\n   * @param {string} parentURL Path of the parent importing the module.\x0d\n   * @param {Record<string\x2C string>} importAttributes Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<ModuleExports>}\x0d\n   */\x0d\n  async import(specifier\x2C parentURL\x2C importAttributes) {\x0d\n    const moduleJob = await this.getModuleJob(specifier\x2C parentURL\x2C importAttributes);\x0d\n    const { module } = await moduleJob.run();\x0d\n    return module.getNamespace();\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @see {@link CustomizedModuleLoader.register}\x0d\n   */\x0d\n  register(specifier\x2C parentURL\x2C data\x2C transferList) {\x0d\n    if (!this.#customizations) {\x0d\n      // `CustomizedModuleLoader` is defined at the bottom of this file and\x0d\n      // available well before this line is ever invoked. This is here in\x0d\n      // order to preserve the git diff instead of moving the class.\x0d\n      // eslint-disable-next-line no-use-before-define\x0d\n      this.setCustomizations(new CustomizedModuleLoader());\x0d\n    }\x0d\n    return this.#customizations.register(`${specifier}`\x2C `${parentURL}`\x2C data\x2C transferList);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Resolve the location of the module.\x0d\n   * @param {string} originalSpecifier The specified URL path of the module to\x0d\n   *                                   be resolved.\x0d\n   * @param {string} [parentURL] The URL path of the module's parent.\x0d\n   * @param {ImportAttributes} importAttributes Attributes from the import\x0d\n   *                                            statement or expression.\x0d\n   * @returns {{ format: string\x2C url: URL['href'] }}\x0d\n   */\x0d\n  resolve(originalSpecifier\x2C parentURL\x2C importAttributes) {\x0d\n    if (this.#customizations) {\x0d\n      return this.#customizations.resolve(originalSpecifier\x2C parentURL\x2C importAttributes);\x0d\n    }\x0d\n    const requestKey = this.#resolveCache.serializeKey(originalSpecifier\x2C importAttributes);\x0d\n    const cachedResult = this.#resolveCache.get(requestKey\x2C parentURL);\x0d\n    if (cachedResult != null) {\x0d\n      return cachedResult;\x0d\n    }\x0d\n    const result = this.defaultResolve(originalSpecifier\x2C parentURL\x2C importAttributes);\x0d\n    this.#resolveCache.set(requestKey\x2C parentURL\x2C result);\x0d\n    return result;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Just like `resolve` except synchronous. This is here specifically to support\x0d\n   * `import.meta.resolve` which must happen synchronously.\x0d\n   */\x0d\n  resolveSync(originalSpecifier\x2C parentURL\x2C importAttributes) {\x0d\n    if (this.#customizations) {\x0d\n      return this.#customizations.resolveSync(originalSpecifier\x2C parentURL\x2C importAttributes);\x0d\n    }\x0d\n    return this.defaultResolve(originalSpecifier\x2C parentURL\x2C importAttributes);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Our `defaultResolve` is synchronous and can be used in both\x0d\n   * `resolve` and `resolveSync`. This function is here just to avoid\x0d\n   * repeating the same code block twice in those functions.\x0d\n   */\x0d\n  defaultResolve(originalSpecifier\x2C parentURL\x2C importAttributes) {\x0d\n    defaultResolve ??= require('internal/modules/esm/resolve').defaultResolve;\x0d\n\x0d\n    const context = {\x0d\n      __proto__: null\x2C\x0d\n      conditions: this.#defaultConditions\x2C\x0d\n      importAttributes\x2C\x0d\n      parentURL\x2C\x0d\n    };\x0d\n\x0d\n    return defaultResolve(originalSpecifier\x2C context);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Provide source that is understood by one of Node's translators.\x0d\n   * @param {URL['href']} url The URL/path of the module to be loaded\x0d\n   * @param {object} [context] Metadata about the module\x0d\n   * @returns {Promise<{ format: ModuleFormat\x2C source: ModuleSource }>}\x0d\n   */\x0d\n  async load(url\x2C context) {\x0d\n    defaultLoad ??= require('internal/modules/esm/load').defaultLoad;\x0d\n    const result = this.#customizations ?\x0d\n      await this.#customizations.load(url\x2C context) :\x0d\n      await defaultLoad(url\x2C context);\x0d\n    this.validateLoadResult(url\x2C result?.format);\x0d\n    return result;\x0d\n  }\x0d\n\x0d\n  loadSync(url\x2C context) {\x0d\n    defaultLoadSync ??= require('internal/modules/esm/load').defaultLoadSync;\x0d\n\x0d\n    let result = this.#customizations ?\x0d\n      this.#customizations.loadSync(url\x2C context) :\x0d\n      defaultLoadSync(url\x2C context);\x0d\n    let format = result?.format;\x0d\n    if (format === 'module') {\x0d\n      throw new ERR_REQUIRE_ESM(url\x2C true);\x0d\n    }\x0d\n    if (format === 'commonjs') {\x0d\n      format = 'require-commonjs';\x0d\n      result = { __proto__: result\x2C format };\x0d\n    }\x0d\n    this.validateLoadResult(url\x2C format);\x0d\n    return result;\x0d\n  }\x0d\n\x0d\n  validateLoadResult(url\x2C format) {\x0d\n    if (format == null) {\x0d\n      require('internal/modules/esm/load').throwUnknownModuleFormat(url\x2C format);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  importMetaInitialize(meta\x2C context) {\x0d\n    if (this.#customizations) {\x0d\n      return this.#customizations.importMetaInitialize(meta\x2C context\x2C this);\x0d\n    }\x0d\n    importMetaInitializer ??= require('internal/modules/esm/initialize_import_meta').initializeImportMeta;\x0d\n    meta = importMetaInitializer(meta\x2C context\x2C this);\x0d\n    return meta;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * No-op when no hooks have been supplied.\x0d\n   */\x0d\n  forceLoadHooks() {\x0d\n    this.#customizations?.forceLoadHooks();\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(ModuleLoader.prototype\x2C null);\x0d\n\x0d\nclass CustomizedModuleLoader {\x0d\n\x0d\n  allowImportMetaResolve = true;\x0d\n\x0d\n  /**\x0d\n   * Instantiate a module loader that uses user-provided custom loader hooks.\x0d\n   */\x0d\n  constructor() {\x0d\n    getHooksProxy();\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Register some loader specifier.\x0d\n   * @param {string} originalSpecifier The specified URL path of the loader to\x0d\n   *                                   be registered.\x0d\n   * @param {string} parentURL The parent URL from where the loader will be\x0d\n   *                           registered if using it package name as specifier\x0d\n   * @param {any} [data] Arbitrary data to be passed from the custom loader\x0d\n   * (user-land) to the worker.\x0d\n   * @param {any[]} [transferList] Objects in `data` that are changing ownership\x0d\n   * @returns {{ format: string\x2C url: URL['href'] }}\x0d\n   */\x0d\n  register(originalSpecifier\x2C parentURL\x2C data\x2C transferList) {\x0d\n    return hooksProxy.makeSyncRequest('register'\x2C transferList\x2C originalSpecifier\x2C parentURL\x2C data);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Resolve the location of the module.\x0d\n   * @param {string} originalSpecifier The specified URL path of the module to\x0d\n   *                                   be resolved.\x0d\n   * @param {string} [parentURL] The URL path of the module's parent.\x0d\n   * @param {ImportAttributes} importAttributes Attributes from the import\x0d\n   *                                            statement or expression.\x0d\n   * @returns {{ format: string\x2C url: URL['href'] }}\x0d\n   */\x0d\n  resolve(originalSpecifier\x2C parentURL\x2C importAttributes) {\x0d\n    return hooksProxy.makeAsyncRequest('resolve'\x2C undefined\x2C originalSpecifier\x2C parentURL\x2C importAttributes);\x0d\n  }\x0d\n\x0d\n  resolveSync(originalSpecifier\x2C parentURL\x2C importAttributes) {\x0d\n    // This happens only as a result of `import.meta.resolve` calls\x2C which must be sync per spec.\x0d\n    return hooksProxy.makeSyncRequest('resolve'\x2C undefined\x2C originalSpecifier\x2C parentURL\x2C importAttributes);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Provide source that is understood by one of Node's translators.\x0d\n   * @param {URL['href']} url The URL/path of the module to be loaded\x0d\n   * @param {object} [context] Metadata about the module\x0d\n   * @returns {Promise<{ format: ModuleFormat\x2C source: ModuleSource }>}\x0d\n   */\x0d\n  load(url\x2C context) {\x0d\n    return hooksProxy.makeAsyncRequest('load'\x2C undefined\x2C url\x2C context);\x0d\n  }\x0d\n  loadSync(url\x2C context) {\x0d\n    return hooksProxy.makeSyncRequest('load'\x2C undefined\x2C url\x2C context);\x0d\n  }\x0d\n\x0d\n  importMetaInitialize(meta\x2C context\x2C loader) {\x0d\n    hooksProxy.importMetaInitialize(meta\x2C context\x2C loader);\x0d\n  }\x0d\n\x0d\n  forceLoadHooks() {\x0d\n    hooksProxy.waitForWorker();\x0d\n  }\x0d\n}\x0d\n\x0d\nlet emittedLoaderFlagWarning = false;\x0d\n/**\x0d\n * A loader instance is used as the main entry point for loading ES modules. Currently\x2C this is a singleton; there is\x0d\n * only one used for loading the main module and everything in its dependency graph\x2C though separate instances of this\x0d\n * class might be instantiated as part of bootstrap for other purposes.\x0d\n * @returns {ModuleLoader}\x0d\n */\x0d\nfunction createModuleLoader() {\x0d\n  let customizations = null;\x0d\n  // Don't spawn a new worker if custom loaders are disabled. For instance\x2C if\x0d\n  // we're already in a worker thread created by instantiating\x0d\n  // CustomizedModuleLoader; doing so would cause an infinite loop.\x0d\n  if (!require('internal/modules/esm/utils').forceDefaultLoader()) {\x0d\n    const userLoaderPaths = getOptionValue('--experimental-loader');\x0d\n    if (userLoaderPaths.length > 0) {\x0d\n      if (!emittedLoaderFlagWarning) {\x0d\n        const readableURIEncode = (string) => ArrayPrototypeReduce(\x0d\n          [\x0d\n            [/'/g\x2C '%27']\x2C // We need to URL-encode the single quote as it's the delimiter for the --import flag.\x0d\n            [/%22/g\x2C '"']\x2C // We can decode the double quotes to improve readability.\x0d\n            [/%2F/ig\x2C '/']\x2C // We can decode the slashes to improve readability.\x0d\n          ]\x2C\x0d\n          (str\x2C { 0: regex\x2C 1: replacement }) => RegExpPrototypeSymbolReplace(hardenRegExp(regex)\x2C str\x2C replacement)\x2C\x0d\n          encodeURIComponent(string));\x0d\n        process.emitWarning(\x0d\n          '`--experimental-loader` may be removed in the future; instead use `register()`:\\n' +\x0d\n          `--import 'data:text/javascript\x2Cimport { register } from "node:module"; import { pathToFileURL } from "node:url"; ${ArrayPrototypeJoin(\x0d\n            ArrayPrototypeMap(userLoaderPaths\x2C (loader) => `register(${readableURIEncode(JSONStringify(loader))}\x2C pathToFileURL("./"))`)\x2C\x0d\n            '; '\x2C\x0d\n          )};'`\x2C\x0d\n          'ExperimentalWarning'\x2C\x0d\n        );\x0d\n        emittedLoaderFlagWarning = true;\x0d\n      }\x0d\n      customizations = new CustomizedModuleLoader();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return new ModuleLoader(customizations);\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Get the HooksProxy instance. If it is not defined\x2C then create a new one.\x0d\n * @returns {HooksProxy}\x0d\n */\x0d\nfunction getHooksProxy() {\x0d\n  if (!hooksProxy) {\x0d\n    const { HooksProxy } = require('internal/modules/esm/hooks');\x0d\n    hooksProxy = new HooksProxy();\x0d\n  }\x0d\n\x0d\n  return hooksProxy;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Register a single loader programmatically.\x0d\n * @param {string|import('url').URL} specifier\x0d\n * @param {string|import('url').URL} [parentURL] Base to use when resolving `specifier`; optional if\x0d\n * `specifier` is absolute. Same as `options.parentUrl`\x2C just inline\x0d\n * @param {object} [options] Additional options to apply\x2C described below.\x0d\n * @param {string|import('url').URL} [options.parentURL] Base to use when resolving `specifier`\x0d\n * @param {any} [options.data] Arbitrary data passed to the loader's `initialize` hook\x0d\n * @param {any[]} [options.transferList] Objects in `data` that are changing ownership\x0d\n * @returns {void} We want to reserve the return value for potential future extension of the API.\x0d\n * @example\x0d\n * ```js\x0d\n * register('./myLoader.js');\x0d\n * register('ts-node/esm'\x2C { parentURL: import.meta.url });\x0d\n * register('./myLoader.js'\x2C { parentURL: import.meta.url });\x0d\n * register('ts-node/esm'\x2C import.meta.url);\x0d\n * register('./myLoader.js'\x2C import.meta.url);\x0d\n * register(new URL('./myLoader.js'\x2C import.meta.url));\x0d\n * register('./myLoader.js'\x2C {\x0d\n *   parentURL: import.meta.url\x2C\x0d\n *   data: { banana: 'tasty' }\x2C\x0d\n * });\x0d\n * register('./myLoader.js'\x2C {\x0d\n *   parentURL: import.meta.url\x2C\x0d\n *   data: someArrayBuffer\x2C\x0d\n *   transferList: [someArrayBuffer]\x2C\x0d\n * });\x0d\n * ```\x0d\n */\x0d\nfunction register(specifier\x2C parentURL = undefined\x2C options) {\x0d\n  const moduleLoader = require('internal/process/esm_loader').esmLoader;\x0d\n  if (parentURL != null && typeof parentURL === 'object' && !isURL(parentURL)) {\x0d\n    options = parentURL;\x0d\n    parentURL = options.parentURL;\x0d\n  }\x0d\n  moduleLoader.register(\x0d\n    specifier\x2C\x0d\n    parentURL ?? 'data:'\x2C\x0d\n    options?.data\x2C\x0d\n    options?.transferList\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  createModuleLoader\x2C\x0d\n  getHooksProxy\x2C\x0d\n  register\x2C\x0d\n};\x0d\n
code-source-info,0x125aa7a8d7c,81,0,22408,C0O0C4O22408,,
code-creation,JS,10,121943,0x125aa7aa01c,588, node:internal/modules/esm/loader:1:1,0x125aa7a8cf0,~
code-source-info,0x125aa7aa01c,81,0,22408,C0O0C120O82C126O82C130O136C136O159C142O181C148O206C154O232C160O250C165O275C171O308C177O331C183O429C189O429C194O455C199O377C205O397C211O491C217O491C222O472C228O554C234O554C239O529C245O544C251O616C257O616C262O588C268O681C274O681C279O654C285O725C286O725C288O741C289O741C291O754C292O754C294O771C295O771C297O1923C298O1923C472O2370C474O15581C477O15615C484O15581C552O15636C554O18245C555O18245C557O22330C564O22352C570O22375C576O22393C582O22345C587O22407,,
code-creation,JS,10,122000,0x125aa7aa38c,7,CustomizedModuleLoader node:internal/modules/esm/loader:450:30,0x125aa7a9898,~
code-source-info,0x125aa7aa38c,81,15665,18210,C0O15697C6O18210,,
code-creation,JS,10,122016,0x125aa7aa43c,79,ModuleLoader node:internal/modules/esm/loader:82:20,0x125aa7a9598,~
code-source-info,0x125aa7aa43c,81,2389,15579,C3O2504C10O2504C18O2632C26O2708C31O2708C39O2816C44O2816C51O2943C56O2943C64O3178C72O3568C78O15579,,
code-creation,JS,10,122250,0x125aa7aaf74,325,loadESM node:internal/process/esm_loader:16:16,0x125aa7a68d8,~
code-source-info,0x125aa7aaf74,80,432,1138,C10O432C18O450C28O464C31O464C34O460C39O524C47O524C52O575C58O582C63O616C68O616C72O627C77O656C79O675C83O661C88O701C91O717C98O735C104O751C110O723C123O701C146O684C151O643C157O802C160O812C165O812C169O846C172O852C184O846C222O901C229O905C234O955C239O963C247O963C252O994C261O1001C262O1018C270O1018C275O1043C285O1044C302O1137,,
code-creation,JS,10,122395,0x125aa7ab654,170,createModuleLoader node:internal/modules/esm/loader:523:28,0x125aa7a8eb8,~
code-source-info,0x125aa7ab654,81,18630,20297,C0O18659C2O18881C8O18886C13O18923C18O18924C24O18977C32O18977C37O19043C43O19050C48O19064C61O19132C65O19132C67O19645C72O19653C87O19890C94O19923C97O19941C102O19923C111O19890C126O19761C133O19653C139O20141C140O20166C146O20190C151O20207C157O20254C164O20261C169O20294,,
code-creation,JS,10,122451,0x125aa7acbdc,5,forceDefaultLoader node:internal/modules/esm/utils:255:28,0x1d9b727e570,~
code-source-info,0x125aa7acbdc,66,9378,9416,C0O9386C4O9413,,
code-creation,JS,10,122490,0x125aa7acd14,66,ModuleLoader node:internal/modules/esm/loader:126:14,0x125aa7a9018,~
code-source-info,0x125aa7acd14,81,3601,3788,C5O3601C24O3625C34O3629C40O3688C50O3688C54O3749C59O3749C65O3787,,
code-creation,JS,10,122537,0x125aa7acf1c,19,getDefaultConditions node:internal/modules/esm/utils:50:30,0x1d9b727dfb8,~
code-source-info,0x125aa7acf1c,66,1199,1279,C0O1207C7O1214C10O1232C12O1207C16O1251C18O1276,,
code-creation,JS,10,122582,0x125aa7ad14c,22,newResolveCache node:internal/modules/esm/loader:34:25,0x125aa7a8db0,~
code-source-info,0x125aa7ad14c,81,968,1077,C0O1001C6O1001C11O984C16O1055C21O1074,,
code-creation,Eval,10,122727,0x125aa7ada94,5, node:internal/modules/esm/module_map:1:1,0x125aa7ad7d0,~
script-source,82,node:internal/modules/esm/module_map,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectKeys\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\nconst { kImplicitAssertType } = require('internal/modules/esm/assert');\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { ERR_INVALID_ARG_TYPE } = require('internal/errors').codes;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\n/**\x0d\n * Cache the results of the `resolve` step of the module resolution and loading process.\x0d\n * Future resolutions of the same input (specifier\x2C parent URL and import attributes)\x0d\n * must return the same result if the first attempt was successful\x2C per\x0d\n * https://tc39.es/ecma262/#sec-HostLoadImportedModule.\x0d\n * This cache is *not* used when custom loaders are registered.\x0d\n */\x0d\nclass ResolveCache extends SafeMap {\x0d\n  constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n\x0d\n  /**\x0d\n   * Generates the internal serialized cache key and returns it along the actual cache object.\x0d\n   *\x0d\n   * It is exposed to allow more efficient read and overwrite a cache entry.\x0d\n   * @param {string} specifier\x0d\n   * @param {Record<string\x2Cstring>} importAttributes\x0d\n   * @returns {string}\x0d\n   */\x0d\n  serializeKey(specifier\x2C importAttributes) {\x0d\n    // To serialize the ModuleRequest (specifier + list of import attributes)\x2C\x0d\n    // we need to sort the attributes by key\x2C then stringifying\x2C\x0d\n    // so that different import statements with the same attributes are always treated\x0d\n    // as identical.\x0d\n    const keys = ObjectKeys(importAttributes);\x0d\n\x0d\n    if (keys.length === 0) {\x0d\n      return specifier + '::';\x0d\n    }\x0d\n\x0d\n    return specifier + '::' + ArrayPrototypeJoin(\x0d\n      ArrayPrototypeMap(\x0d\n        ArrayPrototypeSort(keys)\x2C\x0d\n        (key) => JSONStringify(key) + JSONStringify(importAttributes[key]))\x2C\x0d\n      '\x2C');\x0d\n  }\x0d\n\x0d\n  #getModuleCachedImports(parentURL) {\x0d\n    let internalCache = super.get(parentURL);\x0d\n    if (internalCache == null) {\x0d\n      super.set(parentURL\x2C internalCache = { __proto__: null });\x0d\n    }\x0d\n    return internalCache;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} serializedKey\x0d\n   * @param {string} parentURL\x0d\n   * @returns {import('./loader').ModuleExports | Promise<import('./loader').ModuleExports>}\x0d\n   */\x0d\n  get(serializedKey\x2C parentURL) {\x0d\n    return this.#getModuleCachedImports(parentURL)[serializedKey];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} serializedKey\x0d\n   * @param {string} parentURL\x0d\n   * @param {{ format: string\x2C url: URL['href'] }} result\x0d\n   */\x0d\n  set(serializedKey\x2C parentURL\x2C result) {\x0d\n    this.#getModuleCachedImports(parentURL)[serializedKey] = result;\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  has(serializedKey\x2C parentURL) {\x0d\n    return serializedKey in this.#getModuleCachedImports(parentURL);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Cache the results of the `load` step of the module resolution and loading process.\x0d\n */\x0d\nclass LoadCache extends SafeMap {\x0d\n  constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  get(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type];\x0d\n  }\x0d\n  set(url\x2C type = kImplicitAssertType\x2C job) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n\x0d\n    const ModuleJob = require('internal/modules/esm/module_job');\x0d\n    if (job instanceof ModuleJob !== true &&\x0d\n        typeof job !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('job'\x2C 'ModuleJob'\x2C job);\x0d\n    }\x0d\n    debug(`Storing ${url} (${\x0d\n      type === kImplicitAssertType ? 'implicit type' : type\x0d\n    }) in ModuleLoadMap`);\x0d\n    const cachedJobsForUrl = super.get(url) ?? { __proto__: null };\x0d\n    cachedJobsForUrl[type] = job;\x0d\n    return super.set(url\x2C cachedJobsForUrl);\x0d\n  }\x0d\n  has(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type] !== undefined;\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  LoadCache\x2C\x0d\n  ResolveCache\x2C\x0d\n};\x0d\n
code-source-info,0x125aa7ada94,82,0,3999,C0O0C4O3999,,
code-creation,JS,10,122927,0x125aa7ae344,299, node:internal/modules/esm/module_map:1:1,0x125aa7ada08,~
code-source-info,0x125aa7ae344,82,0,3999,C0O0C36O28C42O51C48O73C54O96C60O114C66O129C71O189C77O189C82O165C88O242C94O242C99O275C112O276C118O242C120O356C126O356C131O382C136O331C142O418C148O418C153O399C179O862C227O835C231O2920C274O3944C281O3966C287O3980C293O3959C298O3998,,
code-creation,Eval,10,123101,0x125aa7aee14,5, node:internal/modules/esm/assert:1:1,0x125aa7aec10,~
script-source,83,node:internal/modules/esm/assert,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectValues\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n} = primordials;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  ERR_IMPORT_ATTRIBUTE_TYPE_INCOMPATIBLE\x2C\x0d\n  ERR_IMPORT_ATTRIBUTE_MISSING\x2C\x0d\n  ERR_IMPORT_ATTRIBUTE_UNSUPPORTED\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\n// The HTML spec has an implied default type of `'javascript'`.\x0d\nconst kImplicitAssertType = 'javascript';\x0d\n\x0d\n/**\x0d\n * Define a map of module formats to import attributes types (the value of\x0d\n * `type` in `with { type: 'json' }`).\x0d\n * @type {Map<string\x2C string>}\x0d\n */\x0d\nconst formatTypeMap = {\x0d\n  '__proto__': null\x2C\x0d\n  'builtin': kImplicitAssertType\x2C\x0d\n  'commonjs': kImplicitAssertType\x2C\x0d\n  'json': 'json'\x2C\x0d\n  'module': kImplicitAssertType\x2C\x0d\n  'wasm': kImplicitAssertType\x2C // It's unclear whether the HTML spec will require an attribute type or not for Wasm; see https://github.com/WebAssembly/esm-integration/issues/42\x0d\n};\x0d\n\x0d\n/**\x0d\n * The HTML spec disallows the default type to be explicitly specified\x0d\n * (for now); so `import './file.js'` is okay but\x0d\n * `import './file.js' with { type: 'javascript' }` throws.\x0d\n * @type {Array<string\x2C string>}\x0d\n */\x0d\nconst supportedAssertionTypes = ArrayPrototypeFilter(\x0d\n  ObjectValues(formatTypeMap)\x2C\x0d\n  (type) => type !== kImplicitAssertType);\x0d\n\x0d\n\x0d\n/**\x0d\n * Test a module's import attributes.\x0d\n * @param {string} url The URL of the imported module\x2C for error reporting.\x0d\n * @param {string} format One of Node's supported translators\x0d\n * @param {Record<string\x2C string>} importAttributes Validations for the\x0d\n *                                                  module import.\x0d\n * @returns {true}\x0d\n * @throws {TypeError} If the format and assertion type are incompatible.\x0d\n */\x0d\nfunction validateAttributes(url\x2C format\x2C\x0d\n                            importAttributes = { __proto__: null }) {\x0d\n  const keys = ObjectKeys(importAttributes);\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    if (keys[i] !== 'type') {\x0d\n      throw new ERR_IMPORT_ATTRIBUTE_UNSUPPORTED(keys[i]\x2C importAttributes[keys[i]]);\x0d\n    }\x0d\n  }\x0d\n  const validType = formatTypeMap[format];\x0d\n\x0d\n  switch (validType) {\x0d\n    case undefined:\x0d\n      // Ignore attributes for module formats we don't recognize\x2C to allow new\x0d\n      // formats in the future.\x0d\n      return true;\x0d\n\x0d\n    case kImplicitAssertType:\x0d\n      // This format doesn't allow an import assertion type\x2C so the property\x0d\n      // must not be set on the import attributes object.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAttributes\x2C 'type')) {\x0d\n        return true;\x0d\n      }\x0d\n      return handleInvalidType(url\x2C importAttributes.type);\x0d\n\x0d\n    case importAttributes.type:\x0d\n      // The asserted type is the valid type for this format.\x0d\n      return true;\x0d\n\x0d\n    default:\x0d\n      // There is an expected type for this format\x2C but the value of\x0d\n      // `importAttributes.type` might not have been it.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAttributes\x2C 'type')) {\x0d\n        // `type` wasn't specified at all.\x0d\n        throw new ERR_IMPORT_ATTRIBUTE_MISSING(url\x2C 'type'\x2C validType);\x0d\n      }\x0d\n      return handleInvalidType(url\x2C importAttributes.type);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Throw the correct error depending on what's wrong with the type assertion.\x0d\n * @param {string} url The resolved URL for the module to be imported\x0d\n * @param {string} type The value of the import assertion `type` property\x0d\n */\x0d\nfunction handleInvalidType(url\x2C type) {\x0d\n  // `type` might have not been a string.\x0d\n  validateString(type\x2C 'type');\x0d\n\x0d\n  // `type` might not have been one of the types we understand.\x0d\n  if (!ArrayPrototypeIncludes(supportedAssertionTypes\x2C type)) {\x0d\n    throw new ERR_IMPORT_ATTRIBUTE_UNSUPPORTED('type'\x2C type);\x0d\n  }\x0d\n\x0d\n  // `type` was the wrong value for this format.\x0d\n  throw new ERR_IMPORT_ATTRIBUTE_TYPE_INCOMPATIBLE(url\x2C type);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kImplicitAssertType\x2C\x0d\n  validateAttributes\x2C\x0d\n};\x0d\n
code-source-info,0x125aa7aee14,83,0,3964,C0O0C4O3964,,
code-creation,JS,10,123340,0x125aa7af104,201, node:internal/modules/esm/assert:1:1,0x125aa7aed88,~
code-source-info,0x125aa7af104,83,0,3964,C0O0C46O28C51O53C57O80C63O95C68O112C74O189C77O189C82O170C88O350C91O350C96O376C101O235C107O278C113O311C119O480C121O480C123O677C130O715C136O751C142O804C148O836C154O677C156O1271C159O1296C169O1271C174O1271C176O3893C183O3915C189O3939C195O3908C200O3963,,
code-creation,JS,10,123441,0x125aa7af38c,9, node:internal/modules/esm/assert:43:3,0x125aa7aeef8,~
code-source-info,0x125aa7af38c,83,1328,1366,C0O1343C2O1347C4O1343C8O1366,,
code-creation,JS,10,123517,0x125aa7afd44,52,ResolveCache node:internal/modules/esm/module_map:26:14,0x125aa7adb78,~
code-source-info,0x125aa7afd44,82,886,903,C3O892C27O892C51O902,,
code-creation,JS,10,123564,0x125aa7b03a4,22,newLoadCache node:internal/modules/esm/loader:43:22,0x125aa7a8e08,~
code-source-info,0x125aa7b03a4,81,1260,1363,C0O1290C6O1290C11O1276C16O1344C21O1360,,
code-creation,JS,10,123600,0x125aa7b047c,42,LoadCache node:internal/modules/esm/module_map:90:14,0x125aa7add30,~
code-source-info,0x125aa7b047c,82,2944,2961,C3O2950C27O2950C41O2960,,
code-creation,JS,10,123638,0x125aa7b068c,17,getTranslators node:internal/modules/esm/loader:52:24,0x125aa7a8e60,~
code-source-info,0x125aa7b068c,81,1554,1656,C0O1586C6O1586C11O1570C16O1653,,
code-creation,Eval,10,124020,0x125aa7b25a4,5, node:internal/modules/esm/translators:1:1,0x125aa7b2080,~
script-source,84,node:internal/modules/esm/translators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  Boolean\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeReplaceAll\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  SyntaxErrorPrototype\x2C\x0d\n  globalThis: { WebAssembly }\x2C\x0d\n} = primordials;\x0d\n\x0d\n/** @type {import('internal/util/types')} */\x0d\nlet _TYPES = null;\x0d\n/**\x0d\n * Lazily loads and returns the internal/util/types module.\x0d\n */\x0d\nfunction lazyTypes() {\x0d\n  if (_TYPES !== null) { return _TYPES; }\x0d\n  return _TYPES = require('internal/util/types');\x0d\n}\x0d\n\x0d\nconst { containsModuleSyntax } = internalBinding('contextify');\x0d\nconst { BuiltinModule } = require('internal/bootstrap/realm');\x0d\nconst assert = require('internal/assert');\x0d\nconst { readFileSync } = require('fs');\x0d\nconst { dirname\x2C extname\x2C isAbsolute } = require('path');\x0d\nconst {\x0d\n  loadBuiltinModule\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/helpers');\x0d\nconst {\x0d\n  Module: CJSModule\x2C\x0d\n  cjsParseCache\x2C\x0d\n  cjsExportsCache\x2C\x0d\n} = require('internal/modules/cjs/loader');\x0d\nconst { fileURLToPath\x2C pathToFileURL\x2C URL } = require('internal/url');\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { emitExperimentalWarning\x2C kEmptyObject\x2C setOwnProperty } = require('internal/util');\x0d\nconst {\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { maybeCacheSourceMap } = require('internal/source_map/source_map_cache');\x0d\nconst moduleWrap = internalBinding('module_wrap');\x0d\nconst { ModuleWrap } = moduleWrap;\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { emitWarningSync } = require('internal/process/warning');\x0d\nconst { internalCompileFunction } = require('internal/vm');\x0d\nconst {\x0d\n  vm_dynamic_import_default_internal\x2C\x0d\n} = internalBinding('symbols');\x0d\n// Lazy-loading to avoid circular dependencies.\x0d\nlet getSourceSync;\x0d\n/**\x0d\n * @param {Parameters<typeof import('./load').getSourceSync>[0]} url\x0d\n * @returns {ReturnType<typeof import('./load').getSourceSync>}\x0d\n */\x0d\nfunction getSource(url) {\x0d\n  getSourceSync ??= require('internal/modules/esm/load').getSourceSync;\x0d\n  return getSourceSync(url);\x0d\n}\x0d\n\x0d\n/** @type {import('deps/cjs-module-lexer/lexer.js').parse} */\x0d\nlet cjsParse;\x0d\n/**\x0d\n * Initializes the CommonJS module lexer parser.\x0d\n * If WebAssembly is available\x2C it uses the optimized version from the dist folder.\x0d\n * Otherwise\x2C it falls back to the JavaScript version from the lexer folder.\x0d\n */\x0d\nasync function initCJSParse() {\x0d\n  if (typeof WebAssembly === 'undefined') {\x0d\n    cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\x0d\n  } else {\x0d\n    const { parse\x2C init } =\x0d\n        require('internal/deps/cjs-module-lexer/dist/lexer');\x0d\n    try {\x0d\n      await init();\x0d\n      cjsParse = parse;\x0d\n    } catch {\x0d\n      cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nconst translators = new SafeMap();\x0d\nexports.translators = translators;\x0d\nexports.enrichCJSError = enrichCJSError;\x0d\n\x0d\nlet DECODER = null;\x0d\n/**\x0d\n * Asserts that the given body is a buffer source (either a string\x2C array buffer\x2C or typed array).\x0d\n * Throws an error if the body is not a buffer source.\x0d\n * @param {string | ArrayBufferView | ArrayBuffer} body - The body to check.\x0d\n * @param {boolean} allowString - Whether or not to allow a string as a valid buffer source.\x0d\n * @param {string} hookName - The name of the hook being called.\x0d\n * @throws {ERR_INVALID_RETURN_PROPERTY_VALUE} If the body is not a buffer source.\x0d\n */\x0d\nfunction assertBufferSource(body\x2C allowString\x2C hookName) {\x0d\n  if (allowString && typeof body === 'string') {\x0d\n    return;\x0d\n  }\x0d\n  const { isArrayBufferView\x2C isAnyArrayBuffer } = lazyTypes();\x0d\n  if (isArrayBufferView(body) || isAnyArrayBuffer(body)) {\x0d\n    return;\x0d\n  }\x0d\n  throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n    `${allowString ? 'string\x2C ' : ''}array buffer\x2C or typed array`\x2C\x0d\n    hookName\x2C\x0d\n    'source'\x2C\x0d\n    body\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Converts a buffer or buffer-like object to a string.\x0d\n * @param {string | ArrayBuffer | ArrayBufferView} body - The buffer or buffer-like object to convert to a string.\x0d\n * @returns {string} The resulting string.\x0d\n */\x0d\nfunction stringify(body) {\x0d\n  if (typeof body === 'string') { return body; }\x0d\n  assertBufferSource(body\x2C false\x2C 'load');\x0d\n  const { TextDecoder } = require('internal/encoding');\x0d\n  DECODER = DECODER === null ? new TextDecoder() : DECODER;\x0d\n  return DECODER.decode(body);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Converts a URL to a file path if the URL protocol is 'file:'.\x0d\n * @param {string} url - The URL to convert.\x0d\n */\x0d\nfunction errPath(url) {\x0d\n  const parsed = new URL(url);\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    return fileURLToPath(parsed);\x0d\n  }\x0d\n  return url;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Dynamically imports a module using the ESM loader.\x0d\n * @param {string} specifier - The module specifier to import.\x0d\n * @param {object} options - An object containing options for the import.\x0d\n * @param {string} options.url - The URL of the module requesting the import.\x0d\n * @param {Record<string\x2C string>} [attributes] - An object containing attributes for the import.\x0d\n * @returns {Promise<import('internal/modules/esm/loader.js').ModuleExports>} The imported module.\x0d\n */\x0d\nasync function importModuleDynamically(specifier\x2C { url }\x2C attributes) {\x0d\n  return asyncESM.esmLoader.import(specifier\x2C url\x2C attributes);\x0d\n}\x0d\n\x0d\n// Strategy for loading a standard JavaScript module.\x0d\ntranslators.set('module'\x2C async function moduleStrategy(url\x2C source\x2C isMain) {\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  source = stringify(source);\x0d\n  debug(`Translating StandardModule ${url}`);\x0d\n  const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n  // Cache the source map for the module if present.\x0d\n  if (module.sourceMapURL) {\x0d\n    maybeCacheSourceMap(url\x2C source\x2C null\x2C false\x2C undefined\x2C module.sourceMapURL);\x0d\n  }\x0d\n  const { registerModule } = require('internal/modules/esm/utils');\x0d\n  registerModule(module\x2C {\x0d\n    __proto__: null\x2C\x0d\n    initializeImportMeta: (meta\x2C wrap) => this.importMetaInitialize(meta\x2C { url })\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  });\x0d\n  return module;\x0d\n});\x0d\n\x0d\n/**\x0d\n * Provide a more informative error for CommonJS imports.\x0d\n * @param {Error | any} err\x0d\n * @param {string} [content] Content of the file\x2C if known.\x0d\n * @param {string} [filename] The filename of the erroring module.\x0d\n */\x0d\nfunction enrichCJSError(err\x2C content\x2C filename) {\x0d\n  if (err != null && ObjectGetPrototypeOf(err) === SyntaxErrorPrototype &&\x0d\n      containsModuleSyntax(content\x2C filename)) {\x0d\n    // Emit the warning synchronously because we are in the middle of handling\x0d\n    // a SyntaxError that will throw and likely terminate the process before an\x0d\n    // asynchronous warning would be emitted.\x0d\n    emitWarningSync(\x0d\n      'To load an ES module\x2C set "type": "module" in the package.json or use ' +\x0d\n      'the .mjs extension.'\x2C\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Loads a CommonJS module via the ESM Loader sync CommonJS translator.\x0d\n * This translator creates its own version of the `require` function passed into CommonJS modules.\x0d\n * Any monkey patches applied to the CommonJS Loader will not affect this module.\x0d\n * Any `require` calls in this module will load all children in the same way.\x0d\n * @param {import('internal/modules/cjs/loader').Module} module - The module to load.\x0d\n * @param {string} source - The source code of the module.\x0d\n * @param {string} url - The URL of the module.\x0d\n * @param {string} filename - The filename of the module.\x0d\n */\x0d\nfunction loadCJSModule(module\x2C source\x2C url\x2C filename) {\x0d\n  let compileResult;\x0d\n  const hostDefinedOptionId = vm_dynamic_import_default_internal;\x0d\n  const importModuleDynamically = vm_dynamic_import_default_internal;\x0d\n  try {\x0d\n    compileResult = internalCompileFunction(\x0d\n      source\x2C                         // code\x2C\x0d\n      filename\x2C                       // filename\x0d\n      0\x2C                              // lineOffset\x0d\n      0\x2C                              // columnOffset\x2C\x0d\n      undefined\x2C                      // cachedData\x0d\n      false\x2C                          // produceCachedData\x0d\n      undefined\x2C                      // parsingContext\x0d\n      undefined\x2C                      // contextExtensions\x0d\n      [                               // params\x0d\n        'exports'\x2C\x0d\n        'require'\x2C\x0d\n        'module'\x2C\x0d\n        '__filename'\x2C\x0d\n        '__dirname'\x2C\x0d\n      ]\x2C\x0d\n      hostDefinedOptionId\x2C           // hostDefinedOptionsId\x0d\n      importModuleDynamically\x2C       // importModuleDynamically\x0d\n    );\x0d\n  } catch (err) {\x0d\n    enrichCJSError(err\x2C source\x2C filename);\x0d\n    throw err;\x0d\n  }\x0d\n  // Cache the source map for the cjs module if present.\x0d\n  if (compileResult.sourceMapURL) {\x0d\n    maybeCacheSourceMap(url\x2C source\x2C null\x2C false\x2C undefined\x2C compileResult.sourceMapURL);\x0d\n  }\x0d\n\x0d\n  const compiledWrapper = compileResult.function;\x0d\n\x0d\n  const __dirname = dirname(filename);\x0d\n  // eslint-disable-next-line func-name-matching\x2Cfunc-style\x0d\n  const requireFn = function require(specifier) {\x0d\n    let importAttributes = kEmptyObject;\x0d\n    if (!StringPrototypeStartsWith(specifier\x2C 'node:') && !BuiltinModule.normalizeRequirableId(specifier)) {\x0d\n      // TODO: do not depend on the monkey-patchable CJS loader here.\x0d\n      const path = CJSModule._resolveFilename(specifier\x2C module);\x0d\n      switch (extname(path)) {\x0d\n        case '.json':\x0d\n          importAttributes = { __proto__: null\x2C type: 'json' };\x0d\n          break;\x0d\n        case '.node':\x0d\n          return CJSModule._load(specifier\x2C module);\x0d\n        default:\x0d\n            // fall through\x0d\n      }\x0d\n      specifier = `${pathToFileURL(path)}`;\x0d\n    }\x0d\n    const job = asyncESM.esmLoader.getModuleJobSync(specifier\x2C url\x2C importAttributes);\x0d\n    job.runSync();\x0d\n    return cjsCache.get(job.url).exports;\x0d\n  };\x0d\n  setOwnProperty(requireFn\x2C 'resolve'\x2C function resolve(specifier) {\x0d\n    if (!StringPrototypeStartsWith(specifier\x2C 'node:')) {\x0d\n      const path = CJSModule._resolveFilename(specifier\x2C module);\x0d\n      if (specifier !== path) {\x0d\n        specifier = `${pathToFileURL(path)}`;\x0d\n      }\x0d\n    }\x0d\n    const { url: resolvedURL } = asyncESM.esmLoader.resolveSync(specifier\x2C url\x2C kEmptyObject);\x0d\n    return StringPrototypeStartsWith(resolvedURL\x2C 'file://') ? fileURLToPath(resolvedURL) : resolvedURL;\x0d\n  });\x0d\n  setOwnProperty(requireFn\x2C 'main'\x2C process.mainModule);\x0d\n\x0d\n  ReflectApply(compiledWrapper\x2C module.exports\x2C\x0d\n               [module.exports\x2C requireFn\x2C module\x2C filename\x2C __dirname]);\x0d\n  setOwnProperty(module\x2C 'loaded'\x2C true);\x0d\n}\x0d\n\x0d\n// TODO: can we use a weak map instead?\x0d\nconst cjsCache = new SafeMap();\x0d\n/**\x0d\n * Creates a ModuleWrap object for a CommonJS module.\x0d\n * @param {string} url - The URL of the module.\x0d\n * @param {string} source - The source code of the module.\x0d\n * @param {boolean} isMain - Whether the module is the main module.\x0d\n * @param {typeof loadCJSModule} [loadCJS=loadCJSModule] - The function to load the CommonJS module.\x0d\n * @returns {ModuleWrap} The ModuleWrap object for the CommonJS module.\x0d\n */\x0d\nfunction createCJSModuleWrap(url\x2C source\x2C isMain\x2C loadCJS = loadCJSModule) {\x0d\n  debug(`Translating CJSModule ${url}`);\x0d\n\x0d\n  const filename = StringPrototypeStartsWith(url\x2C 'file://') ? fileURLToPath(url) : url;\x0d\n  // In case the source was not provided by the `load` step\x2C we need fetch it now.\x0d\n  source = stringify(source ?? getSource(new URL(url)).source);\x0d\n\x0d\n  const { exportNames\x2C module } = cjsPreparseModuleExports(filename\x2C source);\x0d\n  cjsCache.set(url\x2C module);\x0d\n  const namesWithDefault = exportNames.has('default') ?\x0d\n    [...exportNames] : ['default'\x2C ...exportNames];\x0d\n\x0d\n  if (isMain) {\x0d\n    setOwnProperty(process\x2C 'mainModule'\x2C module);\x0d\n  }\x0d\n\x0d\n  return new ModuleWrap(url\x2C undefined\x2C namesWithDefault\x2C function() {\x0d\n    debug(`Loading CJSModule ${url}`);\x0d\n\x0d\n    if (!module.loaded) {\x0d\n      loadCJS(module\x2C source\x2C url\x2C filename);\x0d\n    }\x0d\n\x0d\n    let exports;\x0d\n    if (cjsExportsCache.has(module)) {\x0d\n      exports = cjsExportsCache.get(module);\x0d\n      cjsExportsCache.delete(module);\x0d\n    } else {\x0d\n      ({ exports } = module);\x0d\n    }\x0d\n    for (const exportName of exportNames) {\x0d\n      if (!ObjectPrototypeHasOwnProperty(exports\x2C exportName) ||\x0d\n          exportName === 'default') {\x0d\n        continue;\x0d\n      }\x0d\n      // We might trigger a getter -> dont fail.\x0d\n      let value;\x0d\n      try {\x0d\n        value = exports[exportName];\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n      this.setExport(exportName\x2C value);\x0d\n    }\x0d\n    this.setExport('default'\x2C exports);\x0d\n  });\x0d\n\x0d\n}\x0d\n\x0d\n// Handle CommonJS modules referenced by `require` calls.\x0d\n// This translator function must be sync\x2C as `require` is sync.\x0d\ntranslators.set('require-commonjs'\x2C (url\x2C source\x2C isMain) => {\x0d\n  assert(cjsParse);\x0d\n\x0d\n  return createCJSModuleWrap(url\x2C source);\x0d\n});\x0d\n\x0d\n// Handle CommonJS modules referenced by `import` statements or expressions\x2C\x0d\n// or as the initial entry point when the ESM loader handles a CommonJS entry.\x0d\ntranslators.set('commonjs'\x2C async function commonjsStrategy(url\x2C source\x2C\x0d\n                                                            isMain) {\x0d\n  if (!cjsParse) {\x0d\n    await initCJSParse();\x0d\n  }\x0d\n\x0d\n  // For backward-compatibility\x2C it's possible to return a nullish value for\x0d\n  // CJS source associated with a file: URL. In this case\x2C the source is\x0d\n  // obtained by calling the monkey-patchable CJS loader.\x0d\n  const cjsLoader = source == null ? (module\x2C source\x2C url\x2C filename) => {\x0d\n    try {\x0d\n      assert(module === CJSModule._cache[filename]);\x0d\n      CJSModule._load(filename);\x0d\n    } catch (err) {\x0d\n      enrichCJSError(err\x2C source\x2C filename);\x0d\n      throw err;\x0d\n    }\x0d\n  } : loadCJSModule;\x0d\n\x0d\n  try {\x0d\n    // We still need to read the FS to detect the exports.\x0d\n    source ??= readFileSync(new URL(url)\x2C 'utf8');\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  return createCJSModuleWrap(url\x2C source\x2C isMain\x2C cjsLoader);\x0d\n\x0d\n});\x0d\n\x0d\n/**\x0d\n * Pre-parses a CommonJS module's exports and re-exports.\x0d\n * @param {string} filename - The filename of the module.\x0d\n * @param {string} [source] - The source code of the module.\x0d\n */\x0d\nfunction cjsPreparseModuleExports(filename\x2C source) {\x0d\n  // TODO: Do we want to keep hitting the user mutable CJS loader here?\x0d\n  let module = CJSModule._cache[filename];\x0d\n  if (module) {\x0d\n    const cached = cjsParseCache.get(module);\x0d\n    if (cached) {\x0d\n      return { module\x2C exportNames: cached.exportNames };\x0d\n    }\x0d\n  }\x0d\n  const loaded = Boolean(module);\x0d\n  if (!loaded) {\x0d\n    module = new CJSModule(filename);\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n    CJSModule._cache[filename] = module;\x0d\n  }\x0d\n\x0d\n  let exports\x2C reexports;\x0d\n  try {\x0d\n    ({ exports\x2C reexports } = cjsParse(source || ''));\x0d\n  } catch {\x0d\n    exports = [];\x0d\n    reexports = [];\x0d\n  }\x0d\n\x0d\n  const exportNames = new SafeSet(new SafeArrayIterator(exports));\x0d\n\x0d\n  // Set first for cycles.\x0d\n  cjsParseCache.set(module\x2C { source\x2C exportNames });\x0d\n\x0d\n  if (reexports.length) {\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n    for (let i = 0; i < reexports.length; i++) {\x0d\n      const reexport = reexports[i];\x0d\n      let resolved;\x0d\n      try {\x0d\n        // TODO: this should be calling the `resolve` hook chain instead.\x0d\n        // Doing so would mean dropping support for CJS in the loader thread\x2C as\x0d\n        // this call needs to be sync from the perspective of the main thread\x2C\x0d\n        // which we can do via HooksProxy and Atomics\x2C but we can't do within\x0d\n        // the loaders thread. Until this is done\x2C the lexer will use the\x0d\n        // monkey-patchable CJS loader to get the path to the module file to\x0d\n        // load (which may or may not be aligned with the URL that the `resolve`\x0d\n        // hook have returned).\x0d\n        resolved = CJSModule._resolveFilename(reexport\x2C module);\x0d\n      } catch {\x0d\n        continue;\x0d\n      }\x0d\n      // TODO: this should be calling the `load` hook chain and check if it returns\x0d\n      // `format: 'commonjs'` instead of relying on file extensions.\x0d\n      const ext = extname(resolved);\x0d\n      if ((ext === '.js' || ext === '.cjs' || !CJSModule._extensions[ext]) &&\x0d\n      isAbsolute(resolved)) {\x0d\n        // TODO: this should be calling the `load` hook chain to get the source\x0d\n        // (and fallback to reading the FS only if the source is nullish).\x0d\n        const source = readFileSync(resolved\x2C 'utf-8');\x0d\n        const { exportNames: reexportNames } = cjsPreparseModuleExports(resolved\x2C source);\x0d\n        for (const name of reexportNames) {\x0d\n          exportNames.add(name);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return { module\x2C exportNames };\x0d\n}\x0d\n\x0d\n// Strategy for loading a node builtin CommonJS module that isn't\x0d\n// through normal resolution\x0d\ntranslators.set('builtin'\x2C function builtinStrategy(url) {\x0d\n  debug(`Translating BuiltinModule ${url}`);\x0d\n  // Slice 'node:' scheme\x0d\n  const id = StringPrototypeSlice(url\x2C 5);\x0d\n  const module = loadBuiltinModule(id\x2C url);\x0d\n  cjsCache.set(url\x2C module);\x0d\n  if (!StringPrototypeStartsWith(url\x2C 'node:') || !module) {\x0d\n    throw new ERR_UNKNOWN_BUILTIN_MODULE(url);\x0d\n  }\x0d\n  debug(`Loading BuiltinModule ${url}`);\x0d\n  return module.getESMFacade();\x0d\n});\x0d\n\x0d\n// Strategy for loading a JSON file\x0d\nconst isWindows = process.platform === 'win32';\x0d\ntranslators.set('json'\x2C function jsonStrategy(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing JSON modules');\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  debug(`Loading JSONModule ${url}`);\x0d\n  const pathname = StringPrototypeStartsWith(url\x2C 'file:') ?\x0d\n    fileURLToPath(url) : null;\x0d\n  const shouldCheckAndPopulateCJSModuleCache =\x0d\n    // We want to involve the CJS loader cache only for `file:` URL with no search query and no hash.\x0d\n    pathname && !StringPrototypeIncludes(url\x2C '?') && !StringPrototypeIncludes(url\x2C '#');\x0d\n  let modulePath;\x0d\n  let module;\x0d\n  if (shouldCheckAndPopulateCJSModuleCache) {\x0d\n    modulePath = isWindows ?\x0d\n      StringPrototypeReplaceAll(pathname\x2C '/'\x2C '\\\\') : pathname;\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  source = stringify(source);\x0d\n  if (shouldCheckAndPopulateCJSModuleCache) {\x0d\n    // A require call could have been called on the same file during loading and\x0d\n    // that resolves synchronously. To make sure we always return the identical\x0d\n    // export\x2C we have to check again if the module already exists or not.\x0d\n    // TODO: remove CJS loader from here as well.\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  try {\x0d\n    const exports = JSONParse(stripBOM(source));\x0d\n    module = {\x0d\n      exports\x2C\x0d\n      loaded: true\x2C\x0d\n    };\x0d\n  } catch (err) {\x0d\n    // TODO (BridgeAR): We could add a NodeCore error that wraps the JSON\x0d\n    // parse error instead of just manipulating the original error message.\x0d\n    // That would allow to add further properties and maybe additional\x0d\n    // debugging information.\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n  if (shouldCheckAndPopulateCJSModuleCache) {\x0d\n    CJSModule._cache[modulePath] = module;\x0d\n  }\x0d\n  cjsCache.set(url\x2C module);\x0d\n  return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n    debug(`Parsing JSONModule ${url}`);\x0d\n    this.setExport('default'\x2C module.exports);\x0d\n  });\x0d\n});\x0d\n\x0d\n// Strategy for loading a wasm module\x0d\ntranslators.set('wasm'\x2C async function(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing WebAssembly modules');\x0d\n\x0d\n  assertBufferSource(source\x2C false\x2C 'load');\x0d\n\x0d\n  debug(`Translating WASMModule ${url}`);\x0d\n\x0d\n  let compiled;\x0d\n  try {\x0d\n    compiled = await WebAssembly.compile(source);\x0d\n  } catch (err) {\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  const imports =\x0d\n      ArrayPrototypeMap(WebAssembly.Module.imports(compiled)\x2C\x0d\n                        ({ module }) => module);\x0d\n  const exports =\x0d\n    ArrayPrototypeMap(WebAssembly.Module.exports(compiled)\x2C\x0d\n                      ({ name }) => name);\x0d\n\x0d\n  const createDynamicModule = require(\x0d\n    'internal/modules/esm/create_dynamic_module');\x0d\n  return createDynamicModule(imports\x2C exports\x2C url\x2C (reflect) => {\x0d\n    const { exports } = new WebAssembly.Instance(compiled\x2C reflect.imports);\x0d\n    for (const expt of ObjectKeys(exports)) {\x0d\n      reflect.exports[expt].set(exports[expt]);\x0d\n    }\x0d\n  }).module;\x0d\n});\x0d\n
code-source-info,0x125aa7b25a4,84,0,20775,C0O0C4O20775,,
code-creation,JS,10,124980,0x125aa7b2fbc,845, node:internal/modules/esm/translators:1:1,0x125aa7b2518,~
code-source-info,0x125aa7b2fbc
code-creation,JS,10,125201,0x125aa7b3934,30,setCustomizations node:internal/modules/esm/loader:181:20,0x125aa7a9070,~
code-source-info,0x125aa7b3934,81,5395,5629,C0O5419C5O5440C9O5463C13O5537C17O5520C23O5582C24O5610C29O5628,,
code-creation,JS,10,125247,0x125aa7b3a34,22,forceLoadHooks node:internal/modules/esm/loader:444:17,0x125aa7a9540,~
code-source-info,0x125aa7b3a34,81,15522,15576,C0O15532C2O15537C8O15552C13O15554C21O15575,,
code-creation,JS,10,125311,0x125aa7b3bfc,139, node:internal/main/repl:39:21,0x3151437fd60,~
code-source-info,0x125aa7b3bfc,79,1147,2016,C0O1160C5O1168C16O1202C33O1215C37O1168C42O1286C48O1286C53O1325C61O1352C71O1325C77O1793C85O1797C91O1843C105O1882C116O1926C127O1977C132O1843C138O2015,,
code-creation,JS,10,125366,0x125aa7b400c,38,log node:internal/console/constructor:378:6,0x1d9b726abd0,~
code-source-info,0x125aa7b400c,46,11960,12046,C0O11960C3O11977C5O11982C7O11981C13O11999C18O12016C20O12015C24O12033C30O11998C37O12045,,
code-creation,JS,10,125412,0x125aa7b4154,50,value node:internal/console/constructor:339:20,0x1d9b726a910,~
code-source-info,0x125aa7b4154,46,10465,10641,C0O10494C2O10499C4O10498C8O10524C13O10518C19O10541C24O10541C29O10583C36O10603C44O10590C49O10634,,
code-creation,JS,10,125452,0x125aa7b426c,18,get node:internal/console/constructor:213:14,0x125aa789268,~
code-source-info,0x125aa7b426c,46,6256,6351,C0O6274C6O6287C9O6303C13O6294C15O6324C17O6338,,
code-creation,JS,10,125517,0x125aa7b445c,104,getStdout node:internal/bootstrap/switches/is_main_thread:148:19,0x1d9b72707b8,~
script-source,53,node:internal/bootstrap/switches/is_main_thread,'use strict';\x0d\n\x0d\nconst { ObjectDefineProperty } = primordials;\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\nconst {\x0d\n  namespace: {\x0d\n    addSerializeCallback\x2C\x0d\n    isBuildingSnapshot\x2C\x0d\n  }\x2C\x0d\n} = require('internal/v8/startup_snapshot');\x0d\n// TODO(joyeecheung): deprecate and remove these underscore methods\x0d\nprocess._debugProcess = rawMethods._debugProcess;\x0d\nprocess._debugEnd = rawMethods._debugEnd;\x0d\n\x0d\n// See the discussion in https://github.com/nodejs/node/issues/19009 and\x0d\n// https://github.com/nodejs/node/pull/34010 for why these are no-ops.\x0d\n// Five word summary: they were broken beyond repair.\x0d\nprocess._startProfilerIdleNotifier = () => {};\x0d\nprocess._stopProfilerIdleNotifier = () => {};\x0d\n\x0d\nfunction defineStream(name\x2C getter) {\x0d\n  ObjectDefineProperty(process\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get: getter\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\ndefineStream('stdout'\x2C getStdout);\x0d\ndefineStream('stdin'\x2C getStdin);\x0d\ndefineStream('stderr'\x2C getStderr);\x0d\n\x0d\n// Worker threads don't receive signals.\x0d\nconst {\x0d\n  startListeningIfSignal\x2C\x0d\n  stopListeningIfSignal\x2C\x0d\n} = require('internal/process/signal');\x0d\nprocess.on('newListener'\x2C startListeningIfSignal);\x0d\nprocess.on('removeListener'\x2C stopListeningIfSignal);\x0d\n\x0d\n// ---- keep the attachment of the wrappers above so that it's easier to ----\x0d\n// ----              compare the setups side-by-side                    -----\x0d\n\x0d\nconst { guessHandleType } = require('internal/util');\x0d\n\x0d\nfunction createWritableStdioStream(fd) {\x0d\n  let stream;\x0d\n  // Note stream._type is used for test-module-load-list.js\x0d\n  switch (guessHandleType(fd)) {\x0d\n    case 'TTY': {\x0d\n      const tty = require('tty');\x0d\n      stream = new tty.WriteStream(fd);\x0d\n      stream._type = 'tty';\x0d\n      break;\x0d\n    }\x0d\n\x0d\n    case 'FILE': {\x0d\n      const SyncWriteStream = require('internal/fs/sync_write_stream');\x0d\n      stream = new SyncWriteStream(fd\x2C { autoClose: false });\x0d\n      stream._type = 'fs';\x0d\n      break;\x0d\n    }\x0d\n\x0d\n    case 'PIPE':\x0d\n    case 'TCP': {\x0d\n      const net = require('net');\x0d\n\x0d\n      // If fd is already being used for the IPC channel\x2C libuv will return\x0d\n      // an error when trying to use it again. In that case\x2C create the socket\x0d\n      // using the existing handle instead of the fd.\x0d\n      if (process.channel && process.channel.fd === fd) {\x0d\n        const { kChannelHandle } = require('internal/child_process');\x0d\n        stream = new net.Socket({\x0d\n          handle: process[kChannelHandle]\x2C\x0d\n          readable: false\x2C\x0d\n          writable: true\x2C\x0d\n        });\x0d\n      } else {\x0d\n        stream = new net.Socket({\x0d\n          fd\x2C\x0d\n          readable: false\x2C\x0d\n          writable: true\x2C\x0d\n        });\x0d\n      }\x0d\n\x0d\n      stream._type = 'pipe';\x0d\n      break;\x0d\n    }\x0d\n\x0d\n    default: {\x0d\n      // Provide a dummy black-hole output for e.g. non-console\x0d\n      // Windows applications.\x0d\n      const { Writable } = require('stream');\x0d\n      stream = new Writable({\x0d\n        write(buf\x2C enc\x2C cb) {\x0d\n          cb();\x0d\n        }\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // For supporting legacy API we put the FD here.\x0d\n  stream.fd = fd;\x0d\n\x0d\n  stream._isStdio = true;\x0d\n\x0d\n  return stream;\x0d\n}\x0d\n\x0d\nfunction dummyDestroy(err\x2C cb) {\x0d\n  cb(err);\x0d\n  this._undestroy();\x0d\n\x0d\n  // We need to emit 'close' anyway so that the closing\x0d\n  // of the stream is observable. We just make sure we\x0d\n  // are not going to do it twice.\x0d\n  // The 'close' event is needed so that finished and\x0d\n  // pipeline work correctly.\x0d\n  if (!this._writableState.emitClose) {\x0d\n    process.nextTick(() => {\x0d\n      this.emit('close');\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nlet stdin;\x0d\nlet stdout;\x0d\nlet stderr;\x0d\n\x0d\nlet stdoutDestroy;\x0d\nlet stderrDestroy;\x0d\n\x0d\nfunction refreshStdoutOnSigWinch() {\x0d\n  stdout._refreshSize();\x0d\n}\x0d\n\x0d\nfunction refreshStderrOnSigWinch() {\x0d\n  stderr._refreshSize();\x0d\n}\x0d\n\x0d\nfunction addCleanup(fn) {\x0d\n  if (isBuildingSnapshot()) {\x0d\n    addSerializeCallback(fn);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getStdout() {\x0d\n  if (stdout) return stdout;\x0d\n  stdout = createWritableStdioStream(1);\x0d\n  stdout.destroySoon = stdout.destroy;\x0d\n  // Override _destroy so that the fd is never actually closed.\x0d\n  stdoutDestroy = stdout._destroy;\x0d\n  stdout._destroy = dummyDestroy;\x0d\n  if (stdout.isTTY) {\x0d\n    process.on('SIGWINCH'\x2C refreshStdoutOnSigWinch);\x0d\n  }\x0d\n\x0d\n  addCleanup(function cleanupStdout() {\x0d\n    stdout._destroy = stdoutDestroy;\x0d\n    stdout.destroy();\x0d\n    process.removeListener('SIGWINCH'\x2C refreshStdoutOnSigWinch);\x0d\n    stdout = undefined;\x0d\n  });\x0d\n  // No need to add deserialize callback because stdout = undefined above\x0d\n  // causes the stream to be lazily initialized again later.\x0d\n  return stdout;\x0d\n}\x0d\n\x0d\nfunction getStderr() {\x0d\n  if (stderr) return stderr;\x0d\n  stderr = createWritableStdioStream(2);\x0d\n  stderr.destroySoon = stderr.destroy;\x0d\n  stderrDestroy = stderr._destroy;\x0d\n  // Override _destroy so that the fd is never actually closed.\x0d\n  stderr._destroy = dummyDestroy;\x0d\n  if (stderr.isTTY) {\x0d\n    process.on('SIGWINCH'\x2C refreshStderrOnSigWinch);\x0d\n  }\x0d\n  addCleanup(function cleanupStderr() {\x0d\n    stderr._destroy = stderrDestroy;\x0d\n    stderr.destroy();\x0d\n    process.removeListener('SIGWINCH'\x2C refreshStderrOnSigWinch);\x0d\n    stderr = undefined;\x0d\n  });\x0d\n  // No need to add deserialize callback because stderr = undefined above\x0d\n  // causes the stream to be lazily initialized again later.\x0d\n  return stderr;\x0d\n}\x0d\n\x0d\nfunction getStdin() {\x0d\n  if (stdin) return stdin;\x0d\n  const fd = 0;\x0d\n\x0d\n  switch (guessHandleType(fd)) {\x0d\n    case 'TTY': {\x0d\n      const tty = require('tty');\x0d\n      stdin = new tty.ReadStream(fd);\x0d\n      break;\x0d\n    }\x0d\n\x0d\n    case 'FILE': {\x0d\n      const fs = require('fs');\x0d\n      stdin = new fs.ReadStream(null\x2C { fd: fd\x2C autoClose: false });\x0d\n      break;\x0d\n    }\x0d\n\x0d\n    case 'PIPE':\x0d\n    case 'TCP': {\x0d\n      const net = require('net');\x0d\n\x0d\n      // It could be that process has been started with an IPC channel\x0d\n      // sitting on fd=0\x2C in such case the pipe for this fd is already\x0d\n      // present and creating a new one will lead to the assertion failure\x0d\n      // in libuv.\x0d\n      if (process.channel && process.channel.fd === fd) {\x0d\n        stdin = new net.Socket({\x0d\n          handle: process.channel\x2C\x0d\n          readable: true\x2C\x0d\n          writable: false\x2C\x0d\n          manualStart: true\x2C\x0d\n        });\x0d\n      } else {\x0d\n        stdin = new net.Socket({\x0d\n          fd: fd\x2C\x0d\n          readable: true\x2C\x0d\n          writable: false\x2C\x0d\n          manualStart: true\x2C\x0d\n        });\x0d\n      }\x0d\n      // Make sure the stdin can't be `.end()`-ed\x0d\n      stdin._writableState.ended = true;\x0d\n      break;\x0d\n    }\x0d\n\x0d\n    default: {\x0d\n      // Provide a dummy contentless input for e.g. non-console\x0d\n      // Windows applications.\x0d\n      const { Readable } = require('stream');\x0d\n      stdin = new Readable({ read() {} });\x0d\n      stdin.push(null);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // For supporting legacy API we put the FD here.\x0d\n  stdin.fd = fd;\x0d\n\x0d\n  // `stdin` starts out life in a paused state\x2C but node doesn't\x0d\n  // know yet. Explicitly to readStop() it to put it in the\x0d\n  // not-reading state.\x0d\n  if (stdin._handle && stdin._handle.readStop) {\x0d\n    stdin._handle.reading = false;\x0d\n    stdin._readableState.reading = false;\x0d\n    stdin._handle.readStop();\x0d\n  }\x0d\n\x0d\n  // If the user calls stdin.pause()\x2C then we need to stop reading\x0d\n  // once the stream implementation does so (one nextTick later)\x2C\x0d\n  // so that the process can close down.\x0d\n  stdin.on('pause'\x2C () => {\x0d\n    process.nextTick(onpause);\x0d\n  });\x0d\n\x0d\n  function onpause() {\x0d\n    if (!stdin._handle)\x0d\n      return;\x0d\n    if (stdin._handle.reading && !stdin.readableFlowing) {\x0d\n      stdin._readableState.reading = false;\x0d\n      stdin._handle.reading = false;\x0d\n      stdin._handle.readStop();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  addCleanup(function cleanupStdin() {\x0d\n    stdin.destroy();\x0d\n    stdin = undefined;\x0d\n  });\x0d\n  // No need to add deserialize callback because stdin = undefined above\x0d\n  // causes the stream to be lazily initialized again later.\x0d\n  return stdin;\x0d\n}\x0d\n\x0d\n// Used by internal tests.\x0d\nrawMethods.resetStdioForTesting = function() {\x0d\n  stdin = undefined;\x0d\n  stdout = undefined;\x0d\n  stderr = undefined;\x0d\n};\x0d\n\x0d\n// Needed by the module loader and generally needed everywhere.\x0d\nrequire('fs');\x0d\nrequire('util');\x0d\nrequire('url'); // eslint-disable-line no-restricted-modules\x0d\ninternalBinding('module_wrap');\x0d\nrequire('internal/modules/cjs/loader');\x0d\nrequire('internal/modules/esm/utils');\x0d\n\x0d\n// Needed to refresh the time origin.\x0d\nrequire('internal/perf/utils');\x0d\n// Needed to register the async hooks.\x0d\nif (internalBinding('config').hasInspector) {\x0d\n  require('internal/inspector_async_hook');\x0d\n}\x0d\n// Needed to set the wasm web API callbacks.\x0d\ninternalBinding('wasm_web_api');\x0d\n// Needed to detect whether it's on main thread.\x0d\ninternalBinding('worker');\x0d\n// Needed by most execution modes.\x0d\nrequire('internal/modules/run_main');\x0d\n// Needed to refresh DNS configurations.\x0d\nrequire('internal/dns/utils');\x0d\n// Needed by almost all execution modes. It's fine to\x0d\n// load them into the snapshot as long as we don't run\x0d\n// any of the initialization.\x0d\nrequire('internal/process/pre_execution');\x0d\n
code-source-info,0x125aa7b445c,53,3897,4591,C0O3905C6O3917C8O3931C9O3935C15O3944C19O3942C21O3977C27O4005C31O3996C35O4082C38O4105C45O4096C51O4118C56O4134C60O4153C63O4164C69O4178C72O4186C83O4186C89O4237C97O4237C101O4574C103O4588,,
code-creation,JS,10,126014,0x125aa7b533c,280,createWritableStdioStream node:internal/bootstrap/switches/is_main_thread:47:35,0x1d9b72705d0,~
code-source-info,0x125aa7b533c,53,1504,3134,C0O1518C2O1590C7O1598C42O1659C48O1659C53O1699C60O1691C66O1723C68O1736C72O1752C74O1819C80O1819C85O1897C95O1877C101O1931C103O1944C107O1959C109O2031C115O2031C120O2268C123O2280C132O2299C137O2307C144O2310C149O2356C155O2356C160O2337C165O2417C180O2452C189O2409C197O2580C209O2600C215O2572C221O2690C223O2703C227O2720C229O2877C235O2877C240O2864C245O2903C250O2936C260O2912C266O3067C268O3077C272O3088C273O3104C277O3117C279O3131,,
code-creation,JS,10,126088,0x125aa7b55ec,21,guessHandleType node:internal/util:826:25,0x1d9b7247148,~
code-source-info,0x125aa7b55ec,16,23854,23930,C0O23877C5O23877C10O23902C17O23920C20O23927,,
code-creation,Eval,10,126369,0x125aa7b60d4,5, node:tty:1:1,0x125aa7b5ec0,~
script-source,85,node:tty,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst net = require('net');\x0d\nconst { TTY\x2C isTTY } = internalBinding('tty_wrap');\x0d\nconst errors = require('internal/errors');\x0d\nconst { ERR_INVALID_FD\x2C ERR_TTY_INIT_FAILED } = errors.codes;\x0d\nconst {\x0d\n  getColorDepth\x2C\x0d\n  hasColors\x2C\x0d\n} = require('internal/tty');\x0d\n\x0d\n// Lazy loaded for startup performance.\x0d\nlet readline;\x0d\n\x0d\nfunction isatty(fd) {\x0d\n  return NumberIsInteger(fd) && fd >= 0 && fd <= 2147483647 &&\x0d\n         isTTY(fd);\x0d\n}\x0d\n\x0d\nfunction ReadStream(fd\x2C options) {\x0d\n  if (!(this instanceof ReadStream))\x0d\n    return new ReadStream(fd\x2C options);\x0d\n  if (fd >> 0 !== fd || fd < 0)\x0d\n    throw new ERR_INVALID_FD(fd);\x0d\n\x0d\n  const ctx = {};\x0d\n  const tty = new TTY(fd\x2C ctx);\x0d\n  if (ctx.code !== undefined) {\x0d\n    throw new ERR_TTY_INIT_FAILED(ctx);\x0d\n  }\x0d\n\x0d\n  net.Socket.call(this\x2C {\x0d\n    readableHighWaterMark: 0\x2C\x0d\n    handle: tty\x2C\x0d\n    manualStart: true\x2C\x0d\n    ...options\x2C\x0d\n  });\x0d\n\x0d\n  this.isRaw = false;\x0d\n  this.isTTY = true;\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(ReadStream.prototype\x2C net.Socket.prototype);\x0d\nObjectSetPrototypeOf(ReadStream\x2C net.Socket);\x0d\n\x0d\nReadStream.prototype.setRawMode = function(flag) {\x0d\n  flag = !!flag;\x0d\n  const err = this._handle?.setRawMode(flag);\x0d\n  if (err) {\x0d\n    this.emit('error'\x2C new errors.ErrnoException(err\x2C 'setRawMode'));\x0d\n    return this;\x0d\n  }\x0d\n  this.isRaw = flag;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction WriteStream(fd) {\x0d\n  if (!(this instanceof WriteStream))\x0d\n    return new WriteStream(fd);\x0d\n  if (fd >> 0 !== fd || fd < 0)\x0d\n    throw new ERR_INVALID_FD(fd);\x0d\n\x0d\n  const ctx = {};\x0d\n  const tty = new TTY(fd\x2C ctx);\x0d\n  if (ctx.code !== undefined) {\x0d\n    throw new ERR_TTY_INIT_FAILED(ctx);\x0d\n  }\x0d\n\x0d\n  net.Socket.call(this\x2C {\x0d\n    readableHighWaterMark: 0\x2C\x0d\n    handle: tty\x2C\x0d\n    manualStart: true\x2C\x0d\n  });\x0d\n\x0d\n  // Prevents interleaved or dropped stdout/stderr output for terminals.\x0d\n  // As noted in the following reference\x2C local TTYs tend to be quite fast and\x0d\n  // this behavior has become expected due historical functionality on OS X\x2C\x0d\n  // even though it was originally intended to change in v1.0.2 (Libuv 1.2.1).\x0d\n  // Ref: https://github.com/nodejs/node/pull/1771#issuecomment-119351671\x0d\n  this._handle.setBlocking(true);\x0d\n\x0d\n  const winSize = new Array(2);\x0d\n  const err = this._handle.getWindowSize(winSize);\x0d\n  if (!err) {\x0d\n    this.columns = winSize[0];\x0d\n    this.rows = winSize[1];\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(WriteStream.prototype\x2C net.Socket.prototype);\x0d\nObjectSetPrototypeOf(WriteStream\x2C net.Socket);\x0d\n\x0d\nWriteStream.prototype.isTTY = true;\x0d\n\x0d\nWriteStream.prototype.getColorDepth = getColorDepth;\x0d\n\x0d\nWriteStream.prototype.hasColors = hasColors;\x0d\n\x0d\nWriteStream.prototype._refreshSize = function() {\x0d\n  const oldCols = this.columns;\x0d\n  const oldRows = this.rows;\x0d\n  const winSize = new Array(2);\x0d\n  const err = this._handle.getWindowSize(winSize);\x0d\n  if (err) {\x0d\n    this.emit('error'\x2C new errors.ErrnoException(err\x2C 'getWindowSize'));\x0d\n    return;\x0d\n  }\x0d\n  const { 0: newCols\x2C 1: newRows } = winSize;\x0d\n  if (oldCols !== newCols || oldRows !== newRows) {\x0d\n    this.columns = newCols;\x0d\n    this.rows = newRows;\x0d\n    this.emit('resize');\x0d\n  }\x0d\n};\x0d\n\x0d\n// Backwards-compat\x0d\nWriteStream.prototype.cursorTo = function(x\x2C y\x2C callback) {\x0d\n  if (readline === undefined) readline = require('readline');\x0d\n  return readline.cursorTo(this\x2C x\x2C y\x2C callback);\x0d\n};\x0d\nWriteStream.prototype.moveCursor = function(dx\x2C dy\x2C callback) {\x0d\n  if (readline === undefined) readline = require('readline');\x0d\n  return readline.moveCursor(this\x2C dx\x2C dy\x2C callback);\x0d\n};\x0d\nWriteStream.prototype.clearLine = function(dir\x2C callback) {\x0d\n  if (readline === undefined) readline = require('readline');\x0d\n  return readline.clearLine(this\x2C dir\x2C callback);\x0d\n};\x0d\nWriteStream.prototype.clearScreenDown = function(callback) {\x0d\n  if (readline === undefined) readline = require('readline');\x0d\n  return readline.clearScreenDown(this\x2C callback);\x0d\n};\x0d\nWriteStream.prototype.getWindowSize = function() {\x0d\n  return [this.columns\x2C this.rows];\x0d\n};\x0d\n\x0d\nmodule.exports = { isatty\x2C ReadStream\x2C WriteStream };\x0d\n
code-source-info,0x125aa7b60d4,85,0,5230,C0O0C4O5230,,
code-creation,JS,10,126628,0x125aa7b67fc,426, node:tty:1:1,0x125aa7b6048,~
code-source-info,0x125aa7b67fc
code-creation,Eval,10,127963,0x125aa7becc4,5, node:net:1:1,0x125aa7bd6c0,~
script-source,86,node:net,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  Boolean\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  MathMax\x2C\x0d\n  Number\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolAsyncDispose\x2C\x0d\n  SymbolDispose\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst stream = require('stream');\x0d\nlet debug = require('internal/util/debuglog').debuglog('net'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst {\x0d\n  kReinitializeHandle\x2C\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  normalizedArgsSymbol\x2C\x0d\n  makeSyncWrite\x2C\x0d\n} = require('internal/net');\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  UV_EADDRINUSE\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_ENOTCONN\x2C\x0d\n  UV_ECANCELED\x2C\x0d\n  UV_ETIMEDOUT\x2C\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { ShutdownWrap } = internalBinding('stream_wrap');\x0d\nconst {\x0d\n  TCP\x2C\x0d\n  TCPConnectWrap\x2C\x0d\n  constants: TCPConstants\x2C\x0d\n} = internalBinding('tcp_wrap');\x0d\nconst {\x0d\n  Pipe\x2C\x0d\n  PipeConnectWrap\x2C\x0d\n  constants: PipeConstants\x2C\x0d\n} = internalBinding('pipe_wrap');\x0d\nconst {\x0d\n  newAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x2C\x0d\n} = require('internal/async_hooks');\x0d\nconst {\x0d\n  writevGeneric\x2C\x0d\n  writeGeneric\x2C\x0d\n  onStreamRead\x2C\x0d\n  kAfterAsyncWrite\x2C\x0d\n  kHandle\x2C\x0d\n  kUpdateTimer\x2C\x0d\n  setStreamTimeout\x2C\x0d\n  kBuffer\x2C\x0d\n  kBufferCb\x2C\x0d\n  kBufferGen\x2C\x0d\n} = require('internal/stream_base_commons');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ADDRESS_FAMILY\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FD_TYPE\x2C\x0d\n    ERR_INVALID_IP_ADDRESS\x2C\x0d\n    ERR_INVALID_HANDLE_TYPE\x2C\x0d\n    ERR_SERVER_ALREADY_LISTEN\x2C\x0d\n    ERR_SERVER_NOT_RUNNING\x2C\x0d\n    ERR_SOCKET_CONNECTION_TIMEOUT\x2C\x0d\n    ERR_SOCKET_CLOSED\x2C\x0d\n    ERR_SOCKET_CLOSED_BEFORE_CONNECTION\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n  }\x2C\x0d\n  ErrnoException\x2C\x0d\n  ExceptionWithHostPort\x2C\x0d\n  genericNodeError\x2C\x0d\n  NodeAggregateError\x2C\x0d\n  UVExceptionWithHostPort\x2C\x0d\n} = require('internal/errors');\x0d\nconst { isUint8Array } = require('internal/util/types');\x0d\nconst { queueMicrotask } = require('internal/process/task_queues');\x0d\nconst { kEmptyObject\x2C guessHandleType\x2C promisify } = require('internal/util');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst kLastWriteQueueSize = Symbol('lastWriteQueueSize');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\n// Lazy loaded to improve startup performance.\x0d\nlet cluster;\x0d\nlet dns;\x0d\nlet BlockList;\x0d\nlet SocketAddress;\x0d\nlet autoSelectFamilyDefault = getOptionValue('--network-family-autoselection');\x0d\nlet autoSelectFamilyAttemptTimeoutDefault = 250;\x0d\n\x0d\nconst { clearTimeout\x2C setTimeout } = require('timers');\x0d\nconst { kTimeout } = require('internal/timers');\x0d\n\x0d\nconst DEFAULT_IPV4_ADDR = '0.0.0.0';\x0d\nconst DEFAULT_IPV6_ADDR = '::';\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nconst kPerfHooksNetConnectContext = Symbol('kPerfHooksNetConnectContext');\x0d\n\x0d\nconst dc = require('diagnostics_channel');\x0d\nconst netClientSocketChannel = dc.channel('net.client.socket');\x0d\nconst netServerSocketChannel = dc.channel('net.server.socket');\x0d\n\x0d\nconst {\x0d\n  hasObserver\x2C\x0d\n  startPerf\x2C\x0d\n  stopPerf\x2C\x0d\n} = require('internal/perf/observe');\x0d\nconst { getDefaultHighWaterMark } = require('internal/streams/state');\x0d\n\x0d\nfunction getFlags(ipv6Only) {\x0d\n  return ipv6Only === true ? TCPConstants.UV_TCP_IPV6ONLY : 0;\x0d\n}\x0d\n\x0d\nfunction createHandle(fd\x2C is_server) {\x0d\n  validateInt32(fd\x2C 'fd'\x2C 0);\x0d\n  const type = guessHandleType(fd);\x0d\n  if (type === 'PIPE') {\x0d\n    return new Pipe(\x0d\n      is_server ? PipeConstants.SERVER : PipeConstants.SOCKET\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  if (type === 'TCP') {\x0d\n    return new TCP(\x0d\n      is_server ? TCPConstants.SERVER : TCPConstants.SOCKET\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_FD_TYPE(type);\x0d\n}\x0d\n\x0d\n\x0d\nfunction getNewAsyncId(handle) {\x0d\n  return (!handle || typeof handle.getAsyncId !== 'function') ?\x0d\n    newAsyncId() : handle.getAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\nfunction isPipeName(s) {\x0d\n  return typeof s === 'string' && toNumber(s) === false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new TCP or IPC server\x0d\n * @param {{\x0d\n *   allowHalfOpen?: boolean;\x0d\n *   pauseOnConnect?: boolean;\x0d\n *   }} [options]\x0d\n * @param {Function} [connectionListener]\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nfunction createServer(options\x2C connectionListener) {\x0d\n  return new Server(options\x2C connectionListener);\x0d\n}\x0d\n\x0d\n\x0d\n// Target API:\x0d\n//\x0d\n// let s = net.connect({port: 80\x2C host: 'google.com'}\x2C function() {\x0d\n//   ...\x0d\n// });\x0d\n//\x0d\n// There are various forms:\x0d\n//\x0d\n// connect(options\x2C [cb])\x0d\n// connect(port\x2C [host]\x2C [cb])\x0d\n// connect(path\x2C [cb]);\x0d\n//\x0d\nfunction connect(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  const options = normalized[0];\x0d\n  debug('createConnection'\x2C normalized);\x0d\n  const socket = new Socket(options);\x0d\n\x0d\n  if (netClientSocketChannel.hasSubscribers) {\x0d\n    netClientSocketChannel.publish({\x0d\n      socket\x2C\x0d\n    });\x0d\n  }\x0d\n  if (options.timeout) {\x0d\n    socket.setTimeout(options.timeout);\x0d\n  }\x0d\n\x0d\n  return socket.connect(normalized);\x0d\n}\x0d\n\x0d\nfunction getDefaultAutoSelectFamily() {\x0d\n  return autoSelectFamilyDefault;\x0d\n}\x0d\n\x0d\nfunction setDefaultAutoSelectFamily(value) {\x0d\n  validateBoolean(value\x2C 'value');\x0d\n  autoSelectFamilyDefault = value;\x0d\n}\x0d\n\x0d\nfunction getDefaultAutoSelectFamilyAttemptTimeout() {\x0d\n  return autoSelectFamilyAttemptTimeoutDefault;\x0d\n}\x0d\n\x0d\nfunction setDefaultAutoSelectFamilyAttemptTimeout(value) {\x0d\n  validateInt32(value\x2C 'value'\x2C 1);\x0d\n\x0d\n  if (value < 10) {\x0d\n    value = 10;\x0d\n  }\x0d\n\x0d\n  autoSelectFamilyAttemptTimeoutDefault = value;\x0d\n}\x0d\n\x0d\n// Returns an array [options\x2C cb]\x2C where options is an object\x2C\x0d\n// cb is either a function or null.\x0d\n// Used to normalize arguments of Socket.prototype.connect() and\x0d\n// Server.prototype.listen(). Possible combinations of parameters:\x0d\n//   (options[...][\x2C cb])\x0d\n//   (path[...][\x2C cb])\x0d\n//   ([port][\x2C host][...][\x2C cb])\x0d\n// For Socket.prototype.connect()\x2C the [...] part is ignored\x0d\n// For Server.prototype.listen()\x2C the [...] part is [\x2C backlog]\x0d\n// but will not be handled here (handled in listen())\x0d\nfunction normalizeArgs(args) {\x0d\n  let arr;\x0d\n\x0d\n  if (args.length === 0) {\x0d\n    arr = [{}\x2C null];\x0d\n    arr[normalizedArgsSymbol] = true;\x0d\n    return arr;\x0d\n  }\x0d\n\x0d\n  const arg0 = args[0];\x0d\n  let options = {};\x0d\n  if (typeof arg0 === 'object' && arg0 !== null) {\x0d\n    // (options[...][\x2C cb])\x0d\n    options = arg0;\x0d\n  } else if (isPipeName(arg0)) {\x0d\n    // (path[...][\x2C cb])\x0d\n    options.path = arg0;\x0d\n  } else {\x0d\n    // ([port][\x2C host][...][\x2C cb])\x0d\n    options.port = arg0;\x0d\n    if (args.length > 1 && typeof args[1] === 'string') {\x0d\n      options.host = args[1];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const cb = args[args.length - 1];\x0d\n  if (typeof cb !== 'function')\x0d\n    arr = [options\x2C null];\x0d\n  else\x0d\n    arr = [options\x2C cb];\x0d\n\x0d\n  arr[normalizedArgsSymbol] = true;\x0d\n  return arr;\x0d\n}\x0d\n\x0d\n\x0d\n// Called when creating new Socket\x2C or when re-using a closed Socket\x0d\nfunction initSocketHandle(self) {\x0d\n  self._undestroy();\x0d\n  self._sockname = null;\x0d\n\x0d\n  // Handle creation may be deferred to bind() or connect() time.\x0d\n  if (self._handle) {\x0d\n    self._handle[owner_symbol] = self;\x0d\n    self._handle.onread = onStreamRead;\x0d\n    self[async_id_symbol] = getNewAsyncId(self._handle);\x0d\n\x0d\n    let userBuf = self[kBuffer];\x0d\n    if (userBuf) {\x0d\n      const bufGen = self[kBufferGen];\x0d\n      if (bufGen !== null) {\x0d\n        userBuf = bufGen();\x0d\n        if (!isUint8Array(userBuf))\x0d\n          return;\x0d\n        self[kBuffer] = userBuf;\x0d\n      }\x0d\n      self._handle.useUserBuffer(userBuf);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction closeSocketHandle(self\x2C isException\x2C isCleanupPending = false) {\x0d\n  if (self._handle) {\x0d\n    self._handle.close(() => {\x0d\n      debug('emit close');\x0d\n      self.emit('close'\x2C isException);\x0d\n      if (isCleanupPending) {\x0d\n        self._handle.onread = noop;\x0d\n        self._handle = null;\x0d\n        self._sockname = null;\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nconst kBytesRead = Symbol('kBytesRead');\x0d\nconst kBytesWritten = Symbol('kBytesWritten');\x0d\nconst kSetNoDelay = Symbol('kSetNoDelay');\x0d\nconst kSetKeepAlive = Symbol('kSetKeepAlive');\x0d\nconst kSetKeepAliveInitialDelay = Symbol('kSetKeepAliveInitialDelay');\x0d\n\x0d\nfunction Socket(options) {\x0d\n  if (!(this instanceof Socket)) return new Socket(options);\x0d\n  if (options?.objectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      'options.objectMode'\x2C\x0d\n      options.objectMode\x2C\x0d\n      'is not supported'\x2C\x0d\n    );\x0d\n  } else if (options?.readableObjectMode || options?.writableObjectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      `options.${\x0d\n        options.readableObjectMode ? 'readableObjectMode' : 'writableObjectMode'\x0d\n      }`\x2C\x0d\n      options.readableObjectMode || options.writableObjectMode\x2C\x0d\n      'is not supported'\x2C\x0d\n    );\x0d\n  }\x0d\n  if (typeof options?.keepAliveInitialDelay !== 'undefined') {\x0d\n    validateNumber(\x0d\n      options?.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\x2C\x0d\n    );\x0d\n\x0d\n    if (options.keepAliveInitialDelay < 0) {\x0d\n      options.keepAliveInitialDelay = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this.connecting = false;\x0d\n  // Problem with this is that users can supply their own handle\x2C that may not\x0d\n  // have _handle.getAsyncId(). In this case an[async_id_symbol] should\x0d\n  // probably be supplied by async_hooks.\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._hadError = false;\x0d\n  this[kHandle] = null;\x0d\n  this._parent = null;\x0d\n  this._host = null;\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n  this[kTimeout] = null;\x0d\n  this[kBuffer] = null;\x0d\n  this[kBufferCb] = null;\x0d\n  this[kBufferGen] = null;\x0d\n  this._closeAfterHandlingError = false;\x0d\n\x0d\n  if (typeof options === 'number')\x0d\n    options = { fd: options }; // Legacy interface.\x0d\n  else\x0d\n    options = { ...options };\x0d\n\x0d\n  // Default to *not* allowing half open sockets.\x0d\n  options.allowHalfOpen = Boolean(options.allowHalfOpen);\x0d\n  // For backwards compat do not emit close on destroy.\x0d\n  options.emitClose = false;\x0d\n  options.autoDestroy = true;\x0d\n  // Handle strings directly.\x0d\n  options.decodeStrings = false;\x0d\n  stream.Duplex.call(this\x2C options);\x0d\n\x0d\n  if (options.handle) {\x0d\n    this._handle = options.handle; // private\x0d\n    this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  } else if (options.fd !== undefined) {\x0d\n    const { fd } = options;\x0d\n    let err;\x0d\n\x0d\n    // createHandle will throw ERR_INVALID_FD_TYPE if `fd` is not\x0d\n    // a valid `PIPE` or `TCP` descriptor\x0d\n    this._handle = createHandle(fd\x2C false);\x0d\n\x0d\n    err = this._handle.open(fd);\x0d\n\x0d\n    // While difficult to fabricate\x2C in some architectures\x0d\n    // `open` may return an error code for valid file descriptors\x0d\n    // which cannot be opened. This is difficult to test as most\x0d\n    // un-openable fds will throw on `createHandle`\x0d\n    if (err)\x0d\n      throw new ErrnoException(err\x2C 'open');\x0d\n\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n\x0d\n    if ((fd === 1 || fd === 2) &&\x0d\n        (this._handle instanceof Pipe) && isWindows) {\x0d\n      // Make stdout and stderr blocking on Windows\x0d\n      err = this._handle.setBlocking(true);\x0d\n      if (err)\x0d\n        throw new ErrnoException(err\x2C 'setBlocking');\x0d\n\x0d\n      this._writev = null;\x0d\n      this._write = makeSyncWrite(fd);\x0d\n      // makeSyncWrite adjusts this value like the original handle would\x2C so\x0d\n      // we need to let it do that by turning it into a writable\x2C own\x0d\n      // property.\x0d\n      ObjectDefineProperty(this._handle\x2C 'bytesWritten'\x2C {\x0d\n        __proto__: null\x2C\x0d\n        value: 0\x2C writable: true\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const onread = options.onread;\x0d\n  if (onread !== null && typeof onread === 'object' &&\x0d\n      (isUint8Array(onread.buffer) || typeof onread.buffer === 'function') &&\x0d\n      typeof onread.callback === 'function') {\x0d\n    if (typeof onread.buffer === 'function') {\x0d\n      this[kBuffer] = true;\x0d\n      this[kBufferGen] = onread.buffer;\x0d\n    } else {\x0d\n      this[kBuffer] = onread.buffer;\x0d\n    }\x0d\n    this[kBufferCb] = onread.callback;\x0d\n  }\x0d\n\x0d\n  this[kSetNoDelay] = Boolean(options.noDelay);\x0d\n  this[kSetKeepAlive] = Boolean(options.keepAlive);\x0d\n  this[kSetKeepAliveInitialDelay] = ~~(options.keepAliveInitialDelay / 1000);\x0d\n\x0d\n  // Shut down the socket when we're finished with it.\x0d\n  this.on('end'\x2C onReadableStreamEnd);\x0d\n\x0d\n  initSocketHandle(this);\x0d\n\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  // If we have a handle\x2C then start the flow of data into the\x0d\n  // buffer.  if not\x2C then this will happen when we connect\x0d\n  if (this._handle && options.readable !== false) {\x0d\n    if (options.pauseOnCreate) {\x0d\n      // Stop the handle from reading and pause the stream\x0d\n      this._handle.reading = false;\x0d\n      this._handle.readStop();\x0d\n      this.readableFlowing = false;\x0d\n    } else if (!options.manualStart) {\x0d\n      this.read(0);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (options.signal) {\x0d\n    addClientAbortSignalOption(this\x2C options);\x0d\n  }\x0d\n\x0d\n  // Reserve properties\x0d\n  this.server = null;\x0d\n  this._server = null;\x0d\n\x0d\n  // Used after `.destroy()`\x0d\n  this[kBytesRead] = 0;\x0d\n  this[kBytesWritten] = 0;\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C stream.Duplex.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C stream.Duplex);\x0d\n\x0d\n// Refresh existing timeouts.\x0d\nSocket.prototype._unrefTimer = function _unrefTimer() {\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    if (s[kTimeout])\x0d\n      s[kTimeout].refresh();\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// The user has called .end()\x2C and all the bytes have been\x0d\n// sent out to the other side.\x0d\nSocket.prototype._final = function(cb) {\x0d\n  // If still connecting - defer handling `_final` until 'connect' will happen\x0d\n  if (this.connecting) {\x0d\n    debug('_final: not yet connected');\x0d\n    return this.once('connect'\x2C () => this._final(cb));\x0d\n  }\x0d\n\x0d\n  if (!this._handle)\x0d\n    return cb();\x0d\n\x0d\n  debug('_final: not ended\x2C call shutdown()');\x0d\n\x0d\n  const req = new ShutdownWrap();\x0d\n  req.oncomplete = afterShutdown;\x0d\n  req.handle = this._handle;\x0d\n  req.callback = cb;\x0d\n  const err = this._handle.shutdown(req);\x0d\n\x0d\n  if (err === 1 || err === UV_ENOTCONN)  // synchronous finish\x0d\n    return cb();\x0d\n  else if (err !== 0)\x0d\n    return cb(new ErrnoException(err\x2C 'shutdown'));\x0d\n};\x0d\n\x0d\nfunction afterShutdown() {\x0d\n  const self = this.handle[owner_symbol];\x0d\n\x0d\n  debug('afterShutdown destroyed=%j'\x2C self.destroyed);\x0d\n\x0d\n  this.callback();\x0d\n}\x0d\n\x0d\n// Provide a better error message when we call end() as a result\x0d\n// of the other side sending a FIN.  The standard 'write after end'\x0d\n// is overly vague\x2C and makes it seem like the user's code is to blame.\x0d\nfunction writeAfterFIN(chunk\x2C encoding\x2C cb) {\x0d\n  if (!this.writableEnded) {\x0d\n    return stream.Duplex.prototype.write.call(this\x2C chunk\x2C encoding\x2C cb);\x0d\n  }\x0d\n\x0d\n  if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  const er = genericNodeError(\x0d\n    'This socket has been ended by the other party'\x2C\x0d\n    { code: 'EPIPE' }\x2C\x0d\n  );\x0d\n  if (typeof cb === 'function') {\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C process.nextTick\x2C cb\x2C er);\x0d\n  }\x0d\n  this.destroy(er);\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nSocket.prototype.setTimeout = setStreamTimeout;\x0d\n\x0d\n\x0d\nSocket.prototype._onTimeout = function() {\x0d\n  const handle = this._handle;\x0d\n  const lastWriteQueueSize = this[kLastWriteQueueSize];\x0d\n  if (lastWriteQueueSize > 0 && handle) {\x0d\n    // `lastWriteQueueSize !== writeQueueSize` means there is\x0d\n    // an active write in progress\x2C so we suppress the timeout.\x0d\n    const { writeQueueSize } = handle;\x0d\n    if (lastWriteQueueSize !== writeQueueSize) {\x0d\n      this[kLastWriteQueueSize] = writeQueueSize;\x0d\n      this._unrefTimer();\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  debug('_onTimeout');\x0d\n  this.emit('timeout');\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setNoDelay = function(enable) {\x0d\n  // Backwards compatibility: assume true when `enable` is omitted\x0d\n  enable = Boolean(enable === undefined ? true : enable);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this[kSetNoDelay] = enable;\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (this._handle.setNoDelay && enable !== this[kSetNoDelay]) {\x0d\n    this[kSetNoDelay] = enable;\x0d\n    this._handle.setNoDelay(enable);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setKeepAlive = function(enable\x2C initialDelayMsecs) {\x0d\n  enable = Boolean(enable);\x0d\n  const initialDelay = ~~(initialDelayMsecs / 1000);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this[kSetKeepAlive] = enable;\x0d\n    this[kSetKeepAliveInitialDelay] = initialDelay;\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (!this._handle.setKeepAlive) {\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (enable !== this[kSetKeepAlive] ||\x0d\n      (\x0d\n        enable &&\x0d\n        this[kSetKeepAliveInitialDelay] !== initialDelay\x0d\n      )\x0d\n  ) {\x0d\n    this[kSetKeepAlive] = enable;\x0d\n    this[kSetKeepAliveInitialDelay] = initialDelay;\x0d\n    this._handle.setKeepAlive(enable\x2C initialDelay);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  return this._getsockname();\x0d\n};\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_connecting'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    return this.connecting;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'pending'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return !this._handle || this.connecting;\x0d\n  }\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'readyState'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    if (this.connecting) {\x0d\n      return 'opening';\x0d\n    } else if (this.readable && this.writable) {\x0d\n      return 'open';\x0d\n    } else if (this.readable && !this.writable) {\x0d\n      return 'readOnly';\x0d\n    } else if (!this.readable && this.writable) {\x0d\n      return 'writeOnly';\x0d\n    }\x0d\n    return 'closed';\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'bufferSize'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    if (this._handle) {\x0d\n      return this.writableLength;\x0d\n    }\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C kUpdateTimer\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    return this._unrefTimer;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n\x0d\nfunction tryReadStart(socket) {\x0d\n  // Not already reading\x2C start the flow\x0d\n  debug('Socket._handle.readStart');\x0d\n  socket._handle.reading = true;\x0d\n  const err = socket._handle.readStart();\x0d\n  if (err)\x0d\n    socket.destroy(new ErrnoException(err\x2C 'read'));\x0d\n}\x0d\n\x0d\n// Just call handle.readStart until we have enough in the buffer\x0d\nSocket.prototype._read = function(n) {\x0d\n  debug(\x0d\n    '_read - n'\x2C n\x2C\x0d\n    'isConnecting?'\x2C !!this.connecting\x2C\x0d\n    'hasHandle?'\x2C !!this._handle\x2C\x0d\n  );\x0d\n\x0d\n  if (this.connecting || !this._handle) {\x0d\n    debug('_read wait for connection');\x0d\n    this.once('connect'\x2C () => this._read(n));\x0d\n  } else if (!this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.end = function(data\x2C encoding\x2C callback) {\x0d\n  stream.Duplex.prototype.end.call(this\x2C\x0d\n                                   data\x2C encoding\x2C callback);\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype.resetAndDestroy = function() {\x0d\n  if (this._handle) {\x0d\n    if (!(this._handle instanceof TCP))\x0d\n      throw new ERR_INVALID_HANDLE_TYPE();\x0d\n    if (this.connecting) {\x0d\n      debug('reset wait for connection');\x0d\n      this.once('connect'\x2C () => this._reset());\x0d\n    } else {\x0d\n      this._reset();\x0d\n    }\x0d\n  } else {\x0d\n    this.destroy(new ERR_SOCKET_CLOSED());\x0d\n  }\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype.pause = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      this._handle.reading) {\x0d\n    this._handle.reading = false;\x0d\n    if (!this.destroyed) {\x0d\n      const err = this._handle.readStop();\x0d\n      if (err)\x0d\n        this.destroy(new ErrnoException(err\x2C 'read'));\x0d\n    }\x0d\n  }\x0d\n  return stream.Duplex.prototype.pause.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.resume = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.resume.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.read = function(n) {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.read.call(this\x2C n);\x0d\n};\x0d\n\x0d\n\x0d\n// Called when the 'end' event is emitted.\x0d\nfunction onReadableStreamEnd() {\x0d\n  if (!this.allowHalfOpen) {\x0d\n    this.write = writeAfterFIN;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.destroySoon = function() {\x0d\n  if (this.writable)\x0d\n    this.end();\x0d\n\x0d\n  if (this.writableFinished)\x0d\n    this.destroy();\x0d\n  else\x0d\n    this.once('finish'\x2C this.destroy);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._destroy = function(exception\x2C cb) {\x0d\n  debug('destroy');\x0d\n\x0d\n  this.connecting = false;\x0d\n\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    clearTimeout(s[kTimeout]);\x0d\n  }\x0d\n\x0d\n  debug('close');\x0d\n  if (this._handle) {\x0d\n    if (this !== process.stderr)\x0d\n      debug('close handle');\x0d\n    const isException = exception ? true : false;\x0d\n    // `bytesRead` and `kBytesWritten` should be accessible after `.destroy()`\x0d\n    this[kBytesRead] = this._handle.bytesRead;\x0d\n    this[kBytesWritten] = this._handle.bytesWritten;\x0d\n\x0d\n    if (this.resetAndClosing) {\x0d\n      this.resetAndClosing = false;\x0d\n      const err = this._handle.reset(() => {\x0d\n        debug('emit close');\x0d\n        this.emit('close'\x2C isException);\x0d\n      });\x0d\n      if (err)\x0d\n        this.emit('error'\x2C new ErrnoException(err\x2C 'reset'));\x0d\n    } else if (this._closeAfterHandlingError) {\x0d\n      // Enqueue closing the socket as a microtask\x2C so that the socket can be\x0d\n      // accessible when an `error` event is handled in the `next tick queue`.\x0d\n      queueMicrotask(() => closeSocketHandle(this\x2C isException\x2C true));\x0d\n    } else {\x0d\n      closeSocketHandle(this\x2C isException);\x0d\n    }\x0d\n\x0d\n    if (!this._closeAfterHandlingError) {\x0d\n      this._handle.onread = noop;\x0d\n      this._handle = null;\x0d\n      this._sockname = null;\x0d\n    }\x0d\n    cb(exception);\x0d\n  } else {\x0d\n    cb(exception);\x0d\n    process.nextTick(emitCloseNT\x2C this);\x0d\n  }\x0d\n\x0d\n  if (this._server) {\x0d\n    debug('has server');\x0d\n    this._server._connections--;\x0d\n    if (this._server._emitCloseIfDrained) {\x0d\n      this._server._emitCloseIfDrained();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype._reset = function() {\x0d\n  debug('reset connection');\x0d\n  this.resetAndClosing = true;\x0d\n  return this.destroy();\x0d\n};\x0d\n\x0d\nSocket.prototype._getpeername = function() {\x0d\n  if (!this._handle || !this._handle.getpeername || this.connecting) {\x0d\n    return this._peername || {};\x0d\n  } else if (!this._peername) {\x0d\n    const out = {};\x0d\n    const err = this._handle.getpeername(out);\x0d\n    if (err) return out;\x0d\n    this._peername = out;\x0d\n  }\x0d\n  return this._peername;\x0d\n};\x0d\n\x0d\nfunction protoGetter(name\x2C callback) {\x0d\n  ObjectDefineProperty(Socket.prototype\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    get: callback\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nprotoGetter('bytesRead'\x2C function bytesRead() {\x0d\n  return this._handle ? this._handle.bytesRead : this[kBytesRead];\x0d\n});\x0d\n\x0d\nprotoGetter('remoteAddress'\x2C function remoteAddress() {\x0d\n  return this._getpeername().address;\x0d\n});\x0d\n\x0d\nprotoGetter('remoteFamily'\x2C function remoteFamily() {\x0d\n  return this._getpeername().family;\x0d\n});\x0d\n\x0d\nprotoGetter('remotePort'\x2C function remotePort() {\x0d\n  return this._getpeername().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._getsockname = function() {\x0d\n  if (!this._handle || !this._handle.getsockname) {\x0d\n    return {};\x0d\n  } else if (!this._sockname) {\x0d\n    this._sockname = {};\x0d\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\x0d\n    this._handle.getsockname(this._sockname);\x0d\n  }\x0d\n  return this._sockname;\x0d\n};\x0d\n\x0d\n\x0d\nprotoGetter('localAddress'\x2C function localAddress() {\x0d\n  return this._getsockname().address;\x0d\n});\x0d\n\x0d\n\x0d\nprotoGetter('localPort'\x2C function localPort() {\x0d\n  return this._getsockname().port;\x0d\n});\x0d\n\x0d\nprotoGetter('localFamily'\x2C function localFamily() {\x0d\n  return this._getsockname().family;\x0d\n});\x0d\n\x0d\nSocket.prototype[kAfterAsyncWrite] = function() {\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n};\x0d\n\x0d\nSocket.prototype._writeGeneric = function(writev\x2C data\x2C encoding\x2C cb) {\x0d\n  // If we are still connecting\x2C then buffer this for later.\x0d\n  // The Writable logic will buffer up any more writes while\x0d\n  // waiting for this one to be done.\x0d\n  if (this.connecting) {\x0d\n    this._pendingData = data;\x0d\n    this._pendingEncoding = encoding;\x0d\n    this.once('connect'\x2C function connect() {\x0d\n      this.off('close'\x2C onClose);\x0d\n      this._writeGeneric(writev\x2C data\x2C encoding\x2C cb);\x0d\n    });\x0d\n    function onClose() {\x0d\n      cb(new ERR_SOCKET_CLOSED_BEFORE_CONNECTION());\x0d\n    }\x0d\n    this.once('close'\x2C onClose);\x0d\n    return;\x0d\n  }\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  if (!this._handle) {\x0d\n    cb(new ERR_SOCKET_CLOSED());\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  let req;\x0d\n  if (writev)\x0d\n    req = writevGeneric(this\x2C data\x2C cb);\x0d\n  else\x0d\n    req = writeGeneric(this\x2C data\x2C encoding\x2C cb);\x0d\n  if (req.async)\x0d\n    this[kLastWriteQueueSize] = req.bytes;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._writev = function(chunks\x2C cb) {\x0d\n  this._writeGeneric(true\x2C chunks\x2C ''\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._write = function(data\x2C encoding\x2C cb) {\x0d\n  this._writeGeneric(false\x2C data\x2C encoding\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias. Having this is probably being overly cautious\x2C but it doesn't\x0d\n// really hurt anyone either. This can probably be removed safely if desired.\x0d\nprotoGetter('_bytesDispatched'\x2C function _bytesDispatched() {\x0d\n  return this._handle ? this._handle.bytesWritten : this[kBytesWritten];\x0d\n});\x0d\n\x0d\nprotoGetter('bytesWritten'\x2C function bytesWritten() {\x0d\n  let bytes = this._bytesDispatched;\x0d\n  const data = this._pendingData;\x0d\n  const encoding = this._pendingEncoding;\x0d\n  const writableBuffer = this.writableBuffer;\x0d\n\x0d\n  if (!writableBuffer)\x0d\n    return undefined;\x0d\n\x0d\n  for (const el of writableBuffer) {\x0d\n    bytes += el.chunk instanceof Buffer ?\x0d\n      el.chunk.length :\x0d\n      Buffer.byteLength(el.chunk\x2C el.encoding);\x0d\n  }\x0d\n\x0d\n  if (ArrayIsArray(data)) {\x0d\n    // Was a writev\x2C iterate over chunks to get total length\x0d\n    for (let i = 0; i < data.length; i++) {\x0d\n      const chunk = data[i];\x0d\n\x0d\n      if (data.allBuffers || chunk instanceof Buffer)\x0d\n        bytes += chunk.length;\x0d\n      else\x0d\n        bytes += Buffer.byteLength(chunk.chunk\x2C chunk.encoding);\x0d\n    }\x0d\n  } else if (data) {\x0d\n    // Writes are either a string or a Buffer.\x0d\n    if (typeof data !== 'string')\x0d\n      bytes += data.length;\x0d\n    else\x0d\n      bytes += Buffer.byteLength(data\x2C encoding);\x0d\n  }\x0d\n\x0d\n  return bytes;\x0d\n});\x0d\n\x0d\n\x0d\nfunction checkBindError(err\x2C port\x2C handle) {\x0d\n  // EADDRINUSE may not be reported until we call listen() or connect().\x0d\n  // To complicate matters\x2C a failed bind() followed by listen() or connect()\x0d\n  // will implicitly bind to a random port. Ergo\x2C check that the socket is\x0d\n  // bound to the expected port before calling listen() or connect().\x0d\n  //\x0d\n  // FIXME(bnoordhuis) Doesn't work for pipe handles\x2C they don't have a\x0d\n  // getsockname() method. Non-issue for now\x2C the cluster module doesn't\x0d\n  // really support pipes anyway.\x0d\n  if (err === 0 && port > 0 && handle.getsockname) {\x0d\n    const out = {};\x0d\n    err = handle.getsockname(out);\x0d\n    if (err === 0 && port !== out.port) {\x0d\n      debug(`checkBindError\x2C bound to ${out.port} instead of ${port}`);\x0d\n      err = UV_EADDRINUSE;\x0d\n    }\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n\x0d\nfunction internalConnect(\x0d\n  self\x2C address\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C flags) {\x0d\n  // TODO return promise from Socket.prototype.connect which\x0d\n  // wraps _connectReq.\x0d\n\x0d\n  assert(self.connecting);\x0d\n\x0d\n  let err;\x0d\n\x0d\n  if (localAddress || localPort) {\x0d\n    if (addressType === 4) {\x0d\n      localAddress = localAddress || DEFAULT_IPV4_ADDR;\x0d\n      err = self._handle.bind(localAddress\x2C localPort);\x0d\n    } else { // addressType === 6\x0d\n      localAddress = localAddress || DEFAULT_IPV6_ADDR;\x0d\n      err = self._handle.bind6(localAddress\x2C localPort\x2C flags);\x0d\n    }\x0d\n    debug('connect: binding to localAddress: %s and localPort: %d (addressType: %d)'\x2C\x0d\n          localAddress\x2C localPort\x2C addressType);\x0d\n\x0d\n    err = checkBindError(err\x2C localPort\x2C self._handle);\x0d\n    if (err) {\x0d\n      const ex = new ExceptionWithHostPort(err\x2C 'bind'\x2C localAddress\x2C localPort);\x0d\n      self.destroy(ex);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  debug('connect: attempting to connect to %s:%d (addressType: %d)'\x2C address\x2C port\x2C addressType);\x0d\n  self.emit('connectionAttempt'\x2C address\x2C port\x2C addressType);\x0d\n\x0d\n  if (addressType === 6 || addressType === 4) {\x0d\n    const req = new TCPConnectWrap();\x0d\n    req.oncomplete = afterConnect;\x0d\n    req.address = address;\x0d\n    req.port = port;\x0d\n    req.localAddress = localAddress;\x0d\n    req.localPort = localPort;\x0d\n    req.addressType = addressType;\x0d\n\x0d\n    if (addressType === 4)\x0d\n      err = self._handle.connect(req\x2C address\x2C port);\x0d\n    else\x0d\n      err = self._handle.connect6(req\x2C address\x2C port);\x0d\n  } else {\x0d\n    const req = new PipeConnectWrap();\x0d\n    req.address = address;\x0d\n    req.oncomplete = afterConnect;\x0d\n\x0d\n    err = self._handle.connect(req\x2C address);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    const sockname = self._getsockname();\x0d\n    let details;\x0d\n\x0d\n    if (sockname) {\x0d\n      details = sockname.address + ':' + sockname.port;\x0d\n    }\x0d\n\x0d\n    const ex = new ExceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port\x2C details);\x0d\n    self.destroy(ex);\x0d\n  } else if ((addressType === 6 || addressType === 4) && hasObserver('net')) {\x0d\n    startPerf(self\x2C kPerfHooksNetConnectContext\x2C { type: 'net'\x2C name: 'connect'\x2C detail: { host: address\x2C port } });\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction internalConnectMultiple(context\x2C canceled) {\x0d\n  clearTimeout(context[kTimeout]);\x0d\n  const self = context.socket;\x0d\n\x0d\n  // We were requested to abort. Stop all operations\x0d\n  if (self._aborted) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // All connections have been tried without success\x2C destroy with error\x0d\n  if (canceled || context.current === context.addresses.length) {\x0d\n    if (context.errors.length === 0) {\x0d\n      self.destroy(new ERR_SOCKET_CONNECTION_TIMEOUT());\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    self.destroy(new NodeAggregateError(context.errors));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  assert(self.connecting);\x0d\n\x0d\n  const current = context.current++;\x0d\n\x0d\n  if (current > 0) {\x0d\n    self[kReinitializeHandle](new TCP(TCPConstants.SOCKET));\x0d\n  }\x0d\n\x0d\n  const { localPort\x2C port\x2C flags } = context;\x0d\n  const { address\x2C family: addressType } = context.addresses[current];\x0d\n  let localAddress;\x0d\n  let err;\x0d\n\x0d\n  if (localPort) {\x0d\n    if (addressType === 4) {\x0d\n      localAddress = DEFAULT_IPV4_ADDR;\x0d\n      err = self._handle.bind(localAddress\x2C localPort);\x0d\n    } else { // addressType === 6\x0d\n      localAddress = DEFAULT_IPV6_ADDR;\x0d\n      err = self._handle.bind6(localAddress\x2C localPort\x2C flags);\x0d\n    }\x0d\n\x0d\n    debug('connect/multiple: binding to localAddress: %s and localPort: %d (addressType: %d)'\x2C\x0d\n          localAddress\x2C localPort\x2C addressType);\x0d\n\x0d\n    err = checkBindError(err\x2C localPort\x2C self._handle);\x0d\n    if (err) {\x0d\n      ArrayPrototypePush(context.errors\x2C new ExceptionWithHostPort(err\x2C 'bind'\x2C localAddress\x2C localPort));\x0d\n      internalConnectMultiple(context);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  debug('connect/multiple: attempting to connect to %s:%d (addressType: %d)'\x2C address\x2C port\x2C addressType);\x0d\n  self.emit('connectionAttempt'\x2C address\x2C port\x2C addressType);\x0d\n\x0d\n  const req = new TCPConnectWrap();\x0d\n  req.oncomplete = FunctionPrototypeBind(afterConnectMultiple\x2C undefined\x2C context\x2C current);\x0d\n  req.address = address;\x0d\n  req.port = port;\x0d\n  req.localAddress = localAddress;\x0d\n  req.localPort = localPort;\x0d\n  req.addressType = addressType;\x0d\n\x0d\n  ArrayPrototypePush(self.autoSelectFamilyAttemptedAddresses\x2C `${address}:${port}`);\x0d\n\x0d\n  if (addressType === 4) {\x0d\n    err = self._handle.connect(req\x2C address\x2C port);\x0d\n  } else {\x0d\n    err = self._handle.connect6(req\x2C address\x2C port);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    const sockname = self._getsockname();\x0d\n    let details;\x0d\n\x0d\n    if (sockname) {\x0d\n      details = sockname.address + ':' + sockname.port;\x0d\n    }\x0d\n\x0d\n    const ex = new ExceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port\x2C details);\x0d\n    ArrayPrototypePush(context.errors\x2C ex);\x0d\n\x0d\n    self.emit('connectionAttemptFailed'\x2C address\x2C port\x2C addressType\x2C ex);\x0d\n    internalConnectMultiple(context);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (current < context.addresses.length - 1) {\x0d\n    debug('connect/multiple: setting the attempt timeout to %d ms'\x2C context.timeout);\x0d\n\x0d\n    // If the attempt has not returned an error\x2C start the connection timer\x0d\n    context[kTimeout] = setTimeout(internalConnectMultipleTimeout\x2C context.timeout\x2C context\x2C req\x2C self._handle);\x0d\n  }\x0d\n}\x0d\n\x0d\nSocket.prototype.connect = function(...args) {\x0d\n  let normalized;\x0d\n  // If passed an array\x2C it's treated as an array of arguments that have\x0d\n  // already been normalized (so we don't normalize more than once). This has\x0d\n  // been solved before in https://github.com/nodejs/node/pull/12342\x2C but was\x0d\n  // reverted as it had unintended side effects.\x0d\n  if (ArrayIsArray(args[0]) && args[0][normalizedArgsSymbol]) {\x0d\n    normalized = args[0];\x0d\n  } else {\x0d\n    normalized = normalizeArgs(args);\x0d\n  }\x0d\n  const options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('connect'\x2C cb);\x0d\n  }\x0d\n\x0d\n  // If the parent is already connecting\x2C do not attempt to connect again\x0d\n  if (this._parent && this._parent.connecting) {\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // options.port === null will be checked later.\x0d\n  if (options.port === undefined && options.path == null)\x0d\n    throw new ERR_MISSING_ARGS(['options'\x2C 'port'\x2C 'path']);\x0d\n\x0d\n  if (this.write !== Socket.prototype.write)\x0d\n    this.write = Socket.prototype.write;\x0d\n\x0d\n  if (this.destroyed) {\x0d\n    this._handle = null;\x0d\n    this._peername = null;\x0d\n    this._sockname = null;\x0d\n  }\x0d\n\x0d\n  const { path } = options;\x0d\n  const pipe = !!path;\x0d\n  debug('pipe'\x2C pipe\x2C path);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this._handle = pipe ?\x0d\n      new Pipe(PipeConstants.SOCKET) :\x0d\n      new TCP(TCPConstants.SOCKET);\x0d\n    initSocketHandle(this);\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  this.connecting = true;\x0d\n\x0d\n  if (pipe) {\x0d\n    validateString(path\x2C 'options.path');\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C internalConnect\x2C this\x2C path\x2C\x0d\n    );\x0d\n  } else {\x0d\n    lookupAndConnect(this\x2C options);\x0d\n  }\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype[kReinitializeHandle] = function reinitializeHandle(handle) {\x0d\n  this._handle?.close();\x0d\n\x0d\n  this._handle = handle;\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  initSocketHandle(this);\x0d\n};\x0d\n\x0d\nfunction socketToDnsFamily(family) {\x0d\n  switch (family) {\x0d\n    case 'IPv4':\x0d\n      return 4;\x0d\n    case 'IPv6':\x0d\n      return 6;\x0d\n  }\x0d\n\x0d\n  return family;\x0d\n}\x0d\n\x0d\nfunction lookupAndConnect(self\x2C options) {\x0d\n  const { localAddress\x2C localPort } = options;\x0d\n  const host = options.host || 'localhost';\x0d\n  let { port\x2C autoSelectFamilyAttemptTimeout\x2C autoSelectFamily } = options;\x0d\n\x0d\n  if (localAddress && !isIP(localAddress)) {\x0d\n    throw new ERR_INVALID_IP_ADDRESS(localAddress);\x0d\n  }\x0d\n\x0d\n  if (localPort) {\x0d\n    validateNumber(localPort\x2C 'options.localPort');\x0d\n  }\x0d\n\x0d\n  if (typeof port !== 'undefined') {\x0d\n    if (typeof port !== 'number' && typeof port !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('options.port'\x2C\x0d\n                                     ['number'\x2C 'string']\x2C port);\x0d\n    }\x0d\n    validatePort(port);\x0d\n  }\x0d\n  port |= 0;\x0d\n\x0d\n\x0d\n  if (autoSelectFamily != null) {\x0d\n    validateBoolean(autoSelectFamily\x2C 'options.autoSelectFamily');\x0d\n  } else {\x0d\n    autoSelectFamily = autoSelectFamilyDefault;\x0d\n  }\x0d\n\x0d\n  if (autoSelectFamilyAttemptTimeout != null) {\x0d\n    validateInt32(autoSelectFamilyAttemptTimeout\x2C 'options.autoSelectFamilyAttemptTimeout'\x2C 1);\x0d\n\x0d\n    if (autoSelectFamilyAttemptTimeout < 10) {\x0d\n      autoSelectFamilyAttemptTimeout = 10;\x0d\n    }\x0d\n  } else {\x0d\n    autoSelectFamilyAttemptTimeout = autoSelectFamilyAttemptTimeoutDefault;\x0d\n  }\x0d\n\x0d\n  // If host is an IP\x2C skip performing a lookup\x0d\n  const addressType = isIP(host);\x0d\n  if (addressType) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C process.nextTick\x2C () => {\x0d\n      if (self.connecting)\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C host\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C\x0d\n        );\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (options.lookup != null)\x0d\n    validateFunction(options.lookup\x2C 'options.lookup');\x0d\n\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  const dnsopts = {\x0d\n    family: socketToDnsFamily(options.family)\x2C\x0d\n    hints: options.hints || 0\x2C\x0d\n  };\x0d\n\x0d\n  if (!isWindows &&\x0d\n      dnsopts.family !== 4 &&\x0d\n      dnsopts.family !== 6 &&\x0d\n      dnsopts.hints === 0) {\x0d\n    dnsopts.hints = dns.ADDRCONFIG;\x0d\n  }\x0d\n\x0d\n  debug('connect: find host'\x2C host);\x0d\n  debug('connect: dns options'\x2C dnsopts);\x0d\n  self._host = host;\x0d\n  const lookup = options.lookup || dns.lookup;\x0d\n\x0d\n  if (dnsopts.family !== 4 && dnsopts.family !== 6 && !localAddress && autoSelectFamily) {\x0d\n    debug('connect: autodetecting');\x0d\n\x0d\n    dnsopts.all = true;\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function() {\x0d\n      lookupAndConnectMultiple(\x0d\n        self\x2C\x0d\n        async_id_symbol\x2C\x0d\n        lookup\x2C\x0d\n        host\x2C\x0d\n        options\x2C\x0d\n        dnsopts\x2C\x0d\n        port\x2C\x0d\n        localAddress\x2C\x0d\n        localPort\x2C\x0d\n        autoSelectFamilyAttemptTimeout\x2C\x0d\n      );\x0d\n    });\x0d\n\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function() {\x0d\n    lookup(host\x2C dnsopts\x2C function emitLookup(err\x2C ip\x2C addressType) {\x0d\n      self.emit('lookup'\x2C err\x2C ip\x2C addressType\x2C host);\x0d\n\x0d\n      // It's possible we were destroyed while looking this up.\x0d\n      // XXX it would be great if we could cancel the promise returned by\x0d\n      // the look up.\x0d\n      if (!self.connecting) return;\x0d\n\x0d\n      if (err) {\x0d\n        // net.createConnection() creates a net.Socket object and immediately\x0d\n        // calls net.Socket.connect() on it (that's us). There are no event\x0d\n        // listeners registered yet so defer the error event to the next tick.\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (!isIP(ip)) {\x0d\n        err = new ERR_INVALID_IP_ADDRESS(ip);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (addressType !== 4 && addressType !== 6) {\x0d\n        err = new ERR_INVALID_ADDRESS_FAMILY(addressType\x2C\x0d\n                                             options.host\x2C\x0d\n                                             options.port);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else {\x0d\n        self._unrefTimer();\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C ip\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C\x0d\n        );\x0d\n      }\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction lookupAndConnectMultiple(\x0d\n  self\x2C async_id_symbol\x2C lookup\x2C host\x2C options\x2C dnsopts\x2C port\x2C localAddress\x2C localPort\x2C timeout\x2C\x0d\n) {\x0d\n  defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function emitLookup() {\x0d\n    lookup(host\x2C dnsopts\x2C function emitLookup(err\x2C addresses) {\x0d\n      // It's possible we were destroyed while looking this up.\x0d\n      // XXX it would be great if we could cancel the promise returned by\x0d\n      // the look up.\x0d\n      if (!self.connecting) {\x0d\n        return;\x0d\n      } else if (err) {\x0d\n        self.emit('lookup'\x2C err\x2C undefined\x2C undefined\x2C host);\x0d\n\x0d\n        // net.createConnection() creates a net.Socket object and immediately\x0d\n        // calls net.Socket.connect() on it (that's us). There are no event\x0d\n        // listeners registered yet so defer the error event to the next tick.\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      // Filter addresses by only keeping the one which are either IPv4 or IPV6.\x0d\n      // The first valid address determines which group has preference on the\x0d\n      // alternate family sorting which happens later.\x0d\n      const validAddresses = [[]\x2C []];\x0d\n      const validIps = [[]\x2C []];\x0d\n      let destinations;\x0d\n      for (let i = 0\x2C l = addresses.length; i < l; i++) {\x0d\n        const address = addresses[i];\x0d\n        const { address: ip\x2C family: addressType } = address;\x0d\n        self.emit('lookup'\x2C err\x2C ip\x2C addressType\x2C host);\x0d\n        // It's possible we were destroyed while looking this up.\x0d\n        if (!self.connecting) {\x0d\n          return;\x0d\n        }\x0d\n        if (isIP(ip) && (addressType === 4 || addressType === 6)) {\x0d\n          if (!destinations) {\x0d\n            destinations = addressType === 6 ? { 6: 0\x2C 4: 1 } : { 4: 0\x2C 6: 1 };\x0d\n          }\x0d\n\x0d\n          const destination = destinations[addressType];\x0d\n\x0d\n          // Only try an address once\x0d\n          if (!ArrayPrototypeIncludes(validIps[destination]\x2C ip)) {\x0d\n            ArrayPrototypePush(validAddresses[destination]\x2C address);\x0d\n            ArrayPrototypePush(validIps[destination]\x2C ip);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n\x0d\n      // When no AAAA or A records are available\x2C fail on the first one\x0d\n      if (!validAddresses[0].length && !validAddresses[1].length) {\x0d\n        const { address: firstIp\x2C family: firstAddressType } = addresses[0];\x0d\n\x0d\n        if (!isIP(firstIp)) {\x0d\n          err = new ERR_INVALID_IP_ADDRESS(firstIp);\x0d\n          process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n        } else if (firstAddressType !== 4 && firstAddressType !== 6) {\x0d\n          err = new ERR_INVALID_ADDRESS_FAMILY(firstAddressType\x2C\x0d\n                                               options.host\x2C\x0d\n                                               options.port);\x0d\n          process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n        }\x0d\n\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      // Sort addresses alternating families\x0d\n      const toAttempt = [];\x0d\n      for (let i = 0\x2C l = MathMax(validAddresses[0].length\x2C validAddresses[1].length); i < l; i++) {\x0d\n        if (i in validAddresses[0]) {\x0d\n          ArrayPrototypePush(toAttempt\x2C validAddresses[0][i]);\x0d\n        }\x0d\n        if (i in validAddresses[1]) {\x0d\n          ArrayPrototypePush(toAttempt\x2C validAddresses[1][i]);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (toAttempt.length === 1) {\x0d\n        debug('connect/multiple: only one address found\x2C switching back to single connection');\x0d\n        const { address: ip\x2C family: addressType } = toAttempt[0];\x0d\n\x0d\n        self._unrefTimer();\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C\x0d\n          ip\x2C\x0d\n          port\x2C\x0d\n          addressType\x2C\x0d\n          localAddress\x2C\x0d\n          localPort\x2C\x0d\n        );\x0d\n\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      self.autoSelectFamilyAttemptedAddresses = [];\x0d\n      debug('connect/multiple: will try the following addresses'\x2C toAttempt);\x0d\n\x0d\n      const context = {\x0d\n        socket: self\x2C\x0d\n        addresses: toAttempt\x2C\x0d\n        current: 0\x2C\x0d\n        port\x2C\x0d\n        localPort\x2C\x0d\n        timeout\x2C\x0d\n        [kTimeout]: null\x2C\x0d\n        errors: []\x2C\x0d\n      };\x0d\n\x0d\n      self._unrefTimer();\x0d\n      defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C internalConnectMultiple\x2C context);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction connectErrorNT(self\x2C err) {\x0d\n  self.destroy(err);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.ref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.ref === 'function') {\x0d\n    this._handle.ref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.unref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.unref === 'function') {\x0d\n    this._handle.unref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction afterConnect(status\x2C handle\x2C req\x2C readable\x2C writable) {\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  // Callback may come after call to destroy\x0d\n  if (self.destroyed) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  debug('afterConnect');\x0d\n\x0d\n  assert(self.connecting);\x0d\n  self.connecting = false;\x0d\n  self._sockname = null;\x0d\n\x0d\n  if (status === 0) {\x0d\n    if (self.readable && !readable) {\x0d\n      self.push(null);\x0d\n      self.read();\x0d\n    }\x0d\n    if (self.writable && !writable) {\x0d\n      self.end();\x0d\n    }\x0d\n    self._unrefTimer();\x0d\n\x0d\n    if (self[kSetNoDelay] && self._handle.setNoDelay) {\x0d\n      self._handle.setNoDelay(true);\x0d\n    }\x0d\n\x0d\n    if (self[kSetKeepAlive] && self._handle.setKeepAlive) {\x0d\n      self._handle.setKeepAlive(true\x2C self[kSetKeepAliveInitialDelay]);\x0d\n    }\x0d\n\x0d\n    self.emit('connect');\x0d\n    self.emit('ready');\x0d\n\x0d\n    // Start the first read\x2C or get an immediate EOF.\x0d\n    // this doesn't actually consume any bytes\x2C because len=0.\x0d\n    if (readable && !self.isPaused())\x0d\n      self.read(0);\x0d\n    if (self[kPerfHooksNetConnectContext] && hasObserver('net')) {\x0d\n      stopPerf(self\x2C kPerfHooksNetConnectContext);\x0d\n    }\x0d\n  } else {\x0d\n    let details;\x0d\n    if (req.localAddress && req.localPort) {\x0d\n      details = req.localAddress + ':' + req.localPort;\x0d\n    }\x0d\n    const ex = new ExceptionWithHostPort(status\x2C\x0d\n                                         'connect'\x2C\x0d\n                                         req.address\x2C\x0d\n                                         req.port\x2C\x0d\n                                         details);\x0d\n    if (details) {\x0d\n      ex.localAddress = req.localAddress;\x0d\n      ex.localPort = req.localPort;\x0d\n    }\x0d\n\x0d\n    self.emit('connectionAttemptFailed'\x2C req.address\x2C req.port\x2C req.addressType\x2C ex);\x0d\n    self.destroy(ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addClientAbortSignalOption(self\x2C options) {\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const { signal } = options;\x0d\n  let disposable;\x0d\n\x0d\n  function onAbort() {\x0d\n    disposable?.[SymbolDispose]();\x0d\n    self._aborted = true;\x0d\n  }\x0d\n\x0d\n  if (signal.aborted) {\x0d\n    process.nextTick(onAbort);\x0d\n  } else {\x0d\n    process.nextTick(() => {\x0d\n      disposable = EventEmitter.addAbortListener(signal\x2C onAbort);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction createConnectionError(req\x2C status) {\x0d\n  let details;\x0d\n\x0d\n  if (req.localAddress && req.localPort) {\x0d\n    details = req.localAddress + ':' + req.localPort;\x0d\n  }\x0d\n\x0d\n  const ex = new ExceptionWithHostPort(status\x2C\x0d\n                                       'connect'\x2C\x0d\n                                       req.address\x2C\x0d\n                                       req.port\x2C\x0d\n                                       details);\x0d\n  if (details) {\x0d\n    ex.localAddress = req.localAddress;\x0d\n    ex.localPort = req.localPort;\x0d\n  }\x0d\n\x0d\n  return ex;\x0d\n}\x0d\n\x0d\nfunction afterConnectMultiple(context\x2C current\x2C status\x2C handle\x2C req\x2C readable\x2C writable) {\x0d\n  debug('connect/multiple: connection attempt to %s:%s completed with status %s'\x2C req.address\x2C req.port\x2C status);\x0d\n\x0d\n  // Make sure another connection is not spawned\x0d\n  clearTimeout(context[kTimeout]);\x0d\n\x0d\n  // One of the connection has completed and correctly dispatched but after timeout\x2C ignore this one\x0d\n  if (status === 0 && current !== context.current - 1) {\x0d\n    debug('connect/multiple: ignoring successful but timedout connection to %s:%s'\x2C req.address\x2C req.port);\x0d\n    handle.close();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const self = context.socket;\x0d\n\x0d\n  // Some error occurred\x2C add to the list of exceptions\x0d\n  if (status !== 0) {\x0d\n    const ex = createConnectionError(req\x2C status);\x0d\n    ArrayPrototypePush(context.errors\x2C ex);\x0d\n\x0d\n    self.emit('connectionAttemptFailed'\x2C req.address\x2C req.port\x2C req.addressType\x2C ex);\x0d\n\x0d\n    // Try the next address\x2C unless we were aborted\x0d\n    if (context.socket.connecting) {\x0d\n      internalConnectMultiple(context\x2C status === UV_ECANCELED);\x0d\n    }\x0d\n\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (hasObserver('net')) {\x0d\n    startPerf(\x0d\n      self\x2C\x0d\n      kPerfHooksNetConnectContext\x2C\x0d\n      { type: 'net'\x2C name: 'connect'\x2C detail: { host: req.address\x2C port: req.port } }\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  afterConnect(status\x2C self._handle\x2C req\x2C readable\x2C writable);\x0d\n}\x0d\n\x0d\nfunction internalConnectMultipleTimeout(context\x2C req\x2C handle) {\x0d\n  debug('connect/multiple: connection to %s:%s timed out'\x2C req.address\x2C req.port);\x0d\n  context.socket.emit('connectionAttemptTimeout'\x2C req.address\x2C req.port\x2C req.addressType);\x0d\n\x0d\n  req.oncomplete = undefined;\x0d\n  ArrayPrototypePush(context.errors\x2C createConnectionError(req\x2C UV_ETIMEDOUT));\x0d\n  handle.close();\x0d\n\x0d\n  // Try the next address\x2C unless we were aborted\x0d\n  if (context.socket.connecting) {\x0d\n    internalConnectMultiple(context);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addServerAbortSignalOption(self\x2C options) {\x0d\n  if (options?.signal === undefined) {\x0d\n    return;\x0d\n  }\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const { signal } = options;\x0d\n  const onAborted = () => {\x0d\n    self.close();\x0d\n  };\x0d\n  if (signal.aborted) {\x0d\n    process.nextTick(onAborted);\x0d\n  } else {\x0d\n    const disposable = EventEmitter.addAbortListener(signal\x2C onAborted);\x0d\n    self.once('close'\x2C disposable[SymbolDispose]);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction Server(options\x2C connectionListener) {\x0d\n  if (!(this instanceof Server))\x0d\n    return new Server(options\x2C connectionListener);\x0d\n\x0d\n  EventEmitter.call(this);\x0d\n\x0d\n  if (typeof options === 'function') {\x0d\n    connectionListener = options;\x0d\n    options = kEmptyObject;\x0d\n    this.on('connection'\x2C connectionListener);\x0d\n  } else if (options == null || typeof options === 'object') {\x0d\n    options = { ...options };\x0d\n\x0d\n    if (typeof connectionListener === 'function') {\x0d\n      this.on('connection'\x2C connectionListener);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\x0d\n  }\x0d\n  if (typeof options.keepAliveInitialDelay !== 'undefined') {\x0d\n    validateNumber(\x0d\n      options.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\x2C\x0d\n    );\x0d\n\x0d\n    if (options.keepAliveInitialDelay < 0) {\x0d\n      options.keepAliveInitialDelay = 0;\x0d\n    }\x0d\n  }\x0d\n  if (typeof options.highWaterMark !== 'undefined') {\x0d\n    validateNumber(\x0d\n      options.highWaterMark\x2C 'options.highWaterMark'\x2C\x0d\n    );\x0d\n\x0d\n    if (options.highWaterMark < 0) {\x0d\n      options.highWaterMark = getDefaultHighWaterMark();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this._connections = 0;\x0d\n\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._handle = null;\x0d\n  this._usingWorkers = false;\x0d\n  this._workers = [];\x0d\n  this._unref = false;\x0d\n  this._listeningId = 1;\x0d\n\x0d\n  this.allowHalfOpen = options.allowHalfOpen || false;\x0d\n  this.pauseOnConnect = !!options.pauseOnConnect;\x0d\n  this.noDelay = Boolean(options.noDelay);\x0d\n  this.keepAlive = Boolean(options.keepAlive);\x0d\n  this.keepAliveInitialDelay = ~~(options.keepAliveInitialDelay / 1000);\x0d\n  this.highWaterMark = options.highWaterMark ?? getDefaultHighWaterMark();\x0d\n}\x0d\nObjectSetPrototypeOf(Server.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Server\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction toNumber(x) { return (x = Number(x)) >= 0 ? x : false; }\x0d\n\x0d\n// Returns handle if it can be created\x2C or error code if it can't\x0d\nfunction createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  let err = 0;\x0d\n  // Assign handle in listen\x2C and clean up if bind or listen fails\x0d\n  let handle;\x0d\n\x0d\n  let isTCP = false;\x0d\n  if (typeof fd === 'number' && fd >= 0) {\x0d\n    try {\x0d\n      handle = createHandle(fd\x2C true);\x0d\n    } catch (e) {\x0d\n      // Not a fd we can listen on.  This will trigger an error.\x0d\n      debug('listen invalid fd=%d:'\x2C fd\x2C e.message);\x0d\n      return UV_EINVAL;\x0d\n    }\x0d\n\x0d\n    err = handle.open(fd);\x0d\n    if (err)\x0d\n      return err;\x0d\n\x0d\n    assert(!address && !port);\x0d\n  } else if (port === -1 && addressType === -1) {\x0d\n    handle = new Pipe(PipeConstants.SERVER);\x0d\n    if (isWindows) {\x0d\n      const instances = NumberParseInt(process.env.NODE_PENDING_PIPE_INSTANCES);\x0d\n      if (!NumberIsNaN(instances)) {\x0d\n        handle.setPendingInstances(instances);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    handle = new TCP(TCPConstants.SERVER);\x0d\n    isTCP = true;\x0d\n  }\x0d\n\x0d\n  if (address || port || isTCP) {\x0d\n    debug('bind to'\x2C address || 'any');\x0d\n    if (!address) {\x0d\n      // Try binding to ipv6 first\x0d\n      err = handle.bind6(DEFAULT_IPV6_ADDR\x2C port\x2C flags);\x0d\n      if (err) {\x0d\n        handle.close();\x0d\n        // Fallback to ipv4\x0d\n        return createServerHandle(DEFAULT_IPV4_ADDR\x2C port);\x0d\n      }\x0d\n    } else if (addressType === 6) {\x0d\n      err = handle.bind6(address\x2C port\x2C flags);\x0d\n    } else {\x0d\n      err = handle.bind(address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\nfunction setupListenHandle(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags) {\x0d\n  debug('setupListenHandle'\x2C address\x2C port\x2C addressType\x2C backlog\x2C fd);\x0d\n\x0d\n  // If there is not yet a handle\x2C we need to create one and bind.\x0d\n  // In the case of a server sent via IPC\x2C we don't need to do this.\x0d\n  if (this._handle) {\x0d\n    debug('setupListenHandle: have a handle already');\x0d\n  } else {\x0d\n    debug('setupListenHandle: create a handle');\x0d\n\x0d\n    let rval = null;\x0d\n\x0d\n    // Try to bind to the unspecified IPv6 address\x2C see if IPv6 is available\x0d\n    if (!address && typeof fd !== 'number') {\x0d\n      rval = createServerHandle(DEFAULT_IPV6_ADDR\x2C port\x2C 6\x2C fd\x2C flags);\x0d\n\x0d\n      if (typeof rval === 'number') {\x0d\n        rval = null;\x0d\n        address = DEFAULT_IPV4_ADDR;\x0d\n        addressType = 4;\x0d\n      } else {\x0d\n        address = DEFAULT_IPV6_ADDR;\x0d\n        addressType = 6;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (rval === null)\x0d\n      rval = createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n\x0d\n    if (typeof rval === 'number') {\x0d\n      const error = new UVExceptionWithHostPort(rval\x2C 'listen'\x2C address\x2C port);\x0d\n      process.nextTick(emitErrorNT\x2C this\x2C error);\x0d\n      return;\x0d\n    }\x0d\n    this._handle = rval;\x0d\n  }\x0d\n\x0d\n  this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  this._handle.onconnection = onconnection;\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  // Use a backlog of 512 entries. We pass 511 to the listen() call because\x0d\n  // the kernel does: backlogsize = roundup_pow_of_two(backlogsize + 1);\x0d\n  // which will thus give us a backlog of 512 entries.\x0d\n  const err = this._handle.listen(backlog || 511);\x0d\n\x0d\n  if (err) {\x0d\n    const ex = new UVExceptionWithHostPort(err\x2C 'listen'\x2C address\x2C port);\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               emitErrorNT\x2C\x0d\n                               this\x2C\x0d\n                               ex);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Generate connection key\x2C this should be unique to the connection\x0d\n  this._connectionKey = addressType + ':' + address + ':' + port;\x0d\n\x0d\n  // Unref the handle if the server was unref'ed prior to listening\x0d\n  if (this._unref)\x0d\n    this.unref();\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitListeningNT\x2C\x0d\n                             this);\x0d\n}\x0d\n\x0d\nServer.prototype._listen2 = setupListenHandle;  // legacy alias\x0d\n\x0d\nfunction emitErrorNT(self\x2C err) {\x0d\n  self.emit('error'\x2C err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitListeningNT(self) {\x0d\n  // Ensure handle hasn't closed\x0d\n  if (self._handle)\x0d\n    self.emit('listening');\x0d\n}\x0d\n\x0d\n\x0d\nfunction listenInCluster(server\x2C address\x2C port\x2C addressType\x2C\x0d\n                         backlog\x2C fd\x2C exclusive\x2C flags\x2C options) {\x0d\n  exclusive = !!exclusive;\x0d\n\x0d\n  if (cluster === undefined) cluster = require('cluster');\x0d\n\x0d\n  if (cluster.isPrimary || exclusive) {\x0d\n    // Will create a new handle\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const serverQuery = {\x0d\n    address: address\x2C\x0d\n    port: port\x2C\x0d\n    addressType: addressType\x2C\x0d\n    fd: fd\x2C\x0d\n    flags\x2C\x0d\n    backlog\x2C\x0d\n    ...options\x2C\x0d\n  };\x0d\n  const listeningId = server._listeningId;\x0d\n  // Get the primary's server handle\x2C and listen on it\x0d\n  cluster._getServer(server\x2C serverQuery\x2C listenOnPrimaryHandle);\x0d\n  function listenOnPrimaryHandle(err\x2C handle) {\x0d\n    if (listeningId !== server._listeningId) {\x0d\n      handle.close();\x0d\n      return;\x0d\n    }\x0d\n    err = checkBindError(err\x2C port\x2C handle);\x0d\n\x0d\n    if (err) {\x0d\n      const ex = new ExceptionWithHostPort(err\x2C 'bind'\x2C address\x2C port);\x0d\n      return server.emit('error'\x2C ex);\x0d\n    }\x0d\n\x0d\n    // Reuse primary's server handle\x0d\n    server._handle = handle;\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype.listen = function(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  let options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  if (this._handle) {\x0d\n    throw new ERR_SERVER_ALREADY_LISTEN();\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('listening'\x2C cb);\x0d\n  }\x0d\n  const backlogFromArgs =\x0d\n    // (handle\x2C backlog) or (path\x2C backlog) or (port\x2C backlog)\x0d\n    toNumber(args.length > 1 && args[1]) ||\x0d\n    toNumber(args.length > 2 && args[2]);  // (port\x2C host\x2C backlog)\x0d\n\x0d\n  options = options._handle || options.handle || options;\x0d\n  const flags = getFlags(options.ipv6Only);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a handle\x0d\n  if (options instanceof TCP) {\x0d\n    this._handle = options;\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n    listenInCluster(this\x2C null\x2C -1\x2C -1\x2C backlogFromArgs);\x0d\n    return this;\x0d\n  }\x0d\n  addServerAbortSignalOption(this\x2C options);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a fd\x0d\n  if (typeof options.fd === 'number' && options.fd >= 0) {\x0d\n    listenInCluster(this\x2C null\x2C null\x2C null\x2C backlogFromArgs\x2C options.fd);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is omitted\x2C\x0d\n  // that is\x2C listen()\x2C listen(null)\x2C listen(cb)\x2C or listen(null\x2C cb)\x0d\n  // or (options[\x2C cb]) where options.port is explicitly set as undefined or\x0d\n  // null\x2C bind to an arbitrary unused port\x0d\n  if (args.length === 0 || typeof args[0] === 'function' ||\x0d\n      (typeof options.port === 'undefined' && 'port' in options) ||\x0d\n      options.port === null) {\x0d\n    options.port = 0;\x0d\n  }\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is specified\x0d\n  // or (options[\x2C cb]) where options.port is specified\x0d\n  // or if options.port is normalized as 0 before\x0d\n  let backlog;\x0d\n  if (typeof options.port === 'number' || typeof options.port === 'string') {\x0d\n    validatePort(options.port\x2C 'options.port');\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    // start TCP server listening on host:port\x0d\n    if (options.host) {\x0d\n      lookupAndListen(this\x2C options.port | 0\x2C options.host\x2C backlog\x2C\x0d\n                      options.exclusive\x2C flags);\x0d\n    } else { // Undefined host\x2C listens on unspecified address\x0d\n      // Default addressType 4 will be used to search for primary server\x0d\n      listenInCluster(this\x2C null\x2C options.port | 0\x2C 4\x2C\x0d\n                      backlog\x2C undefined\x2C options.exclusive);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // (path[\x2C backlog][\x2C cb]) or (options[\x2C cb])\x0d\n  // where path or options.path is a UNIX domain socket or Windows pipe\x0d\n  if (options.path && isPipeName(options.path)) {\x0d\n    // We can not call fchmod on abstract unix socket\x0d\n    if (options.path[0] === '\\0' &&\x0d\n        (options.readableAll || options.writableAll)) {\x0d\n      const msg = 'can not set readableAll or writableAllt to true when path is abstract unix socket';\x0d\n      throw new ERR_INVALID_ARG_VALUE('options'\x2C options\x2C msg);\x0d\n    }\x0d\n    const pipeName = this._pipeName = options.path;\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    listenInCluster(this\x2C\x0d\n                    pipeName\x2C\x0d\n                    -1\x2C\x0d\n                    -1\x2C\x0d\n                    backlog\x2C\x0d\n                    undefined\x2C\x0d\n                    options.exclusive\x2C\x0d\n                    undefined\x2C\x0d\n                    {\x0d\n                      readableAll: options.readableAll\x2C\x0d\n                      writableAll: options.writableAll\x2C\x0d\n                    });\x0d\n\x0d\n    if (!this._handle) {\x0d\n      // Failed and an error shall be emitted in the next tick.\x0d\n      // Therefore\x2C we directly return.\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    let mode = 0;\x0d\n    if (options.readableAll === true)\x0d\n      mode |= PipeConstants.UV_READABLE;\x0d\n    if (options.writableAll === true)\x0d\n      mode |= PipeConstants.UV_WRITABLE;\x0d\n    if (mode !== 0) {\x0d\n      const err = this._handle.fchmod(mode);\x0d\n      if (err) {\x0d\n        this._handle.close();\x0d\n        this._handle = null;\x0d\n        throw new ErrnoException(err\x2C 'uv_pipe_chmod');\x0d\n      }\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (!(('port' in options) || ('path' in options))) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options\x2C\x0d\n                                    'must have the property "port" or "path"');\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n};\x0d\n\x0d\nfunction lookupAndListen(self\x2C port\x2C address\x2C backlog\x2C\x0d\n                         exclusive\x2C flags) {\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  const listeningId = self._listeningId;\x0d\n  dns.lookup(address\x2C function doListen(err\x2C ip\x2C addressType) {\x0d\n    if (listeningId !== self._listeningId) {\x0d\n      return;\x0d\n    }\x0d\n    if (err) {\x0d\n      self.emit('error'\x2C err);\x0d\n    } else {\x0d\n      addressType = ip ? addressType : 4;\x0d\n      listenInCluster(self\x2C ip\x2C port\x2C addressType\x2C\x0d\n                      backlog\x2C undefined\x2C exclusive\x2C flags);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Server.prototype\x2C 'listening'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    return !!this._handle;\x0d\n  }\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n});\x0d\n\x0d\nServer.prototype.address = function() {\x0d\n  if (this._handle && this._handle.getsockname) {\x0d\n    const out = {};\x0d\n    const err = this._handle.getsockname(out);\x0d\n    if (err) {\x0d\n      throw new ErrnoException(err\x2C 'address');\x0d\n    }\x0d\n    return out;\x0d\n  } else if (this._pipeName) {\x0d\n    return this._pipeName;\x0d\n  }\x0d\n  return null;\x0d\n};\x0d\n\x0d\nfunction onconnection(err\x2C clientHandle) {\x0d\n  const handle = this;\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  debug('onconnection');\x0d\n\x0d\n  if (err) {\x0d\n    self.emit('error'\x2C new ErrnoException(err\x2C 'accept'));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (self.maxConnections != null && self._connections >= self.maxConnections) {\x0d\n    if (clientHandle.getsockname || clientHandle.getpeername) {\x0d\n      const data = { __proto__: null };\x0d\n      if (clientHandle.getsockname) {\x0d\n        const localInfo = { __proto__: null };\x0d\n        clientHandle.getsockname(localInfo);\x0d\n        data.localAddress = localInfo.address;\x0d\n        data.localPort = localInfo.port;\x0d\n        data.localFamily = localInfo.family;\x0d\n      }\x0d\n      if (clientHandle.getpeername) {\x0d\n        const remoteInfo = { __proto__: null };\x0d\n        clientHandle.getpeername(remoteInfo);\x0d\n        data.remoteAddress = remoteInfo.address;\x0d\n        data.remotePort = remoteInfo.port;\x0d\n        data.remoteFamily = remoteInfo.family;\x0d\n      }\x0d\n      self.emit('drop'\x2C data);\x0d\n    } else {\x0d\n      self.emit('drop');\x0d\n    }\x0d\n    clientHandle.close();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const socket = new Socket({\x0d\n    handle: clientHandle\x2C\x0d\n    allowHalfOpen: self.allowHalfOpen\x2C\x0d\n    pauseOnCreate: self.pauseOnConnect\x2C\x0d\n    readable: true\x2C\x0d\n    writable: true\x2C\x0d\n    readableHighWaterMark: self.highWaterMark\x2C\x0d\n    writableHighWaterMark: self.highWaterMark\x2C\x0d\n  });\x0d\n\x0d\n  if (self.noDelay && clientHandle.setNoDelay) {\x0d\n    socket[kSetNoDelay] = true;\x0d\n    clientHandle.setNoDelay(true);\x0d\n  }\x0d\n  if (self.keepAlive && clientHandle.setKeepAlive) {\x0d\n    socket[kSetKeepAlive] = true;\x0d\n    socket[kSetKeepAliveInitialDelay] = self.keepAliveInitialDelay;\x0d\n    clientHandle.setKeepAlive(true\x2C self.keepAliveInitialDelay);\x0d\n  }\x0d\n\x0d\n  self._connections++;\x0d\n  socket.server = self;\x0d\n  socket._server = self;\x0d\n  self.emit('connection'\x2C socket);\x0d\n  if (netServerSocketChannel.hasSubscribers) {\x0d\n    netServerSocketChannel.publish({\x0d\n      socket\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Gets the number of concurrent connections on the server\x0d\n * @param {Function} cb\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nServer.prototype.getConnections = function(cb) {\x0d\n  const self = this;\x0d\n\x0d\n  function end(err\x2C connections) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               cb\x2C\x0d\n                               err\x2C\x0d\n                               connections);\x0d\n  }\x0d\n\x0d\n  if (!this._usingWorkers) {\x0d\n    end(null\x2C this._connections);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Poll workers\x0d\n  let left = this._workers.length;\x0d\n  let total = this._connections;\x0d\n\x0d\n  function oncount(err\x2C count) {\x0d\n    if (err) {\x0d\n      left = -1;\x0d\n      return end(err);\x0d\n    }\x0d\n\x0d\n    total += count;\x0d\n    if (--left === 0) return end(null\x2C total);\x0d\n  }\x0d\n\x0d\n  for (let n = 0; n < this._workers.length; n++) {\x0d\n    this._workers[n].getConnections(oncount);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nServer.prototype.close = function(cb) {\x0d\n  this._listeningId++;\x0d\n  if (typeof cb === 'function') {\x0d\n    if (!this._handle) {\x0d\n      this.once('close'\x2C function close() {\x0d\n        cb(new ERR_SERVER_NOT_RUNNING());\x0d\n      });\x0d\n    } else {\x0d\n      this.once('close'\x2C cb);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (this._handle) {\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n  }\x0d\n\x0d\n  if (this._usingWorkers) {\x0d\n    let left = this._workers.length;\x0d\n    const onWorkerClose = () => {\x0d\n      if (--left !== 0) return;\x0d\n\x0d\n      this._connections = 0;\x0d\n      this._emitCloseIfDrained();\x0d\n    };\x0d\n\x0d\n    // Increment connections to be sure that\x2C even if all sockets will be closed\x0d\n    // during polling of workers\x2C `close` event will be emitted only once.\x0d\n    this._connections++;\x0d\n\x0d\n    // Poll workers\x0d\n    for (let n = 0; n < this._workers.length; n++)\x0d\n      this._workers[n].close(onWorkerClose);\x0d\n  } else {\x0d\n    this._emitCloseIfDrained();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype[SymbolAsyncDispose] = async function() {\x0d\n  if (!this._handle) {\x0d\n    return;\x0d\n  }\x0d\n  return FunctionPrototypeCall(promisify(this.close)\x2C this);\x0d\n};\x0d\n\x0d\nServer.prototype._emitCloseIfDrained = function() {\x0d\n  debug('SERVER _emitCloseIfDrained');\x0d\n\x0d\n  if (this._handle || this._connections) {\x0d\n    debug('SERVER handle? %j   connections? %d'\x2C\x0d\n          !!this._handle\x2C this._connections);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitCloseNT\x2C\x0d\n                             this);\x0d\n};\x0d\n\x0d\n\x0d\nfunction emitCloseNT(self) {\x0d\n  debug('SERVER: emit close');\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype[EventEmitter.captureRejectionSymbol] = function(\x0d\n  err\x2C event\x2C sock) {\x0d\n\x0d\n  switch (event) {\x0d\n    case 'connection':\x0d\n      sock.destroy(err);\x0d\n      break;\x0d\n    default:\x0d\n      this.emit('error'\x2C err);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(TCP.prototype\x2C 'owner'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() { return this[kHandle]; }\x2C\x0d\n  set(v) { return this[kHandle] = v; }\x2C\x0d\n});\x0d\n\x0d\nServer.prototype._setupWorker = function(socketList) {\x0d\n  this._usingWorkers = true;\x0d\n  this._workers.push(socketList);\x0d\n  socketList.once('exit'\x2C (socketList) => {\x0d\n    const index = ArrayPrototypeIndexOf(this._workers\x2C socketList);\x0d\n    this._workers.splice(index\x2C 1);\x0d\n  });\x0d\n};\x0d\n\x0d\nServer.prototype.ref = function() {\x0d\n  this._unref = false;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype.unref = function() {\x0d\n  this._unref = true;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nlet _setSimultaneousAccepts;\x0d\nlet warnSimultaneousAccepts = true;\x0d\n\x0d\nif (isWindows) {\x0d\n  let simultaneousAccepts;\x0d\n\x0d\n  _setSimultaneousAccepts = function(handle) {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n    if (handle === undefined) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (simultaneousAccepts === undefined) {\x0d\n      simultaneousAccepts = (process.env.NODE_MANY_ACCEPTS &&\x0d\n                             process.env.NODE_MANY_ACCEPTS !== '0');\x0d\n    }\x0d\n\x0d\n    if (handle._simultaneousAccepts !== simultaneousAccepts) {\x0d\n      handle.setSimultaneousAccepts(!!simultaneousAccepts);\x0d\n      handle._simultaneousAccepts = simultaneousAccepts;\x0d\n    }\x0d\n  };\x0d\n} else {\x0d\n  _setSimultaneousAccepts = function() {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _createServerHandle: createServerHandle\x2C\x0d\n  _normalizeArgs: normalizeArgs\x2C\x0d\n  _setSimultaneousAccepts\x2C\x0d\n  get BlockList() {\x0d\n    BlockList ??= require('internal/blocklist').BlockList;\x0d\n    return BlockList;\x0d\n  }\x2C\x0d\n  get SocketAddress() {\x0d\n    SocketAddress ??= require('internal/socketaddress').SocketAddress;\x0d\n    return SocketAddress;\x0d\n  }\x2C\x0d\n  connect\x2C\x0d\n  createConnection: connect\x2C\x0d\n  createServer\x2C\x0d\n  isIP: isIP\x2C\x0d\n  isIPv4: isIPv4\x2C\x0d\n  isIPv6: isIPv6\x2C\x0d\n  Server\x2C\x0d\n  Socket\x2C\x0d\n  Stream: Socket\x2C // Legacy naming\x0d\n  getDefaultAutoSelectFamily\x2C\x0d\n  setDefaultAutoSelectFamily\x2C\x0d\n  getDefaultAutoSelectFamilyAttemptTimeout\x2C\x0d\n  setDefaultAutoSelectFamilyAttemptTimeout\x2C\x0d\n};\x0d\n
code-source-info,0x125aa7becc4,86,0,69968,C0O0C4O69968,,
code-creation,JS,10,131067,0x9b20b4b894,3499, node:net:1:1,0x125aa7bec38,~
code-source-info,0x9b20b4b
code-creation,Eval,10,131815,0x9b20b4e544,5, node:stream:1:1,0x9b20b4e330,~
script-source,87,node:stream,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  promisify: { custom: customPromisify }\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  streamReturningOperators\x2C\x0d\n  promiseReturningOperators\x2C\x0d\n} = require('internal/streams/operators');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst compose = require('internal/streams/compose');\x0d\nconst { setDefaultHighWaterMark\x2C getDefaultHighWaterMark } = require('internal/streams/state');\x0d\nconst { pipeline } = require('internal/streams/pipeline');\x0d\nconst { destroyer } = require('internal/streams/destroy');\x0d\nconst eos = require('internal/streams/end-of-stream');\x0d\nconst internalBuffer = require('internal/buffer');\x0d\n\x0d\nconst promises = require('stream/promises');\x0d\nconst utils = require('internal/streams/utils');\x0d\n\x0d\nconst Stream = module.exports = require('internal/streams/legacy').Stream;\x0d\n\x0d\nStream.isDestroyed = utils.isDestroyed;\x0d\nStream.isDisturbed = utils.isDisturbed;\x0d\nStream.isErrored = utils.isErrored;\x0d\nStream.isReadable = utils.isReadable;\x0d\nStream.isWritable = utils.isWritable;\x0d\n\x0d\nStream.Readable = require('internal/streams/readable');\x0d\nfor (const key of ObjectKeys(streamReturningOperators)) {\x0d\n  const op = streamReturningOperators[key];\x0d\n  function fn(...args) {\x0d\n    if (new.target) {\x0d\n      throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n    }\x0d\n    return Stream.Readable.from(ReflectApply(op\x2C this\x2C args));\x0d\n  }\x0d\n  ObjectDefineProperty(fn\x2C 'name'\x2C { __proto__: null\x2C value: op.name });\x0d\n  ObjectDefineProperty(fn\x2C 'length'\x2C { __proto__: null\x2C value: op.length });\x0d\n  ObjectDefineProperty(Stream.Readable.prototype\x2C key\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: fn\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n  });\x0d\n}\x0d\nfor (const key of ObjectKeys(promiseReturningOperators)) {\x0d\n  const op = promiseReturningOperators[key];\x0d\n  function fn(...args) {\x0d\n    if (new.target) {\x0d\n      throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n    }\x0d\n    return ReflectApply(op\x2C this\x2C args);\x0d\n  }\x0d\n  ObjectDefineProperty(fn\x2C 'name'\x2C { __proto__: null\x2C value: op.name });\x0d\n  ObjectDefineProperty(fn\x2C 'length'\x2C { __proto__: null\x2C value: op.length });\x0d\n  ObjectDefineProperty(Stream.Readable.prototype\x2C key\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: fn\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n  });\x0d\n}\x0d\nStream.Writable = require('internal/streams/writable');\x0d\nStream.Duplex = require('internal/streams/duplex');\x0d\nStream.Transform = require('internal/streams/transform');\x0d\nStream.PassThrough = require('internal/streams/passthrough');\x0d\nStream.pipeline = pipeline;\x0d\nconst { addAbortSignal } = require('internal/streams/add-abort-signal');\x0d\nStream.addAbortSignal = addAbortSignal;\x0d\nStream.finished = eos;\x0d\nStream.destroy = destroyer;\x0d\nStream.compose = compose;\x0d\nStream.setDefaultHighWaterMark = setDefaultHighWaterMark;\x0d\nStream.getDefaultHighWaterMark = getDefaultHighWaterMark;\x0d\n\x0d\nObjectDefineProperty(Stream\x2C 'promises'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    return promises;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(pipeline\x2C customPromisify\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    return promises.pipeline;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(eos\x2C customPromisify\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    return promises.finished;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// Backwards-compat with node 0.4.x\x0d\nStream.Stream = Stream;\x0d\n\x0d\nStream._isUint8Array = require('internal/util/types').isUint8Array;\x0d\nStream._uint8ArrayToBuffer = function _uint8ArrayToBuffer(chunk) {\x0d\n  return new internalBuffer.FastBuffer(chunk.buffer\x2C\x0d\n                                       chunk.byteOffset\x2C\x0d\n                                       chunk.byteLength);\x0d\n};\x0d\n
code-source-info,0x9b20b4e544,87,0,4937,C0O0C4O4937,,
code-creation,JS,10,132055,0x9b20b4ec94,1072, node:stream:1:1,0x9b20b4e4b8,~
code-source-info,0x9b20b4ec
tick,0x7ffdb1fb16a3,132279,0,0x0,3,0x7ff734383eb2,0x7ff734383c87,0x9b20b4bb39,0x7ff734383f77,0x7ff734383c87,0x125aa7b6848,0x7ff734383f77,0x7ff734383c87,0x125aa7b536c,0x125aa7b446b,0x125aa7b4275,0x125aa7b415c,0x125aa7b4024,0x7ff75414ef5f,0x125aa7b3c21,0x125aa7ab020,0x3151437ffa6
code-creation,Eval,10,132665,0x9b20b509b4,5, node:internal/streams/operators:1:1,0x9b20b50660,~
script-source,88,node:internal/streams/operators,'use strict';\x0d\n\x0d\nconst { AbortController\x2C AbortSignal } = require('internal/abort_controller');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst { kWeakHandler\x2C kResistStopPropagation } = require('internal/event_target');\x0d\nconst { finished } = require('internal/streams/end-of-stream');\x0d\nconst staticCompose = require('internal/streams/compose');\x0d\nconst {\x0d\n  addAbortSignalNoValidate\x2C\x0d\n} = require('internal/streams/add-abort-signal');\x0d\nconst { isWritable\x2C isNodeStream } = require('internal/streams/utils');\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  Boolean\x2C\x0d\n  MathFloor\x2C\x0d\n  Number\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  Promise\x2C\x0d\n  PromiseReject\x2C\x0d\n  PromiseResolve\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst kEmpty = Symbol('kEmpty');\x0d\nconst kEof = Symbol('kEof');\x0d\n\x0d\nfunction compose(stream\x2C options) {\x0d\n  if (options != null) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  if (options?.signal != null) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n\x0d\n  if (isNodeStream(stream) && !isWritable(stream)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('stream'\x2C stream\x2C 'must be writable');\x0d\n  }\x0d\n\x0d\n  const composedStream = staticCompose(this\x2C stream);\x0d\n\x0d\n  if (options?.signal) {\x0d\n    // Not validating as we already validated before\x0d\n    addAbortSignalNoValidate(\x0d\n      options.signal\x2C\x0d\n      composedStream\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  return composedStream;\x0d\n}\x0d\n\x0d\nfunction map(fn\x2C options) {\x0d\n  if (typeof fn !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'fn'\x2C ['Function'\x2C 'AsyncFunction']\x2C fn);\x0d\n  }\x0d\n  if (options != null) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  if (options?.signal != null) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n\x0d\n  let concurrency = 1;\x0d\n  if (options?.concurrency != null) {\x0d\n    concurrency = MathFloor(options.concurrency);\x0d\n  }\x0d\n\x0d\n  let highWaterMark = concurrency - 1;\x0d\n  if (options?.highWaterMark != null) {\x0d\n    highWaterMark = MathFloor(options.highWaterMark);\x0d\n  }\x0d\n\x0d\n  validateInteger(concurrency\x2C 'options.concurrency'\x2C 1);\x0d\n  validateInteger(highWaterMark\x2C 'options.highWaterMark'\x2C 0);\x0d\n\x0d\n  highWaterMark += concurrency;\x0d\n\x0d\n  return async function* map() {\x0d\n    const signal = AbortSignal.any([options?.signal].filter(Boolean));\x0d\n    const stream = this;\x0d\n    const queue = [];\x0d\n    const signalOpt = { signal };\x0d\n\x0d\n    let next;\x0d\n    let resume;\x0d\n    let done = false;\x0d\n    let cnt = 0;\x0d\n\x0d\n    function onCatch() {\x0d\n      done = true;\x0d\n      afterItemProcessed();\x0d\n    }\x0d\n\x0d\n    function afterItemProcessed() {\x0d\n      cnt -= 1;\x0d\n      maybeResume();\x0d\n    }\x0d\n\x0d\n    function maybeResume() {\x0d\n      if (\x0d\n        resume &&\x0d\n        !done &&\x0d\n        cnt < concurrency &&\x0d\n        queue.length < highWaterMark\x0d\n      ) {\x0d\n        resume();\x0d\n        resume = null;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    async function pump() {\x0d\n      try {\x0d\n        for await (let val of stream) {\x0d\n          if (done) {\x0d\n            return;\x0d\n          }\x0d\n\x0d\n          if (signal.aborted) {\x0d\n            throw new AbortError();\x0d\n          }\x0d\n\x0d\n          try {\x0d\n            val = fn(val\x2C signalOpt);\x0d\n\x0d\n            if (val === kEmpty) {\x0d\n              continue;\x0d\n            }\x0d\n\x0d\n            val = PromiseResolve(val);\x0d\n          } catch (err) {\x0d\n            val = PromiseReject(err);\x0d\n          }\x0d\n\x0d\n          cnt += 1;\x0d\n\x0d\n          PromisePrototypeThen(val\x2C afterItemProcessed\x2C onCatch);\x0d\n\x0d\n          queue.push(val);\x0d\n          if (next) {\x0d\n            next();\x0d\n            next = null;\x0d\n          }\x0d\n\x0d\n          if (!done && (queue.length >= highWaterMark || cnt >= concurrency)) {\x0d\n            await new Promise((resolve) => {\x0d\n              resume = resolve;\x0d\n            });\x0d\n          }\x0d\n        }\x0d\n        queue.push(kEof);\x0d\n      } catch (err) {\x0d\n        const val = PromiseReject(err);\x0d\n        PromisePrototypeThen(val\x2C afterItemProcessed\x2C onCatch);\x0d\n        queue.push(val);\x0d\n      } finally {\x0d\n        done = true;\x0d\n        if (next) {\x0d\n          next();\x0d\n          next = null;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    pump();\x0d\n\x0d\n    try {\x0d\n      while (true) {\x0d\n        while (queue.length > 0) {\x0d\n          const val = await queue[0];\x0d\n\x0d\n          if (val === kEof) {\x0d\n            return;\x0d\n          }\x0d\n\x0d\n          if (signal.aborted) {\x0d\n            throw new AbortError();\x0d\n          }\x0d\n\x0d\n          if (val !== kEmpty) {\x0d\n            yield val;\x0d\n          }\x0d\n\x0d\n          queue.shift();\x0d\n          maybeResume();\x0d\n        }\x0d\n\x0d\n        await new Promise((resolve) => {\x0d\n          next = resolve;\x0d\n        });\x0d\n      }\x0d\n    } finally {\x0d\n      done = true;\x0d\n      if (resume) {\x0d\n        resume();\x0d\n        resume = null;\x0d\n      }\x0d\n    }\x0d\n  }.call(this);\x0d\n}\x0d\n\x0d\nasync function some(fn\x2C options = undefined) {\x0d\n  for await (const unused of filter.call(this\x2C fn\x2C options)) {\x0d\n    return true;\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nasync function every(fn\x2C options = undefined) {\x0d\n  if (typeof fn !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'fn'\x2C ['Function'\x2C 'AsyncFunction']\x2C fn);\x0d\n  }\x0d\n  // https://en.wikipedia.org/wiki/De_Morgan%27s_laws\x0d\n  return !(await some.call(this\x2C async (...args) => {\x0d\n    return !(await fn(...args));\x0d\n  }\x2C options));\x0d\n}\x0d\n\x0d\nasync function find(fn\x2C options) {\x0d\n  for await (const result of filter.call(this\x2C fn\x2C options)) {\x0d\n    return result;\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\nasync function forEach(fn\x2C options) {\x0d\n  if (typeof fn !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'fn'\x2C ['Function'\x2C 'AsyncFunction']\x2C fn);\x0d\n  }\x0d\n  async function forEachFn(value\x2C options) {\x0d\n    await fn(value\x2C options);\x0d\n    return kEmpty;\x0d\n  }\x0d\n  // eslint-disable-next-line no-unused-vars\x0d\n  for await (const unused of map.call(this\x2C forEachFn\x2C options));\x0d\n}\x0d\n\x0d\nfunction filter(fn\x2C options) {\x0d\n  if (typeof fn !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'fn'\x2C ['Function'\x2C 'AsyncFunction']\x2C fn);\x0d\n  }\x0d\n  async function filterFn(value\x2C options) {\x0d\n    if (await fn(value\x2C options)) {\x0d\n      return value;\x0d\n    }\x0d\n    return kEmpty;\x0d\n  }\x0d\n  return map.call(this\x2C filterFn\x2C options);\x0d\n}\x0d\n\x0d\n// Specific to provide better error to reduce since the argument is only\x0d\n// missing if the stream has no items in it - but the code is still appropriate\x0d\nclass ReduceAwareErrMissingArgs extends ERR_MISSING_ARGS {\x0d\n  constructor() {\x0d\n    super('reduce');\x0d\n    this.message = 'Reduce of an empty stream requires an initial value';\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function reduce(reducer\x2C initialValue\x2C options) {\x0d\n  if (typeof reducer !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'reducer'\x2C ['Function'\x2C 'AsyncFunction']\x2C reducer);\x0d\n  }\x0d\n  if (options != null) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  if (options?.signal != null) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n\x0d\n  let hasInitialValue = arguments.length > 1;\x0d\n  if (options?.signal?.aborted) {\x0d\n    const err = new AbortError(undefined\x2C { cause: options.signal.reason });\x0d\n    this.once('error'\x2C () => {}); // The error is already propagated\x0d\n    await finished(this.destroy(err));\x0d\n    throw err;\x0d\n  }\x0d\n  const ac = new AbortController();\x0d\n  const signal = ac.signal;\x0d\n  if (options?.signal) {\x0d\n    const opts = { once: true\x2C [kWeakHandler]: this\x2C [kResistStopPropagation]: true };\x0d\n    options.signal.addEventListener('abort'\x2C () => ac.abort()\x2C opts);\x0d\n  }\x0d\n  let gotAnyItemFromStream = false;\x0d\n  try {\x0d\n    for await (const value of this) {\x0d\n      gotAnyItemFromStream = true;\x0d\n      if (options?.signal?.aborted) {\x0d\n        throw new AbortError();\x0d\n      }\x0d\n      if (!hasInitialValue) {\x0d\n        initialValue = value;\x0d\n        hasInitialValue = true;\x0d\n      } else {\x0d\n        initialValue = await reducer(initialValue\x2C value\x2C { signal });\x0d\n      }\x0d\n    }\x0d\n    if (!gotAnyItemFromStream && !hasInitialValue) {\x0d\n      throw new ReduceAwareErrMissingArgs();\x0d\n    }\x0d\n  } finally {\x0d\n    ac.abort();\x0d\n  }\x0d\n  return initialValue;\x0d\n}\x0d\n\x0d\nasync function toArray(options) {\x0d\n  if (options != null) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  if (options?.signal != null) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n\x0d\n  const result = [];\x0d\n  for await (const val of this) {\x0d\n    if (options?.signal?.aborted) {\x0d\n      throw new AbortError(undefined\x2C { cause: options.signal.reason });\x0d\n    }\x0d\n    ArrayPrototypePush(result\x2C val);\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nfunction flatMap(fn\x2C options) {\x0d\n  const values = map.call(this\x2C fn\x2C options);\x0d\n  return async function* flatMap() {\x0d\n    for await (const val of values) {\x0d\n      yield* val;\x0d\n    }\x0d\n  }.call(this);\x0d\n}\x0d\n\x0d\nfunction toIntegerOrInfinity(number) {\x0d\n  // We coerce here to align with the spec\x0d\n  // https://github.com/tc39/proposal-iterator-helpers/issues/169\x0d\n  number = Number(number);\x0d\n  if (NumberIsNaN(number)) {\x0d\n    return 0;\x0d\n  }\x0d\n  if (number < 0) {\x0d\n    throw new ERR_OUT_OF_RANGE('number'\x2C '>= 0'\x2C number);\x0d\n  }\x0d\n  return number;\x0d\n}\x0d\n\x0d\nfunction drop(number\x2C options = undefined) {\x0d\n  if (options != null) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  if (options?.signal != null) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n\x0d\n  number = toIntegerOrInfinity(number);\x0d\n  return async function* drop() {\x0d\n    if (options?.signal?.aborted) {\x0d\n      throw new AbortError();\x0d\n    }\x0d\n    for await (const val of this) {\x0d\n      if (options?.signal?.aborted) {\x0d\n        throw new AbortError();\x0d\n      }\x0d\n      if (number-- <= 0) {\x0d\n        yield val;\x0d\n      }\x0d\n    }\x0d\n  }.call(this);\x0d\n}\x0d\n\x0d\nfunction take(number\x2C options = undefined) {\x0d\n  if (options != null) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  if (options?.signal != null) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n\x0d\n  number = toIntegerOrInfinity(number);\x0d\n  return async function* take() {\x0d\n    if (options?.signal?.aborted) {\x0d\n      throw new AbortError();\x0d\n    }\x0d\n    for await (const val of this) {\x0d\n      if (options?.signal?.aborted) {\x0d\n        throw new AbortError();\x0d\n      }\x0d\n      if (number-- > 0) {\x0d\n        yield val;\x0d\n      }\x0d\n\x0d\n      // Don't get another item from iterator in case we reached the end\x0d\n      if (number <= 0) {\x0d\n        return;\x0d\n      }\x0d\n    }\x0d\n  }.call(this);\x0d\n}\x0d\n\x0d\nmodule.exports.streamReturningOperators = {\x0d\n  drop\x2C\x0d\n  filter\x2C\x0d\n  flatMap\x2C\x0d\n  map\x2C\x0d\n  take\x2C\x0d\n  compose\x2C\x0d\n};\x0d\n\x0d\nmodule.exports.promiseReturningOperators = {\x0d\n  every\x2C\x0d\n  forEach\x2C\x0d\n  reduce\x2C\x0d\n  toArray\x2C\x0d\n  some\x2C\x0d\n  find\x2C\x0d\n};\x0d\n
code-source-info,0x9b20b509b4,88,0,10576,C0O0C4O10576,,
code-creation,JS,10,133224,0x9b20b51484,529, node:internal/streams/operators:1:1,0x9b20b50928,~
code-source-info,0x9b20b
code-creation,Eval,10,133675,0x9b20b53464,5, node:internal/abort_controller:1:1,0x9b20b52f00,~
script-source,89,node:internal/abort_controller,'use strict';\x0d\n\x0d\n// Modeled very closely on the AbortController implementation\x0d\n// in https://github.com/mysticatea/abort-controller (MIT license)\x0d\n\x0d\nconst {\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  PromiseResolve\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeSet\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  WeakRef\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  defineEventHandler\x2C\x0d\n  EventTarget\x2C\x0d\n  Event\x2C\x0d\n  kTrustEvent\x2C\x0d\n  kNewListener\x2C\x0d\n  kRemoveListener\x2C\x0d\n  kResistStopPropagation\x2C\x0d\n  kWeakHandler\x2C\x0d\n} = require('internal/event_target');\x0d\nconst {\x0d\n  createDeferredPromise\x2C\x0d\n  customInspectSymbol\x2C\x0d\n  kEmptyObject\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateAbortSignalArray\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n  kValidateObjectAllowArray\x2C\x0d\n  kValidateObjectAllowFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  DOMException\x2C\x0d\n} = internalBinding('messaging');\x0d\n\x0d\nconst {\x0d\n  clearTimeout\x2C\x0d\n  setTimeout\x2C\x0d\n} = require('timers');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst {\x0d\n  kDeserialize\x2C\x0d\n  kTransfer\x2C\x0d\n  kTransferList\x2C\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nlet _MessageChannel;\x0d\nlet markTransferMode;\x0d\n\x0d\n// Loading the MessageChannel and markTransferable have to be done lazily\x0d\n// because otherwise we'll end up with a require cycle that ends up with\x0d\n// an incomplete initialization of abort_controller.\x0d\n\x0d\nfunction lazyMessageChannel() {\x0d\n  _MessageChannel ??= require('internal/worker/io').MessageChannel;\x0d\n  return new _MessageChannel();\x0d\n}\x0d\n\x0d\nfunction lazyMarkTransferMode(obj\x2C cloneable\x2C transferable) {\x0d\n  markTransferMode ??=\x0d\n    require('internal/worker/js_transferable').markTransferMode;\x0d\n  markTransferMode(obj\x2C cloneable\x2C transferable);\x0d\n}\x0d\n\x0d\nconst clearTimeoutRegistry = new SafeFinalizationRegistry(clearTimeout);\x0d\nconst gcPersistentSignals = new SafeSet();\x0d\n\x0d\nconst kAborted = Symbol('kAborted');\x0d\nconst kReason = Symbol('kReason');\x0d\nconst kCloneData = Symbol('kCloneData');\x0d\nconst kTimeout = Symbol('kTimeout');\x0d\nconst kMakeTransferable = Symbol('kMakeTransferable');\x0d\nconst kComposite = Symbol('kComposite');\x0d\nconst kSourceSignals = Symbol('kSourceSignals');\x0d\nconst kDependantSignals = Symbol('kDependantSignals');\x0d\n\x0d\nfunction customInspect(self\x2C obj\x2C depth\x2C options) {\x0d\n  if (depth < 0)\x0d\n    return self;\x0d\n\x0d\n  const opts = ObjectAssign({}\x2C options\x2C {\x0d\n    depth: options.depth === null ? null : options.depth - 1\x2C\x0d\n  });\x0d\n\x0d\n  return `${self.constructor.name} ${inspect(obj\x2C opts)}`;\x0d\n}\x0d\n\x0d\nfunction validateThisAbortSignal(obj) {\x0d\n  if (obj?.[kAborted] === undefined)\x0d\n    throw new ERR_INVALID_THIS('AbortSignal');\x0d\n}\x0d\n\x0d\n// Because the AbortSignal timeout cannot be canceled\x2C we don't want the\x0d\n// presence of the timer alone to keep the AbortSignal from being garbage\x0d\n// collected if it otherwise no longer accessible. We also don't want the\x0d\n// timer to keep the Node.js process open on it's own. Therefore\x2C we wrap\x0d\n// the AbortSignal in a WeakRef and have the setTimeout callback close\x0d\n// over the WeakRef rather than directly over the AbortSignal\x2C and we unref\x0d\n// the created timer object. Separately\x2C we add the signal to a\x0d\n// FinalizerRegistry that will clear the timeout when the signal is gc'd.\x0d\nfunction setWeakAbortSignalTimeout(weakRef\x2C delay) {\x0d\n  const timeout = setTimeout(() => {\x0d\n    const signal = weakRef.deref();\x0d\n    if (signal !== undefined) {\x0d\n      gcPersistentSignals.delete(signal);\x0d\n      abortSignal(\x0d\n        signal\x2C\x0d\n        new DOMException(\x0d\n          'The operation was aborted due to timeout'\x2C\x0d\n          'TimeoutError'));\x0d\n    }\x0d\n  }\x2C delay);\x0d\n  timeout.unref();\x0d\n  return timeout;\x0d\n}\x0d\n\x0d\nclass AbortSignal extends EventTarget {\x0d\n  constructor() {\x0d\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get aborted() {\x0d\n    validateThisAbortSignal(this);\x0d\n    return !!this[kAborted];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {any}\x0d\n   */\x0d\n  get reason() {\x0d\n    validateThisAbortSignal(this);\x0d\n    return this[kReason];\x0d\n  }\x0d\n\x0d\n  throwIfAborted() {\x0d\n    validateThisAbortSignal(this);\x0d\n    if (this[kAborted]) {\x0d\n      throw this[kReason];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    return customInspect(this\x2C {\x0d\n      aborted: this.aborted\x2C\x0d\n    }\x2C depth\x2C options);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {any} [reason]\x0d\n   * @returns {AbortSignal}\x0d\n   */\x0d\n  static abort(\x0d\n    reason = new DOMException('This operation was aborted'\x2C 'AbortError')) {\x0d\n    return createAbortSignal({ aborted: true\x2C reason });\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {number} delay\x0d\n   * @returns {AbortSignal}\x0d\n   */\x0d\n  static timeout(delay) {\x0d\n    validateUint32(delay\x2C 'delay'\x2C false);\x0d\n    const signal = createAbortSignal();\x0d\n    signal[kTimeout] = true;\x0d\n    clearTimeoutRegistry.register(\x0d\n      signal\x2C\x0d\n      setWeakAbortSignalTimeout(new WeakRef(signal)\x2C delay));\x0d\n    return signal;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {AbortSignal[]} signals\x0d\n   * @returns {AbortSignal}\x0d\n   */\x0d\n  static any(signals) {\x0d\n    validateAbortSignalArray(signals\x2C 'signals');\x0d\n    const resultSignal = createAbortSignal({ composite: true });\x0d\n    if (!signals.length) {\x0d\n      return resultSignal;\x0d\n    }\x0d\n    const resultSignalWeakRef = new WeakRef(resultSignal);\x0d\n    resultSignal[kSourceSignals] = new SafeSet();\x0d\n    for (let i = 0; i < signals.length; i++) {\x0d\n      const signal = signals[i];\x0d\n      if (signal.aborted) {\x0d\n        abortSignal(resultSignal\x2C signal.reason);\x0d\n        return resultSignal;\x0d\n      }\x0d\n      signal[kDependantSignals] ??= new SafeSet();\x0d\n      if (!signal[kComposite]) {\x0d\n        resultSignal[kSourceSignals].add(new WeakRef(signal));\x0d\n        signal[kDependantSignals].add(resultSignalWeakRef);\x0d\n      } else if (!signal[kSourceSignals]) {\x0d\n        continue;\x0d\n      } else {\x0d\n        for (const sourceSignal of signal[kSourceSignals]) {\x0d\n          const sourceSignalRef = sourceSignal.deref();\x0d\n          if (!sourceSignalRef) {\x0d\n            continue;\x0d\n          }\x0d\n          assert(!sourceSignalRef.aborted);\x0d\n          assert(!sourceSignalRef[kComposite]);\x0d\n\x0d\n          if (resultSignal[kSourceSignals].has(sourceSignal)) {\x0d\n            continue;\x0d\n          }\x0d\n          resultSignal[kSourceSignals].add(sourceSignal);\x0d\n          sourceSignalRef[kDependantSignals].add(resultSignalWeakRef);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    return resultSignal;\x0d\n  }\x0d\n\x0d\n  [kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak) {\x0d\n    super[kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak);\x0d\n    const isTimeoutOrNonEmptyCompositeSignal = this[kTimeout] || (this[kComposite] && this[kSourceSignals]?.size);\x0d\n    if (isTimeoutOrNonEmptyCompositeSignal &&\x0d\n        type === 'abort' &&\x0d\n        !this.aborted &&\x0d\n        !weak &&\x0d\n        size === 1) {\x0d\n      // If this is a timeout signal\x2C or a non-empty composite signal\x2C and we're adding a non-weak abort\x0d\n      // listener\x2C then we don't want it to be gc'd while the listener\x0d\n      // is attached and the timer still hasn't fired. So\x2C we retain a\x0d\n      // strong ref that is held for as long as the listener is registered.\x0d\n      gcPersistentSignals.add(this);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kRemoveListener](size\x2C type\x2C listener\x2C capture) {\x0d\n    super[kRemoveListener](size\x2C type\x2C listener\x2C capture);\x0d\n    const isTimeoutOrNonEmptyCompositeSignal = this[kTimeout] || (this[kComposite] && this[kSourceSignals]?.size);\x0d\n    if (isTimeoutOrNonEmptyCompositeSignal && type === 'abort' && size === 0) {\x0d\n      gcPersistentSignals.delete(this);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kTransfer]() {\x0d\n    validateThisAbortSignal(this);\x0d\n    const aborted = this.aborted;\x0d\n    if (aborted) {\x0d\n      const reason = this.reason;\x0d\n      return {\x0d\n        data: { aborted\x2C reason }\x2C\x0d\n        deserializeInfo: 'internal/abort_controller:ClonedAbortSignal'\x2C\x0d\n      };\x0d\n    }\x0d\n\x0d\n    const { port1\x2C port2 } = this[kCloneData];\x0d\n    this[kCloneData] = undefined;\x0d\n\x0d\n    this.addEventListener('abort'\x2C () => {\x0d\n      port1.postMessage(this.reason);\x0d\n      port1.close();\x0d\n    }\x2C { once: true });\x0d\n\x0d\n    return {\x0d\n      data: { port: port2 }\x2C\x0d\n      deserializeInfo: 'internal/abort_controller:ClonedAbortSignal'\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kTransferList]() {\x0d\n    if (!this.aborted) {\x0d\n      const { port1\x2C port2 } = lazyMessageChannel();\x0d\n      port1.unref();\x0d\n      port2.unref();\x0d\n      this[kCloneData] = {\x0d\n        port1\x2C\x0d\n        port2\x2C\x0d\n      };\x0d\n      return [port2];\x0d\n    }\x0d\n    return [];\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ aborted\x2C reason\x2C port }) {\x0d\n    if (aborted) {\x0d\n      this[kAborted] = aborted;\x0d\n      this[kReason] = reason;\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    port.onmessage = ({ data }) => {\x0d\n      abortSignal(this\x2C data);\x0d\n      port.close();\x0d\n      port.onmessage = undefined;\x0d\n    };\x0d\n    // The receiving port\x2C by itself\x2C should never keep the event loop open.\x0d\n    // The unref() has to be called *after* setting the onmessage handler.\x0d\n    port.unref();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction ClonedAbortSignal() {\x0d\n  return createAbortSignal({ transferable: true });\x0d\n}\x0d\nClonedAbortSignal.prototype[kDeserialize] = () => {};\x0d\n\x0d\nObjectDefineProperties(AbortSignal.prototype\x2C {\x0d\n  aborted: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(AbortSignal.prototype\x2C SymbolToStringTag\x2C {\x0d\n  __proto__: null\x2C\x0d\n  writable: false\x2C\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x2C\x0d\n  value: 'AbortSignal'\x2C\x0d\n});\x0d\n\x0d\ndefineEventHandler(AbortSignal.prototype\x2C 'abort');\x0d\n\x0d\n/**\x0d\n * @param {{\x0d\n *   aborted? : boolean\x2C\x0d\n *   reason? : any\x2C\x0d\n *   transferable? : boolean\x2C\x0d\n *   composite? : boolean\x2C\x0d\n * }} [init]\x0d\n * @returns {AbortSignal}\x0d\n */\x0d\nfunction createAbortSignal(init = kEmptyObject) {\x0d\n  const {\x0d\n    aborted = false\x2C\x0d\n    reason = undefined\x2C\x0d\n    transferable = false\x2C\x0d\n    composite = false\x2C\x0d\n  } = init;\x0d\n  const signal = new EventTarget();\x0d\n  ObjectSetPrototypeOf(signal\x2C AbortSignal.prototype);\x0d\n  signal[kAborted] = aborted;\x0d\n  signal[kReason] = reason;\x0d\n  signal[kComposite] = composite;\x0d\n  if (transferable) {\x0d\n    lazyMarkTransferMode(signal\x2C false\x2C true);\x0d\n  }\x0d\n  return signal;\x0d\n}\x0d\n\x0d\nfunction abortSignal(signal\x2C reason) {\x0d\n  if (signal[kAborted]) return;\x0d\n  signal[kAborted] = true;\x0d\n  signal[kReason] = reason;\x0d\n  const event = new Event('abort'\x2C {\x0d\n    [kTrustEvent]: true\x2C\x0d\n  });\x0d\n  signal.dispatchEvent(event);\x0d\n  signal[kDependantSignals]?.forEach((s) => {\x0d\n    const signalRef = s.deref();\x0d\n    if (signalRef) abortSignal(signalRef\x2C reason);\x0d\n  });\x0d\n}\x0d\n\x0d\nclass AbortController {\x0d\n  #signal;\x0d\n\x0d\n  /**\x0d\n   * @type {AbortSignal}\x0d\n   */\x0d\n  get signal() {\x0d\n    this.#signal ??= createAbortSignal();\x0d\n    return this.#signal;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {any} [reason]\x0d\n   */\x0d\n  abort(reason = new DOMException('This operation was aborted'\x2C 'AbortError')) {\x0d\n    abortSignal(this.#signal ??= createAbortSignal()\x2C reason);\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    return customInspect(this\x2C {\x0d\n      signal: this.signal\x2C\x0d\n    }\x2C depth\x2C options);\x0d\n  }\x0d\n\x0d\n  static [kMakeTransferable]() {\x0d\n    const controller = new AbortController();\x0d\n    controller.#signal = createAbortSignal({ transferable: true });\x0d\n    return controller;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Enables the AbortSignal to be transferable using structuredClone/postMessage.\x0d\n * @param {AbortSignal} signal\x0d\n * @returns {AbortSignal}\x0d\n */\x0d\nfunction transferableAbortSignal(signal) {\x0d\n  if (signal?.[kAborted] === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('signal'\x2C 'AbortSignal'\x2C signal);\x0d\n  lazyMarkTransferMode(signal\x2C false\x2C true);\x0d\n  return signal;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates an AbortController with a transferable AbortSignal\x0d\n */\x0d\nfunction transferableAbortController() {\x0d\n  return AbortController[kMakeTransferable]();\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {AbortSignal} signal\x0d\n * @param {any} resource\x0d\n * @returns {Promise<void>}\x0d\n */\x0d\nasync function aborted(signal\x2C resource) {\x0d\n  if (signal === undefined) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('signal'\x2C 'AbortSignal'\x2C signal);\x0d\n  }\x0d\n  validateAbortSignal(signal\x2C 'signal');\x0d\n  validateObject(resource\x2C 'resource'\x2C kValidateObjectAllowArray | kValidateObjectAllowFunction);\x0d\n  if (signal.aborted)\x0d\n    return PromiseResolve();\x0d\n  const abortPromise = createDeferredPromise();\x0d\n  const opts = { __proto__: null\x2C [kWeakHandler]: resource\x2C once: true\x2C [kResistStopPropagation]: true };\x0d\n  signal.addEventListener('abort'\x2C abortPromise.resolve\x2C opts);\x0d\n  return abortPromise.promise;\x0d\n}\x0d\n\x0d\nObjectDefineProperties(AbortController.prototype\x2C {\x0d\n  signal: kEnumerableProperty\x2C\x0d\n  abort: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(AbortController.prototype\x2C SymbolToStringTag\x2C {\x0d\n  __proto__: null\x2C\x0d\n  writable: false\x2C\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x2C\x0d\n  value: 'AbortController'\x2C\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  AbortController\x2C\x0d\n  AbortSignal\x2C\x0d\n  ClonedAbortSignal\x2C\x0d\n  aborted\x2C\x0d\n  transferableAbortSignal\x2C\x0d\n  transferableAbortController\x2C\x0d\n};\x0d\n
code-source-info,0x9b20b53464,89,0,12962,C0O0C4O12962,,
code-creation,JS,10,134272,0x9b20b54eb4,1088, node:internal/abort_controller:1:1,0x9b20b533d8,~
code-source-info,0x9b20b54eb
code-creation,JS,10,134393,0x9b20b5550c,11,AbortController node:internal/abort_controller:381:23,0x9b20b53f88,~
code-source-info,0x9b20b5550c,89,10585,11248,C4O10590C10O11248,,
code-creation,JS,10,134646,0x9b20b55fdc,151,defineEventHandler node:internal/event_target:1112:28,0x1d9b726e210,~
script-source,48,node:internal/event_target,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SafeWeakSet\x2C\x0d\n  String\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_EVENT_RECURSION\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n  validateInternalField\x2C\x0d\n  kValidateObjectAllowArray\x2C\x0d\n  kValidateObjectAllowFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  kEmptyObject\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\nconst webidl = require('internal/webidl');\x0d\n\x0d\nconst kIsEventTarget = SymbolFor('nodejs.event_target');\x0d\nconst kIsNodeEventTarget = Symbol('kIsNodeEventTarget');\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  kMaxEventTargetListeners\x2C\x0d\n  kMaxEventTargetListenersWarned\x2C\x0d\n} = EventEmitter;\x0d\n\x0d\nconst kEvents = Symbol('kEvents');\x0d\nconst kIsBeingDispatched = Symbol('kIsBeingDispatched');\x0d\nconst kStop = Symbol('kStop');\x0d\nconst kTarget = Symbol('kTarget');\x0d\nconst kHandlers = Symbol('kHandlers');\x0d\nconst kWeakHandler = Symbol('kWeak');\x0d\nconst kResistStopPropagation = Symbol('kResistStopPropagation');\x0d\n\x0d\nconst kHybridDispatch = SymbolFor('nodejs.internal.kHybridDispatch');\x0d\nconst kRemoveWeakListenerHelper = Symbol('nodejs.internal.removeWeakListenerHelper');\x0d\nconst kCreateEvent = Symbol('kCreateEvent');\x0d\nconst kNewListener = Symbol('kNewListener');\x0d\nconst kRemoveListener = Symbol('kRemoveListener');\x0d\nconst kIsNodeStyleListener = Symbol('kIsNodeStyleListener');\x0d\nconst kTrustEvent = Symbol('kTrustEvent');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\nconst kType = Symbol('type');\x0d\nconst kDetail = Symbol('detail');\x0d\n\x0d\nconst isTrustedSet = new SafeWeakSet();\x0d\nconst isTrusted = ObjectGetOwnPropertyDescriptor({\x0d\n  get isTrusted() {\x0d\n    return isTrustedSet.has(this);\x0d\n  }\x2C\x0d\n}\x2C 'isTrusted').get;\x0d\n\x0d\nconst isTrustedDescriptor = {\x0d\n  __proto__: null\x2C\x0d\n  configurable: false\x2C\x0d\n  enumerable: true\x2C\x0d\n  get: isTrusted\x2C\x0d\n};\x0d\n\x0d\nfunction isEvent(value) {\x0d\n  return typeof value?.[kType] === 'string';\x0d\n}\x0d\n\x0d\nclass Event {\x0d\n  #cancelable = false;\x0d\n  #bubbles = false;\x0d\n  #composed = false;\x0d\n  #defaultPrevented = false;\x0d\n  #timestamp = now();\x0d\n  #propagationStopped = false;\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {{\x0d\n   *   bubbles?: boolean\x2C\x0d\n   *   cancelable?: boolean\x2C\x0d\n   *   composed?: boolean\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  constructor(type\x2C options = kEmptyObject) {\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('type');\x0d\n    validateObject(options\x2C 'options');\x0d\n    const { bubbles\x2C cancelable\x2C composed } = options;\x0d\n    this.#cancelable = !!cancelable;\x0d\n    this.#bubbles = !!bubbles;\x0d\n    this.#composed = !!composed;\x0d\n\x0d\n    this[kType] = `${type}`;\x0d\n    if (options?.[kTrustEvent]) {\x0d\n      isTrustedSet.add(this);\x0d\n    }\x0d\n\x0d\n    this[kTarget] = null;\x0d\n    this[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {boolean} [bubbles]\x0d\n   * @param {boolean} [cancelable]\x0d\n   */\x0d\n  initEvent(type\x2C bubbles = false\x2C cancelable = false) {\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('type');\x0d\n\x0d\n    if (this[kIsBeingDispatched]) {\x0d\n      return;\x0d\n    }\x0d\n    this[kType] = `${type}`;\x0d\n    this.#bubbles = !!bubbles;\x0d\n    this.#cancelable = !!cancelable;\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x2C\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({\x0d\n      type: this[kType]\x2C\x0d\n      defaultPrevented: this.#defaultPrevented\x2C\x0d\n      cancelable: this.#cancelable\x2C\x0d\n      timeStamp: this.#timestamp\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  stopImmediatePropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kStop] = true;\x0d\n  }\x0d\n\x0d\n  preventDefault() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this.#defaultPrevented = true;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get target() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get currentTarget() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get srcElement() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {string}\x0d\n   */\x0d\n  get type() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kType];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get cancelable() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this.#cancelable;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get defaultPrevented() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this.#cancelable && this.#defaultPrevented;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {number}\x0d\n   */\x0d\n  get timeStamp() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this.#timestamp;\x0d\n  }\x0d\n\x0d\n\x0d\n  // The following are non-op and unused properties/methods from Web API Event.\x0d\n  // These are not supported in Node.js and are provided purely for\x0d\n  // API completeness.\x0d\n  /**\x0d\n   * @returns {EventTarget[]}\x0d\n   */\x0d\n  composedPath() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? [this[kTarget]] : [];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get returnValue() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return !this.#cancelable || !this.#defaultPrevented;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get bubbles() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this.#bubbles;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get composed() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this.#composed;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {number}\x0d\n   */\x0d\n  get eventPhase() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? Event.AT_TARGET : Event.NONE;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get cancelBubble() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this.#propagationStopped;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  set cancelBubble(value) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    if (value) {\x0d\n      this.#propagationStopped = true;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  stopPropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this.#propagationStopped = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(\x0d\n  Event.prototype\x2C {\x0d\n    [SymbolToStringTag]: {\x0d\n      __proto__: null\x2C\x0d\n      writable: false\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: 'Event'\x2C\x0d\n    }\x2C\x0d\n    initEvent: kEnumerableProperty\x2C\x0d\n    stopImmediatePropagation: kEnumerableProperty\x2C\x0d\n    preventDefault: kEnumerableProperty\x2C\x0d\n    target: kEnumerableProperty\x2C\x0d\n    currentTarget: kEnumerableProperty\x2C\x0d\n    srcElement: kEnumerableProperty\x2C\x0d\n    type: kEnumerableProperty\x2C\x0d\n    cancelable: kEnumerableProperty\x2C\x0d\n    defaultPrevented: kEnumerableProperty\x2C\x0d\n    timeStamp: kEnumerableProperty\x2C\x0d\n    composedPath: kEnumerableProperty\x2C\x0d\n    returnValue: kEnumerableProperty\x2C\x0d\n    bubbles: kEnumerableProperty\x2C\x0d\n    composed: kEnumerableProperty\x2C\x0d\n    eventPhase: kEnumerableProperty\x2C\x0d\n    cancelBubble: kEnumerableProperty\x2C\x0d\n    stopPropagation: kEnumerableProperty\x2C\x0d\n    // Don't conform to the spec with isTrusted. The spec defines it as\x0d\n    // LegacyUnforgeable but defining it in the constructor has a big\x0d\n    // performance impact and the property doesn't seem to be useful outside of\x0d\n    // browsers.\x0d\n    isTrusted: isTrustedDescriptor\x2C\x0d\n  });\x0d\n\x0d\nconst staticProps = ['NONE'\x2C 'CAPTURING_PHASE'\x2C 'AT_TARGET'\x2C 'BUBBLING_PHASE'];\x0d\n\x0d\nObjectDefineProperties(\x0d\n  Event\x2C\x0d\n  ArrayPrototypeReduce(staticProps\x2C (result\x2C staticProp\x2C index = 0) => {\x0d\n    result[staticProp] = {\x0d\n      __proto__: null\x2C\x0d\n      writable: false\x2C\x0d\n      configurable: false\x2C\x0d\n      enumerable: true\x2C\x0d\n      value: index\x2C\x0d\n    };\x0d\n    return result;\x0d\n  }\x2C {})\x2C\x0d\n);\x0d\n\x0d\nfunction isCustomEvent(value) {\x0d\n  return isEvent(value) && (value?.[kDetail] !== undefined);\x0d\n}\x0d\n\x0d\nclass CustomEvent extends Event {\x0d\n  /**\x0d\n   * @constructor\x0d\n   * @param {string} type\x0d\n   * @param {{\x0d\n   *   bubbles?: boolean\x2C\x0d\n   *   cancelable?: boolean\x2C\x0d\n   *   composed?: boolean\x2C\x0d\n   *   detail?: any\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  constructor(type\x2C options = kEmptyObject) {\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('type');\x0d\n    super(type\x2C options);\x0d\n    this[kDetail] = options?.detail ?? null;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {any}\x0d\n   */\x0d\n  get detail() {\x0d\n    if (!isCustomEvent(this))\x0d\n      throw new ERR_INVALID_THIS('CustomEvent');\x0d\n    return this[kDetail];\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(CustomEvent.prototype\x2C {\x0d\n  [SymbolToStringTag]: {\x0d\n    __proto__: null\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'CustomEvent'\x2C\x0d\n  }\x2C\x0d\n  detail: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\nclass NodeCustomEvent extends Event {\x0d\n  constructor(type\x2C options) {\x0d\n    super(type\x2C options);\x0d\n    if (options?.detail) {\x0d\n      this.detail = options.detail;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Weak listener cleanup\x0d\n// This has to be lazy for snapshots to work\x0d\nlet weakListenersState = null;\x0d\n// The resource needs to retain the callback so that it doesn't\x0d\n// get garbage collected now that it's weak.\x0d\nlet objectToWeakListenerMap = null;\x0d\nfunction weakListeners() {\x0d\n  weakListenersState ??= new SafeFinalizationRegistry(\x0d\n    ({ eventTarget\x2C listener\x2C eventType }) => eventTarget.deref()?.[kRemoveWeakListenerHelper](eventType\x2C listener)\x2C\x0d\n  );\x0d\n  objectToWeakListenerMap ??= new SafeWeakMap();\x0d\n  return { registry: weakListenersState\x2C map: objectToWeakListenerMap };\x0d\n}\x0d\n\x0d\nconst kFlagOnce = 1 << 0;\x0d\nconst kFlagCapture = 1 << 1;\x0d\nconst kFlagPassive = 1 << 2;\x0d\nconst kFlagNodeStyle = 1 << 3;\x0d\nconst kFlagWeak = 1 << 4;\x0d\nconst kFlagRemoved = 1 << 5;\x0d\nconst kFlagResistStopPropagation = 1 << 6;\x0d\n\x0d\n// The listeners for an EventTarget are maintained as a linked list.\x0d\n// Unfortunately\x2C the way EventTarget is defined\x2C listeners are accounted\x0d\n// using the tuple [handler\x2Ccapture]\x2C and even if we don't actually make\x0d\n// use of capture or bubbling\x2C in order to be spec compliant we have to\x0d\n// take on the additional complexity of supporting it. Fortunately\x2C using\x0d\n// the linked list makes dispatching faster\x2C even if adding/removing is\x0d\n// slower.\x0d\nclass Listener {\x0d\n  constructor(eventTarget\x2C eventType\x2C previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n              isNodeStyleListener\x2C weak\x2C resistStopPropagation) {\x0d\n    this.next = undefined;\x0d\n    if (previous !== undefined)\x0d\n      previous.next = this;\x0d\n    this.previous = previous;\x0d\n    this.listener = listener;\x0d\n\x0d\n    let flags = 0b0;\x0d\n    if (once)\x0d\n      flags |= kFlagOnce;\x0d\n    if (capture)\x0d\n      flags |= kFlagCapture;\x0d\n    if (passive)\x0d\n      flags |= kFlagPassive;\x0d\n    if (isNodeStyleListener)\x0d\n      flags |= kFlagNodeStyle;\x0d\n    if (weak)\x0d\n      flags |= kFlagWeak;\x0d\n    if (resistStopPropagation)\x0d\n      flags |= kFlagResistStopPropagation;\x0d\n    this.flags = flags;\x0d\n\x0d\n    this.removed = false;\x0d\n\x0d\n    if (this.weak) {\x0d\n      this.callback = new SafeWeakRef(listener);\x0d\n      weakListeners().registry.register(listener\x2C {\x0d\n        __proto__: null\x2C\x0d\n        // Weak ref so the listener won't hold the eventTarget alive\x0d\n        eventTarget: new SafeWeakRef(eventTarget)\x2C\x0d\n        listener: this\x2C\x0d\n        eventType\x2C\x0d\n      }\x2C this);\x0d\n      // Make the retainer retain the listener in a WeakMap\x0d\n      weakListeners().map.set(weak\x2C listener);\x0d\n      this.listener = this.callback;\x0d\n    } else if (typeof listener === 'function') {\x0d\n      this.callback = listener;\x0d\n      this.listener = listener;\x0d\n    } else {\x0d\n      this.callback = async (...args) => {\x0d\n        if (listener.handleEvent)\x0d\n          await ReflectApply(listener.handleEvent\x2C listener\x2C args);\x0d\n      };\x0d\n      this.listener = listener;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get once() {\x0d\n    return Boolean(this.flags & kFlagOnce);\x0d\n  }\x0d\n  get capture() {\x0d\n    return Boolean(this.flags & kFlagCapture);\x0d\n  }\x0d\n  get passive() {\x0d\n    return Boolean(this.flags & kFlagPassive);\x0d\n  }\x0d\n  get isNodeStyleListener() {\x0d\n    return Boolean(this.flags & kFlagNodeStyle);\x0d\n  }\x0d\n  get weak() {\x0d\n    return Boolean(this.flags & kFlagWeak);\x0d\n  }\x0d\n  get resistStopPropagation() {\x0d\n    return Boolean(this.flags & kFlagResistStopPropagation);\x0d\n  }\x0d\n  get removed() {\x0d\n    return Boolean(this.flags & kFlagRemoved);\x0d\n  }\x0d\n  set removed(value) {\x0d\n    if (value)\x0d\n      this.flags |= kFlagRemoved;\x0d\n    else\x0d\n      this.flags &= ~kFlagRemoved;\x0d\n  }\x0d\n\x0d\n  same(listener\x2C capture) {\x0d\n    const myListener = this.weak ? this.listener.deref() : this.listener;\x0d\n    return myListener === listener && this.capture === capture;\x0d\n  }\x0d\n\x0d\n  remove() {\x0d\n    if (this.previous !== undefined)\x0d\n      this.previous.next = this.next;\x0d\n    if (this.next !== undefined)\x0d\n      this.next.previous = this.previous;\x0d\n    this.removed = true;\x0d\n    if (this.weak)\x0d\n      weakListeners().registry.unregister(this);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initEventTarget(self) {\x0d\n  self[kEvents] = new SafeMap();\x0d\n  self[kMaxEventTargetListeners] = EventEmitter.defaultMaxListeners;\x0d\n  self[kMaxEventTargetListenersWarned] = false;\x0d\n  self[kHandlers] = new SafeMap();\x0d\n}\x0d\n\x0d\nclass EventTarget {\x0d\n  // Used in checking whether an object is an EventTarget. This is a well-known\x0d\n  // symbol as EventTarget may be used cross-realm.\x0d\n  // Ref: https://github.com/nodejs/node/pull/33661\x0d\n  static [kIsEventTarget] = true;\x0d\n\x0d\n  constructor() {\x0d\n    initEventTarget(this);\x0d\n  }\x0d\n\x0d\n  [kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak) {\x0d\n    if (this[kMaxEventTargetListeners] > 0 &&\x0d\n        size > this[kMaxEventTargetListeners] &&\x0d\n        !this[kMaxEventTargetListenersWarned]) {\x0d\n      this[kMaxEventTargetListenersWarned] = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error('Possible EventTarget memory leak detected. ' +\x0d\n                          `${size} ${type} listeners ` +\x0d\n                          `added to ${inspect(this\x2C { depth: -1 })}. Use ` +\x0d\n                          'events.setMaxListeners() to increase limit');\x0d\n      w.name = 'MaxListenersExceededWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      w.count = size;\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n  [kRemoveListener](size\x2C type\x2C listener\x2C capture) {}\x0d\n\x0d\n  /**\x0d\n   * @callback EventTargetCallback\x0d\n   * @param {Event} event\x0d\n   */\x0d\n\x0d\n  /**\x0d\n   * @typedef {{ handleEvent: EventTargetCallback }} EventListener\x0d\n   */\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   *   once?: boolean\x2C\x0d\n   *   passive?: boolean\x2C\x0d\n   *   signal?: AbortSignal\x0d\n   * }} [options]\x0d\n   */\x0d\n  addEventListener(type\x2C listener\x2C options = kEmptyObject) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (arguments.length < 2)\x0d\n      throw new ERR_MISSING_ARGS('type'\x2C 'listener');\x0d\n\x0d\n    // We validateOptions before the validateListener check because the spec\x0d\n    // requires us to hit getters.\x0d\n    const {\x0d\n      once\x2C\x0d\n      capture\x2C\x0d\n      passive\x2C\x0d\n      signal\x2C\x0d\n      isNodeStyleListener\x2C\x0d\n      weak\x2C\x0d\n      resistStopPropagation\x2C\x0d\n    } = validateEventListenerOptions(options);\x0d\n\x0d\n    validateAbortSignal(signal\x2C 'options.signal');\x0d\n\x0d\n    if (!validateEventListener(listener)) {\x0d\n      // The DOM silently allows passing undefined as a second argument\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error(`addEventListener called with ${listener}` +\x0d\n                          ' which has no effect.');\x0d\n      w.name = 'AddEventListenerArgumentTypeWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      process.emitWarning(w);\x0d\n      return;\x0d\n    }\x0d\n    type = webidl.converters.DOMString(type);\x0d\n\x0d\n    if (signal) {\x0d\n      if (signal.aborted) {\x0d\n        return;\x0d\n      }\x0d\n      // TODO(benjamingr) make this weak somehow? ideally the signal would\x0d\n      // not prevent the event target from GC.\x0d\n      signal.addEventListener('abort'\x2C () => {\x0d\n        this.removeEventListener(type\x2C listener\x2C options);\x0d\n      }\x2C { __proto__: null\x2C once: true\x2C [kWeakHandler]: this\x2C [kResistStopPropagation]: true });\x0d\n    }\x0d\n\x0d\n    let root = this[kEvents].get(type);\x0d\n\x0d\n    if (root === undefined) {\x0d\n      root = { size: 1\x2C next: undefined\x2C resistStopPropagation: Boolean(resistStopPropagation) };\x0d\n      // This is the first handler in our linked list.\x0d\n      new Listener(this\x2C type\x2C root\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                   isNodeStyleListener\x2C weak\x2C resistStopPropagation);\x0d\n      this[kNewListener](\x0d\n        root.size\x2C\x0d\n        type\x2C\x0d\n        listener\x2C\x0d\n        once\x2C\x0d\n        capture\x2C\x0d\n        passive\x2C\x0d\n        weak);\x0d\n      this[kEvents].set(type\x2C root);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let previous = root;\x0d\n\x0d\n    // We have to walk the linked list to see if we have a match\x0d\n    while (handler !== undefined && !handler.same(listener\x2C capture)) {\x0d\n      previous = handler;\x0d\n      handler = handler.next;\x0d\n    }\x0d\n\x0d\n    if (handler !== undefined) { // Duplicate! Ignore\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    new Listener(this\x2C type\x2C previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                 isNodeStyleListener\x2C weak\x2C resistStopPropagation);\x0d\n    root.size++;\x0d\n    root.resistStopPropagation ||= Boolean(resistStopPropagation);\x0d\n    this[kNewListener](root.size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  removeEventListener(type\x2C listener\x2C options = kEmptyObject) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (arguments.length < 2)\x0d\n      throw new ERR_MISSING_ARGS('type'\x2C 'listener');\x0d\n    if (!validateEventListener(listener))\x0d\n      return;\x0d\n\x0d\n    type = webidl.converters.DOMString(type);\x0d\n    const capture = options?.capture === true;\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined)\x0d\n      return;\x0d\n\x0d\n    let handler = root.next;\x0d\n    while (handler !== undefined) {\x0d\n      if (handler.same(listener\x2C capture)) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        if (root.size === 0)\x0d\n          this[kEvents].delete(type);\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n        break;\x0d\n      }\x0d\n      handler = handler.next;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kRemoveWeakListenerHelper](type\x2C listener) {\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined)\x0d\n      return;\x0d\n\x0d\n    const capture = listener.capture === true;\x0d\n\x0d\n    let handler = root.next;\x0d\n    while (handler !== undefined) {\x0d\n      if (handler === listener) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        if (root.size === 0)\x0d\n          this[kEvents].delete(type);\x0d\n        // Undefined is passed as the listener as the listener was GCed\x0d\n        this[kRemoveListener](root.size\x2C type\x2C undefined\x2C capture);\x0d\n        break;\x0d\n      }\x0d\n      handler = handler.next;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {Event} event\x0d\n   */\x0d\n  dispatchEvent(event) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (arguments.length < 1)\x0d\n      throw new ERR_MISSING_ARGS('event');\x0d\n\x0d\n    if (!(event instanceof Event))\x0d\n      throw new ERR_INVALID_ARG_TYPE('event'\x2C 'Event'\x2C event);\x0d\n\x0d\n    if (event[kIsBeingDispatched])\x0d\n      throw new ERR_EVENT_RECURSION(event.type);\x0d\n\x0d\n    this[kHybridDispatch](event\x2C event.type\x2C event);\x0d\n\x0d\n    return event.defaultPrevented !== true;\x0d\n  }\x0d\n\x0d\n  [kHybridDispatch](nodeValue\x2C type\x2C event) {\x0d\n    const createEvent = () => {\x0d\n      if (event === undefined) {\x0d\n        event = this[kCreateEvent](nodeValue\x2C type);\x0d\n        event[kTarget] = this;\x0d\n        event[kIsBeingDispatched] = true;\x0d\n      }\x0d\n      return event;\x0d\n    };\x0d\n    if (event !== undefined) {\x0d\n      event[kTarget] = this;\x0d\n      event[kIsBeingDispatched] = true;\x0d\n    }\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined) {\x0d\n      if (event !== undefined)\x0d\n        event[kIsBeingDispatched] = false;\x0d\n      return true;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let next;\x0d\n\x0d\n    const iterationCondition = () => {\x0d\n      if (handler === undefined) {\x0d\n        return false;\x0d\n      }\x0d\n      return root.resistStopPropagation || handler.passive || event?.[kStop] !== true;\x0d\n    };\x0d\n    while (iterationCondition()) {\x0d\n      // Cache the next item in case this iteration removes the current one\x0d\n      next = handler.next;\x0d\n\x0d\n      if (handler.removed || (event?.[kStop] === true && !handler.resistStopPropagation)) {\x0d\n        // Deal with the case an event is removed while event handlers are\x0d\n        // Being processed (removeEventListener called from a listener)\x0d\n        // And the case of event.stopImmediatePropagation() being called\x0d\n        // For events not flagged as resistStopPropagation\x0d\n        handler = next;\x0d\n        continue;\x0d\n      }\x0d\n      if (handler.once) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        const { listener\x2C capture } = handler;\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n      }\x0d\n\x0d\n      try {\x0d\n        let arg;\x0d\n        if (handler.isNodeStyleListener) {\x0d\n          arg = nodeValue;\x0d\n        } else {\x0d\n          arg = createEvent();\x0d\n        }\x0d\n        const callback = handler.weak ?\x0d\n          handler.callback.deref() : handler.callback;\x0d\n        let result;\x0d\n        if (callback) {\x0d\n          result = FunctionPrototypeCall(callback\x2C this\x2C arg);\x0d\n          if (!handler.isNodeStyleListener) {\x0d\n            arg[kIsBeingDispatched] = false;\x0d\n          }\x0d\n        }\x0d\n        if (result !== undefined && result !== null)\x0d\n          addCatch(result);\x0d\n      } catch (err) {\x0d\n        emitUncaughtException(err);\x0d\n      }\x0d\n\x0d\n      handler = next;\x0d\n    }\x0d\n\x0d\n    if (event !== undefined)\x0d\n      event[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [kCreateEvent](nodeValue\x2C type) {\x0d\n    return new NodeCustomEvent(type\x2C { detail: nodeValue });\x0d\n  }\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x2C\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({}\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(EventTarget.prototype\x2C {\x0d\n  addEventListener: kEnumerableProperty\x2C\x0d\n  removeEventListener: kEnumerableProperty\x2C\x0d\n  dispatchEvent: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    __proto__: null\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'EventTarget'\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nfunction initNodeEventTarget(self) {\x0d\n  initEventTarget(self);\x0d\n}\x0d\n\x0d\nclass NodeEventTarget extends EventTarget {\x0d\n  static [kIsNodeEventTarget] = true;\x0d\n  static defaultMaxListeners = 10;\x0d\n\x0d\n  constructor() {\x0d\n    super();\x0d\n    initNodeEventTarget(this);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {number} n\x0d\n   */\x0d\n  setMaxListeners(n) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    EventEmitter.setMaxListeners(n\x2C this);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {number}\x0d\n   */\x0d\n  getMaxListeners() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return this[kMaxEventTargetListeners];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {string[]}\x0d\n   */\x0d\n  eventNames() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return ArrayFrom(this[kEvents].keys());\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @returns {number}\x0d\n   */\x0d\n  listenerCount(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    const root = this[kEvents].get(String(type));\x0d\n    return root !== undefined ? root.size : 0;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  off(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  removeListener(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  on(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  addListener(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {any} arg\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  emit(type\x2C arg) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    validateString(type\x2C 'type');\x0d\n    const hadListeners = this.listenerCount(type) > 0;\x0d\n    this[kHybridDispatch](arg\x2C type);\x0d\n    return hadListeners;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  once(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C\x0d\n                          { once: true\x2C [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} [type]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  removeAllListeners(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    if (type !== undefined) {\x0d\n      this[kEvents].delete(String(type));\x0d\n    } else {\x0d\n      this[kEvents].clear();\x0d\n    }\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(NodeEventTarget.prototype\x2C {\x0d\n  setMaxListeners: kEnumerableProperty\x2C\x0d\n  getMaxListeners: kEnumerableProperty\x2C\x0d\n  eventNames: kEnumerableProperty\x2C\x0d\n  listenerCount: kEnumerableProperty\x2C\x0d\n  off: kEnumerableProperty\x2C\x0d\n  removeListener: kEnumerableProperty\x2C\x0d\n  on: kEnumerableProperty\x2C\x0d\n  addListener: kEnumerableProperty\x2C\x0d\n  once: kEnumerableProperty\x2C\x0d\n  emit: kEnumerableProperty\x2C\x0d\n  removeAllListeners: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\n// EventTarget API\x0d\n\x0d\nfunction validateEventListener(listener) {\x0d\n  if (typeof listener === 'function' ||\x0d\n      typeof listener?.handleEvent === 'function') {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  if (listener == null)\x0d\n    return false;\x0d\n\x0d\n  if (typeof listener === 'object') {\x0d\n    // Require `handleEvent` lazily.\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE('listener'\x2C 'EventListener'\x2C listener);\x0d\n}\x0d\n\x0d\nfunction validateEventListenerOptions(options) {\x0d\n  if (typeof options === 'boolean')\x0d\n    return { capture: options };\x0d\n\x0d\n  if (options === null)\x0d\n    return kEmptyObject;\x0d\n  validateObject(options\x2C 'options'\x2C kValidateObjectAllowArray | kValidateObjectAllowFunction);\x0d\n  return {\x0d\n    once: Boolean(options.once)\x2C\x0d\n    capture: Boolean(options.capture)\x2C\x0d\n    passive: Boolean(options.passive)\x2C\x0d\n    signal: options.signal\x2C\x0d\n    weak: options[kWeakHandler]\x2C\x0d\n    resistStopPropagation: options[kResistStopPropagation] ?? false\x2C\x0d\n    isNodeStyleListener: Boolean(options[kIsNodeStyleListener])\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\n// Test whether the argument is an event object. This is far from a fool-proof\x0d\n// test\x2C for example this input will result in a false positive:\x0d\n// > isEventTarget({ constructor: EventTarget })\x0d\n// It stands in its current implementation as a compromise.\x0d\n// Ref: https://github.com/nodejs/node/pull/33661\x0d\nfunction isEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsEventTarget];\x0d\n}\x0d\n\x0d\nfunction isNodeEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsNodeEventTarget];\x0d\n}\x0d\n\x0d\nfunction addCatch(promise) {\x0d\n  const then = promise.then;\x0d\n  if (typeof then === 'function') {\x0d\n    FunctionPrototypeCall(then\x2C promise\x2C undefined\x2C function(err) {\x0d\n      // The callback is called with nextTick to avoid a follow-up\x0d\n      // rejection from this promise.\x0d\n      emitUncaughtException(err);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUncaughtException(err) {\x0d\n  process.nextTick(() => { throw err; });\x0d\n}\x0d\n\x0d\nfunction makeEventHandler(handler) {\x0d\n  // Event handlers are dispatched in the order they were first set\x0d\n  // See https://github.com/nodejs/node/pull/35949#issuecomment-722496598\x0d\n  function eventHandler(...args) {\x0d\n    if (typeof eventHandler.handler !== 'function') {\x0d\n      return;\x0d\n    }\x0d\n    return ReflectApply(eventHandler.handler\x2C this\x2C args);\x0d\n  }\x0d\n  eventHandler.handler = handler;\x0d\n  return eventHandler;\x0d\n}\x0d\n\x0d\nfunction defineEventHandler(emitter\x2C name\x2C event = name) {\x0d\n  // 8.1.5.1 Event handlers - basically `on[eventName]` attributes\x0d\n  const propName = `on${name}`;\x0d\n  function get() {\x0d\n    validateInternalField(this\x2C kHandlers\x2C 'EventTarget');\x0d\n    return this[kHandlers]?.get(event)?.handler ?? null;\x0d\n  }\x0d\n  ObjectDefineProperty(get\x2C 'name'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: `get ${propName}`\x2C\x0d\n  });\x0d\n\x0d\n  function set(value) {\x0d\n    validateInternalField(this\x2C kHandlers\x2C 'EventTarget');\x0d\n    let wrappedHandler = this[kHandlers]?.get(event);\x0d\n    if (wrappedHandler) {\x0d\n      if (typeof wrappedHandler.handler === 'function') {\x0d\n        this[kEvents].get(event).size--;\x0d\n        const size = this[kEvents].get(event).size;\x0d\n        this[kRemoveListener](size\x2C event\x2C wrappedHandler.handler\x2C false);\x0d\n      }\x0d\n      wrappedHandler.handler = value;\x0d\n      if (typeof wrappedHandler.handler === 'function') {\x0d\n        this[kEvents].get(event).size++;\x0d\n        const size = this[kEvents].get(event).size;\x0d\n        this[kNewListener](size\x2C event\x2C value\x2C false\x2C false\x2C false\x2C false);\x0d\n      }\x0d\n    } else {\x0d\n      wrappedHandler = makeEventHandler(value);\x0d\n      this.addEventListener(event\x2C wrappedHandler);\x0d\n    }\x0d\n    this[kHandlers].set(event\x2C wrappedHandler);\x0d\n  }\x0d\n  ObjectDefineProperty(set\x2C 'name'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: `set ${propName}`\x2C\x0d\n  });\x0d\n\x0d\n  ObjectDefineProperty(emitter\x2C propName\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get\x2C\x0d\n    set\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Event\x2C\x0d\n  CustomEvent\x2C\x0d\n  EventTarget\x2C\x0d\n  NodeEventTarget\x2C\x0d\n  defineEventHandler\x2C\x0d\n  initEventTarget\x2C\x0d\n  initNodeEventTarget\x2C\x0d\n  kCreateEvent\x2C\x0d\n  kNewListener\x2C\x0d\n  kTrustEvent\x2C\x0d\n  kRemoveListener\x2C\x0d\n  kEvents\x2C\x0d\n  kWeakHandler\x2C\x0d\n  kResistStopPropagation\x2C\x0d\n  isEventTarget\x2C\x0d\n};\x0d\n
code-source-info,0x9b20b55fdc,48,30478,31962,C0O30478C24O30502C36O30598C41O30603C46O30757C56O30778C66O30834C77O30757C82O31720C90O31741C100O31797C111O31720C116O31821C121O31851C128O31890C134O31900C144O31821C150O31961,,
code-creation,Eval,10,136457,0x9b20b59dcc,5, node:internal/streams/end-of-stream:1:1,0x9b20b59a68,~
script-source,90,node:internal/streams/end-of-stream,// Ported from https://github.com/mafintosh/end-of-stream with\x0d\n// permission from the author\x2C Mathias Buus (@mafintosh).\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  codes\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_STREAM_PREMATURE_CLOSE\x2C\x0d\n} = codes;\x0d\nconst {\x0d\n  kEmptyObject\x2C\x0d\n  once\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateFunction\x2C\x0d\n  validateObject\x2C\x0d\n  validateBoolean\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  SymbolDispose\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  isClosed\x2C\x0d\n  isReadable\x2C\x0d\n  isReadableNodeStream\x2C\x0d\n  isReadableStream\x2C\x0d\n  isReadableFinished\x2C\x0d\n  isReadableErrored\x2C\x0d\n  isWritable\x2C\x0d\n  isWritableNodeStream\x2C\x0d\n  isWritableStream\x2C\x0d\n  isWritableFinished\x2C\x0d\n  isWritableErrored\x2C\x0d\n  isNodeStream\x2C\x0d\n  willEmitClose: _willEmitClose\x2C\x0d\n  kIsClosedPromise\x2C\x0d\n} = require('internal/streams/utils');\x0d\nlet addAbortListener;\x0d\n\x0d\nfunction isRequest(stream) {\x0d\n  return stream.setHeader && typeof stream.abort === 'function';\x0d\n}\x0d\n\x0d\nconst nop = () => {};\x0d\n\x0d\nfunction eos(stream\x2C options\x2C callback) {\x0d\n  if (arguments.length === 2) {\x0d\n    callback = options;\x0d\n    options = kEmptyObject;\x0d\n  } else if (options == null) {\x0d\n    options = kEmptyObject;\x0d\n  } else {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n\x0d\n  callback = once(callback);\x0d\n\x0d\n  if (isReadableStream(stream) || isWritableStream(stream)) {\x0d\n    return eosWeb(stream\x2C options\x2C callback);\x0d\n  }\x0d\n\x0d\n  if (!isNodeStream(stream)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('stream'\x2C ['ReadableStream'\x2C 'WritableStream'\x2C 'Stream']\x2C stream);\x0d\n  }\x0d\n\x0d\n  const readable = options.readable ?? isReadableNodeStream(stream);\x0d\n  const writable = options.writable ?? isWritableNodeStream(stream);\x0d\n\x0d\n  const wState = stream._writableState;\x0d\n  const rState = stream._readableState;\x0d\n\x0d\n  const onlegacyfinish = () => {\x0d\n    if (!stream.writable) {\x0d\n      onfinish();\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // TODO (ronag): Improve soft detection to include core modules and\x0d\n  // common ecosystem modules that do properly emit 'close' but fail\x0d\n  // this generic check.\x0d\n  let willEmitClose = (\x0d\n    _willEmitClose(stream) &&\x0d\n    isReadableNodeStream(stream) === readable &&\x0d\n    isWritableNodeStream(stream) === writable\x0d\n  );\x0d\n\x0d\n  let writableFinished = isWritableFinished(stream\x2C false);\x0d\n  const onfinish = () => {\x0d\n    writableFinished = true;\x0d\n    // Stream should not be destroyed here. If it is that\x0d\n    // means that user space is doing something differently and\x0d\n    // we cannot trust willEmitClose.\x0d\n    if (stream.destroyed) {\x0d\n      willEmitClose = false;\x0d\n    }\x0d\n\x0d\n    if (willEmitClose && (!stream.readable || readable)) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (!readable || readableFinished) {\x0d\n      callback.call(stream);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  let readableFinished = isReadableFinished(stream\x2C false);\x0d\n  const onend = () => {\x0d\n    readableFinished = true;\x0d\n    // Stream should not be destroyed here. If it is that\x0d\n    // means that user space is doing something differently and\x0d\n    // we cannot trust willEmitClose.\x0d\n    if (stream.destroyed) {\x0d\n      willEmitClose = false;\x0d\n    }\x0d\n\x0d\n    if (willEmitClose && (!stream.writable || writable)) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (!writable || writableFinished) {\x0d\n      callback.call(stream);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  const onerror = (err) => {\x0d\n    callback.call(stream\x2C err);\x0d\n  };\x0d\n\x0d\n  let closed = isClosed(stream);\x0d\n\x0d\n  const onclose = () => {\x0d\n    closed = true;\x0d\n\x0d\n    const errored = isWritableErrored(stream) || isReadableErrored(stream);\x0d\n\x0d\n    if (errored && typeof errored !== 'boolean') {\x0d\n      return callback.call(stream\x2C errored);\x0d\n    }\x0d\n\x0d\n    if (readable && !readableFinished && isReadableNodeStream(stream\x2C true)) {\x0d\n      if (!isReadableFinished(stream\x2C false))\x0d\n        return callback.call(stream\x2C\x0d\n                             new ERR_STREAM_PREMATURE_CLOSE());\x0d\n    }\x0d\n    if (writable && !writableFinished) {\x0d\n      if (!isWritableFinished(stream\x2C false))\x0d\n        return callback.call(stream\x2C\x0d\n                             new ERR_STREAM_PREMATURE_CLOSE());\x0d\n    }\x0d\n\x0d\n    callback.call(stream);\x0d\n  };\x0d\n\x0d\n  const onclosed = () => {\x0d\n    closed = true;\x0d\n\x0d\n    const errored = isWritableErrored(stream) || isReadableErrored(stream);\x0d\n\x0d\n    if (errored && typeof errored !== 'boolean') {\x0d\n      return callback.call(stream\x2C errored);\x0d\n    }\x0d\n\x0d\n    callback.call(stream);\x0d\n  };\x0d\n\x0d\n  const onrequest = () => {\x0d\n    stream.req.on('finish'\x2C onfinish);\x0d\n  };\x0d\n\x0d\n  if (isRequest(stream)) {\x0d\n    stream.on('complete'\x2C onfinish);\x0d\n    if (!willEmitClose) {\x0d\n      stream.on('abort'\x2C onclose);\x0d\n    }\x0d\n    if (stream.req) {\x0d\n      onrequest();\x0d\n    } else {\x0d\n      stream.on('request'\x2C onrequest);\x0d\n    }\x0d\n  } else if (writable && !wState) { // legacy streams\x0d\n    stream.on('end'\x2C onlegacyfinish);\x0d\n    stream.on('close'\x2C onlegacyfinish);\x0d\n  }\x0d\n\x0d\n  // Not all streams will emit 'close' after 'aborted'.\x0d\n  if (!willEmitClose && typeof stream.aborted === 'boolean') {\x0d\n    stream.on('aborted'\x2C onclose);\x0d\n  }\x0d\n\x0d\n  stream.on('end'\x2C onend);\x0d\n  stream.on('finish'\x2C onfinish);\x0d\n  if (options.error !== false) {\x0d\n    stream.on('error'\x2C onerror);\x0d\n  }\x0d\n  stream.on('close'\x2C onclose);\x0d\n\x0d\n  if (closed) {\x0d\n    process.nextTick(onclose);\x0d\n  } else if (wState?.errorEmitted || rState?.errorEmitted) {\x0d\n    if (!willEmitClose) {\x0d\n      process.nextTick(onclosed);\x0d\n    }\x0d\n  } else if (\x0d\n    !readable &&\x0d\n    (!willEmitClose || isReadable(stream)) &&\x0d\n    (writableFinished || isWritable(stream) === false)\x0d\n  ) {\x0d\n    process.nextTick(onclosed);\x0d\n  } else if (\x0d\n    !writable &&\x0d\n    (!willEmitClose || isWritable(stream)) &&\x0d\n    (readableFinished || isReadable(stream) === false)\x0d\n  ) {\x0d\n    process.nextTick(onclosed);\x0d\n  } else if ((rState && stream.req && stream.aborted)) {\x0d\n    process.nextTick(onclosed);\x0d\n  }\x0d\n\x0d\n  const cleanup = () => {\x0d\n    callback = nop;\x0d\n    stream.removeListener('aborted'\x2C onclose);\x0d\n    stream.removeListener('complete'\x2C onfinish);\x0d\n    stream.removeListener('abort'\x2C onclose);\x0d\n    stream.removeListener('request'\x2C onrequest);\x0d\n    if (stream.req) stream.req.removeListener('finish'\x2C onfinish);\x0d\n    stream.removeListener('end'\x2C onlegacyfinish);\x0d\n    stream.removeListener('close'\x2C onlegacyfinish);\x0d\n    stream.removeListener('finish'\x2C onfinish);\x0d\n    stream.removeListener('end'\x2C onend);\x0d\n    stream.removeListener('error'\x2C onerror);\x0d\n    stream.removeListener('close'\x2C onclose);\x0d\n  };\x0d\n\x0d\n  if (options.signal && !closed) {\x0d\n    const abort = () => {\x0d\n      // Keep it because cleanup removes it.\x0d\n      const endCallback = callback;\x0d\n      cleanup();\x0d\n      endCallback.call(\x0d\n        stream\x2C\x0d\n        new AbortError(undefined\x2C { cause: options.signal.reason }));\x0d\n    };\x0d\n    if (options.signal.aborted) {\x0d\n      process.nextTick(abort);\x0d\n    } else {\x0d\n      addAbortListener ??= require('events').addAbortListener;\x0d\n      const disposable = addAbortListener(options.signal\x2C abort);\x0d\n      const originalCallback = callback;\x0d\n      callback = once((...args) => {\x0d\n        disposable[SymbolDispose]();\x0d\n        originalCallback.apply(stream\x2C args);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return cleanup;\x0d\n}\x0d\n\x0d\nfunction eosWeb(stream\x2C options\x2C callback) {\x0d\n  let isAborted = false;\x0d\n  let abort = nop;\x0d\n  if (options.signal) {\x0d\n    abort = () => {\x0d\n      isAborted = true;\x0d\n      callback.call(stream\x2C new AbortError(undefined\x2C { cause: options.signal.reason }));\x0d\n    };\x0d\n    if (options.signal.aborted) {\x0d\n      process.nextTick(abort);\x0d\n    } else {\x0d\n      addAbortListener ??= require('events').addAbortListener;\x0d\n      const disposable = addAbortListener(options.signal\x2C abort);\x0d\n      const originalCallback = callback;\x0d\n      callback = once((...args) => {\x0d\n        disposable[SymbolDispose]();\x0d\n        originalCallback.apply(stream\x2C args);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  const resolverFn = (...args) => {\x0d\n    if (!isAborted) {\x0d\n      process.nextTick(() => callback.apply(stream\x2C args));\x0d\n    }\x0d\n  };\x0d\n  PromisePrototypeThen(\x0d\n    stream[kIsClosedPromise].promise\x2C\x0d\n    resolverFn\x2C\x0d\n    resolverFn\x2C\x0d\n  );\x0d\n  return nop;\x0d\n}\x0d\n\x0d\nfunction finished(stream\x2C opts) {\x0d\n  let autoCleanup = false;\x0d\n  if (opts === null) {\x0d\n    opts = kEmptyObject;\x0d\n  }\x0d\n  if (opts?.cleanup) {\x0d\n    validateBoolean(opts.cleanup\x2C 'cleanup');\x0d\n    autoCleanup = opts.cleanup;\x0d\n  }\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    const cleanup = eos(stream\x2C opts\x2C (err) => {\x0d\n      if (autoCleanup) {\x0d\n        cleanup();\x0d\n      }\x0d\n      if (err) {\x0d\n        reject(err);\x0d\n      } else {\x0d\n        resolve();\x0d\n      }\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = eos;\x0d\nmodule.exports.finished = finished;\x0d\n
code-source-info,0x9b20b59dcc,90,0,8687,C0O0C4O8687,,
code-creation,JS,10,136869,0x9b20b5a134,353, node:internal/streams/end-of-stream:1:1,0x9b20b59d40,~
code-source-info,0x9b20b5a134,90,0,8687,C0O0C120O180C126O180C131O153C137O168C142O220C148O245C154O325C160O325C165O297C171O314C177O449C183O449C188O363C194O387C200O408C206O427C212O495C218O507C224O532C230O878C236O878C241O579C247O592C253O607C259O632C265O653C271O676C277O698C283O713C289O738C295O759C301O782C307O804C313O836C319O855C325O918C326O918C328O1052C332O1052C334O8627C336O8642C340O8657C347O8674C352O8686,,
code-creation,Eval,10,137169,0x9b20b5b834,5, node:internal/streams/utils:1:1,0x9b20b5b5a0,~
script-source,91,node:internal/streams/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  SymbolAsyncIterator\x2C\x0d\n  SymbolIterator\x2C\x0d\n  SymbolFor\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\n// We need to use SymbolFor to make these globally available\x0d\n// for interopt with readable-stream\x2C i.e. readable-stream\x0d\n// and node core needs to be able to read/write private state\x0d\n// from each other for proper interoperability.\x0d\nconst kIsDestroyed = SymbolFor('nodejs.stream.destroyed');\x0d\nconst kIsErrored = SymbolFor('nodejs.stream.errored');\x0d\nconst kIsReadable = SymbolFor('nodejs.stream.readable');\x0d\nconst kIsWritable = SymbolFor('nodejs.stream.writable');\x0d\nconst kIsDisturbed = SymbolFor('nodejs.stream.disturbed');\x0d\n\x0d\nconst kOnConstructed = Symbol('kOnConstructed');\x0d\n\x0d\nconst kIsClosedPromise = SymbolFor('nodejs.webstream.isClosedPromise');\x0d\nconst kControllerErrorFunction = SymbolFor('nodejs.webstream.controllerErrorFunction');\x0d\n\x0d\nconst kState = Symbol('kState');\x0d\nconst kObjectMode = 1 << 0;\x0d\nconst kErrorEmitted = 1 << 1;\x0d\nconst kAutoDestroy = 1 << 2;\x0d\nconst kEmitClose = 1 << 3;\x0d\nconst kDestroyed = 1 << 4;\x0d\nconst kClosed = 1 << 5;\x0d\nconst kCloseEmitted = 1 << 6;\x0d\nconst kErrored = 1 << 7;\x0d\nconst kConstructed = 1 << 8;\x0d\n\x0d\nfunction isReadableNodeStream(obj\x2C strict = false) {\x0d\n  return !!(\x0d\n    obj &&\x0d\n    typeof obj.pipe === 'function' &&\x0d\n    typeof obj.on === 'function' &&\x0d\n    (\x0d\n      !strict ||\x0d\n      (typeof obj.pause === 'function' && typeof obj.resume === 'function')\x0d\n    ) &&\x0d\n    (!obj._writableState || obj._readableState?.readable !== false) && // Duplex\x0d\n    (!obj._writableState || obj._readableState) // Writable has .pipe.\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isWritableNodeStream(obj) {\x0d\n  return !!(\x0d\n    obj &&\x0d\n    typeof obj.write === 'function' &&\x0d\n    typeof obj.on === 'function' &&\x0d\n    (!obj._readableState || obj._writableState?.writable !== false) // Duplex\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isDuplexNodeStream(obj) {\x0d\n  return !!(\x0d\n    obj &&\x0d\n    (typeof obj.pipe === 'function' && obj._readableState) &&\x0d\n    typeof obj.on === 'function' &&\x0d\n    typeof obj.write === 'function'\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isNodeStream(obj) {\x0d\n  return (\x0d\n    obj &&\x0d\n    (\x0d\n      obj._readableState ||\x0d\n      obj._writableState ||\x0d\n      (typeof obj.write === 'function' && typeof obj.on === 'function') ||\x0d\n      (typeof obj.pipe === 'function' && typeof obj.on === 'function')\x0d\n    )\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isReadableStream(obj) {\x0d\n  return !!(\x0d\n    obj &&\x0d\n    !isNodeStream(obj) &&\x0d\n    typeof obj.pipeThrough === 'function' &&\x0d\n    typeof obj.getReader === 'function' &&\x0d\n    typeof obj.cancel === 'function'\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isWritableStream(obj) {\x0d\n  return !!(\x0d\n    obj &&\x0d\n    !isNodeStream(obj) &&\x0d\n    typeof obj.getWriter === 'function' &&\x0d\n    typeof obj.abort === 'function'\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isTransformStream(obj) {\x0d\n  return !!(\x0d\n    obj &&\x0d\n    !isNodeStream(obj) &&\x0d\n    typeof obj.readable === 'object' &&\x0d\n    typeof obj.writable === 'object'\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isWebStream(obj) {\x0d\n  return isReadableStream(obj) || isWritableStream(obj) || isTransformStream(obj);\x0d\n}\x0d\n\x0d\nfunction isIterable(obj\x2C isAsync) {\x0d\n  if (obj == null) return false;\x0d\n  if (isAsync === true) return typeof obj[SymbolAsyncIterator] === 'function';\x0d\n  if (isAsync === false) return typeof obj[SymbolIterator] === 'function';\x0d\n  return typeof obj[SymbolAsyncIterator] === 'function' ||\x0d\n    typeof obj[SymbolIterator] === 'function';\x0d\n}\x0d\n\x0d\nfunction isDestroyed(stream) {\x0d\n  if (!isNodeStream(stream)) return null;\x0d\n  const wState = stream._writableState;\x0d\n  const rState = stream._readableState;\x0d\n  const state = wState || rState;\x0d\n  return !!(stream.destroyed || stream[kIsDestroyed] || state?.destroyed);\x0d\n}\x0d\n\x0d\n// Have been end():d.\x0d\nfunction isWritableEnded(stream) {\x0d\n  if (!isWritableNodeStream(stream)) return null;\x0d\n  if (stream.writableEnded === true) return true;\x0d\n  const wState = stream._writableState;\x0d\n  if (wState?.errored) return false;\x0d\n  if (typeof wState?.ended !== 'boolean') return null;\x0d\n  return wState.ended;\x0d\n}\x0d\n\x0d\n// Have emitted 'finish'.\x0d\nfunction isWritableFinished(stream\x2C strict) {\x0d\n  if (!isWritableNodeStream(stream)) return null;\x0d\n  if (stream.writableFinished === true) return true;\x0d\n  const wState = stream._writableState;\x0d\n  if (wState?.errored) return false;\x0d\n  if (typeof wState?.finished !== 'boolean') return null;\x0d\n  return !!(\x0d\n    wState.finished ||\x0d\n    (strict === false && wState.ended === true && wState.length === 0)\x0d\n  );\x0d\n}\x0d\n\x0d\n// Have been push(null):d.\x0d\nfunction isReadableEnded(stream) {\x0d\n  if (!isReadableNodeStream(stream)) return null;\x0d\n  if (stream.readableEnded === true) return true;\x0d\n  const rState = stream._readableState;\x0d\n  if (!rState || rState.errored) return false;\x0d\n  if (typeof rState?.ended !== 'boolean') return null;\x0d\n  return rState.ended;\x0d\n}\x0d\n\x0d\n// Have emitted 'end'.\x0d\nfunction isReadableFinished(stream\x2C strict) {\x0d\n  if (!isReadableNodeStream(stream)) return null;\x0d\n  const rState = stream._readableState;\x0d\n  if (rState?.errored) return false;\x0d\n  if (typeof rState?.endEmitted !== 'boolean') return null;\x0d\n  return !!(\x0d\n    rState.endEmitted ||\x0d\n    (strict === false && rState.ended === true && rState.length === 0)\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isReadable(stream) {\x0d\n  if (stream && stream[kIsReadable] != null) return stream[kIsReadable];\x0d\n  if (typeof stream?.readable !== 'boolean') return null;\x0d\n  if (isDestroyed(stream)) return false;\x0d\n  return isReadableNodeStream(stream) &&\x0d\n    stream.readable &&\x0d\n    !isReadableFinished(stream);\x0d\n}\x0d\n\x0d\nfunction isWritable(stream) {\x0d\n  if (stream && stream[kIsWritable] != null) return stream[kIsWritable];\x0d\n  if (typeof stream?.writable !== 'boolean') return null;\x0d\n  if (isDestroyed(stream)) return false;\x0d\n  return isWritableNodeStream(stream) &&\x0d\n    stream.writable &&\x0d\n    !isWritableEnded(stream);\x0d\n}\x0d\n\x0d\nfunction isFinished(stream\x2C opts) {\x0d\n  if (!isNodeStream(stream)) {\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  if (isDestroyed(stream)) {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  if (opts?.readable !== false && isReadable(stream)) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  if (opts?.writable !== false && isWritable(stream)) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  return true;\x0d\n}\x0d\n\x0d\nfunction isWritableErrored(stream) {\x0d\n  if (!isNodeStream(stream)) {\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  if (stream.writableErrored) {\x0d\n    return stream.writableErrored;\x0d\n  }\x0d\n\x0d\n  return stream._writableState?.errored ?? null;\x0d\n}\x0d\n\x0d\nfunction isReadableErrored(stream) {\x0d\n  if (!isNodeStream(stream)) {\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  if (stream.readableErrored) {\x0d\n    return stream.readableErrored;\x0d\n  }\x0d\n\x0d\n  return stream._readableState?.errored ?? null;\x0d\n}\x0d\n\x0d\nfunction isClosed(stream) {\x0d\n  if (!isNodeStream(stream)) {\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  if (typeof stream.closed === 'boolean') {\x0d\n    return stream.closed;\x0d\n  }\x0d\n\x0d\n  const wState = stream._writableState;\x0d\n  const rState = stream._readableState;\x0d\n\x0d\n  if (\x0d\n    typeof wState?.closed === 'boolean' ||\x0d\n    typeof rState?.closed === 'boolean'\x0d\n  ) {\x0d\n    return wState?.closed || rState?.closed;\x0d\n  }\x0d\n\x0d\n  if (typeof stream._closed === 'boolean' && isOutgoingMessage(stream)) {\x0d\n    return stream._closed;\x0d\n  }\x0d\n\x0d\n  return null;\x0d\n}\x0d\n\x0d\nfunction isOutgoingMessage(stream) {\x0d\n  return (\x0d\n    typeof stream._closed === 'boolean' &&\x0d\n    typeof stream._defaultKeepAlive === 'boolean' &&\x0d\n    typeof stream._removedConnection === 'boolean' &&\x0d\n    typeof stream._removedContLen === 'boolean'\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isServerResponse(stream) {\x0d\n  return (\x0d\n    typeof stream._sent100 === 'boolean' &&\x0d\n    isOutgoingMessage(stream)\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isServerRequest(stream) {\x0d\n  return (\x0d\n    typeof stream._consuming === 'boolean' &&\x0d\n    typeof stream._dumped === 'boolean' &&\x0d\n    stream.req?.upgradeOrConnect === undefined\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction willEmitClose(stream) {\x0d\n  if (!isNodeStream(stream)) return null;\x0d\n\x0d\n  const wState = stream._writableState;\x0d\n  const rState = stream._readableState;\x0d\n  const state = wState || rState;\x0d\n\x0d\n  return (!state && isServerResponse(stream)) || !!(\x0d\n    state &&\x0d\n    state.autoDestroy &&\x0d\n    state.emitClose &&\x0d\n    state.closed === false\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isDisturbed(stream) {\x0d\n  return !!(stream && (\x0d\n    stream[kIsDisturbed] ??\x0d\n    (stream.readableDidRead || stream.readableAborted)\x0d\n  ));\x0d\n}\x0d\n\x0d\nfunction isErrored(stream) {\x0d\n  return !!(stream && (\x0d\n    stream[kIsErrored] ??\x0d\n    stream.readableErrored ??\x0d\n    stream.writableErrored ??\x0d\n    stream._readableState?.errorEmitted ??\x0d\n    stream._writableState?.errorEmitted ??\x0d\n    stream._readableState?.errored ??\x0d\n    stream._writableState?.errored\x0d\n  ));\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  kOnConstructed\x2C\x0d\n  isDestroyed\x2C\x0d\n  kIsDestroyed\x2C\x0d\n  isDisturbed\x2C\x0d\n  kIsDisturbed\x2C\x0d\n  isErrored\x2C\x0d\n  kIsErrored\x2C\x0d\n  isReadable\x2C\x0d\n  kIsReadable\x2C\x0d\n  kIsClosedPromise\x2C\x0d\n  kControllerErrorFunction\x2C\x0d\n  kIsWritable\x2C\x0d\n  isClosed\x2C\x0d\n  isDuplexNodeStream\x2C\x0d\n  isFinished\x2C\x0d\n  isIterable\x2C\x0d\n  isReadableNodeStream\x2C\x0d\n  isReadableStream\x2C\x0d\n  isReadableEnded\x2C\x0d\n  isReadableFinished\x2C\x0d\n  isReadableErrored\x2C\x0d\n  isNodeStream\x2C\x0d\n  isWebStream\x2C\x0d\n  isWritable\x2C\x0d\n  isWritableNodeStream\x2C\x0d\n  isWritableStream\x2C\x0d\n  isWritableEnded\x2C\x0d\n  isWritableFinished\x2C\x0d\n  isWritableErrored\x2C\x0d\n  isServerRequest\x2C\x0d\n  isServerResponse\x2C\x0d\n  willEmitClose\x2C\x0d\n  isTransformStream\x2C\x0d\n  kState\x2C\x0d\n  // bitfields\x0d\n  kObjectMode\x2C\x0d\n  kErrorEmitted\x2C\x0d\n  kAutoDestroy\x2C\x0d\n  kEmitClose\x2C\x0d\n  kDestroyed\x2C\x0d\n  kClosed\x2C\x0d\n  kCloseEmitted\x2C\x0d\n  kErrored\x2C\x0d\n  kConstructed\x2C\x0d\n};\x0d\n
code-source-info,0x9b20b5b834,91,0,9298,C0O0C4O9298,,
code-creation,JS,10,137610,0x9b20b5c6fc,592, node:internal/streams/utils:1:1,0x9b20b5b7a8,~
code-source-info,0x9b20b5c6fc,91,0,9298,C0O0C181O28C187O52C193O71C198O85C203O369C207O369C211O369C213O427C217O427C221O427C223O484C227O484C231O484C233O542C237O542C241O542C243O601C247O601C251O601C253O665C257O665C262O719C266O719C271O800C275O800C280O873C284O873C289O912C292O943C295O973C298O1001C301O1029C304O1054C307O1085C310O1111C315O1141C320O8478C328O8500C334O8519C340O8535C346O8552C352O8568C358O8585C364O8599C370O8614C376O8629C382O8645C388O8666C394O8695C400O8711C406O8724C412O8747C418O8762C424O8777C430O8802C436O8823C442O8843C448O8866C454O8888C460O8905C466O8921C472O8936C478O8961C484O8982C490O9002C496O9025C502O9047C508O9067C514O9088C520O9106C526O9128C532O9155C538O9171C544O9189C550O9206C556O9221C562O9236C568O9248C574O9266C580O9279C586O8493C591O9297,,
code-creation,Eval,10,138013,0x9b20b5e8fc,5, node:internal/streams/compose:1:1,0x9b20b5e6c8,~
script-source,92,node:internal/streams/compose,'use strict';\x0d\n\x0d\nconst { pipeline } = require('internal/streams/pipeline');\x0d\nconst Duplex = require('internal/streams/duplex');\x0d\nconst { destroyer } = require('internal/streams/destroy');\x0d\nconst {\x0d\n  isNodeStream\x2C\x0d\n  isReadable\x2C\x0d\n  isWritable\x2C\x0d\n  isWebStream\x2C\x0d\n  isTransformStream\x2C\x0d\n  isWritableStream\x2C\x0d\n  isReadableStream\x2C\x0d\n} = require('internal/streams/utils');\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst eos = require('internal/streams/end-of-stream');\x0d\n\x0d\nmodule.exports = function compose(...streams) {\x0d\n  if (streams.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('streams');\x0d\n  }\x0d\n\x0d\n  if (streams.length === 1) {\x0d\n    return Duplex.from(streams[0]);\x0d\n  }\x0d\n\x0d\n  const orgStreams = [...streams];\x0d\n\x0d\n  if (typeof streams[0] === 'function') {\x0d\n    streams[0] = Duplex.from(streams[0]);\x0d\n  }\x0d\n\x0d\n  if (typeof streams[streams.length - 1] === 'function') {\x0d\n    const idx = streams.length - 1;\x0d\n    streams[idx] = Duplex.from(streams[idx]);\x0d\n  }\x0d\n\x0d\n  for (let n = 0; n < streams.length; ++n) {\x0d\n    if (!isNodeStream(streams[n]) && !isWebStream(streams[n])) {\x0d\n      // TODO(ronag): Add checks for non streams.\x0d\n      continue;\x0d\n    }\x0d\n    if (\x0d\n      n < streams.length - 1 &&\x0d\n      !(\x0d\n        isReadable(streams[n]) ||\x0d\n        isReadableStream(streams[n]) ||\x0d\n        isTransformStream(streams[n])\x0d\n      )\x0d\n    ) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        `streams[${n}]`\x2C\x0d\n        orgStreams[n]\x2C\x0d\n        'must be readable'\x2C\x0d\n      );\x0d\n    }\x0d\n    if (\x0d\n      n > 0 &&\x0d\n      !(\x0d\n        isWritable(streams[n]) ||\x0d\n        isWritableStream(streams[n]) ||\x0d\n        isTransformStream(streams[n])\x0d\n      )\x0d\n    ) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        `streams[${n}]`\x2C\x0d\n        orgStreams[n]\x2C\x0d\n        'must be writable'\x2C\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let ondrain;\x0d\n  let onfinish;\x0d\n  let onreadable;\x0d\n  let onclose;\x0d\n  let d;\x0d\n\x0d\n  function onfinished(err) {\x0d\n    const cb = onclose;\x0d\n    onclose = null;\x0d\n\x0d\n    if (cb) {\x0d\n      cb(err);\x0d\n    } else if (err) {\x0d\n      d.destroy(err);\x0d\n    } else if (!readable && !writable) {\x0d\n      d.destroy();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const head = streams[0];\x0d\n  const tail = pipeline(streams\x2C onfinished);\x0d\n\x0d\n  const writable = !!(\x0d\n    isWritable(head) ||\x0d\n    isWritableStream(head) ||\x0d\n    isTransformStream(head)\x0d\n  );\x0d\n  const readable = !!(\x0d\n    isReadable(tail) ||\x0d\n    isReadableStream(tail) ||\x0d\n    isTransformStream(tail)\x0d\n  );\x0d\n\x0d\n  // TODO(ronag): Avoid double buffering.\x0d\n  // Implement Writable/Readable/Duplex traits.\x0d\n  // See\x2C https://github.com/nodejs/node/pull/33515.\x0d\n  d = new Duplex({\x0d\n    // TODO (ronag): highWaterMark?\x0d\n    writableObjectMode: !!head?.writableObjectMode\x2C\x0d\n    readableObjectMode: !!tail?.readableObjectMode\x2C\x0d\n    writable\x2C\x0d\n    readable\x2C\x0d\n  });\x0d\n\x0d\n  if (writable) {\x0d\n    if (isNodeStream(head)) {\x0d\n      d._write = function(chunk\x2C encoding\x2C callback) {\x0d\n        if (head.write(chunk\x2C encoding)) {\x0d\n          callback();\x0d\n        } else {\x0d\n          ondrain = callback;\x0d\n        }\x0d\n      };\x0d\n\x0d\n      d._final = function(callback) {\x0d\n        head.end();\x0d\n        onfinish = callback;\x0d\n      };\x0d\n\x0d\n      head.on('drain'\x2C function() {\x0d\n        if (ondrain) {\x0d\n          const cb = ondrain;\x0d\n          ondrain = null;\x0d\n          cb();\x0d\n        }\x0d\n      });\x0d\n    } else if (isWebStream(head)) {\x0d\n      const writable = isTransformStream(head) ? head.writable : head;\x0d\n      const writer = writable.getWriter();\x0d\n\x0d\n      d._write = async function(chunk\x2C encoding\x2C callback) {\x0d\n        try {\x0d\n          await writer.ready;\x0d\n          writer.write(chunk).catch(() => {});\x0d\n          callback();\x0d\n        } catch (err) {\x0d\n          callback(err);\x0d\n        }\x0d\n      };\x0d\n\x0d\n      d._final = async function(callback) {\x0d\n        try {\x0d\n          await writer.ready;\x0d\n          writer.close().catch(() => {});\x0d\n          onfinish = callback;\x0d\n        } catch (err) {\x0d\n          callback(err);\x0d\n        }\x0d\n      };\x0d\n    }\x0d\n\x0d\n    const toRead = isTransformStream(tail) ? tail.readable : tail;\x0d\n\x0d\n    eos(toRead\x2C () => {\x0d\n      if (onfinish) {\x0d\n        const cb = onfinish;\x0d\n        onfinish = null;\x0d\n        cb();\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (readable) {\x0d\n    if (isNodeStream(tail)) {\x0d\n      tail.on('readable'\x2C function() {\x0d\n        if (onreadable) {\x0d\n          const cb = onreadable;\x0d\n          onreadable = null;\x0d\n          cb();\x0d\n        }\x0d\n      });\x0d\n\x0d\n      tail.on('end'\x2C function() {\x0d\n        d.push(null);\x0d\n      });\x0d\n\x0d\n      d._read = function() {\x0d\n        while (true) {\x0d\n          const buf = tail.read();\x0d\n          if (buf === null) {\x0d\n            onreadable = d._read;\x0d\n            return;\x0d\n          }\x0d\n\x0d\n          if (!d.push(buf)) {\x0d\n            return;\x0d\n          }\x0d\n        }\x0d\n      };\x0d\n    } else if (isWebStream(tail)) {\x0d\n      const readable = isTransformStream(tail) ? tail.readable : tail;\x0d\n      const reader = readable.getReader();\x0d\n      d._read = async function() {\x0d\n        while (true) {\x0d\n          try {\x0d\n            const { value\x2C done } = await reader.read();\x0d\n\x0d\n            if (!d.push(value)) {\x0d\n              return;\x0d\n            }\x0d\n\x0d\n            if (done) {\x0d\n              d.push(null);\x0d\n              return;\x0d\n            }\x0d\n          } catch {\x0d\n            return;\x0d\n          }\x0d\n        }\x0d\n      };\x0d\n    }\x0d\n  }\x0d\n\x0d\n  d._destroy = function(err\x2C callback) {\x0d\n    if (!err && onclose !== null) {\x0d\n      err = new AbortError();\x0d\n    }\x0d\n\x0d\n    onreadable = null;\x0d\n    ondrain = null;\x0d\n    onfinish = null;\x0d\n\x0d\n    if (onclose === null) {\x0d\n      callback(err);\x0d\n    } else {\x0d\n      onclose = callback;\x0d\n      if (isNodeStream(tail)) {\x0d\n        destroyer(tail\x2C err);\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\n  return d;\x0d\n};\x0d\n
code-source-info,0x9b20b5e8fc,92,0,5703,C0O0C4O5703,,
code-creation,JS,10,138422,0x9b20b5eafc,184, node:internal/streams/compose:1:1,0x9b20b5e870,~
code-source-info,0x9b20b5eafc,92,0,5703,C0O0C47O38C50O38C55O25C61O92C64O92C68O92C70O151C73O151C78O137C84O329C87O329C92O200C98O217C104O232C110O247C116O263C122O285C128O306C134O462C137O462C142O376C148O398C153O405C159O433C165O503C168O503C172O503C174O549C178O564C183O5702,,
code-creation,Eval,10,138921,0x9b20b60384,5, node:internal/streams/pipeline:1:1,0x9b20b5ffc0,~
script-source,93,node:internal/streams/pipeline,// Ported from https://github.com/mafintosh/pump with\x0d\n// permission from the author\x2C Mathias Buus (@mafintosh).\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  Promise\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n  SymbolDispose\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst eos = require('internal/streams/end-of-stream');\x0d\nconst { once } = require('internal/util');\x0d\nconst destroyImpl = require('internal/streams/destroy');\x0d\nconst Duplex = require('internal/streams/duplex');\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_RETURN_VALUE\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_STREAM_DESTROYED\x2C\x0d\n    ERR_STREAM_PREMATURE_CLOSE\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n  validateAbortSignal\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  isIterable\x2C\x0d\n  isReadable\x2C\x0d\n  isReadableNodeStream\x2C\x0d\n  isNodeStream\x2C\x0d\n  isTransformStream\x2C\x0d\n  isWebStream\x2C\x0d\n  isReadableStream\x2C\x0d\n  isReadableFinished\x2C\x0d\n} = require('internal/streams/utils');\x0d\nconst { AbortController } = require('internal/abort_controller');\x0d\n\x0d\nlet PassThrough;\x0d\nlet Readable;\x0d\nlet addAbortListener;\x0d\n\x0d\nfunction destroyer(stream\x2C reading\x2C writing) {\x0d\n  let finished = false;\x0d\n  stream.on('close'\x2C () => {\x0d\n    finished = true;\x0d\n  });\x0d\n\x0d\n  const cleanup = eos(stream\x2C { readable: reading\x2C writable: writing }\x2C (err) => {\x0d\n    finished = !err;\x0d\n  });\x0d\n\x0d\n  return {\x0d\n    destroy: (err) => {\x0d\n      if (finished) return;\x0d\n      finished = true;\x0d\n      destroyImpl.destroyer(stream\x2C err || new ERR_STREAM_DESTROYED('pipe'));\x0d\n    }\x2C\x0d\n    cleanup\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction popCallback(streams) {\x0d\n  // Streams should never be an empty array. It should always contain at least\x0d\n  // a single stream. Therefore optimize for the average case instead of\x0d\n  // checking for length === 0 as well.\x0d\n  validateFunction(streams[streams.length - 1]\x2C 'streams[stream.length - 1]');\x0d\n  return streams.pop();\x0d\n}\x0d\n\x0d\nfunction makeAsyncIterable(val) {\x0d\n  if (isIterable(val)) {\x0d\n    return val;\x0d\n  } else if (isReadableNodeStream(val)) {\x0d\n    // Legacy streams are not Iterable.\x0d\n    return fromReadable(val);\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'val'\x2C ['Readable'\x2C 'Iterable'\x2C 'AsyncIterable']\x2C val);\x0d\n}\x0d\n\x0d\nasync function* fromReadable(val) {\x0d\n  if (!Readable) {\x0d\n    Readable = require('internal/streams/readable');\x0d\n  }\x0d\n\x0d\n  yield* Readable.prototype[SymbolAsyncIterator].call(val);\x0d\n}\x0d\n\x0d\nasync function pumpToNode(iterable\x2C writable\x2C finish\x2C { end }) {\x0d\n  let error;\x0d\n  let onresolve = null;\x0d\n\x0d\n  const resume = (err) => {\x0d\n    if (err) {\x0d\n      error = err;\x0d\n    }\x0d\n\x0d\n    if (onresolve) {\x0d\n      const callback = onresolve;\x0d\n      onresolve = null;\x0d\n      callback();\x0d\n    }\x0d\n  };\x0d\n\x0d\n  const wait = () => new Promise((resolve\x2C reject) => {\x0d\n    if (error) {\x0d\n      reject(error);\x0d\n    } else {\x0d\n      onresolve = () => {\x0d\n        if (error) {\x0d\n          reject(error);\x0d\n        } else {\x0d\n          resolve();\x0d\n        }\x0d\n      };\x0d\n    }\x0d\n  });\x0d\n\x0d\n  writable.on('drain'\x2C resume);\x0d\n  const cleanup = eos(writable\x2C { readable: false }\x2C resume);\x0d\n\x0d\n  try {\x0d\n    if (writable.writableNeedDrain) {\x0d\n      await wait();\x0d\n    }\x0d\n\x0d\n    for await (const chunk of iterable) {\x0d\n      if (!writable.write(chunk)) {\x0d\n        await wait();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end) {\x0d\n      writable.end();\x0d\n      await wait();\x0d\n    }\x0d\n\x0d\n    finish();\x0d\n  } catch (err) {\x0d\n    finish(error !== err ? aggregateTwoErrors(error\x2C err) : err);\x0d\n  } finally {\x0d\n    cleanup();\x0d\n    writable.off('drain'\x2C resume);\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function pumpToWeb(readable\x2C writable\x2C finish\x2C { end }) {\x0d\n  if (isTransformStream(writable)) {\x0d\n    writable = writable.writable;\x0d\n  }\x0d\n  // https://streams.spec.whatwg.org/#example-manual-write-with-backpressure\x0d\n  const writer = writable.getWriter();\x0d\n  try {\x0d\n    for await (const chunk of readable) {\x0d\n      await writer.ready;\x0d\n      writer.write(chunk).catch(() => {});\x0d\n    }\x0d\n\x0d\n    await writer.ready;\x0d\n\x0d\n    if (end) {\x0d\n      await writer.close();\x0d\n    }\x0d\n\x0d\n    finish();\x0d\n  } catch (err) {\x0d\n    try {\x0d\n      await writer.abort(err);\x0d\n      finish(err);\x0d\n    } catch (err) {\x0d\n      finish(err);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction pipeline(...streams) {\x0d\n  return pipelineImpl(streams\x2C once(popCallback(streams)));\x0d\n}\x0d\n\x0d\nfunction pipelineImpl(streams\x2C callback\x2C opts) {\x0d\n  if (streams.length === 1 && ArrayIsArray(streams[0])) {\x0d\n    streams = streams[0];\x0d\n  }\x0d\n\x0d\n  if (streams.length < 2) {\x0d\n    throw new ERR_MISSING_ARGS('streams');\x0d\n  }\x0d\n\x0d\n  const ac = new AbortController();\x0d\n  const signal = ac.signal;\x0d\n  const outerSignal = opts?.signal;\x0d\n\x0d\n  // Need to cleanup event listeners if last stream is readable\x0d\n  // https://github.com/nodejs/node/issues/35452\x0d\n  const lastStreamCleanup = [];\x0d\n\x0d\n  validateAbortSignal(outerSignal\x2C 'options.signal');\x0d\n\x0d\n  function abort() {\x0d\n    finishImpl(new AbortError());\x0d\n  }\x0d\n\x0d\n  addAbortListener ??= require('events').addAbortListener;\x0d\n  let disposable;\x0d\n  if (outerSignal) {\x0d\n    disposable = addAbortListener(outerSignal\x2C abort);\x0d\n  }\x0d\n\x0d\n  let error;\x0d\n  let value;\x0d\n  const destroys = [];\x0d\n\x0d\n  let finishCount = 0;\x0d\n\x0d\n  function finish(err) {\x0d\n    finishImpl(err\x2C --finishCount === 0);\x0d\n  }\x0d\n\x0d\n  function finishImpl(err\x2C final) {\x0d\n    if (err && (!error || error.code === 'ERR_STREAM_PREMATURE_CLOSE')) {\x0d\n      error = err;\x0d\n    }\x0d\n\x0d\n    if (!error && !final) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    while (destroys.length) {\x0d\n      destroys.shift()(error);\x0d\n    }\x0d\n\x0d\n    disposable?.[SymbolDispose]();\x0d\n    ac.abort();\x0d\n\x0d\n    if (final) {\x0d\n      if (!error) {\x0d\n        lastStreamCleanup.forEach((fn) => fn());\x0d\n      }\x0d\n      process.nextTick(callback\x2C error\x2C value);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let ret;\x0d\n  for (let i = 0; i < streams.length; i++) {\x0d\n    const stream = streams[i];\x0d\n    const reading = i < streams.length - 1;\x0d\n    const writing = i > 0;\x0d\n    const end = reading || opts?.end !== false;\x0d\n    const isLastStream = i === streams.length - 1;\x0d\n\x0d\n    if (isNodeStream(stream)) {\x0d\n      if (end) {\x0d\n        const { destroy\x2C cleanup } = destroyer(stream\x2C reading\x2C writing);\x0d\n        destroys.push(destroy);\x0d\n\x0d\n        if (isReadable(stream) && isLastStream) {\x0d\n          lastStreamCleanup.push(cleanup);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      // Catch stream errors that occur after pipe/pump has completed.\x0d\n      function onError(err) {\x0d\n        if (\x0d\n          err &&\x0d\n          err.name !== 'AbortError' &&\x0d\n          err.code !== 'ERR_STREAM_PREMATURE_CLOSE'\x0d\n        ) {\x0d\n          finish(err);\x0d\n        }\x0d\n      }\x0d\n      stream.on('error'\x2C onError);\x0d\n      if (isReadable(stream) && isLastStream) {\x0d\n        lastStreamCleanup.push(() => {\x0d\n          stream.removeListener('error'\x2C onError);\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (i === 0) {\x0d\n      if (typeof stream === 'function') {\x0d\n        ret = stream({ signal });\x0d\n        if (!isIterable(ret)) {\x0d\n          throw new ERR_INVALID_RETURN_VALUE(\x0d\n            'Iterable\x2C AsyncIterable or Stream'\x2C 'source'\x2C ret);\x0d\n        }\x0d\n      } else if (isIterable(stream) || isReadableNodeStream(stream) || isTransformStream(stream)) {\x0d\n        ret = stream;\x0d\n      } else {\x0d\n        ret = Duplex.from(stream);\x0d\n      }\x0d\n    } else if (typeof stream === 'function') {\x0d\n      if (isTransformStream(ret)) {\x0d\n        ret = makeAsyncIterable(ret?.readable);\x0d\n      } else {\x0d\n        ret = makeAsyncIterable(ret);\x0d\n      }\x0d\n      ret = stream(ret\x2C { signal });\x0d\n\x0d\n      if (reading) {\x0d\n        if (!isIterable(ret\x2C true)) {\x0d\n          throw new ERR_INVALID_RETURN_VALUE(\x0d\n            'AsyncIterable'\x2C `transform[${i - 1}]`\x2C ret);\x0d\n        }\x0d\n      } else {\x0d\n        if (!PassThrough) {\x0d\n          PassThrough = require('internal/streams/passthrough');\x0d\n        }\x0d\n\x0d\n        // If the last argument to pipeline is not a stream\x0d\n        // we must create a proxy stream so that pipeline(...)\x0d\n        // always returns a stream which can be further\x0d\n        // composed through `.pipe(stream)`.\x0d\n\x0d\n        const pt = new PassThrough({\x0d\n          objectMode: true\x2C\x0d\n        });\x0d\n\x0d\n        // Handle Promises/A+ spec\x2C `then` could be a getter that throws on\x0d\n        // second use.\x0d\n        const then = ret?.then;\x0d\n        if (typeof then === 'function') {\x0d\n          finishCount++;\x0d\n          then.call(ret\x2C\x0d\n                    (val) => {\x0d\n                      value = val;\x0d\n                      if (val != null) {\x0d\n                        pt.write(val);\x0d\n                      }\x0d\n                      if (end) {\x0d\n                        pt.end();\x0d\n                      }\x0d\n                      process.nextTick(finish);\x0d\n                    }\x2C (err) => {\x0d\n                      pt.destroy(err);\x0d\n                      process.nextTick(finish\x2C err);\x0d\n                    }\x2C\x0d\n          );\x0d\n        } else if (isIterable(ret\x2C true)) {\x0d\n          finishCount++;\x0d\n          pumpToNode(ret\x2C pt\x2C finish\x2C { end });\x0d\n        } else if (isReadableStream(ret) || isTransformStream(ret)) {\x0d\n          const toRead = ret.readable || ret;\x0d\n          finishCount++;\x0d\n          pumpToNode(toRead\x2C pt\x2C finish\x2C { end });\x0d\n        } else {\x0d\n          throw new ERR_INVALID_RETURN_VALUE(\x0d\n            'AsyncIterable or Promise'\x2C 'destination'\x2C ret);\x0d\n        }\x0d\n\x0d\n        ret = pt;\x0d\n\x0d\n        const { destroy\x2C cleanup } = destroyer(ret\x2C false\x2C true);\x0d\n        destroys.push(destroy);\x0d\n        if (isLastStream) {\x0d\n          lastStreamCleanup.push(cleanup);\x0d\n        }\x0d\n      }\x0d\n    } else if (isNodeStream(stream)) {\x0d\n      if (isReadableNodeStream(ret)) {\x0d\n        finishCount += 2;\x0d\n        const cleanup = pipe(ret\x2C stream\x2C finish\x2C { end });\x0d\n        if (isReadable(stream) && isLastStream) {\x0d\n          lastStreamCleanup.push(cleanup);\x0d\n        }\x0d\n      } else if (isTransformStream(ret) || isReadableStream(ret)) {\x0d\n        const toRead = ret.readable || ret;\x0d\n        finishCount++;\x0d\n        pumpToNode(toRead\x2C stream\x2C finish\x2C { end });\x0d\n      } else if (isIterable(ret)) {\x0d\n        finishCount++;\x0d\n        pumpToNode(ret\x2C stream\x2C finish\x2C { end });\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE(\x0d\n          'val'\x2C ['Readable'\x2C 'Iterable'\x2C 'AsyncIterable'\x2C 'ReadableStream'\x2C 'TransformStream']\x2C ret);\x0d\n      }\x0d\n      ret = stream;\x0d\n    } else if (isWebStream(stream)) {\x0d\n      if (isReadableNodeStream(ret)) {\x0d\n        finishCount++;\x0d\n        pumpToWeb(makeAsyncIterable(ret)\x2C stream\x2C finish\x2C { end });\x0d\n      } else if (isReadableStream(ret) || isIterable(ret)) {\x0d\n        finishCount++;\x0d\n        pumpToWeb(ret\x2C stream\x2C finish\x2C { end });\x0d\n      } else if (isTransformStream(ret)) {\x0d\n        finishCount++;\x0d\n        pumpToWeb(ret.readable\x2C stream\x2C finish\x2C { end });\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE(\x0d\n          'val'\x2C ['Readable'\x2C 'Iterable'\x2C 'AsyncIterable'\x2C 'ReadableStream'\x2C 'TransformStream']\x2C ret);\x0d\n      }\x0d\n      ret = stream;\x0d\n    } else {\x0d\n      ret = Duplex.from(stream);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (signal?.aborted || outerSignal?.aborted) {\x0d\n    process.nextTick(abort);\x0d\n  }\x0d\n\x0d\n  return ret;\x0d\n}\x0d\n\x0d\nfunction pipe(src\x2C dst\x2C finish\x2C { end }) {\x0d\n  let ended = false;\x0d\n  dst.on('close'\x2C () => {\x0d\n    if (!ended) {\x0d\n      // Finish if the destination closes before the source has completed.\x0d\n      finish(new ERR_STREAM_PREMATURE_CLOSE());\x0d\n    }\x0d\n  });\x0d\n\x0d\n  src.pipe(dst\x2C { end: false }); // If end is true we already will have a listener to end dst.\x0d\n\x0d\n  if (end) {\x0d\n    // Compat. Before node v10.12.0 stdio used to throw an error so\x0d\n    // pipe() did/does not end() stdio destinations.\x0d\n    // Now they allow it but "secretly" don't close the underlying fd.\x0d\n\x0d\n    function endFn() {\x0d\n      ended = true;\x0d\n      dst.end();\x0d\n    }\x0d\n\x0d\n    if (isReadableFinished(src)) { // End the destination if the source has already ended.\x0d\n      process.nextTick(endFn);\x0d\n    } else {\x0d\n      src.once('end'\x2C endFn);\x0d\n    }\x0d\n  } else {\x0d\n    finish();\x0d\n  }\x0d\n\x0d\n  eos(src\x2C { readable: true\x2C writable: false }\x2C (err) => {\x0d\n    const rState = src._readableState;\x0d\n    if (\x0d\n      err &&\x0d\n      err.code === 'ERR_STREAM_PREMATURE_CLOSE' &&\x0d\n      (rState && rState.ended && !rState.errored && !rState.errorEmitted)\x0d\n    ) {\x0d\n      // Some readable streams will emit 'close' before 'end'. However\x2C since\x0d\n      // this is on the readable side 'end' should still be emitted if the\x0d\n      // stream has been ended and no error emitted. This should be allowed in\x0d\n      // favor of backwards compatibility. Since the stream is piped to a\x0d\n      // destination this should not result in any observable difference.\x0d\n      // We don't need to check if this is a writable premature close since\x0d\n      // eos will only fail with premature close on the reading side for\x0d\n      // duplex streams.\x0d\n      src\x0d\n        .once('end'\x2C finish)\x0d\n        .once('error'\x2C finish);\x0d\n    } else {\x0d\n      finish(err);\x0d\n    }\x0d\n  });\x0d\n  return eos(dst\x2C { readable: false\x2C writable: true }\x2C finish);\x0d\n}\x0d\n\x0d\nmodule.exports = { pipelineImpl\x2C pipeline };\x0d\n
code-source-info,0x9b20b60384,93,0,12793,C0O0C4O12793,,
code-creation,JS,10,139540,0x9b20b60944,421, node:internal/streams/pipeline:1:1,0x9b20b602f8,~
code-source-info,0x9b20b60944,93,0,12793,C0O0C153O144C159O161C165O173C171O197C177O245C183O245C187O245C189O306C195O306C200O297C206O353C212O353C216O353C218O406C224O406C228O406C230O653C236O653C241O454C247O484C252O491C258O518C264O549C270O572C276O599C282O636C288O742C294O742C299O695C305O716C311O944C317O944C322O788C328O803C334O818C340O843C346O860C352O882C358O898C364O919C370O1008C376O1008C381O988C387O1053C388O1053C390O1071C391O1071C393O1086C394O1086C396O12747C403O12766C409O12780C415O12762C420O12792,,
code-creation,Eval,10,139860,0x9b20b61e4c,5, node:internal/streams/destroy:1:1,0x9b20b61b28,~
script-source,94,node:internal/streams/destroy,'use strict';\x0d\n\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_MULTIPLE_CALLBACK\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  kIsDestroyed\x2C\x0d\n  isDestroyed\x2C\x0d\n  isFinished\x2C\x0d\n  isServerRequest\x2C\x0d\n  kState\x2C\x0d\n  kErrorEmitted\x2C\x0d\n  kEmitClose\x2C\x0d\n  kClosed\x2C\x0d\n  kCloseEmitted\x2C\x0d\n  kConstructed\x2C\x0d\n  kDestroyed\x2C\x0d\n  kAutoDestroy\x2C\x0d\n  kErrored\x2C\x0d\n} = require('internal/streams/utils');\x0d\n\x0d\nconst kDestroy = Symbol('kDestroy');\x0d\nconst kConstruct = Symbol('kConstruct');\x0d\n\x0d\nfunction checkError(err\x2C w\x2C r) {\x0d\n  if (err) {\x0d\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\x0d\n    err.stack; // eslint-disable-line no-unused-expressions\x0d\n\x0d\n    if (w && !w.errored) {\x0d\n      w.errored = err;\x0d\n    }\x0d\n    if (r && !r.errored) {\x0d\n      r.errored = err;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Backwards compat. cb() is undocumented and unused in core but\x0d\n// unfortunately might be used by modules.\x0d\nfunction destroy(err\x2C cb) {\x0d\n  const r = this._readableState;\x0d\n  const w = this._writableState;\x0d\n  // With duplex streams we use the writable side for state.\x0d\n  const s = w || r;\x0d\n\x0d\n  if (\x0d\n    (w && (w[kState] & kDestroyed) !== 0) ||\x0d\n    (r && (r[kState] & kDestroyed) !== 0)\x0d\n  ) {\x0d\n    if (typeof cb === 'function') {\x0d\n      cb();\x0d\n    }\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n\x0d\n  // We set destroyed to true before firing error callbacks in order\x0d\n  // to make it re-entrance safe in case destroy() is called within callbacks\x0d\n  checkError(err\x2C w\x2C r);\x0d\n\x0d\n  if (w) {\x0d\n    w[kState] |= kDestroyed;\x0d\n  }\x0d\n  if (r) {\x0d\n    r[kState] |= kDestroyed;\x0d\n  }\x0d\n\x0d\n  // If still constructing then defer calling _destroy.\x0d\n  if ((s[kState] & kConstructed) === 0) {\x0d\n    this.once(kDestroy\x2C function(er) {\x0d\n      _destroy(this\x2C aggregateTwoErrors(er\x2C err)\x2C cb);\x0d\n    });\x0d\n  } else {\x0d\n    _destroy(this\x2C err\x2C cb);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n}\x0d\n\x0d\nfunction _destroy(self\x2C err\x2C cb) {\x0d\n  let called = false;\x0d\n\x0d\n  function onDestroy(err) {\x0d\n    if (called) {\x0d\n      return;\x0d\n    }\x0d\n    called = true;\x0d\n\x0d\n    const r = self._readableState;\x0d\n    const w = self._writableState;\x0d\n\x0d\n    checkError(err\x2C w\x2C r);\x0d\n\x0d\n    if (w) {\x0d\n      w[kState] |= kClosed;\x0d\n    }\x0d\n    if (r) {\x0d\n      r[kState] |= kClosed;\x0d\n    }\x0d\n\x0d\n    if (typeof cb === 'function') {\x0d\n      cb(err);\x0d\n    }\x0d\n\x0d\n    if (err) {\x0d\n      process.nextTick(emitErrorCloseNT\x2C self\x2C err);\x0d\n    } else {\x0d\n      process.nextTick(emitCloseNT\x2C self);\x0d\n    }\x0d\n  }\x0d\n  try {\x0d\n    self._destroy(err || null\x2C onDestroy);\x0d\n  } catch (err) {\x0d\n    onDestroy(err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitErrorCloseNT(self\x2C err) {\x0d\n  emitErrorNT(self\x2C err);\x0d\n  emitCloseNT(self);\x0d\n}\x0d\n\x0d\nfunction emitCloseNT(self) {\x0d\n  const r = self._readableState;\x0d\n  const w = self._writableState;\x0d\n\x0d\n  if (w) {\x0d\n    w[kState] |= kCloseEmitted;\x0d\n  }\x0d\n  if (r) {\x0d\n    r[kState] |= kCloseEmitted;\x0d\n  }\x0d\n\x0d\n  if (\x0d\n    (w && (w[kState] & kEmitClose) !== 0) ||\x0d\n    (r && (r[kState] & kEmitClose) !== 0)\x0d\n  ) {\x0d\n    self.emit('close');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitErrorNT(self\x2C err) {\x0d\n  const r = self._readableState;\x0d\n  const w = self._writableState;\x0d\n\x0d\n  if (\x0d\n    (w && (w[kState] & kErrorEmitted) !== 0) ||\x0d\n    (r && (r[kState] & kErrorEmitted) !== 0)\x0d\n  ) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (w) {\x0d\n    w[kState] |= kErrorEmitted;\x0d\n  }\x0d\n  if (r) {\x0d\n    r[kState] |= kErrorEmitted;\x0d\n  }\x0d\n\x0d\n  self.emit('error'\x2C err);\x0d\n}\x0d\n\x0d\nfunction undestroy() {\x0d\n  const r = this._readableState;\x0d\n  const w = this._writableState;\x0d\n\x0d\n  if (r) {\x0d\n    r.constructed = true;\x0d\n    r.closed = false;\x0d\n    r.closeEmitted = false;\x0d\n    r.destroyed = false;\x0d\n    r.errored = null;\x0d\n    r.errorEmitted = false;\x0d\n    r.reading = false;\x0d\n    r.ended = r.readable === false;\x0d\n    r.endEmitted = r.readable === false;\x0d\n  }\x0d\n\x0d\n  if (w) {\x0d\n    w.constructed = true;\x0d\n    w.destroyed = false;\x0d\n    w.closed = false;\x0d\n    w.closeEmitted = false;\x0d\n    w.errored = null;\x0d\n    w.errorEmitted = false;\x0d\n    w.finalCalled = false;\x0d\n    w.prefinished = false;\x0d\n    w.ended = w.writable === false;\x0d\n    w.ending = w.writable === false;\x0d\n    w.finished = w.writable === false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction errorOrDestroy(stream\x2C err\x2C sync) {\x0d\n  // We have tests that rely on errors being emitted\x0d\n  // in the same tick\x2C so changing this is semver major.\x0d\n  // For now when you opt-in to autoDestroy we allow\x0d\n  // the error to be emitted nextTick. In a future\x0d\n  // semver major update we should change the default to this.\x0d\n\x0d\n  const r = stream._readableState;\x0d\n  const w = stream._writableState;\x0d\n\x0d\n  if (\x0d\n    (w && (w[kState] ? (w[kState] & kDestroyed) !== 0 : w.destroyed)) ||\x0d\n    (r && (r[kState] ? (r[kState] & kDestroyed) !== 0 : r.destroyed))\x0d\n  ) {\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (\x0d\n    (r && (r[kState] & kAutoDestroy) !== 0) ||\x0d\n    (w && (w[kState] & kAutoDestroy) !== 0)\x0d\n  ) {\x0d\n    stream.destroy(err);\x0d\n  } else if (err) {\x0d\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\x0d\n    err.stack; // eslint-disable-line no-unused-expressions\x0d\n\x0d\n    if (w && (w[kState] & kErrored) === 0) {\x0d\n      w.errored = err;\x0d\n    }\x0d\n    if (r && (r[kState] & kErrored) === 0) {\x0d\n      r.errored = err;\x0d\n    }\x0d\n    if (sync) {\x0d\n      process.nextTick(emitErrorNT\x2C stream\x2C err);\x0d\n    } else {\x0d\n      emitErrorNT(stream\x2C err);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction construct(stream\x2C cb) {\x0d\n  if (typeof stream._construct !== 'function') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const r = stream._readableState;\x0d\n  const w = stream._writableState;\x0d\n\x0d\n  if (r) {\x0d\n    r[kState] &= ~kConstructed;\x0d\n  }\x0d\n  if (w) {\x0d\n    w[kState] &= ~kConstructed;\x0d\n  }\x0d\n\x0d\n  stream.once(kConstruct\x2C cb);\x0d\n\x0d\n  if (stream.listenerCount(kConstruct) > 1) {\x0d\n    // Duplex\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  process.nextTick(constructNT\x2C stream);\x0d\n}\x0d\n\x0d\nfunction constructNT(stream) {\x0d\n  let called = false;\x0d\n\x0d\n  function onConstruct(err) {\x0d\n    if (called) {\x0d\n      errorOrDestroy(stream\x2C err ?? new ERR_MULTIPLE_CALLBACK());\x0d\n      return;\x0d\n    }\x0d\n    called = true;\x0d\n\x0d\n    const r = stream._readableState;\x0d\n    const w = stream._writableState;\x0d\n    const s = w || r;\x0d\n\x0d\n    if (r) {\x0d\n      r[kState] |= kConstructed;\x0d\n    }\x0d\n    if (w) {\x0d\n      w[kState] |= kConstructed;\x0d\n    }\x0d\n\x0d\n    if (s.destroyed) {\x0d\n      stream.emit(kDestroy\x2C err);\x0d\n    } else if (err) {\x0d\n      errorOrDestroy(stream\x2C err\x2C true);\x0d\n    } else {\x0d\n      stream.emit(kConstruct);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    stream._construct((err) => {\x0d\n      process.nextTick(onConstruct\x2C err);\x0d\n    });\x0d\n  } catch (err) {\x0d\n    process.nextTick(onConstruct\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction isRequest(stream) {\x0d\n  return stream?.setHeader && typeof stream.abort === 'function';\x0d\n}\x0d\n\x0d\nfunction emitCloseLegacy(stream) {\x0d\n  stream.emit('close');\x0d\n}\x0d\n\x0d\nfunction emitErrorCloseLegacy(stream\x2C err) {\x0d\n  stream.emit('error'\x2C err);\x0d\n  process.nextTick(emitCloseLegacy\x2C stream);\x0d\n}\x0d\n\x0d\n// Normalize destroy for legacy.\x0d\nfunction destroyer(stream\x2C err) {\x0d\n  if (!stream || isDestroyed(stream)) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (!err && !isFinished(stream)) {\x0d\n    err = new AbortError();\x0d\n  }\x0d\n\x0d\n  // TODO: Remove isRequest branches.\x0d\n  if (isServerRequest(stream)) {\x0d\n    stream.socket = null;\x0d\n    stream.destroy(err);\x0d\n  } else if (isRequest(stream)) {\x0d\n    stream.abort();\x0d\n  } else if (isRequest(stream.req)) {\x0d\n    stream.req.abort();\x0d\n  } else if (typeof stream.destroy === 'function') {\x0d\n    stream.destroy(err);\x0d\n  } else if (typeof stream.close === 'function') {\x0d\n    // TODO: Don't lose err?\x0d\n    stream.close();\x0d\n  } else if (err) {\x0d\n    process.nextTick(emitErrorCloseLegacy\x2C stream\x2C err);\x0d\n  } else {\x0d\n    process.nextTick(emitCloseLegacy\x2C stream);\x0d\n  }\x0d\n\x0d\n  if (!stream.destroyed) {\x0d\n    stream[kIsDestroyed] = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  construct\x2C\x0d\n  destroyer\x2C\x0d\n  destroy\x2C\x0d\n  undestroy\x2C\x0d\n  errorOrDestroy\x2C\x0d\n};\x0d\n
code-source-info,0x9b20b61e4c,94,0,7714,C0O0C4O7714,,
code-creation,JS,10,140363,0x9b20b625d4,326, node:internal/streams/destroy:1:1,0x9b20b61dc0,~
code-source-info,0x9b20b625d4,94,0,7714,C0O0C143O114C146O114C151O28C157O58C162O65C168O97C174O154C179O398C182O398C187O192C193O209C199O225C205O240C211O260C217O271C223O289C229O304C235O316C241O334C247O351C253O366C259O383C265O453C268O453C272O453C274O493C277O493C281O493C283O7617C290O7639C296O7653C302O7667C308O7679C314O7693C320O7632C325O7713,,
code-creation,Eval,10,140759,0x9b20b63724,5, node:internal/streams/duplex:1:1,0x9b20b63520,~
script-source,95,node:internal/streams/duplex,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// a duplex stream is just a stream that is both readable and writable.\x0d\n// Since JS doesn't have multiple prototype inheritance\x2C this class\x0d\n// prototypically inherits from Readable\x2C and then parasitically from\x0d\n// Writable.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Duplex;\x0d\n\x0d\nconst Stream = require('internal/streams/legacy').Stream;\x0d\nconst Readable = require('internal/streams/readable');\x0d\nconst Writable = require('internal/streams/writable');\x0d\n\x0d\nconst {\x0d\n  addAbortSignal\x2C\x0d\n} = require('internal/streams/add-abort-signal');\x0d\n\x0d\nconst destroyImpl = require('internal/streams/destroy');\x0d\nconst { kOnConstructed } = require('internal/streams/utils');\x0d\n\x0d\nObjectSetPrototypeOf(Duplex.prototype\x2C Readable.prototype);\x0d\nObjectSetPrototypeOf(Duplex\x2C Readable);\x0d\n\x0d\n{\x0d\n  const keys = ObjectKeys(Writable.prototype);\x0d\n  // Allow the keys array to be GC'ed.\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const method = keys[i];\x0d\n    if (!Duplex.prototype[method])\x0d\n      Duplex.prototype[method] = Writable.prototype[method];\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction Duplex(options) {\x0d\n  if (!(this instanceof Duplex))\x0d\n    return new Duplex(options);\x0d\n\x0d\n  this._events ??= {\x0d\n    close: undefined\x2C\x0d\n    error: undefined\x2C\x0d\n    prefinish: undefined\x2C\x0d\n    finish: undefined\x2C\x0d\n    drain: undefined\x2C\x0d\n    data: undefined\x2C\x0d\n    end: undefined\x2C\x0d\n    readable: undefined\x2C\x0d\n    // Skip uncommon events...\x0d\n    // pause: undefined\x2C\x0d\n    // resume: undefined\x2C\x0d\n    // pipe: undefined\x2C\x0d\n    // unpipe: undefined\x2C\x0d\n    // [destroyImpl.kConstruct]: undefined\x2C\x0d\n    // [destroyImpl.kDestroy]: undefined\x2C\x0d\n  };\x0d\n\x0d\n  this._readableState = new Readable.ReadableState(options\x2C this\x2C true);\x0d\n  this._writableState = new Writable.WritableState(options\x2C this\x2C true);\x0d\n\x0d\n  if (options) {\x0d\n    this.allowHalfOpen = options.allowHalfOpen !== false;\x0d\n\x0d\n    if (options.readable === false) {\x0d\n      this._readableState.readable = false;\x0d\n      this._readableState.ended = true;\x0d\n      this._readableState.endEmitted = true;\x0d\n    }\x0d\n\x0d\n    if (options.writable === false) {\x0d\n      this._writableState.writable = false;\x0d\n      this._writableState.ending = true;\x0d\n      this._writableState.ended = true;\x0d\n      this._writableState.finished = true;\x0d\n    }\x0d\n\x0d\n    if (typeof options.read === 'function')\x0d\n      this._read = options.read;\x0d\n\x0d\n    if (typeof options.write === 'function')\x0d\n      this._write = options.write;\x0d\n\x0d\n    if (typeof options.writev === 'function')\x0d\n      this._writev = options.writev;\x0d\n\x0d\n    if (typeof options.destroy === 'function')\x0d\n      this._destroy = options.destroy;\x0d\n\x0d\n    if (typeof options.final === 'function')\x0d\n      this._final = options.final;\x0d\n\x0d\n    if (typeof options.construct === 'function')\x0d\n      this._construct = options.construct;\x0d\n\x0d\n    if (options.signal)\x0d\n      addAbortSignal(options.signal\x2C this);\x0d\n  } else {\x0d\n    this.allowHalfOpen = true;\x0d\n  }\x0d\n\x0d\n  Stream.call(this\x2C options);\x0d\n\x0d\n  if (this._construct != null) {\x0d\n    destroyImpl.construct(this\x2C () => {\x0d\n      this._readableState[kOnConstructed](this);\x0d\n      this._writableState[kOnConstructed](this);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(Duplex.prototype\x2C {\x0d\n  writable:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writable') }\x2C\x0d\n  writableHighWaterMark:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableHighWaterMark') }\x2C\x0d\n  writableObjectMode:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableObjectMode') }\x2C\x0d\n  writableBuffer:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableBuffer') }\x2C\x0d\n  writableLength:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableLength') }\x2C\x0d\n  writableFinished:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableFinished') }\x2C\x0d\n  writableCorked:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableCorked') }\x2C\x0d\n  writableEnded:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableEnded') }\x2C\x0d\n  writableNeedDrain:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableNeedDrain') }\x2C\x0d\n\x0d\n  destroyed: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      if (this._readableState === undefined ||\x0d\n        this._writableState === undefined) {\x0d\n        return false;\x0d\n      }\x0d\n      return this._readableState.destroyed && this._writableState.destroyed;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      // Backward compatibility\x2C the user is explicitly\x0d\n      // managing destroyed.\x0d\n      if (this._readableState && this._writableState) {\x0d\n        this._readableState.destroyed = value;\x0d\n        this._writableState.destroyed = value;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nlet webStreamsAdapters;\x0d\n\x0d\n// Lazy to avoid circular references\x0d\nfunction lazyWebStreams() {\x0d\n  if (webStreamsAdapters === undefined)\x0d\n    webStreamsAdapters = require('internal/webstreams/adapters');\x0d\n  return webStreamsAdapters;\x0d\n}\x0d\n\x0d\nDuplex.fromWeb = function(pair\x2C options) {\x0d\n  return lazyWebStreams().newStreamDuplexFromReadableWritablePair(\x0d\n    pair\x2C\x0d\n    options);\x0d\n};\x0d\n\x0d\nDuplex.toWeb = function(duplex) {\x0d\n  return lazyWebStreams().newReadableWritablePairFromDuplex(duplex);\x0d\n};\x0d\n\x0d\nlet duplexify;\x0d\n\x0d\nDuplex.from = function(body) {\x0d\n  if (!duplexify) {\x0d\n    duplexify = require('internal/streams/duplexify');\x0d\n  }\x0d\n  return duplexify(body\x2C 'body');\x0d\n};\x0d\n
code-source-info,0x9b20b63724,95,0,6692,C0O0C4O6692,,
code-creation,JS,10,141079,0x9b20b63e0c,679, node:internal/streams/duplex:1:1,0x9b20b63698,~
code-source-info,0x9b20b63e0c
code-creation,Eval,10,141333,0x9b20b64a3c,5, node:internal/streams/legacy:1:1,0x9b20b648a8,~
script-source,96,node:internal/streams/legacy,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EE = require('events');\x0d\n\x0d\nfunction Stream(opts) {\x0d\n  EE.call(this\x2C opts);\x0d\n}\x0d\nObjectSetPrototypeOf(Stream.prototype\x2C EE.prototype);\x0d\nObjectSetPrototypeOf(Stream\x2C EE);\x0d\n\x0d\nStream.prototype.pipe = function(dest\x2C options) {\x0d\n  const source = this;\x0d\n\x0d\n  function ondata(chunk) {\x0d\n    if (dest.writable && dest.write(chunk) === false && source.pause) {\x0d\n      source.pause();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  source.on('data'\x2C ondata);\x0d\n\x0d\n  function ondrain() {\x0d\n    if (source.readable && source.resume) {\x0d\n      source.resume();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  dest.on('drain'\x2C ondrain);\x0d\n\x0d\n  // If the 'end' option is not supplied\x2C dest.end() will be called when\x0d\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\x0d\n  if (!dest._isStdio && (!options || options.end !== false)) {\x0d\n    source.on('end'\x2C onend);\x0d\n    source.on('close'\x2C onclose);\x0d\n  }\x0d\n\x0d\n  let didOnEnd = false;\x0d\n  function onend() {\x0d\n    if (didOnEnd) return;\x0d\n    didOnEnd = true;\x0d\n\x0d\n    dest.end();\x0d\n  }\x0d\n\x0d\n\x0d\n  function onclose() {\x0d\n    if (didOnEnd) return;\x0d\n    didOnEnd = true;\x0d\n\x0d\n    if (typeof dest.destroy === 'function') dest.destroy();\x0d\n  }\x0d\n\x0d\n  // Don't leave dangling pipes when there are errors.\x0d\n  function onerror(er) {\x0d\n    cleanup();\x0d\n    if (EE.listenerCount(this\x2C 'error') === 0) {\x0d\n      this.emit('error'\x2C er);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  prependListener(source\x2C 'error'\x2C onerror);\x0d\n  prependListener(dest\x2C 'error'\x2C onerror);\x0d\n\x0d\n  // Remove all the event listeners that were added.\x0d\n  function cleanup() {\x0d\n    source.removeListener('data'\x2C ondata);\x0d\n    dest.removeListener('drain'\x2C ondrain);\x0d\n\x0d\n    source.removeListener('end'\x2C onend);\x0d\n    source.removeListener('close'\x2C onclose);\x0d\n\x0d\n    source.removeListener('error'\x2C onerror);\x0d\n    dest.removeListener('error'\x2C onerror);\x0d\n\x0d\n    source.removeListener('end'\x2C cleanup);\x0d\n    source.removeListener('close'\x2C cleanup);\x0d\n\x0d\n    dest.removeListener('close'\x2C cleanup);\x0d\n  }\x0d\n\x0d\n  source.on('end'\x2C cleanup);\x0d\n  source.on('close'\x2C cleanup);\x0d\n\x0d\n  dest.on('close'\x2C cleanup);\x0d\n  dest.emit('pipe'\x2C source);\x0d\n\x0d\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\x0d\n  return dest;\x0d\n};\x0d\n\x0d\nStream.prototype.eventNames = function eventNames() {\x0d\n  const names = [];\x0d\n  for (const key of ReflectOwnKeys(this._events)) {\x0d\n    if (typeof this._events[key] === 'function' || (ArrayIsArray(this._events[key]) && this._events[key].length > 0)) {\x0d\n      names.push(key);\x0d\n    }\x0d\n  }\x0d\n  return names;\x0d\n};\x0d\n\x0d\nfunction prependListener(emitter\x2C event\x2C fn) {\x0d\n  // Sadly this is not cacheable as some libraries bundle their own\x0d\n  // event emitter implementation with them.\x0d\n  if (typeof emitter.prependListener === 'function')\x0d\n    return emitter.prependListener(event\x2C fn);\x0d\n\x0d\n  // This is a hack to make sure that our error handler is attached before any\x0d\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\x0d\n  // to continue to work with older versions of Node.js that do not include\x0d\n  // the prependListener() method. The goal is to eventually remove this hack.\x0d\n  if (!emitter._events || !emitter._events[event])\x0d\n    emitter.on(event\x2C fn);\x0d\n  else if (ArrayIsArray(emitter._events[event]))\x0d\n    emitter._events[event].unshift(fn);\x0d\n  else\x0d\n    emitter._events[event] = [fn\x2C emitter._events[event]];\x0d\n}\x0d\n\x0d\nmodule.exports = { Stream\x2C prependListener };\x0d\n
code-source-info,0x9b20b64a3c,96,0,3376,C0O0C4O3376,,
code-creation,JS,10,141510,0x9b20b64d4c,128, node:internal/streams/legacy:1:1,0x9b20b649b0,~
code-source-info,0x9b20b64d4c,96,0,3376,C0O0C25O28C31O45C36O70C42O118C45O118C49O118C51O220C59O234C64O192C69O247C72O247C77O291C86O306C90O2200C99O2221C103O3329C110O3348C116O3356C122O3344C127O3375,,
code-creation,Eval,10,142535,0x9b20b6adbc,5, node:internal/streams/readable:1:1,0x9b20b69930,~
script-source,97,node:internal/streams/readable,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  SafeSet\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolAsyncDispose\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n  SymbolSpecies\x2C\x0d\n  TypedArrayPrototypeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Readable;\x0d\nReadable.ReadableState = ReadableState;\x0d\n\x0d\nconst EE = require('events');\x0d\nconst { Stream\x2C prependListener } = require('internal/streams/legacy');\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  addAbortSignal\x2C\x0d\n} = require('internal/streams/add-abort-signal');\x0d\nconst eos = require('internal/streams/end-of-stream');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('stream'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst destroyImpl = require('internal/streams/destroy');\x0d\nconst {\x0d\n  getHighWaterMark\x2C\x0d\n  getDefaultHighWaterMark\x2C\x0d\n} = require('internal/streams/state');\x0d\nconst {\x0d\n  kState\x2C\x0d\n  // bitfields\x0d\n  kObjectMode\x2C\x0d\n  kErrorEmitted\x2C\x0d\n  kAutoDestroy\x2C\x0d\n  kEmitClose\x2C\x0d\n  kDestroyed\x2C\x0d\n  kClosed\x2C\x0d\n  kCloseEmitted\x2C\x0d\n  kErrored\x2C\x0d\n  kConstructed\x2C\x0d\n  kOnConstructed\x2C\x0d\n} = require('internal/streams/utils');\x0d\n\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_STREAM_PUSH_AFTER_EOF\x2C\x0d\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT\x2C\x0d\n    ERR_UNKNOWN_ENCODING\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n} = require('internal/errors');\x0d\nconst { validateObject } = require('internal/validators');\x0d\n\x0d\nconst FastBuffer = Buffer[SymbolSpecies];\x0d\n\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\nconst from = require('internal/streams/from');\x0d\n\x0d\nObjectSetPrototypeOf(Readable.prototype\x2C Stream.prototype);\x0d\nObjectSetPrototypeOf(Readable\x2C Stream);\x0d\nconst nop = () => {};\x0d\n\x0d\nconst { errorOrDestroy } = destroyImpl;\x0d\n\x0d\nconst kErroredValue = Symbol('kErroredValue');\x0d\nconst kDefaultEncodingValue = Symbol('kDefaultEncodingValue');\x0d\nconst kDecoderValue = Symbol('kDecoderValue');\x0d\nconst kEncodingValue = Symbol('kEncodingValue');\x0d\n\x0d\nconst kEnded = 1 << 9;\x0d\nconst kEndEmitted = 1 << 10;\x0d\nconst kReading = 1 << 11;\x0d\nconst kSync = 1 << 12;\x0d\nconst kNeedReadable = 1 << 13;\x0d\nconst kEmittedReadable = 1 << 14;\x0d\nconst kReadableListening = 1 << 15;\x0d\nconst kResumeScheduled = 1 << 16;\x0d\nconst kMultiAwaitDrain = 1 << 17;\x0d\nconst kReadingMore = 1 << 18;\x0d\nconst kDataEmitted = 1 << 19;\x0d\nconst kDefaultUTF8Encoding = 1 << 20;\x0d\nconst kDecoder = 1 << 21;\x0d\nconst kEncoding = 1 << 22;\x0d\nconst kHasFlowing = 1 << 23;\x0d\nconst kFlowing = 1 << 24;\x0d\nconst kHasPaused = 1 << 25;\x0d\nconst kPaused = 1 << 26;\x0d\nconst kDataListening = 1 << 27;\x0d\n\x0d\n// TODO(benjamingr) it is likely slower to do it this way than with free functions\x0d\nfunction makeBitMapDescriptor(bit) {\x0d\n  return {\x0d\n    enumerable: false\x2C\x0d\n    get() { return (this[kState] & bit) !== 0; }\x2C\x0d\n    set(value) {\x0d\n      if (value) this[kState] |= bit;\x0d\n      else this[kState] &= ~bit;\x0d\n    }\x2C\x0d\n  };\x0d\n}\x0d\nObjectDefineProperties(ReadableState.prototype\x2C {\x0d\n  objectMode: makeBitMapDescriptor(kObjectMode)\x2C\x0d\n  ended: makeBitMapDescriptor(kEnded)\x2C\x0d\n  endEmitted: makeBitMapDescriptor(kEndEmitted)\x2C\x0d\n  reading: makeBitMapDescriptor(kReading)\x2C\x0d\n  // Stream is still being constructed and cannot be\x0d\n  // destroyed until construction finished or failed.\x0d\n  // Async construction is opt in\x2C therefore we start as\x0d\n  // constructed.\x0d\n  constructed: makeBitMapDescriptor(kConstructed)\x2C\x0d\n  // A flag to be able to tell if the event 'readable'/'data' is emitted\x0d\n  // immediately\x2C or on a later tick.  We set this to true at first\x2C because\x0d\n  // any actions that shouldn't happen until "later" should generally also\x0d\n  // not happen before the first read call.\x0d\n  sync: makeBitMapDescriptor(kSync)\x2C\x0d\n  // Whenever we return null\x2C then we set a flag to say\x0d\n  // that we're awaiting a 'readable' event emission.\x0d\n  needReadable: makeBitMapDescriptor(kNeedReadable)\x2C\x0d\n  emittedReadable: makeBitMapDescriptor(kEmittedReadable)\x2C\x0d\n  readableListening: makeBitMapDescriptor(kReadableListening)\x2C\x0d\n  resumeScheduled: makeBitMapDescriptor(kResumeScheduled)\x2C\x0d\n  // True if the error was already emitted and should not be thrown again.\x0d\n  errorEmitted: makeBitMapDescriptor(kErrorEmitted)\x2C\x0d\n  emitClose: makeBitMapDescriptor(kEmitClose)\x2C\x0d\n  autoDestroy: makeBitMapDescriptor(kAutoDestroy)\x2C\x0d\n  // Has it been destroyed.\x0d\n  destroyed: makeBitMapDescriptor(kDestroyed)\x2C\x0d\n  // Indicates whether the stream has finished destroying.\x0d\n  closed: makeBitMapDescriptor(kClosed)\x2C\x0d\n  // True if close has been emitted or would have been emitted\x0d\n  // depending on emitClose.\x0d\n  closeEmitted: makeBitMapDescriptor(kCloseEmitted)\x2C\x0d\n  multiAwaitDrain: makeBitMapDescriptor(kMultiAwaitDrain)\x2C\x0d\n  // If true\x2C a maybeReadMore has been scheduled.\x0d\n  readingMore: makeBitMapDescriptor(kReadingMore)\x2C\x0d\n  dataEmitted: makeBitMapDescriptor(kDataEmitted)\x2C\x0d\n\x0d\n  // Indicates whether the stream has errored. When true no further\x0d\n  // _read calls\x2C 'data' or 'readable' events should occur. This is needed\x0d\n  // since when autoDestroy is disabled we need a way to tell whether the\x0d\n  // stream has failed.\x0d\n  errored: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return (this[kState] & kErrored) !== 0 ? this[kErroredValue] : null;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      if (value) {\x0d\n        this[kErroredValue] = value;\x0d\n        this[kState] |= kErrored;\x0d\n      } else {\x0d\n        this[kState] &= ~kErrored;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  defaultEncoding: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() { return (this[kState] & kDefaultUTF8Encoding) !== 0 ? 'utf8' : this[kDefaultEncodingValue]; }\x2C\x0d\n    set(value) {\x0d\n      if (value === 'utf8' || value === 'utf-8') {\x0d\n        this[kState] |= kDefaultUTF8Encoding;\x0d\n      } else {\x0d\n        this[kState] &= ~kDefaultUTF8Encoding;\x0d\n        this[kDefaultEncodingValue] = value;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  decoder: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return (this[kState] & kDecoder) !== 0 ? this[kDecoderValue] : null;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      if (value) {\x0d\n        this[kDecoderValue] = value;\x0d\n        this[kState] |= kDecoder;\x0d\n      } else {\x0d\n        this[kState] &= ~kDecoder;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  encoding: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return (this[kState] & kEncoding) !== 0 ? this[kEncodingValue] : null;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      if (value) {\x0d\n        this[kEncodingValue] = value;\x0d\n        this[kState] |= kEncoding;\x0d\n      } else {\x0d\n        this[kState] &= ~kEncoding;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  flowing: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return (this[kState] & kHasFlowing) !== 0 ? (this[kState] & kFlowing) !== 0 : null;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      if (value == null) {\x0d\n        this[kState] &= ~(kHasFlowing | kFlowing);\x0d\n      } else if (value) {\x0d\n        this[kState] |= (kHasFlowing | kFlowing);\x0d\n      } else {\x0d\n        this[kState] |= kHasFlowing;\x0d\n        this[kState] &= ~kFlowing;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n\x0d\nfunction ReadableState(options\x2C stream\x2C isDuplex) {\x0d\n  // Bit map field to store ReadableState more effciently with 1 bit per field\x0d\n  // instead of a V8 slot per field.\x0d\n  this[kState] = kEmitClose | kAutoDestroy | kConstructed | kSync;\x0d\n\x0d\n  // Object stream flag. Used to make read(n) ignore n and to\x0d\n  // make all the buffer merging and length checks go away.\x0d\n  if (options && options.objectMode)\x0d\n    this[kState] |= kObjectMode;\x0d\n\x0d\n  if (isDuplex && options && options.readableObjectMode)\x0d\n    this[kState] |= kObjectMode;\x0d\n\x0d\n  // The point at which it stops calling _read() to fill the buffer\x0d\n  // Note: 0 is a valid value\x2C means "don't call _read preemptively ever"\x0d\n  this.highWaterMark = options ?\x0d\n    getHighWaterMark(this\x2C options\x2C 'readableHighWaterMark'\x2C isDuplex) :\x0d\n    getDefaultHighWaterMark(false);\x0d\n\x0d\n  this.buffer = [];\x0d\n  this.bufferIndex = 0;\x0d\n  this.length = 0;\x0d\n  this.pipes = [];\x0d\n\x0d\n  // Should close be emitted on destroy. Defaults to true.\x0d\n  if (options && options.emitClose === false) this[kState] &= ~kEmitClose;\x0d\n\x0d\n  // Should .destroy() be called after 'end' (and potentially 'finish').\x0d\n  if (options && options.autoDestroy === false) this[kState] &= ~kAutoDestroy;\x0d\n\x0d\n  // Crypto is kind of old and crusty.  Historically\x2C its default string\x0d\n  // encoding is 'binary' so we have to make this configurable.\x0d\n  // Everything else in the universe uses 'utf8'\x2C though.\x0d\n  const defaultEncoding = options?.defaultEncoding;\x0d\n  if (defaultEncoding == null || defaultEncoding === 'utf8' || defaultEncoding === 'utf-8') {\x0d\n    this[kState] |= kDefaultUTF8Encoding;\x0d\n  } else if (Buffer.isEncoding(defaultEncoding)) {\x0d\n    this.defaultEncoding = defaultEncoding;\x0d\n  } else {\x0d\n    throw new ERR_UNKNOWN_ENCODING(defaultEncoding);\x0d\n  }\x0d\n\x0d\n  // Ref the piped dest which we need a drain event on it\x0d\n  // type: null | Writable | Set<Writable>.\x0d\n  this.awaitDrainWriters = null;\x0d\n\x0d\n  if (options && options.encoding) {\x0d\n    this.decoder = new StringDecoder(options.encoding);\x0d\n    this.encoding = options.encoding;\x0d\n  }\x0d\n}\x0d\n\x0d\nReadableState.prototype[kOnConstructed] = function onConstructed(stream) {\x0d\n  if ((this[kState] & kNeedReadable) !== 0) {\x0d\n    maybeReadMore(stream\x2C this);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction Readable(options) {\x0d\n  if (!(this instanceof Readable))\x0d\n    return new Readable(options);\x0d\n\x0d\n  this._events ??= {\x0d\n    close: undefined\x2C\x0d\n    error: undefined\x2C\x0d\n    data: undefined\x2C\x0d\n    end: undefined\x2C\x0d\n    readable: undefined\x2C\x0d\n    // Skip uncommon events...\x0d\n    // pause: undefined\x2C\x0d\n    // resume: undefined\x2C\x0d\n    // pipe: undefined\x2C\x0d\n    // unpipe: undefined\x2C\x0d\n    // [destroyImpl.kConstruct]: undefined\x2C\x0d\n    // [destroyImpl.kDestroy]: undefined\x2C\x0d\n  };\x0d\n\x0d\n  this._readableState = new ReadableState(options\x2C this\x2C false);\x0d\n\x0d\n  if (options) {\x0d\n    if (typeof options.read === 'function')\x0d\n      this._read = options.read;\x0d\n\x0d\n    if (typeof options.destroy === 'function')\x0d\n      this._destroy = options.destroy;\x0d\n\x0d\n    if (typeof options.construct === 'function')\x0d\n      this._construct = options.construct;\x0d\n\x0d\n    if (options.signal)\x0d\n      addAbortSignal(options.signal\x2C this);\x0d\n  }\x0d\n\x0d\n  Stream.call(this\x2C options);\x0d\n\x0d\n  if (this._construct != null) {\x0d\n    destroyImpl.construct(this\x2C () => {\x0d\n      this._readableState[kOnConstructed](this);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nReadable.prototype.destroy = destroyImpl.destroy;\x0d\nReadable.prototype._undestroy = destroyImpl.undestroy;\x0d\nReadable.prototype._destroy = function(err\x2C cb) {\x0d\n  cb(err);\x0d\n};\x0d\n\x0d\nReadable.prototype[EE.captureRejectionSymbol] = function(err) {\x0d\n  this.destroy(err);\x0d\n};\x0d\n\x0d\nReadable.prototype[SymbolAsyncDispose] = function() {\x0d\n  let error;\x0d\n  if (!this.destroyed) {\x0d\n    error = this.readableEnded ? null : new AbortError();\x0d\n    this.destroy(error);\x0d\n  }\x0d\n  return new Promise((resolve\x2C reject) => eos(this\x2C (err) => (err && err !== error ? reject(err) : resolve(null))));\x0d\n};\x0d\n\x0d\n// Manually shove something into the read() buffer.\x0d\n// This returns true if the highWaterMark has not been hit yet\x2C\x0d\n// similar to how Writable.write() returns true if you should\x0d\n// write() some more.\x0d\nReadable.prototype.push = function(chunk\x2C encoding) {\x0d\n  debug('push'\x2C chunk);\x0d\n\x0d\n  const state = this._readableState;\x0d\n  return (state[kState] & kObjectMode) === 0 ?\x0d\n    readableAddChunkPushByteMode(this\x2C state\x2C chunk\x2C encoding) :\x0d\n    readableAddChunkPushObjectMode(this\x2C state\x2C chunk\x2C encoding);\x0d\n};\x0d\n\x0d\n// Unshift should *always* be something directly out of read().\x0d\nReadable.prototype.unshift = function(chunk\x2C encoding) {\x0d\n  debug('unshift'\x2C chunk);\x0d\n  const state = this._readableState;\x0d\n  return (state[kState] & kObjectMode) === 0 ?\x0d\n    readableAddChunkUnshiftByteMode(this\x2C state\x2C chunk\x2C encoding) :\x0d\n    readableAddChunkUnshiftObjectMode(this\x2C state\x2C chunk);\x0d\n};\x0d\n\x0d\n\x0d\nfunction readableAddChunkUnshiftByteMode(stream\x2C state\x2C chunk\x2C encoding) {\x0d\n  if (chunk === null) {\x0d\n    state[kState] &= ~kReading;\x0d\n    onEofChunk(stream\x2C state);\x0d\n\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  if (typeof chunk === 'string') {\x0d\n    encoding = encoding || state.defaultEncoding;\x0d\n    if (state.encoding !== encoding) {\x0d\n      if (state.encoding) {\x0d\n        // When unshifting\x2C if state.encoding is set\x2C we have to save\x0d\n        // the string in the BufferList with the state encoding.\x0d\n        chunk = Buffer.from(chunk\x2C encoding).toString(state.encoding);\x0d\n      } else {\x0d\n        chunk = Buffer.from(chunk\x2C encoding);\x0d\n      }\x0d\n    }\x0d\n  } else if (Stream._isUint8Array(chunk)) {\x0d\n    chunk = Stream._uint8ArrayToBuffer(chunk);\x0d\n  } else if (chunk !== undefined && !(chunk instanceof Buffer)) {\x0d\n    errorOrDestroy(stream\x2C new ERR_INVALID_ARG_TYPE(\x0d\n      'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C chunk));\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n\x0d\n  if (!(chunk && chunk.length > 0)) {\x0d\n    return canPushMore(state);\x0d\n  }\x0d\n\x0d\n  return readableAddChunkUnshiftValue(stream\x2C state\x2C chunk);\x0d\n}\x0d\n\x0d\nfunction readableAddChunkUnshiftObjectMode(stream\x2C state\x2C chunk) {\x0d\n  if (chunk === null) {\x0d\n    state[kState] &= ~kReading;\x0d\n    onEofChunk(stream\x2C state);\x0d\n\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  return readableAddChunkUnshiftValue(stream\x2C state\x2C chunk);\x0d\n}\x0d\n\x0d\nfunction readableAddChunkUnshiftValue(stream\x2C state\x2C chunk) {\x0d\n  if ((state[kState] & kEndEmitted) !== 0)\x0d\n    errorOrDestroy(stream\x2C new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());\x0d\n  else if ((state[kState] & (kDestroyed | kErrored)) !== 0)\x0d\n    return false;\x0d\n  else\x0d\n    addChunk(stream\x2C state\x2C chunk\x2C true);\x0d\n\x0d\n  return canPushMore(state);\x0d\n}\x0d\n\x0d\nfunction readableAddChunkPushByteMode(stream\x2C state\x2C chunk\x2C encoding) {\x0d\n  if (chunk === null) {\x0d\n    state[kState] &= ~kReading;\x0d\n    onEofChunk(stream\x2C state);\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  if (typeof chunk === 'string') {\x0d\n    encoding = encoding || state.defaultEncoding;\x0d\n    if (state.encoding !== encoding) {\x0d\n      chunk = Buffer.from(chunk\x2C encoding);\x0d\n      encoding = '';\x0d\n    }\x0d\n  } else if (chunk instanceof Buffer) {\x0d\n    encoding = '';\x0d\n  } else if (Stream._isUint8Array(chunk)) {\x0d\n    chunk = Stream._uint8ArrayToBuffer(chunk);\x0d\n    encoding = '';\x0d\n  } else if (chunk !== undefined) {\x0d\n    errorOrDestroy(stream\x2C new ERR_INVALID_ARG_TYPE(\x0d\n      'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C chunk));\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  if (!chunk || chunk.length <= 0) {\x0d\n    state[kState] &= ~kReading;\x0d\n    maybeReadMore(stream\x2C state);\x0d\n\x0d\n    return canPushMore(state);\x0d\n  }\x0d\n\x0d\n  if ((state[kState] & kEnded) !== 0) {\x0d\n    errorOrDestroy(stream\x2C new ERR_STREAM_PUSH_AFTER_EOF());\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  if ((state[kState] & (kDestroyed | kErrored)) !== 0) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  state[kState] &= ~kReading;\x0d\n  if ((state[kState] & kDecoder) !== 0 && !encoding) {\x0d\n    chunk = state[kDecoderValue].write(chunk);\x0d\n    if (chunk.length === 0) {\x0d\n      maybeReadMore(stream\x2C state);\x0d\n      return canPushMore(state);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  addChunk(stream\x2C state\x2C chunk\x2C false);\x0d\n  return canPushMore(state);\x0d\n}\x0d\n\x0d\nfunction readableAddChunkPushObjectMode(stream\x2C state\x2C chunk\x2C encoding) {\x0d\n  if (chunk === null) {\x0d\n    state[kState] &= ~kReading;\x0d\n    onEofChunk(stream\x2C state);\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  if ((state[kState] & kEnded) !== 0) {\x0d\n    errorOrDestroy(stream\x2C new ERR_STREAM_PUSH_AFTER_EOF());\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  if ((state[kState] & (kDestroyed | kErrored)) !== 0) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  state[kState] &= ~kReading;\x0d\n\x0d\n  if ((state[kState] & kDecoder) !== 0 && !encoding) {\x0d\n    chunk = state[kDecoderValue].write(chunk);\x0d\n  }\x0d\n\x0d\n  addChunk(stream\x2C state\x2C chunk\x2C false);\x0d\n  return canPushMore(state);\x0d\n}\x0d\n\x0d\nfunction canPushMore(state) {\x0d\n  // We can push more data if we are below the highWaterMark.\x0d\n  // Also\x2C if we have no data yet\x2C we can stand some more bytes.\x0d\n  // This is to work around cases where hwm=0\x2C such as the repl.\x0d\n  return (state[kState] & kEnded) === 0 &&\x0d\n    (state.length < state.highWaterMark || state.length === 0);\x0d\n}\x0d\n\x0d\nfunction addChunk(stream\x2C state\x2C chunk\x2C addToFront) {\x0d\n  if ((state[kState] & (kFlowing | kSync | kDataListening)) === (kFlowing | kDataListening) && state.length === 0) {\x0d\n    // Use the guard to avoid creating `Set()` repeatedly\x0d\n    // when we have multiple pipes.\x0d\n    if ((state[kState] & kMultiAwaitDrain) !== 0) {\x0d\n      state.awaitDrainWriters.clear();\x0d\n    } else {\x0d\n      state.awaitDrainWriters = null;\x0d\n    }\x0d\n\x0d\n    state[kState] |= kDataEmitted;\x0d\n    stream.emit('data'\x2C chunk);\x0d\n  } else {\x0d\n    // Update the buffer info.\x0d\n    state.length += (state[kState] & kObjectMode) !== 0 ? 1 : chunk.length;\x0d\n    if (addToFront) {\x0d\n      if (state.bufferIndex > 0) {\x0d\n        state.buffer[--state.bufferIndex] = chunk;\x0d\n      } else {\x0d\n        state.buffer.unshift(chunk); // Slow path\x0d\n      }\x0d\n    } else {\x0d\n      state.buffer.push(chunk);\x0d\n    }\x0d\n\x0d\n    if ((state[kState] & kNeedReadable) !== 0)\x0d\n      emitReadable(stream);\x0d\n  }\x0d\n  maybeReadMore(stream\x2C state);\x0d\n}\x0d\n\x0d\nReadable.prototype.isPaused = function() {\x0d\n  const state = this._readableState;\x0d\n  return (state[kState] & kPaused) !== 0 || (state[kState] & (kHasFlowing | kFlowing)) === kHasFlowing;\x0d\n};\x0d\n\x0d\n// Backwards compatibility.\x0d\nReadable.prototype.setEncoding = function(enc) {\x0d\n  const state = this._readableState;\x0d\n\x0d\n  const decoder = new StringDecoder(enc);\x0d\n  state.decoder = decoder;\x0d\n  // If setEncoding(null)\x2C decoder.encoding equals utf8.\x0d\n  state.encoding = state.decoder.encoding;\x0d\n\x0d\n  // Iterate over current buffer to convert already stored Buffers:\x0d\n  let content = '';\x0d\n  for (const data of state.buffer.slice(state.bufferIndex)) {\x0d\n    content += decoder.write(data);\x0d\n  }\x0d\n  state.buffer.length = 0;\x0d\n  state.bufferIndex = 0;\x0d\n\x0d\n  if (content !== '')\x0d\n    state.buffer.push(content);\x0d\n  state.length = content.length;\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// Don't raise the hwm > 1GB.\x0d\nconst MAX_HWM = 0x40000000;\x0d\nfunction computeNewHighWaterMark(n) {\x0d\n  if (n > MAX_HWM) {\x0d\n    throw new ERR_OUT_OF_RANGE('size'\x2C '<= 1GiB'\x2C n);\x0d\n  } else {\x0d\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\x0d\n    // tiny amounts.\x0d\n    n--;\x0d\n    n |= n >>> 1;\x0d\n    n |= n >>> 2;\x0d\n    n |= n >>> 4;\x0d\n    n |= n >>> 8;\x0d\n    n |= n >>> 16;\x0d\n    n++;\x0d\n  }\x0d\n  return n;\x0d\n}\x0d\n\x0d\n// This function is designed to be inlinable\x2C so please take care when making\x0d\n// changes to the function body.\x0d\nfunction howMuchToRead(n\x2C state) {\x0d\n  if (n <= 0 || (state.length === 0 && (state[kState] & kEnded) !== 0))\x0d\n    return 0;\x0d\n  if ((state[kState] & kObjectMode) !== 0)\x0d\n    return 1;\x0d\n  if (NumberIsNaN(n)) {\x0d\n    // Only flow one buffer at a time.\x0d\n    if ((state[kState] & kFlowing) !== 0 && state.length)\x0d\n      return state.buffer[state.bufferIndex].length;\x0d\n    return state.length;\x0d\n  }\x0d\n  if (n <= state.length)\x0d\n    return n;\x0d\n  return (state[kState] & kEnded) !== 0 ? state.length : 0;\x0d\n}\x0d\n\x0d\n// You can override either this method\x2C or the async _read(n) below.\x0d\nReadable.prototype.read = function(n) {\x0d\n  debug('read'\x2C n);\x0d\n  // Same as parseInt(undefined\x2C 10)\x2C however V8 7.3 performance regressed\x0d\n  // in this scenario\x2C so we are doing it manually.\x0d\n  if (n === undefined) {\x0d\n    n = NaN;\x0d\n  } else if (!NumberIsInteger(n)) {\x0d\n    n = NumberParseInt(n\x2C 10);\x0d\n  }\x0d\n  const state = this._readableState;\x0d\n  const nOrig = n;\x0d\n\x0d\n  // If we're asking for more than the current hwm\x2C then raise the hwm.\x0d\n  if (n > state.highWaterMark)\x0d\n    state.highWaterMark = computeNewHighWaterMark(n);\x0d\n\x0d\n  if (n !== 0)\x0d\n    state[kState] &= ~kEmittedReadable;\x0d\n\x0d\n  // If we're doing read(0) to trigger a readable event\x2C but we\x0d\n  // already have a bunch of data in the buffer\x2C then just trigger\x0d\n  // the 'readable' event and move on.\x0d\n  if (n === 0 &&\x0d\n      (state[kState] & kNeedReadable) !== 0 &&\x0d\n      ((state.highWaterMark !== 0 ?\x0d\n        state.length >= state.highWaterMark :\x0d\n        state.length > 0) ||\x0d\n       (state[kState] & kEnded) !== 0)) {\x0d\n    debug('read: emitReadable');\x0d\n    if (state.length === 0 && (state[kState] & kEnded) !== 0)\x0d\n      endReadable(this);\x0d\n    else\x0d\n      emitReadable(this);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  n = howMuchToRead(n\x2C state);\x0d\n\x0d\n  // If we've ended\x2C and we're now clear\x2C then finish it up.\x0d\n  if (n === 0 && (state[kState] & kEnded) !== 0) {\x0d\n    if (state.length === 0)\x0d\n      endReadable(this);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  // All the actual chunk generation logic needs to be\x0d\n  // *below* the call to _read.  The reason is that in certain\x0d\n  // synthetic stream cases\x2C such as passthrough streams\x2C _read\x0d\n  // may be a completely synchronous operation which may change\x0d\n  // the state of the read buffer\x2C providing enough data when\x0d\n  // before there was *not* enough.\x0d\n  //\x0d\n  // So\x2C the steps are:\x0d\n  // 1. Figure out what the state of things will be after we do\x0d\n  // a read from the buffer.\x0d\n  //\x0d\n  // 2. If that resulting state will trigger a _read\x2C then call _read.\x0d\n  // Note that this may be asynchronous\x2C or synchronous.  Yes\x2C it is\x0d\n  // deeply ugly to write APIs this way\x2C but that still doesn't mean\x0d\n  // that the Readable class should behave improperly\x2C as streams are\x0d\n  // designed to be sync/async agnostic.\x0d\n  // Take note if the _read call is sync or async (ie\x2C if the read call\x0d\n  // has returned yet)\x2C so that we know whether or not it's safe to emit\x0d\n  // 'readable' etc.\x0d\n  //\x0d\n  // 3. Actually pull the requested chunks out of the buffer and return.\x0d\n\x0d\n  // if we need a readable event\x2C then we need to do some reading.\x0d\n  let doRead = (state[kState] & kNeedReadable) !== 0;\x0d\n  debug('need readable'\x2C doRead);\x0d\n\x0d\n  // If we currently have less than the highWaterMark\x2C then also read some.\x0d\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\x0d\n    doRead = true;\x0d\n    debug('length less than watermark'\x2C doRead);\x0d\n  }\x0d\n\x0d\n  // However\x2C if we've ended\x2C then there's no point\x2C if we're already\x0d\n  // reading\x2C then it's unnecessary\x2C if we're constructing we have to wait\x2C\x0d\n  // and if we're destroyed or errored\x2C then it's not allowed\x2C\x0d\n  if ((state[kState] & (kReading | kEnded | kDestroyed | kErrored | kConstructed)) !== kConstructed) {\x0d\n    doRead = false;\x0d\n    debug('reading\x2C ended or constructing'\x2C doRead);\x0d\n  } else if (doRead) {\x0d\n    debug('do read');\x0d\n    state[kState] |= kReading | kSync;\x0d\n    // If the length is currently zero\x2C then we *need* a readable event.\x0d\n    if (state.length === 0)\x0d\n      state[kState] |= kNeedReadable;\x0d\n\x0d\n    // Call internal read method\x0d\n    try {\x0d\n      this._read(state.highWaterMark);\x0d\n    } catch (err) {\x0d\n      errorOrDestroy(this\x2C err);\x0d\n    }\x0d\n    state[kState] &= ~kSync;\x0d\n\x0d\n    // If _read pushed data synchronously\x2C then `reading` will be false\x2C\x0d\n    // and we need to re-evaluate how much data we can return to the user.\x0d\n    if ((state[kState] & kReading) === 0)\x0d\n      n = howMuchToRead(nOrig\x2C state);\x0d\n  }\x0d\n\x0d\n  let ret;\x0d\n  if (n > 0)\x0d\n    ret = fromList(n\x2C state);\x0d\n  else\x0d\n    ret = null;\x0d\n\x0d\n  if (ret === null) {\x0d\n    state[kState] |= state.length <= state.highWaterMark ? kNeedReadable : 0;\x0d\n    n = 0;\x0d\n  } else {\x0d\n    state.length -= n;\x0d\n    if ((state[kState] & kMultiAwaitDrain) !== 0) {\x0d\n      state.awaitDrainWriters.clear();\x0d\n    } else {\x0d\n      state.awaitDrainWriters = null;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (state.length === 0) {\x0d\n    // If we have nothing in the buffer\x2C then we want to know\x0d\n    // as soon as we *do* get something into the buffer.\x0d\n    if ((state[kState] & kEnded) === 0)\x0d\n      state[kState] |= kNeedReadable;\x0d\n\x0d\n    // If we tried to read() past the EOF\x2C then emit end on the next tick.\x0d\n    if (nOrig !== n && (state[kState] & kEnded) !== 0)\x0d\n      endReadable(this);\x0d\n  }\x0d\n\x0d\n  if (ret !== null && (state[kState] & (kErrorEmitted | kCloseEmitted)) === 0) {\x0d\n    state[kState] |= kDataEmitted;\x0d\n    this.emit('data'\x2C ret);\x0d\n  }\x0d\n\x0d\n  return ret;\x0d\n};\x0d\n\x0d\nfunction onEofChunk(stream\x2C state) {\x0d\n  debug('onEofChunk');\x0d\n  if ((state[kState] & kEnded) !== 0) return;\x0d\n  const decoder = (state[kState] & kDecoder) !== 0 ? state[kDecoderValue] : null;\x0d\n  if (decoder) {\x0d\n    const chunk = decoder.end();\x0d\n    if (chunk && chunk.length) {\x0d\n      state.buffer.push(chunk);\x0d\n      state.length += (state[kState] & kObjectMode) !== 0 ? 1 : chunk.length;\x0d\n    }\x0d\n  }\x0d\n  state[kState] |= kEnded;\x0d\n\x0d\n  if ((state[kState] & kSync) !== 0) {\x0d\n    // If we are sync\x2C wait until next tick to emit the data.\x0d\n    // Otherwise we risk emitting data in the flow()\x0d\n    // the readable code triggers during a read() call.\x0d\n    emitReadable(stream);\x0d\n  } else {\x0d\n    // Emit 'readable' now to make sure it gets picked up.\x0d\n    state[kState] &= ~kNeedReadable;\x0d\n    state[kState] |= kEmittedReadable;\x0d\n    // We have to emit readable now that we are EOF. Modules\x0d\n    // in the ecosystem (e.g. dicer) rely on this event being sync.\x0d\n    emitReadable_(stream);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Don't emit readable right away in sync mode\x2C because this can trigger\x0d\n// another read() call => stack overflow.  This way\x2C it might trigger\x0d\n// a nextTick recursion warning\x2C but that's not so bad.\x0d\nfunction emitReadable(stream) {\x0d\n  const state = stream._readableState;\x0d\n  debug('emitReadable');\x0d\n  state[kState] &= ~kNeedReadable;\x0d\n  if ((state[kState] & kEmittedReadable) === 0) {\x0d\n    debug('emitReadable'\x2C (state[kState] & kFlowing) !== 0);\x0d\n    state[kState] |= kEmittedReadable;\x0d\n    process.nextTick(emitReadable_\x2C stream);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitReadable_(stream) {\x0d\n  const state = stream._readableState;\x0d\n  debug('emitReadable_');\x0d\n  if ((state[kState] & (kDestroyed | kErrored)) === 0 && (state.length || (state[kState] & kEnded) !== 0)) {\x0d\n    stream.emit('readable');\x0d\n    state[kState] &= ~kEmittedReadable;\x0d\n  }\x0d\n\x0d\n  // The stream needs another readable event if:\x0d\n  // 1. It is not flowing\x2C as the flow mechanism will take\x0d\n  //    care of it.\x0d\n  // 2. It is not ended.\x0d\n  // 3. It is below the highWaterMark\x2C so we can schedule\x0d\n  //    another readable later.\x0d\n  state[kState] |=\x0d\n    (state[kState] & (kFlowing | kEnded)) === 0 &&\x0d\n    state.length <= state.highWaterMark ? kNeedReadable : 0;\x0d\n  flow(stream);\x0d\n}\x0d\n\x0d\n\x0d\n// At this point\x2C the user has presumably seen the 'readable' event\x2C\x0d\n// and called read() to consume some data.  that may have triggered\x0d\n// in turn another _read(n) call\x2C in which case reading = true if\x0d\n// it's in progress.\x0d\n// However\x2C if we're not ended\x2C or reading\x2C and the length < hwm\x2C\x0d\n// then go ahead and try to read some more preemptively.\x0d\nfunction maybeReadMore(stream\x2C state) {\x0d\n  if ((state[kState] & (kReadingMore | kConstructed)) === kConstructed) {\x0d\n    state[kState] |= kReadingMore;\x0d\n    process.nextTick(maybeReadMore_\x2C stream\x2C state);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeReadMore_(stream\x2C state) {\x0d\n  // Attempt to read more data if we should.\x0d\n  //\x0d\n  // The conditions for reading more data are (one of):\x0d\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\x0d\n  //   is responsible for filling the buffer with enough data if such data\x0d\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\x0d\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\x0d\n  //   when the stream consumer calls read() instead.\x0d\n  // - No data in the buffer\x2C and the stream is in flowing mode. In this mode\x0d\n  //   the loop below is responsible for ensuring read() is called. Failing to\x0d\n  //   call read here would abort the flow and there's no other mechanism for\x0d\n  //   continuing the flow if the stream consumer has just subscribed to the\x0d\n  //   'data' event.\x0d\n  //\x0d\n  // In addition to the above conditions to keep reading data\x2C the following\x0d\n  // conditions prevent the data from being read:\x0d\n  // - The stream has ended (state.ended).\x0d\n  // - There is already a pending 'read' operation (state.reading). This is a\x0d\n  //   case where the stream has called the implementation defined _read()\x0d\n  //   method\x2C but they are processing the call asynchronously and have _not_\x0d\n  //   called push() with new data. In this case we skip performing more\x0d\n  //   read()s. The execution ends in this method again after the _read() ends\x0d\n  //   up calling push() with more data.\x0d\n  while ((state[kState] & (kReading | kEnded)) === 0 &&\x0d\n         (state.length < state.highWaterMark ||\x0d\n          ((state[kState] & kFlowing) !== 0 && state.length === 0))) {\x0d\n    const len = state.length;\x0d\n    debug('maybeReadMore read 0');\x0d\n    stream.read(0);\x0d\n    if (len === state.length)\x0d\n      // Didn't get any data\x2C stop spinning.\x0d\n      break;\x0d\n  }\x0d\n  state[kState] &= ~kReadingMore;\x0d\n}\x0d\n\x0d\n// Abstract method.  to be overridden in specific implementation classes.\x0d\n// call cb(er\x2C data) where data is <= n in length.\x0d\n// for virtual (non-string\x2C non-buffer) streams\x2C "length" is somewhat\x0d\n// arbitrary\x2C and perhaps not very meaningful.\x0d\nReadable.prototype._read = function(n) {\x0d\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_read()');\x0d\n};\x0d\n\x0d\nReadable.prototype.pipe = function(dest\x2C pipeOpts) {\x0d\n  const src = this;\x0d\n  const state = this._readableState;\x0d\n\x0d\n  if (state.pipes.length === 1) {\x0d\n    if ((state[kState] & kMultiAwaitDrain) === 0) {\x0d\n      state[kState] |= kMultiAwaitDrain;\x0d\n      state.awaitDrainWriters = new SafeSet(\x0d\n        state.awaitDrainWriters ? [state.awaitDrainWriters] : []\x2C\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n\x0d\n  state.pipes.push(dest);\x0d\n  debug('pipe count=%d opts=%j'\x2C state.pipes.length\x2C pipeOpts);\x0d\n\x0d\n  const doEnd = (!pipeOpts || pipeOpts.end !== false) &&\x0d\n              dest !== process.stdout &&\x0d\n              dest !== process.stderr;\x0d\n\x0d\n  const endFn = doEnd ? onend : unpipe;\x0d\n  if ((state[kState] & kEndEmitted) !== 0)\x0d\n    process.nextTick(endFn);\x0d\n  else\x0d\n    src.once('end'\x2C endFn);\x0d\n\x0d\n  dest.on('unpipe'\x2C onunpipe);\x0d\n  function onunpipe(readable\x2C unpipeInfo) {\x0d\n    debug('onunpipe');\x0d\n    if (readable === src) {\x0d\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\x0d\n        unpipeInfo.hasUnpiped = true;\x0d\n        cleanup();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function onend() {\x0d\n    debug('onend');\x0d\n    dest.end();\x0d\n  }\x0d\n\x0d\n  let ondrain;\x0d\n\x0d\n  let cleanedUp = false;\x0d\n  function cleanup() {\x0d\n    debug('cleanup');\x0d\n    // Cleanup event handlers once the pipe is broken.\x0d\n    dest.removeListener('close'\x2C onclose);\x0d\n    dest.removeListener('finish'\x2C onfinish);\x0d\n    if (ondrain) {\x0d\n      dest.removeListener('drain'\x2C ondrain);\x0d\n    }\x0d\n    dest.removeListener('error'\x2C onerror);\x0d\n    dest.removeListener('unpipe'\x2C onunpipe);\x0d\n    src.removeListener('end'\x2C onend);\x0d\n    src.removeListener('end'\x2C unpipe);\x0d\n    src.removeListener('data'\x2C ondata);\x0d\n\x0d\n    cleanedUp = true;\x0d\n\x0d\n    // If the reader is waiting for a drain event from this\x0d\n    // specific writer\x2C then it would cause it to never start\x0d\n    // flowing again.\x0d\n    // So\x2C if this is awaiting a drain\x2C then we just call it now.\x0d\n    // If we don't know\x2C then assume that we are waiting for one.\x0d\n    if (ondrain && state.awaitDrainWriters &&\x0d\n        (!dest._writableState || dest._writableState.needDrain))\x0d\n      ondrain();\x0d\n  }\x0d\n\x0d\n  function pause() {\x0d\n    // If the user unpiped during `dest.write()`\x2C it is possible\x0d\n    // to get stuck in a permanently paused state if that write\x0d\n    // also returned false.\x0d\n    // => Check whether `dest` is still a piping destination.\x0d\n    if (!cleanedUp) {\x0d\n      if (state.pipes.length === 1 && state.pipes[0] === dest) {\x0d\n        debug('false write response\x2C pause'\x2C 0);\x0d\n        state.awaitDrainWriters = dest;\x0d\n        state[kState] &= ~kMultiAwaitDrain;\x0d\n      } else if (state.pipes.length > 1 && state.pipes.includes(dest)) {\x0d\n        debug('false write response\x2C pause'\x2C state.awaitDrainWriters.size);\x0d\n        state.awaitDrainWriters.add(dest);\x0d\n      }\x0d\n      src.pause();\x0d\n    }\x0d\n    if (!ondrain) {\x0d\n      // When the dest drains\x2C it reduces the awaitDrain counter\x0d\n      // on the source.  This would be more elegant with a .once()\x0d\n      // handler in flow()\x2C but adding and removing repeatedly is\x0d\n      // too slow.\x0d\n      ondrain = pipeOnDrain(src\x2C dest);\x0d\n      dest.on('drain'\x2C ondrain);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  src.on('data'\x2C ondata);\x0d\n  function ondata(chunk) {\x0d\n    debug('ondata');\x0d\n    const ret = dest.write(chunk);\x0d\n    debug('dest.write'\x2C ret);\x0d\n    if (ret === false) {\x0d\n      pause();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // If the dest has an error\x2C then stop piping into it.\x0d\n  // However\x2C don't suppress the throwing behavior for this.\x0d\n  function onerror(er) {\x0d\n    debug('onerror'\x2C er);\x0d\n    unpipe();\x0d\n    dest.removeListener('error'\x2C onerror);\x0d\n    if (dest.listenerCount('error') === 0) {\x0d\n      const s = dest._writableState || dest._readableState;\x0d\n      if (s && !s.errorEmitted) {\x0d\n        // User incorrectly emitted 'error' directly on the stream.\x0d\n        errorOrDestroy(dest\x2C er);\x0d\n      } else {\x0d\n        dest.emit('error'\x2C er);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Make sure our error handler is attached before userland ones.\x0d\n  prependListener(dest\x2C 'error'\x2C onerror);\x0d\n\x0d\n  // Both close and finish should trigger unpipe\x2C but only once.\x0d\n  function onclose() {\x0d\n    dest.removeListener('finish'\x2C onfinish);\x0d\n    unpipe();\x0d\n  }\x0d\n  dest.once('close'\x2C onclose);\x0d\n  function onfinish() {\x0d\n    debug('onfinish');\x0d\n    dest.removeListener('close'\x2C onclose);\x0d\n    unpipe();\x0d\n  }\x0d\n  dest.once('finish'\x2C onfinish);\x0d\n\x0d\n  function unpipe() {\x0d\n    debug('unpipe');\x0d\n    src.unpipe(dest);\x0d\n  }\x0d\n\x0d\n  // Tell the dest that it's being piped to.\x0d\n  dest.emit('pipe'\x2C src);\x0d\n\x0d\n  // Start the flow if it hasn't been started already.\x0d\n\x0d\n  if (dest.writableNeedDrain === true) {\x0d\n    pause();\x0d\n  } else if ((state[kState] & kFlowing) === 0) {\x0d\n    debug('pipe resume');\x0d\n    src.resume();\x0d\n  }\x0d\n\x0d\n  return dest;\x0d\n};\x0d\n\x0d\nfunction pipeOnDrain(src\x2C dest) {\x0d\n  return function pipeOnDrainFunctionResult() {\x0d\n    const state = src._readableState;\x0d\n\x0d\n    // `ondrain` will call directly\x2C\x0d\n    // `this` maybe not a reference to dest\x2C\x0d\n    // so we use the real dest here.\x0d\n    if (state.awaitDrainWriters === dest) {\x0d\n      debug('pipeOnDrain'\x2C 1);\x0d\n      state.awaitDrainWriters = null;\x0d\n    } else if ((state[kState] & kMultiAwaitDrain) !== 0) {\x0d\n      debug('pipeOnDrain'\x2C state.awaitDrainWriters.size);\x0d\n      state.awaitDrainWriters.delete(dest);\x0d\n    }\x0d\n\x0d\n    if ((!state.awaitDrainWriters || state.awaitDrainWriters.size === 0) &&\x0d\n      (state[kState] & kDataListening) !== 0) {\x0d\n      src.resume();\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\n\x0d\nReadable.prototype.unpipe = function(dest) {\x0d\n  const state = this._readableState;\x0d\n  const unpipeInfo = { hasUnpiped: false };\x0d\n\x0d\n  // If we're not piping anywhere\x2C then do nothing.\x0d\n  if (state.pipes.length === 0)\x0d\n    return this;\x0d\n\x0d\n  if (!dest) {\x0d\n    // remove all.\x0d\n    const dests = state.pipes;\x0d\n    state.pipes = [];\x0d\n    this.pause();\x0d\n\x0d\n    for (let i = 0; i < dests.length; i++)\x0d\n      dests[i].emit('unpipe'\x2C this\x2C { hasUnpiped: false });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Try to find the right one.\x0d\n  const index = ArrayPrototypeIndexOf(state.pipes\x2C dest);\x0d\n  if (index === -1)\x0d\n    return this;\x0d\n\x0d\n  state.pipes.splice(index\x2C 1);\x0d\n  if (state.pipes.length === 0)\x0d\n    this.pause();\x0d\n\x0d\n  dest.emit('unpipe'\x2C this\x2C unpipeInfo);\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// Set up data events if they are asked for\x0d\n// Ensure readable listeners eventually get something.\x0d\nReadable.prototype.on = function(ev\x2C fn) {\x0d\n  const res = Stream.prototype.on.call(this\x2C ev\x2C fn);\x0d\n  const state = this._readableState;\x0d\n\x0d\n  if (ev === 'data') {\x0d\n    state[kState] |= kDataListening;\x0d\n\x0d\n    // Update readableListening so that resume() may be a no-op\x0d\n    // a few lines down. This is needed to support once('readable').\x0d\n    state[kState] |= this.listenerCount('readable') > 0 ? kReadableListening : 0;\x0d\n\x0d\n    // Try start flowing on next tick if stream isn't explicitly paused.\x0d\n    if ((state[kState] & (kHasFlowing | kFlowing)) !== kHasFlowing) {\x0d\n      this.resume();\x0d\n    }\x0d\n  } else if (ev === 'readable') {\x0d\n    if ((state[kState] & (kEndEmitted | kReadableListening)) === 0) {\x0d\n      state[kState] |= kReadableListening | kNeedReadable | kHasFlowing;\x0d\n      state[kState] &= ~(kFlowing | kEmittedReadable);\x0d\n      debug('on readable');\x0d\n      if (state.length) {\x0d\n        emitReadable(this);\x0d\n      } else if ((state[kState] & kReading) === 0) {\x0d\n        process.nextTick(nReadingNextTick\x2C this);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return res;\x0d\n};\x0d\nReadable.prototype.addListener = Readable.prototype.on;\x0d\n\x0d\nReadable.prototype.removeListener = function(ev\x2C fn) {\x0d\n  const state = this._readableState;\x0d\n\x0d\n  const res = Stream.prototype.removeListener.call(this\x2C\x0d\n                                                   ev\x2C fn);\x0d\n\x0d\n  if (ev === 'readable') {\x0d\n    // We need to check if there is someone still listening to\x0d\n    // readable and reset the state. However this needs to happen\x0d\n    // after readable has been emitted but before I/O (nextTick) to\x0d\n    // support once('readable'\x2C fn) cycles. This means that calling\x0d\n    // resume within the same tick will have no\x0d\n    // effect.\x0d\n    process.nextTick(updateReadableListening\x2C this);\x0d\n  } else if (ev === 'data' && this.listenerCount('data') === 0) {\x0d\n    state[kState] &= ~kDataListening;\x0d\n  }\x0d\n\x0d\n  return res;\x0d\n};\x0d\nReadable.prototype.off = Readable.prototype.removeListener;\x0d\n\x0d\nReadable.prototype.removeAllListeners = function(ev) {\x0d\n  const res = Stream.prototype.removeAllListeners.apply(this\x2C\x0d\n                                                        arguments);\x0d\n\x0d\n  if (ev === 'readable' || ev === undefined) {\x0d\n    // We need to check if there is someone still listening to\x0d\n    // readable and reset the state. However this needs to happen\x0d\n    // after readable has been emitted but before I/O (nextTick) to\x0d\n    // support once('readable'\x2C fn) cycles. This means that calling\x0d\n    // resume within the same tick will have no\x0d\n    // effect.\x0d\n    process.nextTick(updateReadableListening\x2C this);\x0d\n  }\x0d\n\x0d\n  return res;\x0d\n};\x0d\n\x0d\nfunction updateReadableListening(self) {\x0d\n  const state = self._readableState;\x0d\n\x0d\n  if (self.listenerCount('readable') > 0) {\x0d\n    state[kState] |= kReadableListening;\x0d\n  } else {\x0d\n    state[kState] &= ~kReadableListening;\x0d\n  }\x0d\n\x0d\n  if ((state[kState] & (kHasPaused | kPaused | kResumeScheduled)) === (kHasPaused | kResumeScheduled)) {\x0d\n    // Flowing needs to be set to true now\x2C otherwise\x0d\n    // the upcoming resume will not flow.\x0d\n    state[kState] |= kHasFlowing | kFlowing;\x0d\n\x0d\n    // Crude way to check if we should resume.\x0d\n  } else if ((state[kState] & kDataListening) !== 0) {\x0d\n    self.resume();\x0d\n  } else if ((state[kState] & kReadableListening) === 0) {\x0d\n    state[kState] &= ~(kHasFlowing | kFlowing);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction nReadingNextTick(self) {\x0d\n  debug('readable nexttick read 0');\x0d\n  self.read(0);\x0d\n}\x0d\n\x0d\n// pause() and resume() are remnants of the legacy readable stream API\x0d\n// If the user uses them\x2C then switch into old mode.\x0d\nReadable.prototype.resume = function() {\x0d\n  const state = this._readableState;\x0d\n  if ((state[kState] & kFlowing) === 0) {\x0d\n    debug('resume');\x0d\n    // We flow only if there is no one listening\x0d\n    // for readable\x2C but we still have to call\x0d\n    // resume().\x0d\n    state[kState] |= kHasFlowing;\x0d\n    if ((state[kState] & kReadableListening) === 0) {\x0d\n      state[kState] |= kFlowing;\x0d\n    } else {\x0d\n      state[kState] &= ~kFlowing;\x0d\n    }\x0d\n    resume(this\x2C state);\x0d\n  }\x0d\n  state[kState] |= kHasPaused;\x0d\n  state[kState] &= ~kPaused;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction resume(stream\x2C state) {\x0d\n  if ((state[kState] & kResumeScheduled) === 0) {\x0d\n    state[kState] |= kResumeScheduled;\x0d\n    process.nextTick(resume_\x2C stream\x2C state);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction resume_(stream\x2C state) {\x0d\n  debug('resume'\x2C (state[kState] & kReading) !== 0);\x0d\n  if ((state[kState] & kReading) === 0) {\x0d\n    stream.read(0);\x0d\n  }\x0d\n\x0d\n  state[kState] &= ~kResumeScheduled;\x0d\n  stream.emit('resume');\x0d\n  flow(stream);\x0d\n  if ((state[kState] & (kFlowing | kReading)) === kFlowing)\x0d\n    stream.read(0);\x0d\n}\x0d\n\x0d\nReadable.prototype.pause = function() {\x0d\n  const state = this._readableState;\x0d\n  debug('call pause');\x0d\n  if ((state[kState] & (kHasFlowing | kFlowing)) !== kHasFlowing) {\x0d\n    debug('pause');\x0d\n    state[kState] |= kHasFlowing;\x0d\n    state[kState] &= ~kFlowing;\x0d\n    this.emit('pause');\x0d\n  }\x0d\n  state[kState] |= kHasPaused | kPaused;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction flow(stream) {\x0d\n  const state = stream._readableState;\x0d\n  debug('flow');\x0d\n  while ((state[kState] & kFlowing) !== 0 && stream.read() !== null);\x0d\n}\x0d\n\x0d\n// Wrap an old-style stream as the async data source.\x0d\n// This is *not* part of the readable stream interface.\x0d\n// It is an ugly unfortunate mess of history.\x0d\nReadable.prototype.wrap = function(stream) {\x0d\n  let paused = false;\x0d\n\x0d\n  // TODO (ronag): Should this.destroy(err) emit\x0d\n  // 'error' on the wrapped stream? Would require\x0d\n  // a static factory method\x2C e.g. Readable.wrap(stream).\x0d\n\x0d\n  stream.on('data'\x2C (chunk) => {\x0d\n    if (!this.push(chunk) && stream.pause) {\x0d\n      paused = true;\x0d\n      stream.pause();\x0d\n    }\x0d\n  });\x0d\n\x0d\n  stream.on('end'\x2C () => {\x0d\n    this.push(null);\x0d\n  });\x0d\n\x0d\n  stream.on('error'\x2C (err) => {\x0d\n    errorOrDestroy(this\x2C err);\x0d\n  });\x0d\n\x0d\n  stream.on('close'\x2C () => {\x0d\n    this.destroy();\x0d\n  });\x0d\n\x0d\n  stream.on('destroy'\x2C () => {\x0d\n    this.destroy();\x0d\n  });\x0d\n\x0d\n  this._read = () => {\x0d\n    if (paused && stream.resume) {\x0d\n      paused = false;\x0d\n      stream.resume();\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Proxy all the other methods. Important when wrapping filters and duplexes.\x0d\n  const streamKeys = ObjectKeys(stream);\x0d\n  for (let j = 1; j < streamKeys.length; j++) {\x0d\n    const i = streamKeys[j];\x0d\n    if (this[i] === undefined && typeof stream[i] === 'function') {\x0d\n      this[i] = stream[i].bind(stream);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nReadable.prototype[SymbolAsyncIterator] = function() {\x0d\n  return streamToAsyncIterator(this);\x0d\n};\x0d\n\x0d\nReadable.prototype.iterator = function(options) {\x0d\n  if (options !== undefined) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  return streamToAsyncIterator(this\x2C options);\x0d\n};\x0d\n\x0d\nfunction streamToAsyncIterator(stream\x2C options) {\x0d\n  if (typeof stream.read !== 'function') {\x0d\n    stream = Readable.wrap(stream\x2C { objectMode: true });\x0d\n  }\x0d\n\x0d\n  const iter = createAsyncIterator(stream\x2C options);\x0d\n  iter.stream = stream;\x0d\n  return iter;\x0d\n}\x0d\n\x0d\nasync function* createAsyncIterator(stream\x2C options) {\x0d\n  let callback = nop;\x0d\n\x0d\n  function next(resolve) {\x0d\n    if (this === stream) {\x0d\n      callback();\x0d\n      callback = nop;\x0d\n    } else {\x0d\n      callback = resolve;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  stream.on('readable'\x2C next);\x0d\n\x0d\n  let error;\x0d\n  const cleanup = eos(stream\x2C { writable: false }\x2C (err) => {\x0d\n    error = err ? aggregateTwoErrors(error\x2C err) : null;\x0d\n    callback();\x0d\n    callback = nop;\x0d\n  });\x0d\n\x0d\n  try {\x0d\n    while (true) {\x0d\n      const chunk = stream.destroyed ? null : stream.read();\x0d\n      if (chunk !== null) {\x0d\n        yield chunk;\x0d\n      } else if (error) {\x0d\n        throw error;\x0d\n      } else if (error === null) {\x0d\n        return;\x0d\n      } else {\x0d\n        await new Promise(next);\x0d\n      }\x0d\n    }\x0d\n  } catch (err) {\x0d\n    error = aggregateTwoErrors(error\x2C err);\x0d\n    throw error;\x0d\n  } finally {\x0d\n    if (\x0d\n      (error || options?.destroyOnReturn !== false) &&\x0d\n      (error === undefined || stream._readableState.autoDestroy)\x0d\n    ) {\x0d\n      destroyImpl.destroyer(stream\x2C null);\x0d\n    } else {\x0d\n      stream.off('readable'\x2C next);\x0d\n      cleanup();\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Making it explicit these properties are not enumerable\x0d\n// because otherwise some prototype manipulation in\x0d\n// userland will fail.\x0d\nObjectDefineProperties(Readable.prototype\x2C {\x0d\n  readable: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      const r = this._readableState;\x0d\n      // r.readable === false means that this is part of a Duplex stream\x0d\n      // where the readable side was disabled upon construction.\x0d\n      // Compat. The user might manually disable readable side through\x0d\n      // deprecated setter.\x0d\n      return !!r && r.readable !== false && !r.destroyed && !r.errorEmitted &&\x0d\n        !r.endEmitted;\x0d\n    }\x2C\x0d\n    set(val) {\x0d\n      // Backwards compat.\x0d\n      if (this._readableState) {\x0d\n        this._readableState.readable = !!val;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  readableDidRead: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState.dataEmitted;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  readableAborted: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return !!(\x0d\n        this._readableState.readable !== false &&\x0d\n        (this._readableState.destroyed || this._readableState.errored) &&\x0d\n        !this._readableState.endEmitted\x0d\n      );\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  readableHighWaterMark: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState.highWaterMark;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  readableBuffer: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState && this._readableState.buffer;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  readableFlowing: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState.flowing;\x0d\n    }\x2C\x0d\n    set: function(state) {\x0d\n      if (this._readableState) {\x0d\n        this._readableState.flowing = state;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  readableLength: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState.length;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  readableObjectMode: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.objectMode : false;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  readableEncoding: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.encoding : null;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  errored: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.errored : null;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  closed: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.closed : false;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  destroyed: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.destroyed : false;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      // We ignore the value if the stream\x0d\n      // has not been initialized yet.\x0d\n      if (!this._readableState) {\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      // Backward compatibility\x2C the user is explicitly\x0d\n      // managing destroyed.\x0d\n      this._readableState.destroyed = value;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  readableEnded: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.endEmitted : false;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n});\x0d\n\x0d\nObjectDefineProperties(ReadableState.prototype\x2C {\x0d\n  // Legacy getter for `pipesCount`.\x0d\n  pipesCount: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this.pipes.length;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  // Legacy property for `paused`.\x0d\n  paused: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return (this[kState] & kPaused) !== 0;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      this[kState] |= kHasPaused;\x0d\n      if (value) {\x0d\n        this[kState] |= kPaused;\x0d\n      } else {\x0d\n        this[kState] &= ~kPaused;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// Exposed for testing purposes only.\x0d\nReadable._fromList = fromList;\x0d\n\x0d\n// Pluck off n bytes from an array of buffers.\x0d\n// Length is the combined lengths of all the buffers in the list.\x0d\n// This function is designed to be inlinable\x2C so please take care when making\x0d\n// changes to the function body.\x0d\nfunction fromList(n\x2C state) {\x0d\n  // nothing buffered.\x0d\n  if (state.length === 0)\x0d\n    return null;\x0d\n\x0d\n  let idx = state.bufferIndex;\x0d\n  let ret;\x0d\n\x0d\n  const buf = state.buffer;\x0d\n  const len = buf.length;\x0d\n\x0d\n  if ((state[kState] & kObjectMode) !== 0) {\x0d\n    ret = buf[idx];\x0d\n    buf[idx++] = null;\x0d\n  } else if (!n || n >= state.length) {\x0d\n    // Read it all\x2C truncate the list.\x0d\n    if ((state[kState] & kDecoder) !== 0) {\x0d\n      ret = '';\x0d\n      while (idx < len) {\x0d\n        ret += buf[idx];\x0d\n        buf[idx++] = null;\x0d\n      }\x0d\n    } else if (len - idx === 0) {\x0d\n      ret = Buffer.alloc(0);\x0d\n    } else if (len - idx === 1) {\x0d\n      ret = buf[idx];\x0d\n      buf[idx++] = null;\x0d\n    } else {\x0d\n      ret = Buffer.allocUnsafe(state.length);\x0d\n\x0d\n      let i = 0;\x0d\n      while (idx < len) {\x0d\n        TypedArrayPrototypeSet(ret\x2C buf[idx]\x2C i);\x0d\n        i += buf[idx].length;\x0d\n        buf[idx++] = null;\x0d\n      }\x0d\n    }\x0d\n  } else if (n < buf[idx].length) {\x0d\n    // `slice` is the same for buffers and strings.\x0d\n    ret = buf[idx].slice(0\x2C n);\x0d\n    buf[idx] = buf[idx].slice(n);\x0d\n  } else if (n === buf[idx].length) {\x0d\n    // First chunk is a perfect match.\x0d\n    ret = buf[idx];\x0d\n    buf[idx++] = null;\x0d\n  } else if ((state[kState] & kDecoder) !== 0) {\x0d\n    ret = '';\x0d\n    while (idx < len) {\x0d\n      const str = buf[idx];\x0d\n      if (n > str.length) {\x0d\n        ret += str;\x0d\n        n -= str.length;\x0d\n        buf[idx++] = null;\x0d\n      } else {\x0d\n        if (n === buf.length) {\x0d\n          ret += str;\x0d\n          buf[idx++] = null;\x0d\n        } else {\x0d\n          ret += str.slice(0\x2C n);\x0d\n          buf[idx] = str.slice(n);\x0d\n        }\x0d\n        break;\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    ret = Buffer.allocUnsafe(n);\x0d\n\x0d\n    const retLen = n;\x0d\n    while (idx < len) {\x0d\n      const data = buf[idx];\x0d\n      if (n > data.length) {\x0d\n        TypedArrayPrototypeSet(ret\x2C data\x2C retLen - n);\x0d\n        n -= data.length;\x0d\n        buf[idx++] = null;\x0d\n      } else {\x0d\n        if (n === data.length) {\x0d\n          TypedArrayPrototypeSet(ret\x2C data\x2C retLen - n);\x0d\n          buf[idx++] = null;\x0d\n        } else {\x0d\n          TypedArrayPrototypeSet(ret\x2C new FastBuffer(data.buffer\x2C data.byteOffset\x2C n)\x2C retLen - n);\x0d\n          buf[idx] = new FastBuffer(data.buffer\x2C data.byteOffset + n\x2C data.length - n);\x0d\n        }\x0d\n        break;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (idx === len) {\x0d\n    state.buffer.length = 0;\x0d\n    state.bufferIndex = 0;\x0d\n  } else if (idx > 1024) {\x0d\n    state.buffer.splice(0\x2C idx);\x0d\n    state.bufferIndex = 0;\x0d\n  } else {\x0d\n    state.bufferIndex = idx;\x0d\n  }\x0d\n\x0d\n  return ret;\x0d\n}\x0d\n\x0d\nfunction endReadable(stream) {\x0d\n  const state = stream._readableState;\x0d\n\x0d\n  debug('endReadable');\x0d\n  if ((state[kState] & kEndEmitted) === 0) {\x0d\n    state[kState] |= kEnded;\x0d\n    process.nextTick(endReadableNT\x2C state\x2C stream);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction endReadableNT(state\x2C stream) {\x0d\n  debug('endReadableNT');\x0d\n\x0d\n  // Check that we didn't get one last unshift.\x0d\n  if ((state[kState] & (kErrored | kCloseEmitted | kEndEmitted)) === 0 && state.length === 0) {\x0d\n    state[kState] |= kEndEmitted;\x0d\n    stream.emit('end');\x0d\n\x0d\n    if (stream.writable && stream.allowHalfOpen === false) {\x0d\n      process.nextTick(endWritableNT\x2C stream);\x0d\n    } else if (state.autoDestroy) {\x0d\n      // In case of duplex streams we need a way to detect\x0d\n      // if the writable side is ready for autoDestroy as well.\x0d\n      const wState = stream._writableState;\x0d\n      const autoDestroy = !wState || (\x0d\n        wState.autoDestroy &&\x0d\n        // We don't expect the writable to ever 'finish'\x0d\n        // if writable is explicitly set to false.\x0d\n        (wState.finished || wState.writable === false)\x0d\n      );\x0d\n\x0d\n      if (autoDestroy) {\x0d\n        stream.destroy();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction endWritableNT(stream) {\x0d\n  const writable = stream.writable && !stream.writableEnded &&\x0d\n    !stream.destroyed;\x0d\n  if (writable) {\x0d\n    stream.end();\x0d\n  }\x0d\n}\x0d\n\x0d\nReadable.from = function(iterable\x2C opts) {\x0d\n  return from(Readable\x2C iterable\x2C opts);\x0d\n};\x0d\n\x0d\nlet webStreamsAdapters;\x0d\n\x0d\n// Lazy to avoid circular references\x0d\nfunction lazyWebStreams() {\x0d\n  if (webStreamsAdapters === undefined)\x0d\n    webStreamsAdapters = require('internal/webstreams/adapters');\x0d\n  return webStreamsAdapters;\x0d\n}\x0d\n\x0d\nReadable.fromWeb = function(readableStream\x2C options) {\x0d\n  return lazyWebStreams().newStreamReadableFromReadableStream(\x0d\n    readableStream\x2C\x0d\n    options);\x0d\n};\x0d\n\x0d\nReadable.toWeb = function(streamReadable\x2C options) {\x0d\n  return lazyWebStreams().newReadableStreamFromStreamReadable(\x0d\n    streamReadable\x2C\x0d\n    options);\x0d\n};\x0d\n\x0d\nReadable.wrap = function(src\x2C options) {\x0d\n  return new Readable({\x0d\n    objectMode: src.readableObjectMode ?? src.objectMode ?? true\x2C\x0d\n    ...options\x2C\x0d\n    destroy(err\x2C callback) {\x0d\n      destroyImpl.destroyer(src\x2C err);\x0d\n      callback(err);\x0d\n    }\x2C\x0d\n  }).wrap(src);\x0d\n};\x0d\n
code-source-info,0x9b20b6adbc,97,0,53051,C0O0C4O53051,,
code-creation,JS,10,145008,0x9b20b6e37c,2570, node:internal/streams/readable:1:1,0x9b20b6ad30,~
code-source-info,0x9b20b6e37c
code-creation,Eval,10,145620,0x9b20b701cc,5, node:internal/streams/add-abort-signal:1:1,0x9b20b6ffc8,~
script-source,98,node:internal/streams/add-abort-signal,'use strict';\x0d\n\x0d\nconst {\x0d\n  SymbolDispose\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  codes\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  isNodeStream\x2C\x0d\n  isWebStream\x2C\x0d\n  kControllerErrorFunction\x2C\x0d\n} = require('internal/streams/utils');\x0d\n\x0d\nconst eos = require('internal/streams/end-of-stream');\x0d\nconst { ERR_INVALID_ARG_TYPE } = codes;\x0d\nlet addAbortListener;\x0d\n\x0d\n// This method is inlined here for readable-stream\x0d\n// It also does not allow for signal to not exist on the stream\x0d\n// https://github.com/nodejs/node/pull/36061#discussion_r533718029\x0d\nconst validateAbortSignal = (signal\x2C name) => {\x0d\n  if (typeof signal !== 'object' ||\x0d\n       !('aborted' in signal)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\x0d\n  }\x0d\n};\x0d\n\x0d\nmodule.exports.addAbortSignal = function addAbortSignal(signal\x2C stream) {\x0d\n  validateAbortSignal(signal\x2C 'signal');\x0d\n  if (!isNodeStream(stream) && !isWebStream(stream)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('stream'\x2C ['ReadableStream'\x2C 'WritableStream'\x2C 'Stream']\x2C stream);\x0d\n  }\x0d\n  return module.exports.addAbortSignalNoValidate(signal\x2C stream);\x0d\n};\x0d\n\x0d\nmodule.exports.addAbortSignalNoValidate = function(signal\x2C stream) {\x0d\n  if (typeof signal !== 'object' || !('aborted' in signal)) {\x0d\n    return stream;\x0d\n  }\x0d\n  const onAbort = isNodeStream(stream) ?\x0d\n    () => {\x0d\n      stream.destroy(new AbortError(undefined\x2C { cause: signal.reason }));\x0d\n    } :\x0d\n    () => {\x0d\n      stream[kControllerErrorFunction](new AbortError(undefined\x2C { cause: signal.reason }));\x0d\n    };\x0d\n  if (signal.aborted) {\x0d\n    onAbort();\x0d\n  } else {\x0d\n    addAbortListener ??= require('events').addAbortListener;\x0d\n    const disposable = addAbortListener(signal\x2C onAbort);\x0d\n    eos(stream\x2C disposable[SymbolDispose]);\x0d\n  }\x0d\n  return stream;\x0d\n};\x0d\n
code-source-info,0x9b20b701cc,98,0,1763,C0O0C4O1763,,
code-creation,JS,10,145726,0x9b20b70454,158, node:internal/streams/add-abort-signal:1:1,0x9b20b70140,~
code-source-info,0x9b20b70454,98,0,1763,C0O0C40O28C46O102C52O102C57O75C63O90C68O208C74O208C79O144C85O161C91O177C97O258C103O258C107O258C109O310C115O347C116O347C118O581C122O581C124O750C127O757C136O780C140O1104C143O1111C152O1144C157O1762,,
code-creation,Eval,10,145883,0x9b20b70c9c,5, node:internal/streams/state:1:1,0x9b20b70ac8,~
script-source,99,node:internal/streams/state,'use strict';\x0d\n\x0d\nconst {\x0d\n  MathFloor\x2C\x0d\n  NumberIsInteger\x2C\x0d\n} = primordials;\x0d\nconst { validateInteger } = require('internal/validators');\x0d\n\x0d\nconst { ERR_INVALID_ARG_VALUE } = require('internal/errors').codes;\x0d\n\x0d\nlet defaultHighWaterMarkBytes = 16 * 1024;\x0d\nlet defaultHighWaterMarkObjectMode = 16;\x0d\n\x0d\nfunction highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey) {\x0d\n  return options.highWaterMark != null ? options.highWaterMark :\x0d\n    isDuplex ? options[duplexKey] : null;\x0d\n}\x0d\n\x0d\nfunction getDefaultHighWaterMark(objectMode) {\x0d\n  return objectMode ? defaultHighWaterMarkObjectMode : defaultHighWaterMarkBytes;\x0d\n}\x0d\n\x0d\nfunction setDefaultHighWaterMark(objectMode\x2C value) {\x0d\n  validateInteger(value\x2C 'value'\x2C 0);\x0d\n  if (objectMode) {\x0d\n    defaultHighWaterMarkObjectMode = value;\x0d\n  } else {\x0d\n    defaultHighWaterMarkBytes = value;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getHighWaterMark(state\x2C options\x2C duplexKey\x2C isDuplex) {\x0d\n  const hwm = highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey);\x0d\n  if (hwm != null) {\x0d\n    if (!NumberIsInteger(hwm) || hwm < 0) {\x0d\n      const name = isDuplex ? `options.${duplexKey}` : 'options.highWaterMark';\x0d\n      throw new ERR_INVALID_ARG_VALUE(name\x2C hwm);\x0d\n    }\x0d\n    return MathFloor(hwm);\x0d\n  }\x0d\n\x0d\n  // Default value\x0d\n  return getDefaultHighWaterMark(state.objectMode);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  getHighWaterMark\x2C\x0d\n  getDefaultHighWaterMark\x2C\x0d\n  setDefaultHighWaterMark\x2C\x0d\n};\x0d\n
code-source-info,0x9b20b70c9c,99,0,1382,C0O0C4O1382,,
code-creation,JS,10,145971,0x9b20b70f44,131, node:internal/streams/state:1:1,0x9b20b70c10,~
code-source-info,0x9b20b70f44,99,0,1382,C0O0C45O28C51O42C57O106C60O106C65O86C71O175C74O175C79O201C84O149C90O244C94O244C96O293C98O293C100O1281C107O1303C113O1324C119O1352C125O1296C130O1381,,
code-creation,JS,10,146126,0x9b20b7132c,5,get node:buffer:281:6,0x1d9b72528f8,~
script-source,24,node:buffer,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  MathFloor\x2C\x0d\n  MathMin\x2C\x0d\n  MathTrunc\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  SymbolSpecies\x2C\x0d\n  SymbolToPrimitive\x2C\x0d\n  TypedArrayPrototypeGetBuffer\x2C\x0d\n  TypedArrayPrototypeGetByteLength\x2C\x0d\n  TypedArrayPrototypeGetByteOffset\x2C\x0d\n  TypedArrayPrototypeFill\x2C\x0d\n  TypedArrayPrototypeGetLength\x2C\x0d\n  TypedArrayPrototypeSet\x2C\x0d\n  TypedArrayPrototypeSlice\x2C\x0d\n  Uint8Array\x2C\x0d\n  Uint8ArrayPrototype\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  byteLengthUtf8\x2C\x0d\n  compare: _compare\x2C\x0d\n  compareOffset\x2C\x0d\n  createFromString\x2C\x0d\n  fill: bindingFill\x2C\x0d\n  isAscii: bindingIsAscii\x2C\x0d\n  isUtf8: bindingIsUtf8\x2C\x0d\n  indexOfBuffer\x2C\x0d\n  indexOfNumber\x2C\x0d\n  indexOfString\x2C\x0d\n  swap16: _swap16\x2C\x0d\n  swap32: _swap32\x2C\x0d\n  swap64: _swap64\x2C\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x2C\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  constants: {\x0d\n    ALL_PROPERTIES\x2C\x0d\n    ONLY_ENUMERABLE\x2C\x0d\n  }\x2C\x0d\n  getOwnNonIndexProperties\x2C\x0d\n} = internalBinding('util');\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  kIsEncodingSymbol\x2C\x0d\n  defineLazyProperties\x2C\x0d\n  encodingsMap\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x2C\x0d\n  isTypedArray\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  inspect: utilInspect\x2C\x0d\n} = require('internal/util/inspect');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_BUFFER_SIZE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_UNKNOWN_ENCODING\x2C\x0d\n  }\x2C\x0d\n  genericNodeError\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateInteger\x2C\x0d\n  validateNumber\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n// Provide validateInteger() but with kMaxLength as the default maximum value.\x0d\nconst validateOffset = (value\x2C name\x2C min = 0\x2C max = kMaxLength) =>\x0d\n  validateInteger(value\x2C name\x2C min\x2C max);\x0d\n\x0d\nconst {\x0d\n  FastBuffer\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  createUnsafeBuffer\x2C\x0d\n} = require('internal/buffer');\x0d\n\x0d\nFastBuffer.prototype.constructor = Buffer;\x0d\nBuffer.prototype = FastBuffer.prototype;\x0d\naddBufferPrototypeMethods(Buffer.prototype);\x0d\n\x0d\nconst constants = ObjectDefineProperties({}\x2C {\x0d\n  MAX_LENGTH: {\x0d\n    __proto__: null\x2C\x0d\n    value: kMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n  }\x2C\x0d\n  MAX_STRING_LENGTH: {\x0d\n    __proto__: null\x2C\x0d\n    value: kStringMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nBuffer.poolSize = 8 * 1024;\x0d\nlet poolSize\x2C poolOffset\x2C allocPool;\x0d\n\x0d\nfunction createPool() {\x0d\n  poolSize = Buffer.poolSize;\x0d\n  allocPool = createUnsafeBuffer(poolSize).buffer;\x0d\n  markAsUntransferable(allocPool);\x0d\n  poolOffset = 0;\x0d\n}\x0d\ncreatePool();\x0d\n\x0d\nfunction alignPool() {\x0d\n  // Ensure aligned slices\x0d\n  if (poolOffset & 0x7) {\x0d\n    poolOffset |= 0x7;\x0d\n    poolOffset++;\x0d\n  }\x0d\n}\x0d\n\x0d\nlet bufferWarningAlreadyEmitted = false;\x0d\nlet nodeModulesCheckCounter = 0;\x0d\nconst bufferWarning = 'Buffer() is deprecated due to security and usability ' +\x0d\n                      'issues. Please use the Buffer.alloc()\x2C ' +\x0d\n                      'Buffer.allocUnsafe()\x2C or Buffer.from() methods instead.';\x0d\n\x0d\nfunction showFlaggedDeprecation() {\x0d\n  if (bufferWarningAlreadyEmitted ||\x0d\n      ++nodeModulesCheckCounter > 10000 ||\x0d\n      (!require('internal/options').getOptionValue('--pending-deprecation') &&\x0d\n       isInsideNodeModules())) {\x0d\n    // We don't emit a warning\x2C because we either:\x0d\n    // - Already did so\x2C or\x0d\n    // - Already checked too many times whether a call is coming\x0d\n    //   from node_modules and want to stop slowing down things\x2C or\x0d\n    // - We aren't running with `--pending-deprecation` enabled\x2C\x0d\n    //   and the code is inside `node_modules`.\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  process.emitWarning(bufferWarning\x2C 'DeprecationWarning'\x2C 'DEP0005');\x0d\n  bufferWarningAlreadyEmitted = true;\x0d\n}\x0d\n\x0d\nfunction toInteger(n\x2C defaultVal) {\x0d\n  n = +n;\x0d\n  if (!NumberIsNaN(n) &&\x0d\n      n >= NumberMIN_SAFE_INTEGER &&\x0d\n      n <= NumberMAX_SAFE_INTEGER) {\x0d\n    return ((n % 1) === 0 ? n : MathFloor(n));\x0d\n  }\x0d\n  return defaultVal;\x0d\n}\x0d\n\x0d\nfunction _copy(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (!isUint8Array(source))\x0d\n    throw new ERR_INVALID_ARG_TYPE('source'\x2C ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n  if (!isUint8Array(target))\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n\x0d\n  if (targetStart === undefined) {\x0d\n    targetStart = 0;\x0d\n  } else {\x0d\n    targetStart = toInteger(targetStart\x2C 0);\x0d\n    if (targetStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('targetStart'\x2C '>= 0'\x2C targetStart);\x0d\n  }\x0d\n\x0d\n  if (sourceStart === undefined) {\x0d\n    sourceStart = 0;\x0d\n  } else {\x0d\n    sourceStart = toInteger(sourceStart\x2C 0);\x0d\n    if (sourceStart < 0 || sourceStart > source.length)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceStart'\x2C `>= 0 && <= ${source.length}`\x2C sourceStart);\x0d\n  }\x0d\n\x0d\n  if (sourceEnd === undefined) {\x0d\n    sourceEnd = source.length;\x0d\n  } else {\x0d\n    sourceEnd = toInteger(sourceEnd\x2C 0);\x0d\n    if (sourceEnd < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceEnd'\x2C '>= 0'\x2C sourceEnd);\x0d\n  }\x0d\n\x0d\n  if (targetStart >= target.length || sourceStart >= sourceEnd)\x0d\n    return 0;\x0d\n\x0d\n  return _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n}\x0d\n\x0d\nfunction _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (sourceEnd - sourceStart > target.length - targetStart)\x0d\n    sourceEnd = sourceStart + target.length - targetStart;\x0d\n\x0d\n  let nb = sourceEnd - sourceStart;\x0d\n  const sourceLen = source.length - sourceStart;\x0d\n  if (nb > sourceLen)\x0d\n    nb = sourceLen;\x0d\n\x0d\n  if (sourceStart !== 0 || sourceEnd < source.length)\x0d\n    source = new Uint8Array(source.buffer\x2C source.byteOffset + sourceStart\x2C nb);\x0d\n\x0d\n  TypedArrayPrototypeSet(target\x2C source\x2C targetStart);\x0d\n\x0d\n  return nb;\x0d\n}\x0d\n\x0d\n/**\x0d\n * The Buffer() constructor is deprecated in documentation and should not be\x0d\n * used moving forward. Rather\x2C developers should use one of the three new\x0d\n * factory APIs: Buffer.from()\x2C Buffer.allocUnsafe() or Buffer.alloc() based on\x0d\n * their specific needs. There is no runtime deprecation because of the extent\x0d\n * to which the Buffer constructor is used in the ecosystem currently -- a\x0d\n * runtime deprecation would introduce too much breakage at this time. It's not\x0d\n * likely that the Buffer constructors would ever actually be removed.\x0d\n * Deprecation Code: DEP0005\x0d\n */\x0d\nfunction Buffer(arg\x2C encodingOrOffset\x2C length) {\x0d\n  showFlaggedDeprecation();\x0d\n  // Common case.\x0d\n  if (typeof arg === 'number') {\x0d\n    if (typeof encodingOrOffset === 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('string'\x2C 'string'\x2C arg);\x0d\n    }\x0d\n    return Buffer.alloc(arg);\x0d\n  }\x0d\n  return Buffer.from(arg\x2C encodingOrOffset\x2C length);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Buffer\x2C SymbolSpecies\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x2C\x0d\n  get() { return FastBuffer; }\x2C\x0d\n});\x0d\n\x0d\n/**\x0d\n * Functionally equivalent to Buffer(arg\x2C encoding) but throws a TypeError\x0d\n * if value is a number.\x0d\n * Buffer.from(str[\x2C encoding])\x0d\n * Buffer.from(array)\x0d\n * Buffer.from(buffer)\x0d\n * Buffer.from(arrayBuffer[\x2C byteOffset[\x2C length]])\x0d\n */\x0d\nBuffer.from = function from(value\x2C encodingOrOffset\x2C length) {\x0d\n  if (typeof value === 'string')\x0d\n    return fromString(value\x2C encodingOrOffset);\x0d\n\x0d\n  if (typeof value === 'object' && value !== null) {\x0d\n    if (isAnyArrayBuffer(value))\x0d\n      return fromArrayBuffer(value\x2C encodingOrOffset\x2C length);\x0d\n\x0d\n    const valueOf = value.valueOf && value.valueOf();\x0d\n    if (valueOf != null &&\x0d\n        valueOf !== value &&\x0d\n        (typeof valueOf === 'string' || typeof valueOf === 'object')) {\x0d\n      return from(valueOf\x2C encodingOrOffset\x2C length);\x0d\n    }\x0d\n\x0d\n    const b = fromObject(value);\x0d\n    if (b)\x0d\n      return b;\x0d\n\x0d\n    if (typeof value[SymbolToPrimitive] === 'function') {\x0d\n      const primitive = value[SymbolToPrimitive]('string');\x0d\n      if (typeof primitive === 'string') {\x0d\n        return fromString(primitive\x2C encodingOrOffset);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'first argument'\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'ArrayBuffer'\x2C 'Array'\x2C 'Array-like Object']\x2C\x0d\n    value\x2C\x0d\n  );\x0d\n};\x0d\n\x0d\n/**\x0d\n * Creates the Buffer as a copy of the underlying ArrayBuffer of the view\x0d\n * rather than the contents of the view.\x0d\n * @param {TypedArray} view\x0d\n * @param {number} [offset]\x0d\n * @param {number} [length]\x0d\n * @returns {Buffer}\x0d\n */\x0d\nBuffer.copyBytesFrom = function copyBytesFrom(view\x2C offset\x2C length) {\x0d\n  if (!isTypedArray(view)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('view'\x2C [ 'TypedArray' ]\x2C view);\x0d\n  }\x0d\n\x0d\n  const viewLength = TypedArrayPrototypeGetLength(view);\x0d\n  if (viewLength === 0) {\x0d\n    return Buffer.alloc(0);\x0d\n  }\x0d\n\x0d\n  if (offset !== undefined || length !== undefined) {\x0d\n    if (offset !== undefined) {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n      if (offset >= viewLength) return Buffer.alloc(0);\x0d\n    } else {\x0d\n      offset = 0;\x0d\n    }\x0d\n    let end;\x0d\n    if (length !== undefined) {\x0d\n      validateInteger(length\x2C 'length'\x2C 0);\x0d\n      end = offset + length;\x0d\n    } else {\x0d\n      end = viewLength;\x0d\n    }\x0d\n\x0d\n    view = TypedArrayPrototypeSlice(view\x2C offset\x2C end);\x0d\n  }\x0d\n\x0d\n  return fromArrayLike(new Uint8Array(\x0d\n    TypedArrayPrototypeGetBuffer(view)\x2C\x0d\n    TypedArrayPrototypeGetByteOffset(view)\x2C\x0d\n    TypedArrayPrototypeGetByteLength(view)));\x0d\n};\x0d\n\x0d\n// Identical to the built-in %TypedArray%.of()\x2C but avoids using the deprecated\x0d\n// Buffer() constructor. Must use arrow function syntax to avoid automatically\x0d\n// adding a `prototype` property and making the function a constructor.\x0d\n//\x0d\n// Refs: https://tc39.github.io/ecma262/#sec-%typedarray%.of\x0d\n// Refs: https://esdiscuss.org/topic/isconstructor#content-11\x0d\nconst of = (...items) => {\x0d\n  const newObj = createUnsafeBuffer(items.length);\x0d\n  for (let k = 0; k < items.length; k++)\x0d\n    newObj[k] = items[k];\x0d\n  return newObj;\x0d\n};\x0d\nBuffer.of = of;\x0d\n\x0d\nObjectSetPrototypeOf(Buffer\x2C Uint8Array);\x0d\n\x0d\n/**\x0d\n * Creates a new filled Buffer instance.\x0d\n * alloc(size[\x2C fill[\x2C encoding]])\x0d\n */\x0d\nBuffer.alloc = function alloc(size\x2C fill\x2C encoding) {\x0d\n  validateNumber(size\x2C 'size'\x2C 0\x2C kMaxLength);\x0d\n  if (fill !== undefined && fill !== 0 && size > 0) {\x0d\n    const buf = createUnsafeBuffer(size);\x0d\n    return _fill(buf\x2C fill\x2C 0\x2C buf.length\x2C encoding);\x0d\n  }\x0d\n  return new FastBuffer(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to Buffer(num)\x2C by default creates a non-zero-filled Buffer\x0d\n * instance. If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafe = function allocUnsafe(size) {\x0d\n  validateNumber(size\x2C 'size'\x2C 0\x2C kMaxLength);\x0d\n  return allocate(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to SlowBuffer(num)\x2C by default creates a non-zero-filled\x0d\n * Buffer instance that is not allocated off the pre-initialized pool.\x0d\n * If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafeSlow = function allocUnsafeSlow(size) {\x0d\n  validateNumber(size\x2C 'size'\x2C 0\x2C kMaxLength);\x0d\n  return createUnsafeBuffer(size);\x0d\n};\x0d\n\x0d\n// If --zero-fill-buffers command line argument is set\x2C a zero-filled\x0d\n// buffer is returned.\x0d\nfunction SlowBuffer(size) {\x0d\n  validateNumber(size\x2C 'size'\x2C 0\x2C kMaxLength);\x0d\n  return createUnsafeBuffer(size);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(SlowBuffer.prototype\x2C Uint8ArrayPrototype);\x0d\nObjectSetPrototypeOf(SlowBuffer\x2C Uint8Array);\x0d\n\x0d\nfunction allocate(size) {\x0d\n  if (size <= 0) {\x0d\n    return new FastBuffer();\x0d\n  }\x0d\n  if (size < (Buffer.poolSize >>> 1)) {\x0d\n    if (size > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C size);\x0d\n    poolOffset += size;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return createUnsafeBuffer(size);\x0d\n}\x0d\n\x0d\nfunction fromStringFast(string\x2C ops) {\x0d\n  const length = ops.byteLength(string);\x0d\n\x0d\n  if (length >= (Buffer.poolSize >>> 1))\x0d\n    return createFromString(string\x2C ops.encodingVal);\x0d\n\x0d\n  if (length > (poolSize - poolOffset))\x0d\n    createPool();\x0d\n  let b = new FastBuffer(allocPool\x2C poolOffset\x2C length);\x0d\n  const actual = ops.write(b\x2C string\x2C 0\x2C length);\x0d\n  if (actual !== length) {\x0d\n    // byteLength() may overestimate. That's a rare case\x2C though.\x0d\n    b = new FastBuffer(allocPool\x2C poolOffset\x2C actual);\x0d\n  }\x0d\n  poolOffset += actual;\x0d\n  alignPool();\x0d\n  return b;\x0d\n}\x0d\n\x0d\nfunction fromString(string\x2C encoding) {\x0d\n  let ops;\x0d\n  if (typeof encoding !== 'string' || encoding.length === 0) {\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n    ops = encodingOps.utf8;\x0d\n  } else {\x0d\n    ops = getEncodingOps(encoding);\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n  }\x0d\n  return fromStringFast(string\x2C ops);\x0d\n}\x0d\n\x0d\nfunction fromArrayBuffer(obj\x2C byteOffset\x2C length) {\x0d\n  // Convert byteOffset to integer\x0d\n  if (byteOffset === undefined) {\x0d\n    byteOffset = 0;\x0d\n  } else {\x0d\n    byteOffset = +byteOffset;\x0d\n    if (NumberIsNaN(byteOffset))\x0d\n      byteOffset = 0;\x0d\n  }\x0d\n\x0d\n  const maxLength = obj.byteLength - byteOffset;\x0d\n\x0d\n  if (maxLength < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = maxLength;\x0d\n  } else {\x0d\n    // Convert length to non-negative integer.\x0d\n    length = +length;\x0d\n    if (length > 0) {\x0d\n      if (length > maxLength)\x0d\n        throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n    } else {\x0d\n      length = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return new FastBuffer(obj\x2C byteOffset\x2C length);\x0d\n}\x0d\n\x0d\nfunction fromArrayLike(obj) {\x0d\n  if (obj.length <= 0)\x0d\n    return new FastBuffer();\x0d\n  if (obj.length < (Buffer.poolSize >>> 1)) {\x0d\n    if (obj.length > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C obj.length);\x0d\n    TypedArrayPrototypeSet(b\x2C obj\x2C 0);\x0d\n    poolOffset += obj.length;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return new FastBuffer(obj);\x0d\n}\x0d\n\x0d\nfunction fromObject(obj) {\x0d\n  if (obj.length !== undefined || isAnyArrayBuffer(obj.buffer)) {\x0d\n    if (typeof obj.length !== 'number') {\x0d\n      return new FastBuffer();\x0d\n    }\x0d\n    return fromArrayLike(obj);\x0d\n  }\x0d\n\x0d\n  if (obj.type === 'Buffer' && ArrayIsArray(obj.data)) {\x0d\n    return fromArrayLike(obj.data);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Static methods\x0d\n\x0d\nBuffer.isBuffer = function isBuffer(b) {\x0d\n  return b instanceof Buffer;\x0d\n};\x0d\n\x0d\nBuffer.compare = function compare(buf1\x2C buf2) {\x0d\n  if (!isUint8Array(buf1)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf1'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf1);\x0d\n  }\x0d\n\x0d\n  if (!isUint8Array(buf2)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf2'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf2);\x0d\n  }\x0d\n\x0d\n  if (buf1 === buf2) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  return _compare(buf1\x2C buf2);\x0d\n};\x0d\n\x0d\nBuffer.isEncoding = function isEncoding(encoding) {\x0d\n  return typeof encoding === 'string' && encoding.length !== 0 &&\x0d\n         normalizeEncoding(encoding) !== undefined;\x0d\n};\x0d\nBuffer[kIsEncodingSymbol] = Buffer.isEncoding;\x0d\n\x0d\nBuffer.concat = function concat(list\x2C length) {\x0d\n  validateArray(list\x2C 'list');\x0d\n\x0d\n  if (list.length === 0)\x0d\n    return new FastBuffer();\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = 0;\x0d\n    for (let i = 0; i < list.length; i++) {\x0d\n      if (list[i].length) {\x0d\n        length += list[i].length;\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    validateOffset(length\x2C 'length');\x0d\n  }\x0d\n\x0d\n  const buffer = Buffer.allocUnsafe(length);\x0d\n  let pos = 0;\x0d\n  for (let i = 0; i < list.length; i++) {\x0d\n    const buf = list[i];\x0d\n    if (!isUint8Array(buf)) {\x0d\n      // TODO(BridgeAR): This should not be of type ERR_INVALID_ARG_TYPE.\x0d\n      // Instead\x2C find the proper error code for this.\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        `list[${i}]`\x2C ['Buffer'\x2C 'Uint8Array']\x2C list[i]);\x0d\n    }\x0d\n    pos += _copyActual(buf\x2C buffer\x2C pos\x2C 0\x2C buf.length);\x0d\n  }\x0d\n\x0d\n  // Note: `length` is always equal to `buffer.length` at this point\x0d\n  if (pos < length) {\x0d\n    // Zero-fill the remaining bytes if the specified `length` was more than\x0d\n    // the actual total length\x2C i.e. if we have some remaining allocated bytes\x0d\n    // there were not initialized.\x0d\n    TypedArrayPrototypeFill(buffer\x2C 0\x2C pos\x2C length);\x0d\n  }\x0d\n\x0d\n  return buffer;\x0d\n};\x0d\n\x0d\nfunction base64ByteLength(str\x2C bytes) {\x0d\n  // Handle padding\x0d\n  if (StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n  if (bytes > 1 && StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n\x0d\n  // Base64 ratio: 3/4\x0d\n  return (bytes * 3) >>> 2;\x0d\n}\x0d\n\x0d\nconst encodingOps = {\x0d\n  utf8: {\x0d\n    encoding: 'utf8'\x2C\x0d\n    encodingVal: encodingsMap.utf8\x2C\x0d\n    byteLength: byteLengthUtf8\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.utf8Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.utf8Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf8\x2C dir)\x2C\x0d\n  }\x2C\x0d\n  ucs2: {\x0d\n    encoding: 'ucs2'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x2C\x0d\n  }\x2C\x0d\n  utf16le: {\x0d\n    encoding: 'utf16le'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x2C\x0d\n  }\x2C\x0d\n  latin1: {\x0d\n    encoding: 'latin1'\x2C\x0d\n    encodingVal: encodingsMap.latin1\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.latin1Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.latin1Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.latin1\x2C dir)\x2C\x0d\n  }\x2C\x0d\n  ascii: {\x0d\n    encoding: 'ascii'\x2C\x0d\n    encodingVal: encodingsMap.ascii\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.asciiWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.asciiSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.ascii)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.ascii\x2C\x0d\n                    dir)\x2C\x0d\n  }\x2C\x0d\n  base64: {\x0d\n    encoding: 'base64'\x2C\x0d\n    encodingVal: encodingsMap.base64\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.base64Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64\x2C\x0d\n                    dir)\x2C\x0d\n  }\x2C\x0d\n  base64url: {\x0d\n    encoding: 'base64url'\x2C\x0d\n    encodingVal: encodingsMap.base64url\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) =>\x0d\n      buf.base64urlWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64urlSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64url)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64url\x2C\x0d\n                    dir)\x2C\x0d\n  }\x2C\x0d\n  hex: {\x0d\n    encoding: 'hex'\x2C\x0d\n    encodingVal: encodingsMap.hex\x2C\x0d\n    byteLength: (string) => string.length >>> 1\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.hexWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.hexSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.hex)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.hex\x2C\x0d\n                    dir)\x2C\x0d\n  }\x2C\x0d\n};\x0d\nfunction getEncodingOps(encoding) {\x0d\n  encoding += '';\x0d\n  switch (encoding.length) {\x0d\n    case 4:\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 5:\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 7:\x0d\n      if (encoding === 'utf16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 8:\x0d\n      if (encoding === 'utf-16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf-16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 6:\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      break;\x0d\n    case 3:\x0d\n      if (encoding === 'hex' || StringPrototypeToLowerCase(encoding) === 'hex')\x0d\n        return encodingOps.hex;\x0d\n      break;\x0d\n    case 9:\x0d\n      if (encoding === 'base64url' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'base64url')\x0d\n        return encodingOps.base64url;\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction byteLength(string\x2C encoding) {\x0d\n  if (typeof string !== 'string') {\x0d\n    if (isArrayBufferView(string) || isAnyArrayBuffer(string)) {\x0d\n      return string.byteLength;\x0d\n    }\x0d\n\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'string'\x2C ['string'\x2C 'Buffer'\x2C 'ArrayBuffer']\x2C string\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  const len = string.length;\x0d\n  if (len === 0)\x0d\n    return 0;\x0d\n\x0d\n  if (encoding) {\x0d\n    const ops = getEncodingOps(encoding);\x0d\n    if (ops) {\x0d\n      return ops.byteLength(string);\x0d\n    }\x0d\n  }\x0d\n  return byteLengthUtf8(string);\x0d\n}\x0d\n\x0d\nBuffer.byteLength = byteLength;\x0d\n\x0d\n// For backwards compatibility.\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'parent'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.buffer;\x0d\n  }\x2C\x0d\n});\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'offset'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.byteOffset;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nBuffer.prototype.copy =\x0d\n  function copy(target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n    return _copy(this\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n  };\x0d\n\x0d\n// No need to verify that "buf.length <= MAX_UINT32" since it's a read-only\x0d\n// property of a typed array.\x0d\n// This behaves neither like String nor Uint8Array in that we set start/end\x0d\n// to their upper/lower bounds if the value passed is out of range.\x0d\nBuffer.prototype.toString = function toString(encoding\x2C start\x2C end) {\x0d\n  if (arguments.length === 0) {\x0d\n    return this.utf8Slice(0\x2C this.length);\x0d\n  }\x0d\n\x0d\n  const len = this.length;\x0d\n\x0d\n  if (start <= 0)\x0d\n    start = 0;\x0d\n  else if (start >= len)\x0d\n    return '';\x0d\n  else\x0d\n    start |= 0;\x0d\n\x0d\n  if (end === undefined || end > len)\x0d\n    end = len;\x0d\n  else\x0d\n    end |= 0;\x0d\n\x0d\n  if (end <= start)\x0d\n    return '';\x0d\n\x0d\n  if (encoding === undefined)\x0d\n    return this.utf8Slice(start\x2C end);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n\x0d\n  return ops.slice(this\x2C start\x2C end);\x0d\n};\x0d\n\x0d\nBuffer.prototype.equals = function equals(otherBuffer) {\x0d\n  if (!isUint8Array(otherBuffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'otherBuffer'\x2C ['Buffer'\x2C 'Uint8Array']\x2C otherBuffer);\x0d\n  }\x0d\n\x0d\n  if (this === otherBuffer)\x0d\n    return true;\x0d\n  const len = TypedArrayPrototypeGetByteLength(this);\x0d\n  if (len !== TypedArrayPrototypeGetByteLength(otherBuffer))\x0d\n    return false;\x0d\n\x0d\n  return len === 0 || _compare(this\x2C otherBuffer) === 0;\x0d\n};\x0d\n\x0d\nlet INSPECT_MAX_BYTES = 50;\x0d\n// Override how buffers are presented by util.inspect().\x0d\nBuffer.prototype[customInspectSymbol] = function inspect(recurseTimes\x2C ctx) {\x0d\n  const max = INSPECT_MAX_BYTES;\x0d\n  const actualMax = MathMin(max\x2C this.length);\x0d\n  const remaining = this.length - max;\x0d\n  let str = StringPrototypeTrim(RegExpPrototypeSymbolReplace(\x0d\n    /(.{2})/g\x2C this.hexSlice(0\x2C actualMax)\x2C '$1 '));\x0d\n  if (remaining > 0)\x0d\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\x0d\n  // Inspect special properties as well\x2C if possible.\x0d\n  if (ctx) {\x0d\n    let extras = false;\x0d\n    const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\x0d\n    const obj = { __proto__: null };\x0d\n    ArrayPrototypeForEach(getOwnNonIndexProperties(this\x2C filter)\x2C\x0d\n                          (key) => {\x0d\n                            extras = true;\x0d\n                            obj[key] = this[key];\x0d\n                          });\x0d\n    if (extras) {\x0d\n      if (this.length !== 0)\x0d\n        str += '\x2C ';\x0d\n      // '[Object: null prototype] {'.length === 26\x0d\n      // This is guarded with a test.\x0d\n      str += StringPrototypeSlice(utilInspect(obj\x2C {\x0d\n        ...ctx\x2C\x0d\n        breakLength: Infinity\x2C\x0d\n        compact: true\x2C\x0d\n      })\x2C 27\x2C -2);\x0d\n    }\x0d\n  }\x0d\n  return `<${this.constructor.name} ${str}>`;\x0d\n};\x0d\nBuffer.prototype.inspect = Buffer.prototype[customInspectSymbol];\x0d\n\x0d\nBuffer.prototype.compare = function compare(target\x2C\x0d\n                                            targetStart\x2C\x0d\n                                            targetEnd\x2C\x0d\n                                            sourceStart\x2C\x0d\n                                            sourceEnd) {\x0d\n  if (!isUint8Array(target)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n  }\x0d\n  if (arguments.length === 1)\x0d\n    return _compare(this\x2C target);\x0d\n\x0d\n  if (targetStart === undefined)\x0d\n    targetStart = 0;\x0d\n  else\x0d\n    validateOffset(targetStart\x2C 'targetStart');\x0d\n\x0d\n  if (targetEnd === undefined)\x0d\n    targetEnd = target.length;\x0d\n  else\x0d\n    validateOffset(targetEnd\x2C 'targetEnd'\x2C 0\x2C target.length);\x0d\n\x0d\n  if (sourceStart === undefined)\x0d\n    sourceStart = 0;\x0d\n  else\x0d\n    validateOffset(sourceStart\x2C 'sourceStart');\x0d\n\x0d\n  if (sourceEnd === undefined)\x0d\n    sourceEnd = this.length;\x0d\n  else\x0d\n    validateOffset(sourceEnd\x2C 'sourceEnd'\x2C 0\x2C this.length);\x0d\n\x0d\n  if (sourceStart >= sourceEnd)\x0d\n    return (targetStart >= targetEnd ? 0 : -1);\x0d\n  if (targetStart >= targetEnd)\x0d\n    return 1;\x0d\n\x0d\n  return compareOffset(this\x2C target\x2C targetStart\x2C sourceStart\x2C targetEnd\x2C\x0d\n                       sourceEnd);\x0d\n};\x0d\n\x0d\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`\x2C\x0d\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\x0d\n//\x0d\n// Arguments:\x0d\n// - buffer - a Buffer to search\x0d\n// - val - a string\x2C Buffer\x2C or number\x0d\n// - byteOffset - an index into `buffer`; will be clamped to an int32\x0d\n// - encoding - an optional encoding\x2C relevant if val is a string\x0d\n// - dir - true for indexOf\x2C false for lastIndexOf\x0d\nfunction bidirectionalIndexOf(buffer\x2C val\x2C byteOffset\x2C encoding\x2C dir) {\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (typeof byteOffset === 'string') {\x0d\n    encoding = byteOffset;\x0d\n    byteOffset = undefined;\x0d\n  } else if (byteOffset > 0x7fffffff) {\x0d\n    byteOffset = 0x7fffffff;\x0d\n  } else if (byteOffset < -0x80000000) {\x0d\n    byteOffset = -0x80000000;\x0d\n  }\x0d\n  // Coerce to Number. Values like null and [] become 0.\x0d\n  byteOffset = +byteOffset;\x0d\n  // If the offset is undefined\x2C "foo"\x2C {}\x2C coerces to NaN\x2C search whole buffer.\x0d\n  if (NumberIsNaN(byteOffset)) {\x0d\n    byteOffset = dir ? 0 : (buffer.length || buffer.byteLength);\x0d\n  }\x0d\n  dir = !!dir;  // Cast to bool.\x0d\n\x0d\n  if (typeof val === 'number')\x0d\n    return indexOfNumber(buffer\x2C val >>> 0\x2C byteOffset\x2C dir);\x0d\n\x0d\n  let ops;\x0d\n  if (encoding === undefined)\x0d\n    ops = encodingOps.utf8;\x0d\n  else\x0d\n    ops = getEncodingOps(encoding);\x0d\n\x0d\n  if (typeof val === 'string') {\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    return ops.indexOf(buffer\x2C val\x2C byteOffset\x2C dir);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(val)) {\x0d\n    const encodingVal =\x0d\n      (ops === undefined ? encodingsMap.utf8 : ops.encodingVal);\x0d\n    return indexOfBuffer(buffer\x2C val\x2C byteOffset\x2C encodingVal\x2C dir);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'value'\x2C ['number'\x2C 'string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C val\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nBuffer.prototype.indexOf = function indexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C true);\x0d\n};\x0d\n\x0d\nBuffer.prototype.lastIndexOf = function lastIndexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C false);\x0d\n};\x0d\n\x0d\nBuffer.prototype.includes = function includes(val\x2C byteOffset\x2C encoding) {\x0d\n  return this.indexOf(val\x2C byteOffset\x2C encoding) !== -1;\x0d\n};\x0d\n\x0d\n// Usage:\x0d\n//    buffer.fill(number[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(buffer[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(string[\x2C offset[\x2C end]][\x2C encoding])\x0d\nBuffer.prototype.fill = function fill(value\x2C offset\x2C end\x2C encoding) {\x0d\n  return _fill(this\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n};\x0d\n\x0d\nfunction _fill(buf\x2C value\x2C offset\x2C end\x2C encoding) {\x0d\n  if (typeof value === 'string') {\x0d\n    if (offset === undefined || typeof offset === 'string') {\x0d\n      encoding = offset;\x0d\n      offset = 0;\x0d\n      end = buf.length;\x0d\n    } else if (typeof end === 'string') {\x0d\n      encoding = end;\x0d\n      end = buf.length;\x0d\n    }\x0d\n\x0d\n    const normalizedEncoding = normalizeEncoding(encoding);\x0d\n    if (normalizedEncoding === undefined) {\x0d\n      validateString(encoding\x2C 'encoding');\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    }\x0d\n\x0d\n    if (value.length === 0) {\x0d\n      // If value === '' default to zero.\x0d\n      value = 0;\x0d\n    } else if (value.length === 1) {\x0d\n      // Fast path: If `value` fits into a single byte\x2C use that numeric value.\x0d\n      if (normalizedEncoding === 'utf8') {\x0d\n        const code = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n        if (code < 128) {\x0d\n          value = code;\x0d\n        }\x0d\n      } else if (normalizedEncoding === 'latin1') {\x0d\n        value = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    encoding = undefined;\x0d\n  }\x0d\n\x0d\n  if (offset === undefined) {\x0d\n    offset = 0;\x0d\n    end = buf.length;\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset');\x0d\n    // Invalid ranges are not set to a default\x2C so can range check early.\x0d\n    if (end === undefined) {\x0d\n      end = buf.length;\x0d\n    } else {\x0d\n      validateOffset(end\x2C 'end'\x2C 0\x2C buf.length);\x0d\n    }\x0d\n    if (offset >= end)\x0d\n      return buf;\x0d\n  }\x0d\n\x0d\n\x0d\n  if (typeof value === 'number') {\x0d\n    // OOB check\x0d\n    const byteLen = TypedArrayPrototypeGetByteLength(buf);\x0d\n    const fillLength = end - offset;\x0d\n    if (offset > end || fillLength + offset > byteLen)\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n    TypedArrayPrototypeFill(buf\x2C value\x2C offset\x2C end);\x0d\n  } else {\x0d\n    const res = bindingFill(buf\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n    if (res < 0) {\x0d\n      if (res === -1)\x0d\n        throw new ERR_INVALID_ARG_VALUE('value'\x2C value);\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return buf;\x0d\n}\x0d\n\x0d\nBuffer.prototype.write = function write(string\x2C offset\x2C length\x2C encoding) {\x0d\n  // Buffer#write(string);\x0d\n  if (offset === undefined) {\x0d\n    return this.utf8Write(string\x2C 0\x2C this.length);\x0d\n  }\x0d\n  // Buffer#write(string\x2C encoding)\x0d\n  if (length === undefined && typeof offset === 'string') {\x0d\n    encoding = offset;\x0d\n    length = this.length;\x0d\n    offset = 0;\x0d\n\x0d\n  // Buffer#write(string\x2C offset[\x2C length][\x2C encoding])\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset'\x2C 0\x2C this.length);\x0d\n\x0d\n    const remaining = this.length - offset;\x0d\n\x0d\n    if (length === undefined) {\x0d\n      length = remaining;\x0d\n    } else if (typeof length === 'string') {\x0d\n      encoding = length;\x0d\n      length = remaining;\x0d\n    } else {\x0d\n      validateOffset(length\x2C 'length'\x2C 0\x2C this.length);\x0d\n      if (length > remaining)\x0d\n        length = remaining;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (!encoding)\x0d\n    return this.utf8Write(string\x2C offset\x2C length);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n  return ops.write(this\x2C string\x2C offset\x2C length);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toJSON = function toJSON() {\x0d\n  if (this.length > 0) {\x0d\n    const data = new Array(this.length);\x0d\n    for (let i = 0; i < this.length; ++i)\x0d\n      data[i] = this[i];\x0d\n    return { type: 'Buffer'\x2C data };\x0d\n  }\x0d\n  return { type: 'Buffer'\x2C data: [] };\x0d\n};\x0d\n\x0d\nfunction adjustOffset(offset\x2C length) {\x0d\n  // Use Math.trunc() to convert offset to an integer value that can be larger\x0d\n  // than an Int32. Hence\x2C don't use offset | 0 or similar techniques.\x0d\n  offset = MathTrunc(offset);\x0d\n  if (offset === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n  if (offset < 0) {\x0d\n    offset += length;\x0d\n    return offset > 0 ? offset : 0;\x0d\n  }\x0d\n  if (offset < length) {\x0d\n    return offset;\x0d\n  }\x0d\n  return NumberIsNaN(offset) ? 0 : length;\x0d\n}\x0d\n\x0d\nBuffer.prototype.subarray = function subarray(start\x2C end) {\x0d\n  const srcLength = this.length;\x0d\n  start = adjustOffset(start\x2C srcLength);\x0d\n  end = end !== undefined ? adjustOffset(end\x2C srcLength) : srcLength;\x0d\n  const newLength = end > start ? end - start : 0;\x0d\n  return new FastBuffer(this.buffer\x2C this.byteOffset + start\x2C newLength);\x0d\n};\x0d\n\x0d\nBuffer.prototype.slice = function slice(start\x2C end) {\x0d\n  return this.subarray(start\x2C end);\x0d\n};\x0d\n\x0d\nfunction swap(b\x2C n\x2C m) {\x0d\n  const i = b[n];\x0d\n  b[n] = b[m];\x0d\n  b[m] = i;\x0d\n}\x0d\n\x0d\nBuffer.prototype.swap16 = function swap16() {\x0d\n  // For Buffer.length < 128\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 2 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('16-bits');\x0d\n  if (len < 128) {\x0d\n    for (let i = 0; i < len; i += 2)\x0d\n      swap(this\x2C i\x2C i + 1);\x0d\n    return this;\x0d\n  }\x0d\n  return _swap16(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap32 = function swap32() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 4 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('32-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 4) {\x0d\n      swap(this\x2C i\x2C i + 3);\x0d\n      swap(this\x2C i + 1\x2C i + 2);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap32(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap64 = function swap64() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 8 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('64-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 8) {\x0d\n      swap(this\x2C i\x2C i + 7);\x0d\n      swap(this\x2C i + 1\x2C i + 6);\x0d\n      swap(this\x2C i + 2\x2C i + 5);\x0d\n      swap(this\x2C i + 3\x2C i + 4);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap64(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\x0d\n\x0d\nlet transcode;\x0d\nif (internalBinding('config').hasIntl) {\x0d\n  const {\x0d\n    icuErrName\x2C\x0d\n    transcode: _transcode\x2C\x0d\n  } = internalBinding('icu');\x0d\n\x0d\n  // Transcodes the Buffer from one encoding to another\x2C returning a new\x0d\n  // Buffer instance.\x0d\n  transcode = function transcode(source\x2C fromEncoding\x2C toEncoding) {\x0d\n    if (!isUint8Array(source)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('source'\x2C\x0d\n                                     ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n    }\x0d\n    if (source.length === 0) return Buffer.alloc(0);\x0d\n\x0d\n    fromEncoding = normalizeEncoding(fromEncoding) || fromEncoding;\x0d\n    toEncoding = normalizeEncoding(toEncoding) || toEncoding;\x0d\n    const result = _transcode(source\x2C fromEncoding\x2C toEncoding);\x0d\n    if (typeof result !== 'number')\x0d\n      return result;\x0d\n\x0d\n    const code = icuErrName(result);\x0d\n    const err = genericNodeError(\x0d\n      `Unable to transcode Buffer [${code}]`\x2C\x0d\n      { code: code\x2C errno: result }\x2C\x0d\n    );\x0d\n    throw err;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction btoa(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('input');\x0d\n  }\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (input[n].charCodeAt(0) > 0xff)\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  const buf = Buffer.from(input\x2C 'latin1');\x0d\n  return buf.toString('base64');\x0d\n}\x0d\n\x0d\n// Refs: https://infra.spec.whatwg.org/#forgiving-base64-decode\x0d\nconst kForgivingBase64AllowedChars = [\x0d\n  // ASCII whitespace\x0d\n  // Refs: https://infra.spec.whatwg.org/#ascii-whitespace\x0d\n  0x09\x2C 0x0A\x2C 0x0C\x2C 0x0D\x2C 0x20\x2C\x0d\n\x0d\n  // Uppercase letters\x0d\n  ...ArrayFrom({ length: 26 }\x2C (_\x2C i) => StringPrototypeCharCodeAt('A') + i)\x2C\x0d\n\x0d\n  // Lowercase letters\x0d\n  ...ArrayFrom({ length: 26 }\x2C (_\x2C i) => StringPrototypeCharCodeAt('a') + i)\x2C\x0d\n\x0d\n  // Decimal digits\x0d\n  ...ArrayFrom({ length: 10 }\x2C (_\x2C i) => StringPrototypeCharCodeAt('0') + i)\x2C\x0d\n\x0d\n  0x2B\x2C // +\x0d\n  0x2F\x2C // /\x0d\n  0x3D\x2C // =\x0d\n];\x0d\nconst kEqualSignIndex = ArrayPrototypeIndexOf(kForgivingBase64AllowedChars\x2C\x0d\n                                              0x3D);\x0d\n\x0d\nfunction atob(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('input');\x0d\n  }\x0d\n\x0d\n  input = `${input}`;\x0d\n  let nonAsciiWhitespaceCharCount = 0;\x0d\n  let equalCharCount = 0;\x0d\n\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    const index = ArrayPrototypeIndexOf(\x0d\n      kForgivingBase64AllowedChars\x2C\x0d\n      StringPrototypeCharCodeAt(input\x2C n));\x0d\n\x0d\n    if (index > 4) {\x0d\n      // The first 5 elements of `kForgivingBase64AllowedChars` are\x0d\n      // ASCII whitespace char codes.\x0d\n      nonAsciiWhitespaceCharCount++;\x0d\n\x0d\n      if (index === kEqualSignIndex) {\x0d\n        equalCharCount++;\x0d\n      } else if (equalCharCount) {\x0d\n        // The `=` char is only allowed at the end.\x0d\n        throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n      }\x0d\n\x0d\n      if (equalCharCount > 2) {\x0d\n        // Only one more `=` is permitted after the first equal sign.\x0d\n        throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n      }\x0d\n    } else if (index === -1) {\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let reminder = nonAsciiWhitespaceCharCount % 4;\x0d\n\x0d\n  // See #2\x2C #3\x2C #4 - https://infra.spec.whatwg.org/#forgiving-base64\x0d\n  if (!reminder) {\x0d\n    // Remove all trailing `=` characters and get the new reminder.\x0d\n    reminder = (nonAsciiWhitespaceCharCount - equalCharCount) % 4;\x0d\n  } else if (equalCharCount) {\x0d\n    // `=` should not in the input if there's a reminder.\x0d\n    throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n\x0d\n  // See #3 - https://infra.spec.whatwg.org/#forgiving-base64\x0d\n  if (reminder === 1) {\x0d\n    throw lazyDOMException(\x0d\n      'The string to be decoded is not correctly encoded.'\x2C\x0d\n      'InvalidCharacterError');\x0d\n  }\x0d\n\x0d\n  return Buffer.from(input\x2C 'base64').toString('latin1');\x0d\n}\x0d\n\x0d\nfunction isUtf8(input) {\x0d\n  if (isTypedArray(input) || isAnyArrayBuffer(input)) {\x0d\n    return bindingIsUtf8(input);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE('input'\x2C ['TypedArray'\x2C 'Buffer']\x2C input);\x0d\n}\x0d\n\x0d\nfunction isAscii(input) {\x0d\n  if (isTypedArray(input) || isAnyArrayBuffer(input)) {\x0d\n    return bindingIsAscii(input);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE('input'\x2C ['ArrayBuffer'\x2C 'Buffer'\x2C 'TypedArray']\x2C input);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Buffer\x2C\x0d\n  SlowBuffer\x2C\x0d\n  transcode\x2C\x0d\n  isUtf8\x2C\x0d\n  isAscii\x2C\x0d\n\x0d\n  // Legacy\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x2C\x0d\n  btoa\x2C\x0d\n  atob\x2C\x0d\n};\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  constants: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x2C\x0d\n  }\x2C\x0d\n  INSPECT_MAX_BYTES: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() { return INSPECT_MAX_BYTES; }\x2C\x0d\n    set(val) {\x0d\n      validateNumber(val\x2C 'INSPECT_MAX_BYTES'\x2C 0);\x0d\n      INSPECT_MAX_BYTES = val;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\ndefineLazyProperties(\x0d\n  module.exports\x2C\x0d\n  'internal/blob'\x2C\x0d\n  ['Blob'\x2C 'resolveObjectURL']\x2C\x0d\n);\x0d\ndefineLazyProperties(\x0d\n  module.exports\x2C\x0d\n  'internal/file'\x2C\x0d\n  ['File']\x2C\x0d\n);\x0d\n
code-source-info,0x9b20b7132c,24,8361,8386,C0O8366C4O8384,,
tick,0x7ff7b4b820e0,148186,0,0x0,3,0x7ff7b3cc62d0,0x9b20b6e694,0x7ff734383f77,0x7ff734383c87,0x9b20b63e6a,0x7ff734383f77,0x7ff734383c87,0x9b20b60a24,0x7ff734383f77,0x7ff734383c87,0x9b20b5eb2e,0x7ff734383f77,0x7ff734383c87,0x9b20b5159f,0x7ff734383f77,0x7ff734383c87,0x9b20b4ecd1,0x7ff734383f77,0x7ff734383c87,0x9b20b4bb39,0x7ff734383f77,0x7ff734383c87,0x125aa7b6848,0x7ff734383f77,0x7ff734383c87,0x125aa7b536c,0x125aa7b446b,0x125aa7b4275,0x125aa7b415c,0x125aa7b4024,0x7ff75414ef5f,0x125aa7b3c21,0x125aa7ab020,0x3151437ffa6
code-creation,Eval,10,148335,0x9b20b748bc,5, node:string_decoder:1:1,0x9b20b74638,~
script-source,100,node:string_decoder,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBufferIsView\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeSubarray\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  kIncompleteCharactersStart\x2C\x0d\n  kIncompleteCharactersEnd\x2C\x0d\n  kMissingBytes\x2C\x0d\n  kBufferedBytes\x2C\x0d\n  kEncodingField\x2C\x0d\n  kSize\x2C\x0d\n  decode\x2C\x0d\n  flush\x2C\x0d\n} = internalBinding('string_decoder');\x0d\nconst {\x0d\n  kIsEncodingSymbol\x2C\x0d\n  encodingsMap\x2C\x0d\n  normalizeEncoding: _normalizeEncoding\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_THIS\x2C\x0d\n  ERR_UNKNOWN_ENCODING\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst isEncoding = Buffer[kIsEncodingSymbol];\x0d\n\x0d\nconst kNativeDecoder = Symbol('kNativeDecoder');\x0d\n\x0d\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\x0d\n// modules monkey-patch it to support additional encodings\x0d\n/**\x0d\n * Normalize encoding notation\x0d\n * @param {string} enc\x0d\n * @returns {"utf8" | "utf16le" | "hex" | "ascii"\x0d\n *           | "base64" | "latin1" | "base64url"}\x0d\n * @throws {TypeError} Throws an error when encoding is invalid\x0d\n */\x0d\nfunction normalizeEncoding(enc) {\x0d\n  const nenc = _normalizeEncoding(enc);\x0d\n  if (nenc === undefined) {\x0d\n    if (Buffer.isEncoding === isEncoding || !Buffer.isEncoding(enc))\x0d\n      throw new ERR_UNKNOWN_ENCODING(enc);\x0d\n    return enc;\x0d\n  }\x0d\n  return nenc;\x0d\n}\x0d\n\x0d\n/**\x0d\n * StringDecoder provides an interface for efficiently splitting a series of\x0d\n * buffers into a series of JS strings without breaking apart multi-byte\x0d\n * characters.\x0d\n * @param {string} [encoding=utf-8]\x0d\n */\x0d\nfunction StringDecoder(encoding) {\x0d\n  this.encoding = normalizeEncoding(encoding);\x0d\n  this[kNativeDecoder] = Buffer.alloc(kSize);\x0d\n  this[kNativeDecoder][kEncodingField] = encodingsMap[this.encoding];\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a decoded string\x2C omitting any incomplete multi-bytes\x0d\n * characters at the end of the Buffer\x2C or TypedArray\x2C or DataView\x0d\n * @param {string | Buffer | TypedArray | DataView} buf\x0d\n * @returns {string}\x0d\n * @throws {TypeError} Throws when buf is not in one of supported types\x0d\n */\x0d\nStringDecoder.prototype.write = function write(buf) {\x0d\n  if (typeof buf === 'string')\x0d\n    return buf;\x0d\n  if (!ArrayBufferIsView(buf))\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf'\x2C\x0d\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n                                   buf);\x0d\n  if (!this[kNativeDecoder]) {\x0d\n    throw new ERR_INVALID_THIS('StringDecoder');\x0d\n  }\x0d\n  return decode(this[kNativeDecoder]\x2C buf);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns any remaining input stored in the internal buffer as a string.\x0d\n * After end() is called\x2C the stringDecoder object can be reused for new\x0d\n * input.\x0d\n * @param {string | Buffer | TypedArray | DataView} [buf]\x0d\n * @returns {string}\x0d\n */\x0d\nStringDecoder.prototype.end = function end(buf) {\x0d\n  let ret = '';\x0d\n  if (buf !== undefined)\x0d\n    ret = this.write(buf);\x0d\n  if (this[kNativeDecoder][kBufferedBytes] > 0)\x0d\n    ret += flush(this[kNativeDecoder]);\x0d\n  return ret;\x0d\n};\x0d\n\x0d\n/* Everything below this line is undocumented legacy stuff. */\x0d\n/**\x0d\n *\x0d\n * @param {string | Buffer | TypedArray | DataView} buf\x0d\n * @param {number} offset\x0d\n * @returns {string}\x0d\n */\x0d\nStringDecoder.prototype.text = function text(buf\x2C offset) {\x0d\n  this[kNativeDecoder][kMissingBytes] = 0;\x0d\n  this[kNativeDecoder][kBufferedBytes] = 0;\x0d\n  return this.write(buf.slice(offset));\x0d\n};\x0d\n\x0d\nObjectDefineProperties(StringDecoder.prototype\x2C {\x0d\n  lastChar: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      return TypedArrayPrototypeSubarray(this[kNativeDecoder]\x2C\x0d\n                                         kIncompleteCharactersStart\x2C\x0d\n                                         kIncompleteCharactersEnd);\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  lastNeed: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      return this[kNativeDecoder][kMissingBytes];\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  lastTotal: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      return this[kNativeDecoder][kBufferedBytes] +\x0d\n             this[kNativeDecoder][kMissingBytes];\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nexports.StringDecoder = StringDecoder;\x0d\n
code-source-info,0x9b20b748bc,100,0,5307,C0O0C4O5307,,
code-creation,JS,10,148632,0x9b20b74e8c,356, node:string_decoder:1:1,0x9b20b74830,~
code-source-info,0x9b20b74e8c,100,0,5307,C0O0C70O1183C76O1205C81O1232C86O1243C92O1312C95O1312C100O1301C106O1492C109O1492C114O1343C120O1374C126O1403C132O1421C138O1440C144O1459C150O1469C156O1480C162O1622C165O1622C170O1539C175O1561C181O1597C187O1733C190O1733C195O1759C200O1660C206O1685C212O1706C218O1787C223O1793C226O1787C228O1840C231O1840C235O1840C237O3230C246O3246C250O3914C259O3928C263O4331C272O4346C276O4551C286O4577C291O4654C305O4892C310O4969C324O5056C329O5133C343O4514C348O5267C350O5289C355O5306,,
code-creation,Eval,10,148900,0x9b20b7617c,5, node:internal/streams/from:1:1,0x9b20b75fb8,~
script-source,101,node:internal/streams/from,'use strict';\x0d\n\x0d\nconst {\x0d\n  PromisePrototypeThen\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n  SymbolIterator\x2C\x0d\n} = primordials;\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_STREAM_NULL_VALUES\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nfunction from(Readable\x2C iterable\x2C opts) {\x0d\n  let iterator;\x0d\n  if (typeof iterable === 'string' || iterable instanceof Buffer) {\x0d\n    return new Readable({\x0d\n      objectMode: true\x2C\x0d\n      ...opts\x2C\x0d\n      read() {\x0d\n        this.push(iterable);\x0d\n        this.push(null);\x0d\n      }\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  let isAsync;\x0d\n  if (iterable && iterable[SymbolAsyncIterator]) {\x0d\n    isAsync = true;\x0d\n    iterator = iterable[SymbolAsyncIterator]();\x0d\n  } else if (iterable && iterable[SymbolIterator]) {\x0d\n    isAsync = false;\x0d\n    iterator = iterable[SymbolIterator]();\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('iterable'\x2C ['Iterable']\x2C iterable);\x0d\n  }\x0d\n\x0d\n\x0d\n  const readable = new Readable({\x0d\n    objectMode: true\x2C\x0d\n    highWaterMark: 1\x2C\x0d\n    // TODO(ronag): What options should be allowed?\x0d\n    ...opts\x2C\x0d\n  });\x0d\n\x0d\n  // Flag to protect against _read\x0d\n  // being called before last iteration completion.\x0d\n  let reading = false;\x0d\n  let isAsyncValues = false;\x0d\n\x0d\n  readable._read = function() {\x0d\n    if (!reading) {\x0d\n      reading = true;\x0d\n\x0d\n      if (isAsync) {\x0d\n        nextAsync();\x0d\n      } else if (isAsyncValues) {\x0d\n        nextSyncWithAsyncValues();\x0d\n      } else {\x0d\n        nextSyncWithSyncValues();\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\n  readable._destroy = function(error\x2C cb) {\x0d\n    PromisePrototypeThen(\x0d\n      close(error)\x2C\x0d\n      () => process.nextTick(cb\x2C error)\x2C // nextTick is here in case cb throws\x0d\n      (e) => process.nextTick(cb\x2C e || error)\x2C\x0d\n    );\x0d\n  };\x0d\n\x0d\n  async function close(error) {\x0d\n    const hadError = (error !== undefined) && (error !== null);\x0d\n    const hasThrow = typeof iterator.throw === 'function';\x0d\n    if (hadError && hasThrow) {\x0d\n      const { value\x2C done } = await iterator.throw(error);\x0d\n      await value;\x0d\n      if (done) {\x0d\n        return;\x0d\n      }\x0d\n    }\x0d\n    if (typeof iterator.return === 'function') {\x0d\n      const { value } = await iterator.return();\x0d\n      await value;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // There are a lot of duplication here\x2C it's done on purpose for performance\x0d\n  // reasons - avoid await when not needed.\x0d\n\x0d\n  function nextSyncWithSyncValues() {\x0d\n    for (;;) {\x0d\n      try {\x0d\n        const { value\x2C done } = iterator.next();\x0d\n\x0d\n        if (done) {\x0d\n          readable.push(null);\x0d\n          return;\x0d\n        }\x0d\n\x0d\n        if (value &&\x0d\n          typeof value.then === 'function') {\x0d\n          return changeToAsyncValues(value);\x0d\n        }\x0d\n\x0d\n        if (value === null) {\x0d\n          reading = false;\x0d\n          throw new ERR_STREAM_NULL_VALUES();\x0d\n        }\x0d\n\x0d\n        if (readable.push(value)) {\x0d\n          continue;\x0d\n        }\x0d\n\x0d\n        reading = false;\x0d\n      } catch (err) {\x0d\n        readable.destroy(err);\x0d\n      }\x0d\n      break;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  async function changeToAsyncValues(value) {\x0d\n    isAsyncValues = true;\x0d\n\x0d\n    try {\x0d\n      const res = await value;\x0d\n\x0d\n      if (res === null) {\x0d\n        reading = false;\x0d\n        throw new ERR_STREAM_NULL_VALUES();\x0d\n      }\x0d\n\x0d\n      if (readable.push(res)) {\x0d\n        nextSyncWithAsyncValues();\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      reading = false;\x0d\n    } catch (err) {\x0d\n      readable.destroy(err);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  async function nextSyncWithAsyncValues() {\x0d\n    for (;;) {\x0d\n      try {\x0d\n        const { value\x2C done } = iterator.next();\x0d\n\x0d\n        if (done) {\x0d\n          readable.push(null);\x0d\n          return;\x0d\n        }\x0d\n\x0d\n        const res = (value &&\x0d\n          typeof value.then === 'function') ?\x0d\n          await value :\x0d\n          value;\x0d\n\x0d\n        if (res === null) {\x0d\n          reading = false;\x0d\n          throw new ERR_STREAM_NULL_VALUES();\x0d\n        }\x0d\n\x0d\n        if (readable.push(res)) {\x0d\n          continue;\x0d\n        }\x0d\n\x0d\n        reading = false;\x0d\n      } catch (err) {\x0d\n        readable.destroy(err);\x0d\n      }\x0d\n      break;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  async function nextAsync() {\x0d\n    for (;;) {\x0d\n      try {\x0d\n        const { value\x2C done } = await iterator.next();\x0d\n\x0d\n        if (done) {\x0d\n          readable.push(null);\x0d\n          return;\x0d\n        }\x0d\n\x0d\n        if (value === null) {\x0d\n          reading = false;\x0d\n          throw new ERR_STREAM_NULL_VALUES();\x0d\n        }\x0d\n\x0d\n        if (readable.push(value)) {\x0d\n          continue;\x0d\n        }\x0d\n\x0d\n        reading = false;\x0d\n      } catch (err) {\x0d\n        readable.destroy(err);\x0d\n      }\x0d\n      break;\x0d\n    }\x0d\n  }\x0d\n  return readable;\x0d\n}\x0d\n\x0d\nmodule.exports = from;\x0d\n
code-source-info,0x9b20b7617c,101,0,4549,C0O0C4O4549,,
code-creation,JS,10,149162,0x9b20b76304,97, node:internal/streams/from:1:1,0x9b20b760f0,~
code-source-info,0x9b20b76304,101,0,4549,C0O0C32O28C38O53C44O77C50O131C53O131C58O120C64O218C67O218C72O244C77O164C83O189C89O4525C91O4540C96O4548,,
code-creation,JS,10,149345,0x9b20b76ee4,33,makeBitMapDescriptor node:internal/streams/readable:127:30,0x9b20b6adf0,~
code-source-info,0x9b20b76ee4,97,3888,4090,C0O3888C9O3899C14O3937C22O3988C32O4087,,
new,MemoryChunk,0x10fd4180000,262144
code-creation,Eval,10,150182,0x9b20b7f31c,5, node:internal/streams/writable:1:1,0x9b20b7e700,~
script-source,102,node:internal/streams/writable,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// A bit simpler than readable streams.\x0d\n// Implement an async ._write(chunk\x2C encoding\x2C cb)\x2C and it'll handle all\x0d\n// the drain event emission and buffering.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeSymbolHasInstance\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolHasInstance\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Writable;\x0d\nWritable.WritableState = WritableState;\x0d\n\x0d\nconst EE = require('events');\x0d\nconst Stream = require('internal/streams/legacy').Stream;\x0d\nconst { Buffer } = require('buffer');\x0d\nconst destroyImpl = require('internal/streams/destroy');\x0d\n\x0d\nconst {\x0d\n  addAbortSignal\x2C\x0d\n} = require('internal/streams/add-abort-signal');\x0d\n\x0d\nconst {\x0d\n  getHighWaterMark\x2C\x0d\n  getDefaultHighWaterMark\x2C\x0d\n} = require('internal/streams/state');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  ERR_MULTIPLE_CALLBACK\x2C\x0d\n  ERR_STREAM_CANNOT_PIPE\x2C\x0d\n  ERR_STREAM_DESTROYED\x2C\x0d\n  ERR_STREAM_ALREADY_FINISHED\x2C\x0d\n  ERR_STREAM_NULL_VALUES\x2C\x0d\n  ERR_STREAM_WRITE_AFTER_END\x2C\x0d\n  ERR_UNKNOWN_ENCODING\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  kState\x2C\x0d\n  // bitfields\x0d\n  kObjectMode\x2C\x0d\n  kErrorEmitted\x2C\x0d\n  kAutoDestroy\x2C\x0d\n  kEmitClose\x2C\x0d\n  kDestroyed\x2C\x0d\n  kClosed\x2C\x0d\n  kCloseEmitted\x2C\x0d\n  kErrored\x2C\x0d\n  kConstructed\x2C\x0d\n  kOnConstructed\x2C\x0d\n} = require('internal/streams/utils');\x0d\n\x0d\nconst { errorOrDestroy } = destroyImpl;\x0d\n\x0d\nObjectSetPrototypeOf(Writable.prototype\x2C Stream.prototype);\x0d\nObjectSetPrototypeOf(Writable\x2C Stream);\x0d\n\x0d\nfunction nop() {}\x0d\n\x0d\nconst kOnFinishedValue = Symbol('kOnFinishedValue');\x0d\nconst kErroredValue = Symbol('kErroredValue');\x0d\nconst kDefaultEncodingValue = Symbol('kDefaultEncodingValue');\x0d\nconst kWriteCbValue = Symbol('kWriteCbValue');\x0d\nconst kAfterWriteTickInfoValue = Symbol('kAfterWriteTickInfoValue');\x0d\nconst kBufferedValue = Symbol('kBufferedValue');\x0d\n\x0d\nconst kSync = 1 << 9;\x0d\nconst kFinalCalled = 1 << 10;\x0d\nconst kNeedDrain = 1 << 11;\x0d\nconst kEnding = 1 << 12;\x0d\nconst kFinished = 1 << 13;\x0d\nconst kDecodeStrings = 1 << 14;\x0d\nconst kWriting = 1 << 15;\x0d\nconst kBufferProcessing = 1 << 16;\x0d\nconst kPrefinished = 1 << 17;\x0d\nconst kAllBuffers = 1 << 18;\x0d\nconst kAllNoop = 1 << 19;\x0d\nconst kOnFinished = 1 << 20;\x0d\nconst kHasWritable = 1 << 21;\x0d\nconst kWritable = 1 << 22;\x0d\nconst kCorked = 1 << 23;\x0d\nconst kDefaultUTF8Encoding = 1 << 24;\x0d\nconst kWriteCb = 1 << 25;\x0d\nconst kExpectWriteCb = 1 << 26;\x0d\nconst kAfterWriteTickInfo = 1 << 27;\x0d\nconst kAfterWritePending = 1 << 28;\x0d\nconst kBuffered = 1 << 29;\x0d\nconst kEnded = 1 << 30;\x0d\n\x0d\n// TODO(benjamingr) it is likely slower to do it this way than with free functions\x0d\nfunction makeBitMapDescriptor(bit) {\x0d\n  return {\x0d\n    enumerable: false\x2C\x0d\n    get() { return (this[kState] & bit) !== 0; }\x2C\x0d\n    set(value) {\x0d\n      if (value) this[kState] |= bit;\x0d\n      else this[kState] &= ~bit;\x0d\n    }\x2C\x0d\n  };\x0d\n}\x0d\nObjectDefineProperties(WritableState.prototype\x2C {\x0d\n  // Object stream flag to indicate whether or not this stream\x0d\n  // contains buffers or objects.\x0d\n  objectMode: makeBitMapDescriptor(kObjectMode)\x2C\x0d\n\x0d\n  // if _final has been called.\x0d\n  finalCalled: makeBitMapDescriptor(kFinalCalled)\x2C\x0d\n\x0d\n  // drain event flag.\x0d\n  needDrain: makeBitMapDescriptor(kNeedDrain)\x2C\x0d\n\x0d\n  // At the start of calling end()\x0d\n  ending: makeBitMapDescriptor(kEnding)\x2C\x0d\n\x0d\n  // When end() has been called\x2C and returned.\x0d\n  ended: makeBitMapDescriptor(kEnded)\x2C\x0d\n\x0d\n  // When 'finish' is emitted.\x0d\n  finished: makeBitMapDescriptor(kFinished)\x2C\x0d\n\x0d\n  // Has it been destroyed.\x0d\n  destroyed: makeBitMapDescriptor(kDestroyed)\x2C\x0d\n\x0d\n  // Should we decode strings into buffers before passing to _write?\x0d\n  // this is here so that some node-core streams can optimize string\x0d\n  // handling at a lower level.\x0d\n  decodeStrings: makeBitMapDescriptor(kDecodeStrings)\x2C\x0d\n\x0d\n  // A flag to see when we're in the middle of a write.\x0d\n  writing: makeBitMapDescriptor(kWriting)\x2C\x0d\n\x0d\n  // A flag to be able to tell if the onwrite cb is called immediately\x2C\x0d\n  // or on a later tick.  We set this to true at first\x2C because any\x0d\n  // actions that shouldn't happen until "later" should generally also\x0d\n  // not happen before the first write call.\x0d\n  sync: makeBitMapDescriptor(kSync)\x2C\x0d\n\x0d\n  // A flag to know if we're processing previously buffered items\x2C which\x0d\n  // may call the _write() callback in the same tick\x2C so that we don't\x0d\n  // end up in an overlapped onwrite situation.\x0d\n  bufferProcessing: makeBitMapDescriptor(kBufferProcessing)\x2C\x0d\n\x0d\n  // Stream is still being constructed and cannot be\x0d\n  // destroyed until construction finished or failed.\x0d\n  // Async construction is opt in\x2C therefore we start as\x0d\n  // constructed.\x0d\n  constructed: makeBitMapDescriptor(kConstructed)\x2C\x0d\n\x0d\n  // Emit prefinish if the only thing we're waiting for is _write cbs\x0d\n  // This is relevant for synchronous Transform streams.\x0d\n  prefinished: makeBitMapDescriptor(kPrefinished)\x2C\x0d\n\x0d\n  // True if the error was already emitted and should not be thrown again.\x0d\n  errorEmitted: makeBitMapDescriptor(kErrorEmitted)\x2C\x0d\n\x0d\n  // Should close be emitted on destroy. Defaults to true.\x0d\n  emitClose: makeBitMapDescriptor(kEmitClose)\x2C\x0d\n\x0d\n  // Should .destroy() be called after 'finish' (and potentially 'end').\x0d\n  autoDestroy: makeBitMapDescriptor(kAutoDestroy)\x2C\x0d\n\x0d\n  // Indicates whether the stream has finished destroying.\x0d\n  closed: makeBitMapDescriptor(kClosed)\x2C\x0d\n\x0d\n  // True if close has been emitted or would have been emitted\x0d\n  // depending on emitClose.\x0d\n  closeEmitted: makeBitMapDescriptor(kCloseEmitted)\x2C\x0d\n\x0d\n  allBuffers: makeBitMapDescriptor(kAllBuffers)\x2C\x0d\n  allNoop: makeBitMapDescriptor(kAllNoop)\x2C\x0d\n\x0d\n  // Indicates whether the stream has errored. When true all write() calls\x0d\n  // should return false. This is needed since when autoDestroy\x0d\n  // is disabled we need a way to tell whether the stream has failed.\x0d\n  // This is/should be a cold path.\x0d\n  errored: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() { return (this[kState] & kErrored) !== 0 ? this[kErroredValue] : null; }\x2C\x0d\n    set(value) {\x0d\n      if (value) {\x0d\n        this[kErroredValue] = value;\x0d\n        this[kState] |= kErrored;\x0d\n      } else {\x0d\n        this[kState] &= ~kErrored;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  writable: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() { return (this[kState] & kHasWritable) !== 0 ? (this[kState] & kWritable) !== 0 : undefined; }\x2C\x0d\n    set(value) {\x0d\n      if (value == null) {\x0d\n        this[kState] &= ~(kHasWritable | kWritable);\x0d\n      } else if (value) {\x0d\n        this[kState] |= (kHasWritable | kWritable);\x0d\n      } else {\x0d\n        this[kState] |= kHasWritable;\x0d\n        this[kState] &= ~kWritable;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  defaultEncoding: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() { return (this[kState] & kDefaultUTF8Encoding) !== 0 ? 'utf8' : this[kDefaultEncodingValue]; }\x2C\x0d\n    set(value) {\x0d\n      if (value === 'utf8' || value === 'utf-8') {\x0d\n        this[kState] |= kDefaultUTF8Encoding;\x0d\n      } else {\x0d\n        this[kState] &= ~kDefaultUTF8Encoding;\x0d\n        this[kDefaultEncodingValue] = value;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  // The callback that the user supplies to write(chunk\x2C encoding\x2C cb).\x0d\n  writecb: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() { return (this[kState] & kWriteCb) !== 0 ? this[kWriteCbValue] : nop; }\x2C\x0d\n    set(value) {\x0d\n      if (value) {\x0d\n        this[kWriteCbValue] = value;\x0d\n        this[kState] |= kWriteCb;\x0d\n      } else {\x0d\n        this[kState] &= ~kWriteCb;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  // Storage for data passed to the afterWrite() callback in case of\x0d\n  // synchronous _write() completion.\x0d\n  afterWriteTickInfo: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() { return (this[kState] & kAfterWriteTickInfo) !== 0 ? this[kAfterWriteTickInfoValue] : null; }\x2C\x0d\n    set(value) {\x0d\n      if (value) {\x0d\n        this[kAfterWriteTickInfoValue] = value;\x0d\n        this[kState] |= kAfterWriteTickInfo;\x0d\n      } else {\x0d\n        this[kState] &= ~kAfterWriteTickInfo;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  buffered: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() { return (this[kState] & kBuffered) !== 0 ? this[kBufferedValue] : []; }\x2C\x0d\n    set(value) {\x0d\n      this[kBufferedValue] = value;\x0d\n      if (value) {\x0d\n        this[kState] |= kBuffered;\x0d\n      } else {\x0d\n        this[kState] &= ~kBuffered;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n});\x0d\n\x0d\nfunction WritableState(options\x2C stream\x2C isDuplex) {\x0d\n  // Bit map field to store WritableState more effciently with 1 bit per field\x0d\n  // instead of a V8 slot per field.\x0d\n  this[kState] = kSync | kConstructed | kEmitClose | kAutoDestroy;\x0d\n\x0d\n  if (options && options.objectMode)\x0d\n    this[kState] |= kObjectMode;\x0d\n\x0d\n  if (isDuplex && options && options.writableObjectMode)\x0d\n    this[kState] |= kObjectMode;\x0d\n\x0d\n  // The point at which write() starts returning false\x0d\n  // Note: 0 is a valid value\x2C means that we always return false if\x0d\n  // the entire buffer is not flushed immediately on write().\x0d\n  this.highWaterMark = options ?\x0d\n    getHighWaterMark(this\x2C options\x2C 'writableHighWaterMark'\x2C isDuplex) :\x0d\n    getDefaultHighWaterMark(false);\x0d\n\x0d\n  if (!options || options.decodeStrings !== false) this[kState] |= kDecodeStrings;\x0d\n\x0d\n  // Should close be emitted on destroy. Defaults to true.\x0d\n  if (options && options.emitClose === false) this[kState] &= ~kEmitClose;\x0d\n\x0d\n  // Should .destroy() be called after 'end' (and potentially 'finish').\x0d\n  if (options && options.autoDestroy === false) this[kState] &= ~kAutoDestroy;\x0d\n\x0d\n  // Crypto is kind of old and crusty.  Historically\x2C its default string\x0d\n  // encoding is 'binary' so we have to make this configurable.\x0d\n  // Everything else in the universe uses 'utf8'\x2C though.\x0d\n  const defaultEncoding = options ? options.defaultEncoding : null;\x0d\n  if (defaultEncoding == null || defaultEncoding === 'utf8' || defaultEncoding === 'utf-8') {\x0d\n    this[kState] |= kDefaultUTF8Encoding;\x0d\n  } else if (Buffer.isEncoding(defaultEncoding)) {\x0d\n    this[kState] &= ~kDefaultUTF8Encoding;\x0d\n    this[kDefaultEncodingValue] = defaultEncoding;\x0d\n  } else {\x0d\n    throw new ERR_UNKNOWN_ENCODING(defaultEncoding);\x0d\n  }\x0d\n\x0d\n  // Not an actual buffer we keep track of\x2C but a measurement\x0d\n  // of how much we're waiting to get pushed to some underlying\x0d\n  // socket or file.\x0d\n  this.length = 0;\x0d\n\x0d\n  // When true all writes will be buffered until .uncork() call.\x0d\n  this.corked = 0;\x0d\n\x0d\n  // The callback that's passed to _write(chunk\x2C cb).\x0d\n  this.onwrite = onwrite.bind(undefined\x2C stream);\x0d\n\x0d\n  // The amount that is being written when _write is called.\x0d\n  this.writelen = 0;\x0d\n\x0d\n  resetBuffer(this);\x0d\n\x0d\n  // Number of pending user-supplied write callbacks\x0d\n  // this must be 0 before 'finish' can be emitted.\x0d\n  this.pendingcb = 0;\x0d\n}\x0d\n\x0d\nfunction resetBuffer(state) {\x0d\n  state[kBufferedValue] = null;\x0d\n  state.bufferedIndex = 0;\x0d\n  state[kState] |= kAllBuffers | kAllNoop;\x0d\n  state[kState] &= ~kBuffered;\x0d\n}\x0d\n\x0d\nWritableState.prototype.getBuffer = function getBuffer() {\x0d\n  return (this[kState] & kBuffered) === 0 ? [] : ArrayPrototypeSlice(this.buffered\x2C this.bufferedIndex);\x0d\n};\x0d\n\x0d\nObjectDefineProperty(WritableState.prototype\x2C 'bufferedRequestCount'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return (this[kState] & kBuffered) === 0 ? 0 : this[kBufferedValue].length - this.bufferedIndex;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nWritableState.prototype[kOnConstructed] = function onConstructed(stream) {\x0d\n  if ((this[kState] & kWriting) === 0) {\x0d\n    clearBuffer(stream\x2C this);\x0d\n  }\x0d\n\x0d\n  if ((this[kState] & kEnding) !== 0) {\x0d\n    finishMaybe(stream\x2C this);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction Writable(options) {\x0d\n  if (!(this instanceof Writable))\x0d\n    return new Writable(options);\x0d\n\x0d\n  this._events ??= {\x0d\n    close: undefined\x2C\x0d\n    error: undefined\x2C\x0d\n    prefinish: undefined\x2C\x0d\n    finish: undefined\x2C\x0d\n    drain: undefined\x2C\x0d\n    // Skip uncommon events...\x0d\n    // [destroyImpl.kConstruct]: undefined\x2C\x0d\n    // [destroyImpl.kDestroy]: undefined\x2C\x0d\n  };\x0d\n\x0d\n  this._writableState = new WritableState(options\x2C this\x2C false);\x0d\n\x0d\n  if (options) {\x0d\n    if (typeof options.write === 'function')\x0d\n      this._write = options.write;\x0d\n\x0d\n    if (typeof options.writev === 'function')\x0d\n      this._writev = options.writev;\x0d\n\x0d\n    if (typeof options.destroy === 'function')\x0d\n      this._destroy = options.destroy;\x0d\n\x0d\n    if (typeof options.final === 'function')\x0d\n      this._final = options.final;\x0d\n\x0d\n    if (typeof options.construct === 'function')\x0d\n      this._construct = options.construct;\x0d\n\x0d\n    if (options.signal)\x0d\n      addAbortSignal(options.signal\x2C this);\x0d\n  }\x0d\n\x0d\n  Stream.call(this\x2C options);\x0d\n\x0d\n  if (this._construct != null) {\x0d\n    destroyImpl.construct(this\x2C () => {\x0d\n      this._writableState[kOnConstructed](this);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Writable\x2C SymbolHasInstance\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: function(object) {\x0d\n    if (FunctionPrototypeSymbolHasInstance(this\x2C object)) return true;\x0d\n    if (this !== Writable) return false;\x0d\n\x0d\n    return object && object._writableState instanceof WritableState;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// Otherwise people can pipe Writable streams\x2C which is just wrong.\x0d\nWritable.prototype.pipe = function() {\x0d\n  errorOrDestroy(this\x2C new ERR_STREAM_CANNOT_PIPE());\x0d\n};\x0d\n\x0d\nfunction _write(stream\x2C chunk\x2C encoding\x2C cb) {\x0d\n  const state = stream._writableState;\x0d\n\x0d\n  if (cb == null || typeof cb !== 'function') {\x0d\n    cb = nop;\x0d\n  }\x0d\n\x0d\n  if (chunk === null) {\x0d\n    throw new ERR_STREAM_NULL_VALUES();\x0d\n  }\x0d\n\x0d\n  if ((state[kState] & kObjectMode) === 0) {\x0d\n    if (!encoding) {\x0d\n      encoding = (state[kState] & kDefaultUTF8Encoding) !== 0 ? 'utf8' : state.defaultEncoding;\x0d\n    } else if (encoding !== 'buffer' && !Buffer.isEncoding(encoding)) {\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    }\x0d\n\x0d\n    if (typeof chunk === 'string') {\x0d\n      if ((state[kState] & kDecodeStrings) !== 0) {\x0d\n        chunk = Buffer.from(chunk\x2C encoding);\x0d\n        encoding = 'buffer';\x0d\n      }\x0d\n    } else if (chunk instanceof Buffer) {\x0d\n      encoding = 'buffer';\x0d\n    } else if (Stream._isUint8Array(chunk)) {\x0d\n      chunk = Stream._uint8ArrayToBuffer(chunk);\x0d\n      encoding = 'buffer';\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C chunk);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n  if ((state[kState] & kEnding) !== 0) {\x0d\n    err = new ERR_STREAM_WRITE_AFTER_END();\x0d\n  } else if ((state[kState] & kDestroyed) !== 0) {\x0d\n    err = new ERR_STREAM_DESTROYED('write');\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    process.nextTick(cb\x2C err);\x0d\n    errorOrDestroy(stream\x2C err\x2C true);\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  state.pendingcb++;\x0d\n  return writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C cb);\x0d\n}\x0d\n\x0d\nWritable.prototype.write = function(chunk\x2C encoding\x2C cb) {\x0d\n  if (encoding != null && typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  return _write(this\x2C chunk\x2C encoding\x2C cb) === true;\x0d\n};\x0d\n\x0d\nWritable.prototype.cork = function() {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  state[kState] |= kCorked;\x0d\n  state.corked++;\x0d\n};\x0d\n\x0d\nWritable.prototype.uncork = function() {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  if (state.corked) {\x0d\n    state.corked--;\x0d\n\x0d\n    if (!state.corked) {\x0d\n      state[kState] &= ~kCorked;\x0d\n    }\x0d\n\x0d\n    if ((state[kState] & kWriting) === 0)\x0d\n      clearBuffer(this\x2C state);\x0d\n  }\x0d\n};\x0d\n\x0d\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\x0d\n  // node::ParseEncoding() requires lower case.\x0d\n  if (typeof encoding === 'string')\x0d\n    encoding = StringPrototypeToLowerCase(encoding);\x0d\n  if (!Buffer.isEncoding(encoding))\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n  this._writableState.defaultEncoding = encoding;\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// If we're already writing something\x2C then just put this\x0d\n// in the queue\x2C and wait our turn.  Otherwise\x2C call _write\x0d\n// If we return false\x2C then we need a drain event\x2C so set that flag.\x0d\nfunction writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C callback) {\x0d\n  const len = (state[kState] & kObjectMode) !== 0 ? 1 : chunk.length;\x0d\n\x0d\n  state.length += len;\x0d\n\x0d\n  if ((state[kState] & (kWriting | kErrored | kCorked | kConstructed)) !== kConstructed) {\x0d\n    if ((state[kState] & kBuffered) === 0) {\x0d\n      state[kState] |= kBuffered;\x0d\n      state[kBufferedValue] = [];\x0d\n    }\x0d\n\x0d\n    state[kBufferedValue].push({ chunk\x2C encoding\x2C callback });\x0d\n    if ((state[kState] & kAllBuffers) !== 0 && encoding !== 'buffer') {\x0d\n      state[kState] &= ~kAllBuffers;\x0d\n    }\x0d\n    if ((state[kState] & kAllNoop) !== 0 && callback !== nop) {\x0d\n      state[kState] &= ~kAllNoop;\x0d\n    }\x0d\n  } else {\x0d\n    state.writelen = len;\x0d\n    if (callback !== nop) {\x0d\n      state.writecb = callback;\x0d\n    }\x0d\n    state[kState] |= kWriting | kSync | kExpectWriteCb;\x0d\n    stream._write(chunk\x2C encoding\x2C state.onwrite);\x0d\n    state[kState] &= ~kSync;\x0d\n  }\x0d\n\x0d\n  const ret = state.length < state.highWaterMark;\x0d\n\x0d\n  if (!ret) {\x0d\n    state[kState] |= kNeedDrain;\x0d\n  }\x0d\n\x0d\n  // Return false if errored or destroyed in order to break\x0d\n  // any synchronous while(stream.write(data)) loops.\x0d\n  return ret && (state[kState] & (kDestroyed | kErrored)) === 0;\x0d\n}\x0d\n\x0d\nfunction doWrite(stream\x2C state\x2C writev\x2C len\x2C chunk\x2C encoding\x2C cb) {\x0d\n  state.writelen = len;\x0d\n  if (cb !== nop) {\x0d\n    state.writecb = cb;\x0d\n  }\x0d\n  state[kState] |= kWriting | kSync | kExpectWriteCb;\x0d\n  if ((state[kState] & kDestroyed) !== 0)\x0d\n    state.onwrite(new ERR_STREAM_DESTROYED('write'));\x0d\n  else if (writev)\x0d\n    stream._writev(chunk\x2C state.onwrite);\x0d\n  else\x0d\n    stream._write(chunk\x2C encoding\x2C state.onwrite);\x0d\n  state[kState] &= ~kSync;\x0d\n}\x0d\n\x0d\nfunction onwriteError(stream\x2C state\x2C er\x2C cb) {\x0d\n  --state.pendingcb;\x0d\n\x0d\n  cb(er);\x0d\n  // Ensure callbacks are invoked even when autoDestroy is\x0d\n  // not enabled. Passing `er` here doesn't make sense since\x0d\n  // it's related to one specific write\x2C not to the buffered\x0d\n  // writes.\x0d\n  errorBuffer(state);\x0d\n  // This can emit error\x2C but error must always follow cb.\x0d\n  errorOrDestroy(stream\x2C er);\x0d\n}\x0d\n\x0d\nfunction onwrite(stream\x2C er) {\x0d\n  const state = stream._writableState;\x0d\n\x0d\n  if ((state[kState] & kExpectWriteCb) === 0) {\x0d\n    errorOrDestroy(stream\x2C new ERR_MULTIPLE_CALLBACK());\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const sync = (state[kState] & kSync) !== 0;\x0d\n  const cb = (state[kState] & kWriteCb) !== 0 ? state[kWriteCbValue] : nop;\x0d\n\x0d\n  state[kState] &= ~(kWriting | kExpectWriteCb | kWriteCb);\x0d\n  state.length -= state.writelen;\x0d\n  state.writelen = 0;\x0d\n\x0d\n  if (er) {\x0d\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\x0d\n    er.stack; // eslint-disable-line no-unused-expressions\x0d\n\x0d\n    if ((state[kState] & kErrored) === 0) {\x0d\n      state[kErroredValue] = er;\x0d\n      state[kState] |= kErrored;\x0d\n    }\x0d\n\x0d\n    // In case of duplex streams we need to notify the readable side of the\x0d\n    // error.\x0d\n    if (stream._readableState && !stream._readableState.errored) {\x0d\n      stream._readableState.errored = er;\x0d\n    }\x0d\n\x0d\n    if (sync) {\x0d\n      process.nextTick(onwriteError\x2C stream\x2C state\x2C er\x2C cb);\x0d\n    } else {\x0d\n      onwriteError(stream\x2C state\x2C er\x2C cb);\x0d\n    }\x0d\n  } else {\x0d\n    if ((state[kState] & kBuffered) !== 0) {\x0d\n      clearBuffer(stream\x2C state);\x0d\n    }\x0d\n\x0d\n    if (sync) {\x0d\n      const needDrain = (state[kState] & kNeedDrain) !== 0 && state.length === 0;\x0d\n      const needTick = needDrain || (state[kState] & kDestroyed !== 0) || cb !== nop;\x0d\n\x0d\n      // It is a common case that the callback passed to .write() is always\x0d\n      // the same. In that case\x2C we do not schedule a new nextTick()\x2C but\x0d\n      // rather just increase a counter\x2C to improve performance and avoid\x0d\n      // memory allocations.\x0d\n      if (cb === nop) {\x0d\n        if ((state[kState] & kAfterWritePending) === 0 && needTick) {\x0d\n          process.nextTick(afterWrite\x2C stream\x2C state\x2C 1\x2C cb);\x0d\n          state[kState] |= kAfterWritePending;\x0d\n        } else {\x0d\n          state.pendingcb--;\x0d\n          if ((state[kState] & kEnding) !== 0) {\x0d\n            finishMaybe(stream\x2C state\x2C true);\x0d\n          }\x0d\n        }\x0d\n      } else if ((state[kState] & kAfterWriteTickInfo) !== 0 &&\x0d\n                 state[kAfterWriteTickInfoValue].cb === cb) {\x0d\n        state[kAfterWriteTickInfoValue].count++;\x0d\n      } else if (needTick) {\x0d\n        state[kAfterWriteTickInfoValue] = { count: 1\x2C cb\x2C stream\x2C state };\x0d\n        process.nextTick(afterWriteTick\x2C state[kAfterWriteTickInfoValue]);\x0d\n        state[kState] |= (kAfterWritePending | kAfterWriteTickInfo);\x0d\n      } else {\x0d\n        state.pendingcb--;\x0d\n        if ((state[kState] & kEnding) !== 0) {\x0d\n          finishMaybe(stream\x2C state\x2C true);\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      afterWrite(stream\x2C state\x2C 1\x2C cb);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction afterWriteTick({ stream\x2C state\x2C count\x2C cb }) {\x0d\n  state[kState] &= ~kAfterWriteTickInfo;\x0d\n  state[kAfterWriteTickInfoValue] = null;\x0d\n  return afterWrite(stream\x2C state\x2C count\x2C cb);\x0d\n}\x0d\n\x0d\nfunction afterWrite(stream\x2C state\x2C count\x2C cb) {\x0d\n  state[kState] &= ~kAfterWritePending;\x0d\n\x0d\n  const needDrain = (state[kState] & (kEnding | kNeedDrain | kDestroyed)) === kNeedDrain && state.length === 0;\x0d\n  if (needDrain) {\x0d\n    state[kState] &= ~kNeedDrain;\x0d\n    stream.emit('drain');\x0d\n  }\x0d\n\x0d\n  while (count-- > 0) {\x0d\n    state.pendingcb--;\x0d\n    cb(null);\x0d\n  }\x0d\n\x0d\n  if ((state[kState] & kDestroyed) !== 0) {\x0d\n    errorBuffer(state);\x0d\n  }\x0d\n\x0d\n  if ((state[kState] & kEnding) !== 0) {\x0d\n    finishMaybe(stream\x2C state\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\n// If there's something in the buffer waiting\x2C then invoke callbacks.\x0d\nfunction errorBuffer(state) {\x0d\n  if ((state[kState] & kWriting) !== 0) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if ((state[kState] & kBuffered) !== 0) {\x0d\n    for (let n = state.bufferedIndex; n < state.buffered.length; ++n) {\x0d\n      const { chunk\x2C callback } = state[kBufferedValue][n];\x0d\n      const len = (state[kState] & kObjectMode) !== 0 ? 1 : chunk.length;\x0d\n      state.length -= len;\x0d\n      callback(state.errored ?? new ERR_STREAM_DESTROYED('write'));\x0d\n    }\x0d\n  }\x0d\n\x0d\n\x0d\n  callFinishedCallbacks(state\x2C state.errored ?? new ERR_STREAM_DESTROYED('end'));\x0d\n\x0d\n  resetBuffer(state);\x0d\n}\x0d\n\x0d\n// If there's something in the buffer waiting\x2C then process it.\x0d\nfunction clearBuffer(stream\x2C state) {\x0d\n  if ((state[kState] & (kDestroyed | kBufferProcessing | kCorked | kBuffered | kConstructed)) !==\x0d\n      (kBuffered | kConstructed)) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const objectMode = (state[kState] & kObjectMode) !== 0;\x0d\n  const { [kBufferedValue]: buffered\x2C bufferedIndex } = state;\x0d\n  const bufferedLength = buffered.length - bufferedIndex;\x0d\n\x0d\n  if (!bufferedLength) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  let i = bufferedIndex;\x0d\n\x0d\n  state[kState] |= kBufferProcessing;\x0d\n  if (bufferedLength > 1 && stream._writev) {\x0d\n    state.pendingcb -= bufferedLength - 1;\x0d\n\x0d\n    const callback = (state[kState] & kAllNoop) !== 0 ? nop : (err) => {\x0d\n      for (let n = i; n < buffered.length; ++n) {\x0d\n        buffered[n].callback(err);\x0d\n      }\x0d\n    };\x0d\n    // Make a copy of `buffered` if it's going to be used by `callback` above\x2C\x0d\n    // since `doWrite` will mutate the array.\x0d\n    const chunks = (state[kState] & kAllNoop) !== 0 && i === 0 ?\x0d\n      buffered : ArrayPrototypeSlice(buffered\x2C i);\x0d\n    chunks.allBuffers = (state[kState] & kAllBuffers) !== 0;\x0d\n\x0d\n    doWrite(stream\x2C state\x2C true\x2C state.length\x2C chunks\x2C ''\x2C callback);\x0d\n\x0d\n    resetBuffer(state);\x0d\n  } else {\x0d\n    do {\x0d\n      const { chunk\x2C encoding\x2C callback } = buffered[i];\x0d\n      buffered[i++] = null;\x0d\n      const len = objectMode ? 1 : chunk.length;\x0d\n      doWrite(stream\x2C state\x2C false\x2C len\x2C chunk\x2C encoding\x2C callback);\x0d\n    } while (i < buffered.length && (state[kState] & kWriting) === 0);\x0d\n\x0d\n    if (i === buffered.length) {\x0d\n      resetBuffer(state);\x0d\n    } else if (i > 256) {\x0d\n      buffered.splice(0\x2C i);\x0d\n      state.bufferedIndex = 0;\x0d\n    } else {\x0d\n      state.bufferedIndex = i;\x0d\n    }\x0d\n  }\x0d\n  state[kState] &= ~kBufferProcessing;\x0d\n}\x0d\n\x0d\nWritable.prototype._write = function(chunk\x2C encoding\x2C cb) {\x0d\n  if (this._writev) {\x0d\n    this._writev([{ chunk\x2C encoding }]\x2C cb);\x0d\n  } else {\x0d\n    throw new ERR_METHOD_NOT_IMPLEMENTED('_write()');\x0d\n  }\x0d\n};\x0d\n\x0d\nWritable.prototype._writev = null;\x0d\n\x0d\nWritable.prototype.end = function(chunk\x2C encoding\x2C cb) {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  if (typeof chunk === 'function') {\x0d\n    cb = chunk;\x0d\n    chunk = null;\x0d\n    encoding = null;\x0d\n  } else if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n\x0d\n  if (chunk != null) {\x0d\n    const ret = _write(this\x2C chunk\x2C encoding);\x0d\n    if (ret instanceof Error) {\x0d\n      err = ret;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // .end() fully uncorks.\x0d\n  if ((state[kState] & kCorked) !== 0) {\x0d\n    state.corked = 1;\x0d\n    this.uncork();\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    // Do nothing...\x0d\n  } else if ((state[kState] & (kEnding | kErrored)) === 0) {\x0d\n    // This is forgiving in terms of unnecessary calls to end() and can hide\x0d\n    // logic errors. However\x2C usually such errors are harmless and causing a\x0d\n    // hard error can be disproportionately destructive. It is not always\x0d\n    // trivial for the user to determine whether end() needs to be called\x0d\n    // or not.\x0d\n\x0d\n    state[kState] |= kEnding;\x0d\n    finishMaybe(this\x2C state\x2C true);\x0d\n    state[kState] |= kEnded;\x0d\n  } else if ((state[kState] & kFinished) !== 0) {\x0d\n    err = new ERR_STREAM_ALREADY_FINISHED('end');\x0d\n  } else if ((state[kState] & kDestroyed) !== 0) {\x0d\n    err = new ERR_STREAM_DESTROYED('end');\x0d\n  }\x0d\n\x0d\n  if (typeof cb === 'function') {\x0d\n    if (err) {\x0d\n      process.nextTick(cb\x2C err);\x0d\n    } else if ((state[kState] & kErrored) !== 0) {\x0d\n      process.nextTick(cb\x2C state[kErroredValue]);\x0d\n    } else if ((state[kState] & kFinished) !== 0) {\x0d\n      process.nextTick(cb\x2C null);\x0d\n    } else {\x0d\n      state[kState] |= kOnFinished;\x0d\n      state[kOnFinishedValue] ??= [];\x0d\n      state[kOnFinishedValue].push(cb);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction needFinish(state) {\x0d\n  return (\x0d\n    // State is ended && constructed but not destroyed\x2C finished\x2C writing\x2C errorEmitted or closedEmitted\x0d\n    (state[kState] & (\x0d\n      kEnding |\x0d\n          kDestroyed |\x0d\n          kConstructed |\x0d\n          kFinished |\x0d\n          kWriting |\x0d\n          kErrorEmitted |\x0d\n          kCloseEmitted |\x0d\n          kErrored |\x0d\n          kBuffered\x0d\n    )) === (kEnding | kConstructed) && state.length === 0);\x0d\n}\x0d\n\x0d\nfunction onFinish(stream\x2C state\x2C err) {\x0d\n  if ((state[kState] & kPrefinished) !== 0) {\x0d\n    errorOrDestroy(stream\x2C err ?? ERR_MULTIPLE_CALLBACK());\x0d\n    return;\x0d\n  }\x0d\n  state.pendingcb--;\x0d\n  if (err) {\x0d\n    callFinishedCallbacks(state\x2C err);\x0d\n    errorOrDestroy(stream\x2C err\x2C (state[kState] & kSync) !== 0);\x0d\n  } else if (needFinish(state)) {\x0d\n    state[kState] |= kPrefinished;\x0d\n    stream.emit('prefinish');\x0d\n    // Backwards compat. Don't check state.sync here.\x0d\n    // Some streams assume 'finish' will be emitted\x0d\n    // asynchronously relative to _final callback.\x0d\n    state.pendingcb++;\x0d\n    process.nextTick(finish\x2C stream\x2C state);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction prefinish(stream\x2C state) {\x0d\n  if ((state[kState] & (kPrefinished | kFinalCalled)) !== 0) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (typeof stream._final === 'function' && (state[kState] & kDestroyed) === 0) {\x0d\n    state[kState] |= kFinalCalled | kSync;\x0d\n    state.pendingcb++;\x0d\n\x0d\n    try {\x0d\n      stream._final((err) => onFinish(stream\x2C state\x2C err));\x0d\n    } catch (err) {\x0d\n      onFinish(stream\x2C state\x2C err);\x0d\n    }\x0d\n\x0d\n    state[kState] &= ~kSync;\x0d\n  } else {\x0d\n    state[kState] |= kFinalCalled | kPrefinished;\x0d\n    stream.emit('prefinish');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction finishMaybe(stream\x2C state\x2C sync) {\x0d\n  if (needFinish(state)) {\x0d\n    prefinish(stream\x2C state);\x0d\n    if (state.pendingcb === 0) {\x0d\n      if (sync) {\x0d\n        state.pendingcb++;\x0d\n        process.nextTick((stream\x2C state) => {\x0d\n          if (needFinish(state)) {\x0d\n            finish(stream\x2C state);\x0d\n          } else {\x0d\n            state.pendingcb--;\x0d\n          }\x0d\n        }\x2C stream\x2C state);\x0d\n      } else if (needFinish(state)) {\x0d\n        state.pendingcb++;\x0d\n        finish(stream\x2C state);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction finish(stream\x2C state) {\x0d\n  state.pendingcb--;\x0d\n  state[kState] |= kFinished;\x0d\n\x0d\n  callFinishedCallbacks(state\x2C null);\x0d\n\x0d\n  stream.emit('finish');\x0d\n\x0d\n  if ((state[kState] & kAutoDestroy) !== 0) {\x0d\n    // In case of duplex streams we need a way to detect\x0d\n    // if the readable side is ready for autoDestroy as well.\x0d\n    const rState = stream._readableState;\x0d\n    const autoDestroy = !rState || (\x0d\n      rState.autoDestroy &&\x0d\n      // We don't expect the readable to ever 'end'\x0d\n      // if readable is explicitly set to false.\x0d\n      (rState.endEmitted || rState.readable === false)\x0d\n    );\x0d\n    if (autoDestroy) {\x0d\n      stream.destroy();\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction callFinishedCallbacks(state\x2C err) {\x0d\n  if ((state[kState] & kOnFinished) === 0) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const onfinishCallbacks = state[kOnFinishedValue];\x0d\n  state[kOnFinishedValue] = null;\x0d\n  state[kState] &= ~kOnFinished;\x0d\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\x0d\n    onfinishCallbacks[i](err);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(Writable.prototype\x2C {\x0d\n  closed: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._writableState ? (this._writableState[kState] & kClosed) !== 0 : false;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  destroyed: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._writableState ? (this._writableState[kState] & kDestroyed) !== 0 : false;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      // Backward compatibility\x2C the user is explicitly managing destroyed.\x0d\n      if (!this._writableState) return;\x0d\n\x0d\n      if (value) this._writableState[kState] |= kDestroyed;\x0d\n      else this._writableState[kState] &= ~kDestroyed;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  writable: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      const w = this._writableState;\x0d\n      // w.writable === false means that this is part of a Duplex stream\x0d\n      // where the writable side was disabled upon construction.\x0d\n      // Compat. The user might manually disable writable side through\x0d\n      // deprecated setter.\x0d\n      return !!w && w.writable !== false && !w.errored &&\x0d\n        (w[kState] & (kEnding | kEnded | kDestroyed)) === 0;\x0d\n    }\x2C\x0d\n    set(val) {\x0d\n      // Backwards compatible.\x0d\n      if (this._writableState) {\x0d\n        this._writableState.writable = !!val;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  writableFinished: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      const state = this._writableState;\x0d\n      return state ? (state[kState] & kFinished) !== 0 : false;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  writableObjectMode: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      const state = this._writableState;\x0d\n      return state ? (state[kState] & kObjectMode) !== 0 : false;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  writableBuffer: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      const state = this._writableState;\x0d\n      return state && state.getBuffer();\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  writableEnded: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      const state = this._writableState;\x0d\n      return state ? (state[kState] & kEnding) !== 0 : false;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  writableNeedDrain: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      const state = this._writableState;\x0d\n      return state ? (state[kState] & (kDestroyed | kEnding | kNeedDrain)) === kNeedDrain : false;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  writableHighWaterMark: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      const state = this._writableState;\x0d\n      return state && state.highWaterMark;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  writableCorked: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      const state = this._writableState;\x0d\n      return state ? state.corked : 0;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  writableLength: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      const state = this._writableState;\x0d\n      return state && state.length;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  errored: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      const state = this._writableState;\x0d\n      return state ? state.errored : null;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  writableAborted: {\x0d\n    __proto__: null\x2C\x0d\n    get: function() {\x0d\n      const state = this._writableState;\x0d\n      return (\x0d\n        (state[kState] & (kHasWritable | kWritable)) !== kHasWritable &&\x0d\n        (state[kState] & (kDestroyed | kErrored)) !== 0 &&\x0d\n        (state[kState] & kFinished) === 0\x0d\n      );\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nconst destroy = destroyImpl.destroy;\x0d\nWritable.prototype.destroy = function(err\x2C cb) {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  // Invoke pending callbacks.\x0d\n  if ((state[kState] & (kBuffered | kOnFinished)) !== 0 && (state[kState] & kDestroyed) === 0) {\x0d\n    process.nextTick(errorBuffer\x2C state);\x0d\n  }\x0d\n\x0d\n  destroy.call(this\x2C err\x2C cb);\x0d\n  return this;\x0d\n};\x0d\n\x0d\nWritable.prototype._undestroy = destroyImpl.undestroy;\x0d\nWritable.prototype._destroy = function(err\x2C cb) {\x0d\n  cb(err);\x0d\n};\x0d\n\x0d\nWritable.prototype[EE.captureRejectionSymbol] = function(err) {\x0d\n  this.destroy(err);\x0d\n};\x0d\n\x0d\nlet webStreamsAdapters;\x0d\n\x0d\n// Lazy to avoid circular references\x0d\nfunction lazyWebStreams() {\x0d\n  if (webStreamsAdapters === undefined)\x0d\n    webStreamsAdapters = require('internal/webstreams/adapters');\x0d\n  return webStreamsAdapters;\x0d\n}\x0d\n\x0d\nWritable.fromWeb = function(writableStream\x2C options) {\x0d\n  return lazyWebStreams().newStreamWritableFromWritableStream(\x0d\n    writableStream\x2C\x0d\n    options);\x0d\n};\x0d\n\x0d\nWritable.toWeb = function(streamWritable) {\x0d\n  return lazyWebStreams().newWritableStreamFromStreamWritable(streamWritable);\x0d\n};\x0d\n
code-source-info,0x9b20b7f31c,102,0,34230,C0O0C4O34230,,
code-creation,JS,10,151697,0x10fd4182a9c,2109, node:internal/streams/writable:1:1,0x9b20b7f290,~
code-source-info,0x10fd4182a9c
code-creation,JS,10,152164,0x10fd4184a4c,33,makeBitMapDescriptor node:internal/streams/writable:120:30,0x9b20b7f3a8,~
code-source-info,0x10fd4184a4c,102,3832,4034,C0O3832C9O3843C14O3881C22O3932C32O4031,,
code-creation,Eval,10,152465,0x10fd4188ee4,5, node:stream/promises:1:1,0x10fd4188d30,~
script-source,103,node:stream/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePop\x2C\x0d\n  Promise\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  isIterable\x2C\x0d\n  isNodeStream\x2C\x0d\n  isWebStream\x2C\x0d\n} = require('internal/streams/utils');\x0d\n\x0d\nconst { pipelineImpl: pl } = require('internal/streams/pipeline');\x0d\nconst { finished } = require('internal/streams/end-of-stream');\x0d\n\x0d\nrequire('stream');\x0d\n\x0d\nfunction pipeline(...streams) {\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    let signal;\x0d\n    let end;\x0d\n    const lastArg = streams[streams.length - 1];\x0d\n    if (lastArg && typeof lastArg === 'object' &&\x0d\n        !isNodeStream(lastArg) && !isIterable(lastArg) && !isWebStream(lastArg)) {\x0d\n      const options = ArrayPrototypePop(streams);\x0d\n      signal = options.signal;\x0d\n      end = options.end;\x0d\n    }\x0d\n\x0d\n    pl(streams\x2C (err\x2C value) => {\x0d\n      if (err) {\x0d\n        reject(err);\x0d\n      } else {\x0d\n        resolve(value);\x0d\n      }\x0d\n    }\x2C { signal\x2C end });\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  finished\x2C\x0d\n  pipeline\x2C\x0d\n};\x0d\n
code-source-info,0x10fd4188ee4,103,0,961,C0O0C4O961,,
code-creation,JS,10,152537,0x10fd418906c,125, node:stream/promises:1:1,0x10fd4188e58,~
code-source-info,0x10fd418906c,103,0,961,C0O0C28O28C34O50C40O141C43O141C48O91C54O106C60O123C66O208C69O208C74O201C80O268C83O268C88O255C93O314C96O314C100O911C107O933C113O946C119O926C124O960,,
code-creation,Eval,10,152786,0x10fd4189fcc,5, node:internal/streams/transform:1:1,0x10fd4189df8,~
script-source,104,node:internal/streams/transform,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// a transform stream is a readable/writable stream where you do\x0d\n// something with the data.  Sometimes it's called a "filter"\x2C\x0d\n// but that's not a great name for it\x2C since that implies a thing where\x0d\n// some bits pass through\x2C and others are simply ignored.  (That would\x0d\n// be a valid example of a transform\x2C of course.)\x0d\n//\x0d\n// While the output is causally related to the input\x2C it's not a\x0d\n// necessarily symmetric or synchronous transformation.  For example\x2C\x0d\n// a zlib stream might take multiple plain-text writes()\x2C and then\x0d\n// emit a single compressed chunk some time in the future.\x0d\n//\x0d\n// Here's how this works:\x0d\n//\x0d\n// The Transform stream has all the aspects of the readable and writable\x0d\n// stream classes.  When you write(chunk)\x2C that calls _write(chunk\x2Ccb)\x0d\n// internally\x2C and returns false if there's a lot of pending writes\x0d\n// buffered up.  When you call read()\x2C that calls _read(n) until\x0d\n// there's enough pending readable data buffered up.\x0d\n//\x0d\n// In a transform stream\x2C the written data is placed in a buffer.  When\x0d\n// _read(n) is called\x2C it transforms the queued up data\x2C calling the\x0d\n// buffered _write cb's as it consumes chunks.  If consuming a single\x0d\n// written chunk would result in multiple output chunks\x2C then the first\x0d\n// outputted bit calls the readcb\x2C and subsequent chunks just go into\x0d\n// the read buffer\x2C and will cause it to emit 'readable' if necessary.\x0d\n//\x0d\n// This way\x2C back-pressure is actually determined by the reading side\x2C\x0d\n// since _read has to be called to start processing a new chunk.  However\x2C\x0d\n// a pathological inflate type of transform can cause excessive buffering\x0d\n// here.  For example\x2C imagine a stream where every byte of input is\x0d\n// interpreted as an integer from 0-255\x2C and then results in that many\x0d\n// bytes of output.  Writing the 4 bytes {ff\x2Cff\x2Cff\x2Cff} would result in\x0d\n// 1kb of data being output.  In this case\x2C you could write a very small\x0d\n// amount of input\x2C and end up with a very large amount of output.  In\x0d\n// such a pathological inflating mechanism\x2C there'd be no way to tell\x0d\n// the system to stop doing the transform.  A single 4MB write could\x0d\n// cause the system to run out of memory.\x0d\n//\x0d\n// However\x2C even in such a pathological case\x2C only a single written chunk\x0d\n// would be consumed\x2C and then the rest would wait (un-transformed) until\x0d\n// the results of the previous transformed chunk were consumed.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Transform;\x0d\nconst {\x0d\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst Duplex = require('internal/streams/duplex');\x0d\nconst { getHighWaterMark } = require('internal/streams/state');\x0d\nObjectSetPrototypeOf(Transform.prototype\x2C Duplex.prototype);\x0d\nObjectSetPrototypeOf(Transform\x2C Duplex);\x0d\n\x0d\nconst kCallback = Symbol('kCallback');\x0d\n\x0d\nfunction Transform(options) {\x0d\n  if (!(this instanceof Transform))\x0d\n    return new Transform(options);\x0d\n\x0d\n  // TODO (ronag): This should preferably always be\x0d\n  // applied but would be semver-major. Or even better;\x0d\n  // make Transform a Readable with the Writable interface.\x0d\n  const readableHighWaterMark = options ? getHighWaterMark(this\x2C options\x2C 'readableHighWaterMark'\x2C true) : null;\x0d\n  if (readableHighWaterMark === 0) {\x0d\n    // A Duplex will buffer both on the writable and readable side while\x0d\n    // a Transform just wants to buffer hwm number of elements. To avoid\x0d\n    // buffering twice we disable buffering on the writable side.\x0d\n    options = {\x0d\n      ...options\x2C\x0d\n      highWaterMark: null\x2C\x0d\n      readableHighWaterMark\x2C\x0d\n      writableHighWaterMark: options.writableHighWaterMark || 0\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  Duplex.call(this\x2C options);\x0d\n\x0d\n  // We have implemented the _read method\x2C and done the other things\x0d\n  // that Readable wants before the first _read call\x2C so unset the\x0d\n  // sync guard flag.\x0d\n  this._readableState.sync = false;\x0d\n\x0d\n  this[kCallback] = null;\x0d\n\x0d\n  if (options) {\x0d\n    if (typeof options.transform === 'function')\x0d\n      this._transform = options.transform;\x0d\n\x0d\n    if (typeof options.flush === 'function')\x0d\n      this._flush = options.flush;\x0d\n  }\x0d\n\x0d\n  // When the writable side finishes\x2C then flush out anything remaining.\x0d\n  // Backwards compat. Some Transform streams incorrectly implement _final\x0d\n  // instead of or in addition to _flush. By using 'prefinish' instead of\x0d\n  // implementing _final we continue supporting this unfortunate use case.\x0d\n  this.on('prefinish'\x2C prefinish);\x0d\n}\x0d\n\x0d\nfunction final(cb) {\x0d\n  if (typeof this._flush === 'function' && !this.destroyed) {\x0d\n    this._flush((er\x2C data) => {\x0d\n      if (er) {\x0d\n        if (cb) {\x0d\n          cb(er);\x0d\n        } else {\x0d\n          this.destroy(er);\x0d\n        }\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      if (data != null) {\x0d\n        this.push(data);\x0d\n      }\x0d\n      this.push(null);\x0d\n      if (cb) {\x0d\n        cb();\x0d\n      }\x0d\n    });\x0d\n  } else {\x0d\n    this.push(null);\x0d\n    if (cb) {\x0d\n      cb();\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction prefinish() {\x0d\n  if (this._final !== final) {\x0d\n    final.call(this);\x0d\n  }\x0d\n}\x0d\n\x0d\nTransform.prototype._final = final;\x0d\n\x0d\nTransform.prototype._transform = function(chunk\x2C encoding\x2C callback) {\x0d\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_transform()');\x0d\n};\x0d\n\x0d\nTransform.prototype._write = function(chunk\x2C encoding\x2C callback) {\x0d\n  const rState = this._readableState;\x0d\n  const wState = this._writableState;\x0d\n  const length = rState.length;\x0d\n\x0d\n  this._transform(chunk\x2C encoding\x2C (err\x2C val) => {\x0d\n    if (err) {\x0d\n      callback(err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (val != null) {\x0d\n      this.push(val);\x0d\n    }\x0d\n\x0d\n    if (rState.ended) {\x0d\n      // If user has called this.push(null) we have to\x0d\n      // delay the callback to properly progate the new\x0d\n      // state.\x0d\n      process.nextTick(callback);\x0d\n    } else if (\x0d\n      wState.ended || // Backwards compat.\x0d\n      length === rState.length || // Backwards compat.\x0d\n      rState.length < rState.highWaterMark\x0d\n    ) {\x0d\n      callback();\x0d\n    } else {\x0d\n      this[kCallback] = callback;\x0d\n    }\x0d\n  });\x0d\n};\x0d\n\x0d\nTransform.prototype._read = function() {\x0d\n  if (this[kCallback]) {\x0d\n    const callback = this[kCallback];\x0d\n    this[kCallback] = null;\x0d\n    callback();\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x10fd4189fcc,104,0,7325,C0O0C4O7325,,
code-creation,JS,10,153125,0x10fd418a3b4,202, node:internal/streams/transform:1:1,0x10fd4189f40,~
code-source-info,0x10fd418a3b4,104,0,7325,C0O0C39O3574C44O3599C49O3628C51O3643C55O3701C58O3701C63O3727C68O3668C74O3751C77O3751C81O3751C83O3817C86O3817C91O3796C97O3853C100O3884C108O3902C113O3853C118O3915C124O3915C129O3977C132O3977C136O3977C138O6190C141O6200C148O6217C152O6229C155O6239C164O6260C168O6364C171O6374C180O6391C184O7163C187O7173C196O7189C201O7324,,
code-creation,Eval,10,153266,0x10fd418ac34,5, node:internal/streams/passthrough:1:1,0x10fd418aac0,~
script-source,105,node:internal/streams/passthrough,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// a passthrough stream.\x0d\n// basically just the most minimal sort of Transform stream.\x0d\n// Every written chunk gets output as-is.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = PassThrough;\x0d\n\x0d\nconst Transform = require('internal/streams/transform');\x0d\nObjectSetPrototypeOf(PassThrough.prototype\x2C Transform.prototype);\x0d\nObjectSetPrototypeOf(PassThrough\x2C Transform);\x0d\n\x0d\nfunction PassThrough(options) {\x0d\n  if (!(this instanceof PassThrough))\x0d\n    return new PassThrough(options);\x0d\n\x0d\n  Transform.call(this\x2C options);\x0d\n}\x0d\n\x0d\nPassThrough.prototype._transform = function(chunk\x2C encoding\x2C cb) {\x0d\n  cb(null\x2C chunk);\x0d\n};\x0d\n
code-source-info,0x10fd418ac34,105,0,1809,C0O0C4O1809,,
code-creation,JS,10,153366,0x10fd418addc,84, node:internal/streams/passthrough:1:1,0x10fd418aba8,~
code-source-info,0x10fd418addc,105,0,1809,C0O0C14O1316C19O1359C21O1374C25O1410C28O1410C32O1410C34O1450C37O1483C45O1504C50O1450C55O1517C61O1517C66O1717C69O1729C78O1750C83O1808,,
code-creation,Eval,10,153863,0x10fd4192924,5, node:internal/stream_base_commons:1:1,0x10fd41925e0,~
script-source,106,node:internal/stream_base_commons,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { FastBuffer } = require('internal/buffer');\x0d\nconst {\x0d\n  WriteWrap\x2C\x0d\n  kReadBytesOrError\x2C\x0d\n  kArrayBufferOffset\x2C\x0d\n  kBytesWritten\x2C\x0d\n  kLastWriteWasAsync\x2C\x0d\n  streamBaseState\x2C\x0d\n} = internalBinding('stream_wrap');\x0d\nconst { UV_EOF } = internalBinding('uv');\x0d\nconst {\x0d\n  ErrnoException\x2C\x0d\n} = require('internal/errors');\x0d\nconst { owner_symbol } = require('internal/async_hooks').symbols;\x0d\nconst {\x0d\n  kTimeout\x2C\x0d\n  setUnrefTimeout\x2C\x0d\n  getTimerDuration\x2C\x0d\n} = require('internal/timers');\x0d\nconst { isUint8Array } = require('internal/util/types');\x0d\nconst { clearTimeout } = require('timers');\x0d\nconst { validateFunction } = require('internal/validators');\x0d\n\x0d\nconst kMaybeDestroy = Symbol('kMaybeDestroy');\x0d\nconst kUpdateTimer = Symbol('kUpdateTimer');\x0d\nconst kAfterAsyncWrite = Symbol('kAfterAsyncWrite');\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kSession = Symbol('kSession');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('stream'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst kBuffer = Symbol('kBuffer');\x0d\nconst kBufferGen = Symbol('kBufferGen');\x0d\nconst kBufferCb = Symbol('kBufferCb');\x0d\n\x0d\nfunction handleWriteReq(req\x2C data\x2C encoding) {\x0d\n  const { handle } = req;\x0d\n\x0d\n  switch (encoding) {\x0d\n    case 'buffer':\x0d\n    {\x0d\n      const ret = handle.writeBuffer(req\x2C data);\x0d\n      if (streamBaseState[kLastWriteWasAsync])\x0d\n        req.buffer = data;\x0d\n      return ret;\x0d\n    }\x0d\n    case 'latin1':\x0d\n    case 'binary':\x0d\n      return handle.writeLatin1String(req\x2C data);\x0d\n    case 'utf8':\x0d\n    case 'utf-8':\x0d\n      return handle.writeUtf8String(req\x2C data);\x0d\n    case 'ascii':\x0d\n      return handle.writeAsciiString(req\x2C data);\x0d\n    case 'ucs2':\x0d\n    case 'ucs-2':\x0d\n    case 'utf16le':\x0d\n    case 'utf-16le':\x0d\n      return handle.writeUcs2String(req\x2C data);\x0d\n    default:\x0d\n    {\x0d\n      const buffer = Buffer.from(data\x2C encoding);\x0d\n      const ret = handle.writeBuffer(req\x2C buffer);\x0d\n      if (streamBaseState[kLastWriteWasAsync])\x0d\n        req.buffer = buffer;\x0d\n      return ret;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onWriteComplete(status) {\x0d\n  debug('onWriteComplete'\x2C status\x2C this.error);\x0d\n\x0d\n  const stream = this.handle[owner_symbol];\x0d\n\x0d\n  if (stream.destroyed) {\x0d\n    if (typeof this.callback === 'function')\x0d\n      this.callback(null);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // TODO (ronag): This should be moved before if(stream.destroyed)\x0d\n  // in order to avoid swallowing error.\x0d\n  if (status < 0) {\x0d\n    const ex = new ErrnoException(status\x2C 'write'\x2C this.error);\x0d\n    if (typeof this.callback === 'function')\x0d\n      this.callback(ex);\x0d\n    else\x0d\n      stream.destroy(ex);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  stream[kUpdateTimer]();\x0d\n  stream[kAfterAsyncWrite](this);\x0d\n\x0d\n  if (typeof this.callback === 'function')\x0d\n    this.callback(null);\x0d\n}\x0d\n\x0d\nfunction createWriteWrap(handle\x2C callback) {\x0d\n  const req = new WriteWrap();\x0d\n\x0d\n  req.handle = handle;\x0d\n  req.oncomplete = onWriteComplete;\x0d\n  req.async = false;\x0d\n  req.bytes = 0;\x0d\n  req.buffer = null;\x0d\n  req.callback = callback;\x0d\n\x0d\n  return req;\x0d\n}\x0d\n\x0d\nfunction writevGeneric(self\x2C data\x2C cb) {\x0d\n  const req = createWriteWrap(self[kHandle]\x2C cb);\x0d\n  const allBuffers = data.allBuffers;\x0d\n  let chunks;\x0d\n  if (allBuffers) {\x0d\n    chunks = data;\x0d\n    for (let i = 0; i < data.length; i++)\x0d\n      data[i] = data[i].chunk;\x0d\n  } else {\x0d\n    chunks = new Array(data.length << 1);\x0d\n    for (let i = 0; i < data.length; i++) {\x0d\n      const entry = data[i];\x0d\n      chunks[i * 2] = entry.chunk;\x0d\n      chunks[i * 2 + 1] = entry.encoding;\x0d\n    }\x0d\n  }\x0d\n  const err = req.handle.writev(req\x2C chunks\x2C allBuffers);\x0d\n\x0d\n  // Retain chunks\x0d\n  if (err === 0) req._chunks = chunks;\x0d\n\x0d\n  afterWriteDispatched(req\x2C err\x2C cb);\x0d\n  return req;\x0d\n}\x0d\n\x0d\nfunction writeGeneric(self\x2C data\x2C encoding\x2C cb) {\x0d\n  const req = createWriteWrap(self[kHandle]\x2C cb);\x0d\n  const err = handleWriteReq(req\x2C data\x2C encoding);\x0d\n\x0d\n  afterWriteDispatched(req\x2C err\x2C cb);\x0d\n  return req;\x0d\n}\x0d\n\x0d\nfunction afterWriteDispatched(req\x2C err\x2C cb) {\x0d\n  req.bytes = streamBaseState[kBytesWritten];\x0d\n  req.async = !!streamBaseState[kLastWriteWasAsync];\x0d\n\x0d\n  if (err !== 0)\x0d\n    return cb(new ErrnoException(err\x2C 'write'\x2C req.error));\x0d\n\x0d\n  if (!req.async && typeof req.callback === 'function') {\x0d\n    req.callback();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onStreamRead(arrayBuffer) {\x0d\n  const nread = streamBaseState[kReadBytesOrError];\x0d\n\x0d\n  const handle = this;\x0d\n  const stream = this[owner_symbol];\x0d\n\x0d\n  stream[kUpdateTimer]();\x0d\n\x0d\n  if (nread > 0 && !stream.destroyed) {\x0d\n    let ret;\x0d\n    let result;\x0d\n    const userBuf = stream[kBuffer];\x0d\n    if (userBuf) {\x0d\n      result = (stream[kBufferCb](nread\x2C userBuf) !== false);\x0d\n      const bufGen = stream[kBufferGen];\x0d\n      if (bufGen !== null) {\x0d\n        const nextBuf = bufGen();\x0d\n        if (isUint8Array(nextBuf))\x0d\n          stream[kBuffer] = ret = nextBuf;\x0d\n      }\x0d\n    } else {\x0d\n      const offset = streamBaseState[kArrayBufferOffset];\x0d\n      const buf = new FastBuffer(arrayBuffer\x2C offset\x2C nread);\x0d\n      result = stream.push(buf);\x0d\n    }\x0d\n    if (!result) {\x0d\n      handle.reading = false;\x0d\n      if (!stream.destroyed) {\x0d\n        const err = handle.readStop();\x0d\n        if (err)\x0d\n          stream.destroy(new ErrnoException(err\x2C 'read'));\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  if (nread === 0) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // After seeing EOF\x2C most streams will be closed permanently\x2C\x0d\n  // and will not deliver any more read events after this point.\x0d\n  // (equivalently\x2C it should have called readStop on itself already).\x0d\n  // Some streams may be reset and explicitly started again with a call\x0d\n  // to readStart\x2C such as TTY.\x0d\n\x0d\n  if (nread !== UV_EOF) {\x0d\n    // CallJSOnreadMethod expects the return value to be a buffer.\x0d\n    // Ref: https://github.com/nodejs/node/pull/34375\x0d\n    stream.destroy(new ErrnoException(nread\x2C 'read'));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Defer this until we actually emit end\x0d\n  if (stream._readableState.endEmitted) {\x0d\n    if (stream[kMaybeDestroy])\x0d\n      stream[kMaybeDestroy]();\x0d\n  } else {\x0d\n    if (stream[kMaybeDestroy])\x0d\n      stream.on('end'\x2C stream[kMaybeDestroy]);\x0d\n\x0d\n    // Push a null to signal the end of data.\x0d\n    // Do it before `maybeDestroy` for correct order of events:\x0d\n    // `end` -> `close`\x0d\n    stream.push(null);\x0d\n    stream.read(0);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setStreamTimeout(msecs\x2C callback) {\x0d\n  if (this.destroyed)\x0d\n    return this;\x0d\n\x0d\n  this.timeout = msecs;\x0d\n\x0d\n  // Type checking identical to timers.enroll()\x0d\n  msecs = getTimerDuration(msecs\x2C 'msecs');\x0d\n\x0d\n  // Attempt to clear an existing timer in both cases -\x0d\n  //  even if it will be rescheduled we don't want to leak an existing timer.\x0d\n  clearTimeout(this[kTimeout]);\x0d\n\x0d\n  if (msecs === 0) {\x0d\n    if (callback !== undefined) {\x0d\n      validateFunction(callback\x2C 'callback');\x0d\n      this.removeListener('timeout'\x2C callback);\x0d\n    }\x0d\n  } else {\x0d\n    this[kTimeout] = setUnrefTimeout(this._onTimeout.bind(this)\x2C msecs);\x0d\n    if (this[kSession]) this[kSession][kUpdateTimer]();\x0d\n\x0d\n    if (callback !== undefined) {\x0d\n      validateFunction(callback\x2C 'callback');\x0d\n      this.once('timeout'\x2C callback);\x0d\n    }\x0d\n  }\x0d\n  return this;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  writevGeneric\x2C\x0d\n  writeGeneric\x2C\x0d\n  onStreamRead\x2C\x0d\n  kAfterAsyncWrite\x2C\x0d\n  kMaybeDestroy\x2C\x0d\n  kUpdateTimer\x2C\x0d\n  kHandle\x2C\x0d\n  kSession\x2C\x0d\n  setStreamTimeout\x2C\x0d\n  kBuffer\x2C\x0d\n  kBufferCb\x2C\x0d\n  kBufferGen\x2C\x0d\n};\x0d\n
code-source-info,0x10fd4192924,106,0,7337,C0O0C4O7337,,
code-creation,JS,10,154219,0x10fd4192f54,514, node:internal/stream_base_commons:1:1,0x10fd4192898,~
code-source-info,0x10fd4192f
code-creation,Eval,10,154649,0x10fd4194fc4,5, node:diagnostics_channel:1:1,0x10fd4194b90,~
script-source,107,node:diagnostics_channel,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeAt\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  PromiseReject\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeMap\x2C\x0d\n  SymbolHasInstance\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst { triggerUncaughtException } = internalBinding('errors');\x0d\n\x0d\nconst { WeakReference } = require('internal/util');\x0d\n\x0d\n// Can't delete when weakref count reaches 0 as it could increment again.\x0d\n// Only GC can be used as a valid time to clean up the channels map.\x0d\nclass WeakRefMap extends SafeMap {\x0d\n  #finalizers = new SafeFinalizationRegistry((key) => {\x0d\n    this.delete(key);\x0d\n  });\x0d\n\x0d\n  set(key\x2C value) {\x0d\n    this.#finalizers.register(value\x2C key);\x0d\n    return super.set(key\x2C new WeakReference(value));\x0d\n  }\x0d\n\x0d\n  get(key) {\x0d\n    return super.get(key)?.get();\x0d\n  }\x0d\n\x0d\n  incRef(key) {\x0d\n    return super.get(key)?.incRef();\x0d\n  }\x0d\n\x0d\n  decRef(key) {\x0d\n    return super.get(key)?.decRef();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction markActive(channel) {\x0d\n  // eslint-disable-next-line no-use-before-define\x0d\n  ObjectSetPrototypeOf(channel\x2C ActiveChannel.prototype);\x0d\n  channel._subscribers = [];\x0d\n  channel._stores = new SafeMap();\x0d\n}\x0d\n\x0d\nfunction maybeMarkInactive(channel) {\x0d\n  // When there are no more active subscribers or bound\x2C restore to fast prototype.\x0d\n  if (!channel._subscribers.length && !channel._stores.size) {\x0d\n    // eslint-disable-next-line no-use-before-define\x0d\n    ObjectSetPrototypeOf(channel\x2C Channel.prototype);\x0d\n    channel._subscribers = undefined;\x0d\n    channel._stores = undefined;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction defaultTransform(data) {\x0d\n  return data;\x0d\n}\x0d\n\x0d\nfunction wrapStoreRun(store\x2C data\x2C next\x2C transform = defaultTransform) {\x0d\n  return () => {\x0d\n    let context;\x0d\n    try {\x0d\n      context = transform(data);\x0d\n    } catch (err) {\x0d\n      process.nextTick(() => {\x0d\n        triggerUncaughtException(err\x2C false);\x0d\n      });\x0d\n      return next();\x0d\n    }\x0d\n\x0d\n    return store.run(context\x2C next);\x0d\n  };\x0d\n}\x0d\n\x0d\n// TODO(qard): should there be a C++ channel interface?\x0d\nclass ActiveChannel {\x0d\n  subscribe(subscription) {\x0d\n    validateFunction(subscription\x2C 'subscription');\x0d\n    ArrayPrototypePush(this._subscribers\x2C subscription);\x0d\n    channels.incRef(this.name);\x0d\n  }\x0d\n\x0d\n  unsubscribe(subscription) {\x0d\n    const index = ArrayPrototypeIndexOf(this._subscribers\x2C subscription);\x0d\n    if (index === -1) return false;\x0d\n\x0d\n    ArrayPrototypeSplice(this._subscribers\x2C index\x2C 1);\x0d\n\x0d\n    channels.decRef(this.name);\x0d\n    maybeMarkInactive(this);\x0d\n\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  bindStore(store\x2C transform) {\x0d\n    const replacing = this._stores.has(store);\x0d\n    if (!replacing) channels.incRef(this.name);\x0d\n    this._stores.set(store\x2C transform);\x0d\n  }\x0d\n\x0d\n  unbindStore(store) {\x0d\n    if (!this._stores.has(store)) {\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    this._stores.delete(store);\x0d\n\x0d\n    channels.decRef(this.name);\x0d\n    maybeMarkInactive(this);\x0d\n\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  get hasSubscribers() {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  publish(data) {\x0d\n    for (let i = 0; i < (this._subscribers?.length || 0); i++) {\x0d\n      try {\x0d\n        const onMessage = this._subscribers[i];\x0d\n        onMessage(data\x2C this.name);\x0d\n      } catch (err) {\x0d\n        process.nextTick(() => {\x0d\n          triggerUncaughtException(err\x2C false);\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  runStores(data\x2C fn\x2C thisArg\x2C ...args) {\x0d\n    let run = () => {\x0d\n      this.publish(data);\x0d\n      return ReflectApply(fn\x2C thisArg\x2C args);\x0d\n    };\x0d\n\x0d\n    for (const entry of this._stores.entries()) {\x0d\n      const store = entry[0];\x0d\n      const transform = entry[1];\x0d\n      run = wrapStoreRun(store\x2C data\x2C run\x2C transform);\x0d\n    }\x0d\n\x0d\n    return run();\x0d\n  }\x0d\n}\x0d\n\x0d\nclass Channel {\x0d\n  constructor(name) {\x0d\n    this._subscribers = undefined;\x0d\n    this._stores = undefined;\x0d\n    this.name = name;\x0d\n\x0d\n    channels.set(name\x2C this);\x0d\n  }\x0d\n\x0d\n  static [SymbolHasInstance](instance) {\x0d\n    const prototype = ObjectGetPrototypeOf(instance);\x0d\n    return prototype === Channel.prototype ||\x0d\n           prototype === ActiveChannel.prototype;\x0d\n  }\x0d\n\x0d\n  subscribe(subscription) {\x0d\n    markActive(this);\x0d\n    this.subscribe(subscription);\x0d\n  }\x0d\n\x0d\n  unsubscribe() {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  bindStore(store\x2C transform) {\x0d\n    markActive(this);\x0d\n    this.bindStore(store\x2C transform);\x0d\n  }\x0d\n\x0d\n  unbindStore() {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  get hasSubscribers() {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  publish() {}\x0d\n\x0d\n  runStores(data\x2C fn\x2C thisArg\x2C ...args) {\x0d\n    return ReflectApply(fn\x2C thisArg\x2C args);\x0d\n  }\x0d\n}\x0d\n\x0d\nconst channels = new WeakRefMap();\x0d\n\x0d\nfunction channel(name) {\x0d\n  const channel = channels.get(name);\x0d\n  if (channel) return channel;\x0d\n\x0d\n  if (typeof name !== 'string' && typeof name !== 'symbol') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('channel'\x2C ['string'\x2C 'symbol']\x2C name);\x0d\n  }\x0d\n\x0d\n  return new Channel(name);\x0d\n}\x0d\n\x0d\nfunction subscribe(name\x2C subscription) {\x0d\n  return channel(name).subscribe(subscription);\x0d\n}\x0d\n\x0d\nfunction unsubscribe(name\x2C subscription) {\x0d\n  return channel(name).unsubscribe(subscription);\x0d\n}\x0d\n\x0d\nfunction hasSubscribers(name) {\x0d\n  const channel = channels.get(name);\x0d\n  if (!channel) return false;\x0d\n\x0d\n  return channel.hasSubscribers;\x0d\n}\x0d\n\x0d\nconst traceEvents = [\x0d\n  'start'\x2C\x0d\n  'end'\x2C\x0d\n  'asyncStart'\x2C\x0d\n  'asyncEnd'\x2C\x0d\n  'error'\x2C\x0d\n];\x0d\n\x0d\nfunction assertChannel(value\x2C name) {\x0d\n  if (!(value instanceof Channel)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C ['Channel']\x2C value);\x0d\n  }\x0d\n}\x0d\n\x0d\nclass TracingChannel {\x0d\n  constructor(nameOrChannels) {\x0d\n    if (typeof nameOrChannels === 'string') {\x0d\n      this.start = channel(`tracing:${nameOrChannels}:start`);\x0d\n      this.end = channel(`tracing:${nameOrChannels}:end`);\x0d\n      this.asyncStart = channel(`tracing:${nameOrChannels}:asyncStart`);\x0d\n      this.asyncEnd = channel(`tracing:${nameOrChannels}:asyncEnd`);\x0d\n      this.error = channel(`tracing:${nameOrChannels}:error`);\x0d\n    } else if (typeof nameOrChannels === 'object') {\x0d\n      const { start\x2C end\x2C asyncStart\x2C asyncEnd\x2C error } = nameOrChannels;\x0d\n\x0d\n      assertChannel(start\x2C 'nameOrChannels.start');\x0d\n      assertChannel(end\x2C 'nameOrChannels.end');\x0d\n      assertChannel(asyncStart\x2C 'nameOrChannels.asyncStart');\x0d\n      assertChannel(asyncEnd\x2C 'nameOrChannels.asyncEnd');\x0d\n      assertChannel(error\x2C 'nameOrChannels.error');\x0d\n\x0d\n      this.start = start;\x0d\n      this.end = end;\x0d\n      this.asyncStart = asyncStart;\x0d\n      this.asyncEnd = asyncEnd;\x0d\n      this.error = error;\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_TYPE('nameOrChannels'\x2C\x0d\n                                     ['string'\x2C 'object'\x2C 'Channel']\x2C\x0d\n                                     nameOrChannels);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  subscribe(handlers) {\x0d\n    for (const name of traceEvents) {\x0d\n      if (!handlers[name]) continue;\x0d\n\x0d\n      this[name]?.subscribe(handlers[name]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  unsubscribe(handlers) {\x0d\n    let done = true;\x0d\n\x0d\n    for (const name of traceEvents) {\x0d\n      if (!handlers[name]) continue;\x0d\n\x0d\n      if (!this[name]?.unsubscribe(handlers[name])) {\x0d\n        done = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return done;\x0d\n  }\x0d\n\x0d\n  traceSync(fn\x2C context = {}\x2C thisArg\x2C ...args) {\x0d\n    const { start\x2C end\x2C error } = this;\x0d\n\x0d\n    return start.runStores(context\x2C () => {\x0d\n      try {\x0d\n        const result = ReflectApply(fn\x2C thisArg\x2C args);\x0d\n        context.result = result;\x0d\n        return result;\x0d\n      } catch (err) {\x0d\n        context.error = err;\x0d\n        error.publish(context);\x0d\n        throw err;\x0d\n      } finally {\x0d\n        end.publish(context);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  tracePromise(fn\x2C context = {}\x2C thisArg\x2C ...args) {\x0d\n    const { start\x2C end\x2C asyncStart\x2C asyncEnd\x2C error } = this;\x0d\n\x0d\n    function reject(err) {\x0d\n      context.error = err;\x0d\n      error.publish(context);\x0d\n      asyncStart.publish(context);\x0d\n      // TODO: Is there a way to have asyncEnd _after_ the continuation?\x0d\n      asyncEnd.publish(context);\x0d\n      return PromiseReject(err);\x0d\n    }\x0d\n\x0d\n    function resolve(result) {\x0d\n      context.result = result;\x0d\n      asyncStart.publish(context);\x0d\n      // TODO: Is there a way to have asyncEnd _after_ the continuation?\x0d\n      asyncEnd.publish(context);\x0d\n      return result;\x0d\n    }\x0d\n\x0d\n    return start.runStores(context\x2C () => {\x0d\n      try {\x0d\n        let promise = ReflectApply(fn\x2C thisArg\x2C args);\x0d\n        // Convert thenables to native promises\x0d\n        if (!(promise instanceof Promise)) {\x0d\n          promise = PromiseResolve(promise);\x0d\n        }\x0d\n        return PromisePrototypeThen(promise\x2C resolve\x2C reject);\x0d\n      } catch (err) {\x0d\n        context.error = err;\x0d\n        error.publish(context);\x0d\n        throw err;\x0d\n      } finally {\x0d\n        end.publish(context);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  traceCallback(fn\x2C position = -1\x2C context = {}\x2C thisArg\x2C ...args) {\x0d\n    const { start\x2C end\x2C asyncStart\x2C asyncEnd\x2C error } = this;\x0d\n\x0d\n    function wrappedCallback(err\x2C res) {\x0d\n      if (err) {\x0d\n        context.error = err;\x0d\n        error.publish(context);\x0d\n      } else {\x0d\n        context.result = res;\x0d\n      }\x0d\n\x0d\n      // Using runStores here enables manual context failure recovery\x0d\n      asyncStart.runStores(context\x2C () => {\x0d\n        try {\x0d\n          return ReflectApply(callback\x2C this\x2C arguments);\x0d\n        } finally {\x0d\n          asyncEnd.publish(context);\x0d\n        }\x0d\n      });\x0d\n    }\x0d\n\x0d\n    const callback = ArrayPrototypeAt(args\x2C position);\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n    ArrayPrototypeSplice(args\x2C position\x2C 1\x2C wrappedCallback);\x0d\n\x0d\n    return start.runStores(context\x2C () => {\x0d\n      try {\x0d\n        return ReflectApply(fn\x2C thisArg\x2C args);\x0d\n      } catch (err) {\x0d\n        context.error = err;\x0d\n        error.publish(context);\x0d\n        throw err;\x0d\n      } finally {\x0d\n        end.publish(context);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction tracingChannel(nameOrChannels) {\x0d\n  return new TracingChannel(nameOrChannels);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  channel\x2C\x0d\n  hasSubscribers\x2C\x0d\n  subscribe\x2C\x0d\n  tracingChannel\x2C\x0d\n  unsubscribe\x2C\x0d\n  Channel\x2C\x0d\n};\x0d\n
code-source-info,0x10fd4194fc4,107,0,10083,C0O0C4O10083,,
code-creation,JS,10,155191,0x10fd4196a8c,616, node:diagnostics_channel:1:1,0x10fd4194f38,~
code-source-info,0x10fd4196a8c,107,0,10083,C0O0C131O28C137O49C143O75C149O98C155O123C161O152C167O177C173O202C179O214C185O239C191O258C197O276C203O293C209O305C214O403C217O403C222O363C227O370C233O466C236O466C241O443C247O538C250O538C255O509C261O594C264O594C269O576C297O793C354O768C409O2255C427O4063C503O3883C505O4726C507O4726C512O4726C514O5386C518O5386C565O5611C567O9967C574O9989C580O10001C586O10020C592O10034C598O10053C604O10069C610O9982C615O10082,,
code-creation,JS,10,155243,0x10fd4196e74,40,WeakRefMap node:diagnostics_channel:35:34,0x10fd4195520,~
code-source-info,0x10fd4196e74,107,801,1198,C0O801C14O820C28O820C39O1198,,
code-creation,JS,10,155425,0x10fd4197794,52,WeakRefMap node:diagnostics_channel:35:1,0x10fd4195368,~
code-source-info,0x10fd4197794,107,768,768,C0O768C5O768C29O768C51O768,,
code-creation,JS,10,155508,0x10fd4198aa4,70,channel node:diagnostics_channel:213:17,0x10fd4195158,~
code-source-info,0x10fd4198aa4,107,4763,5022,C0O4791C5O4800C10O4800C16O4814C18O4827C20O4842C21O4848C33O4913C51O4919C56O4913C57O4994C64O5001C69O5019,,
code-creation,JS,10,155553,0x10fd4198bd4,34,get node:diagnostics_channel:45:6,0x10fd4195418,~
code-source-info,0x10fd4198bd4,107,1024,1071,C0O1037C2O1050C13O1050C21O1058C26O1060C33O1066,,
code-creation,JS,10,155593,0x10fd4198d24,36,Channel node:diagnostics_channel:168:14,0x10fd4195848,~
code-source-info,0x10fd4198d24,107,3913,4049,C0O3927C1O3945C5O3963C6O3976C10O3994C12O4004C16O4019C23O4028C28O4028C35O4048,,
code-creation,JS,10,155642,0x10fd4198f9c,51,set node:diagnostics_channel:40:6,0x10fd41953c0,~
code-source-info,0x10fd4198f9c,107,898,1015,C0O918C2O923C6O935C11O935C17O962C19O975C28O988C33O984C45O975C50O1010,,
code-creation,JS,10,155684,0x10fd41990fc,37,WeakReference node:internal/util:835:14,0x1d9b72471a0,~
code-source-info,0x10fd41990fc,16,24024,24082,C0O24024C14O24040C21O24057C26O24053C31O24051C36O24081,,
code-creation,Eval,10,156119,0x10fd419b964,5, node:internal/perf/observe:1:1,0x10fd419b2e8,~
script-source,108,node:internal/perf/observe,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypePushApply\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  Error\x2C\x0d\n  MathMax\x2C\x0d\n  MathMin\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectKeys\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  constants: {\x0d\n    NODE_PERFORMANCE_ENTRY_TYPE_GC\x2C\x0d\n    NODE_PERFORMANCE_ENTRY_TYPE_HTTP2\x2C\x0d\n    NODE_PERFORMANCE_ENTRY_TYPE_HTTP\x2C\x0d\n    NODE_PERFORMANCE_ENTRY_TYPE_NET\x2C\x0d\n    NODE_PERFORMANCE_ENTRY_TYPE_DNS\x2C\x0d\n  }\x2C\x0d\n  installGarbageCollectionTracking\x2C\x0d\n  observerCounts\x2C\x0d\n  removeGarbageCollectionTracking\x2C\x0d\n  setupObservers\x2C\x0d\n} = internalBinding('performance');\x0d\n\x0d\nconst {\x0d\n  isPerformanceEntry\x2C\x0d\n  createPerformanceNodeEntry\x2C\x0d\n} = require('internal/perf/performance_entry');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n  validateObject\x2C\x0d\n  validateInternalField\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n  deprecate\x2C\x0d\n  lazyDOMException\x2C\x0d\n  kEmptyObject\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  setImmediate\x2C\x0d\n} = require('timers');\x0d\n\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\nconst kBuffer = Symbol('kBuffer');\x0d\nconst kDispatch = Symbol('kDispatch');\x0d\nconst kMaybeBuffer = Symbol('kMaybeBuffer');\x0d\nconst kDeprecatedFields = Symbol('kDeprecatedFields');\x0d\n\x0d\nconst kDeprecationMessage =\x0d\n  'Custom PerformanceEntry accessors are deprecated. ' +\x0d\n  'Please use the detail property.';\x0d\n\x0d\nconst kTypeSingle = 0;\x0d\nconst kTypeMultiple = 1;\x0d\n\x0d\nlet gcTrackingInstalled = false;\x0d\n\x0d\nconst kSupportedEntryTypes = ObjectFreeze([\x0d\n  'dns'\x2C\x0d\n  'function'\x2C\x0d\n  'gc'\x2C\x0d\n  'http'\x2C\x0d\n  'http2'\x2C\x0d\n  'mark'\x2C\x0d\n  'measure'\x2C\x0d\n  'net'\x2C\x0d\n  'resource'\x2C\x0d\n]);\x0d\n\x0d\n// Performance timeline entry Buffers\x0d\nlet markEntryBuffer = [];\x0d\nlet measureEntryBuffer = [];\x0d\nlet resourceTimingBuffer = [];\x0d\nlet resourceTimingSecondaryBuffer = [];\x0d\nconst kPerformanceEntryBufferWarnSize = 1e6;\x0d\n// https://www.w3.org/TR/timing-entrytypes-registry/#registry\x0d\n// Default buffer limit for resource timing entries.\x0d\nlet resourceTimingBufferSizeLimit = 250;\x0d\nlet dispatchBufferFull;\x0d\nlet resourceTimingBufferFullPending = false;\x0d\n\x0d\nconst kClearPerformanceEntryBuffers = ObjectFreeze({\x0d\n  'mark': 'performance.clearMarks'\x2C\x0d\n  'measure': 'performance.clearMeasures'\x2C\x0d\n});\x0d\nconst kWarnedEntryTypes = new SafeMap();\x0d\n\x0d\nconst kObservers = new SafeSet();\x0d\nconst kPending = new SafeSet();\x0d\nlet isPending = false;\x0d\n\x0d\nfunction queuePending() {\x0d\n  if (isPending) return;\x0d\n  isPending = true;\x0d\n  setImmediate(() => {\x0d\n    isPending = false;\x0d\n    const pendings = ArrayFrom(kPending.values());\x0d\n    kPending.clear();\x0d\n    for (const pending of pendings)\x0d\n      pending[kDispatch]();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction getObserverType(type) {\x0d\n  switch (type) {\x0d\n    case 'gc': return NODE_PERFORMANCE_ENTRY_TYPE_GC;\x0d\n    case 'http2': return NODE_PERFORMANCE_ENTRY_TYPE_HTTP2;\x0d\n    case 'http': return NODE_PERFORMANCE_ENTRY_TYPE_HTTP;\x0d\n    case 'net': return NODE_PERFORMANCE_ENTRY_TYPE_NET;\x0d\n    case 'dns': return NODE_PERFORMANCE_ENTRY_TYPE_DNS;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeDecrementObserverCounts(entryTypes) {\x0d\n  for (const type of entryTypes) {\x0d\n    const observerType = getObserverType(type);\x0d\n\x0d\n    if (observerType !== undefined) {\x0d\n      observerCounts[observerType]--;\x0d\n\x0d\n      if (observerType === NODE_PERFORMANCE_ENTRY_TYPE_GC &&\x0d\n          observerCounts[observerType] === 0) {\x0d\n        removeGarbageCollectionTracking();\x0d\n        gcTrackingInstalled = false;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeIncrementObserverCount(type) {\x0d\n  const observerType = getObserverType(type);\x0d\n\x0d\n  if (observerType !== undefined) {\x0d\n    observerCounts[observerType]++;\x0d\n    if (!gcTrackingInstalled &&\x0d\n        observerType === NODE_PERFORMANCE_ENTRY_TYPE_GC) {\x0d\n      installGarbageCollectionTracking();\x0d\n      gcTrackingInstalled = true;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nconst kSkipThrow = Symbol('kSkipThrow');\x0d\nconst performanceObserverSorter = (first\x2C second) => {\x0d\n  return first.startTime - second.startTime;\x0d\n};\x0d\n\x0d\nclass PerformanceObserverEntryList {\x0d\n  constructor(skipThrowSymbol = undefined\x2C entries = []) {\x0d\n    if (skipThrowSymbol !== kSkipThrow) {\x0d\n      throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n    }\x0d\n\x0d\n    this[kBuffer] = ArrayPrototypeSort(entries\x2C performanceObserverSorter);\x0d\n  }\x0d\n\x0d\n  getEntries() {\x0d\n    validateInternalField(this\x2C kBuffer\x2C 'PerformanceObserverEntryList');\x0d\n    return ArrayPrototypeSlice(this[kBuffer]);\x0d\n  }\x0d\n\x0d\n  getEntriesByType(type) {\x0d\n    validateInternalField(this\x2C kBuffer\x2C 'PerformanceObserverEntryList');\x0d\n    if (arguments.length === 0) {\x0d\n      throw new ERR_MISSING_ARGS('type');\x0d\n    }\x0d\n    type = `${type}`;\x0d\n    return ArrayPrototypeFilter(\x0d\n      this[kBuffer]\x2C\x0d\n      (entry) => entry.entryType === type);\x0d\n  }\x0d\n\x0d\n  getEntriesByName(name\x2C type = undefined) {\x0d\n    validateInternalField(this\x2C kBuffer\x2C 'PerformanceObserverEntryList');\x0d\n    if (arguments.length === 0) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n    name = `${name}`;\x0d\n    if (type != null /** not nullish */) {\x0d\n      return ArrayPrototypeFilter(\x0d\n        this[kBuffer]\x2C\x0d\n        (entry) => entry.name === name && entry.entryType === type);\x0d\n    }\x0d\n    return ArrayPrototypeFilter(\x0d\n      this[kBuffer]\x2C\x0d\n      (entry) => entry.name === name);\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0) return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x2C\x0d\n    };\x0d\n\x0d\n    return `PerformanceObserverEntryList ${inspect(this[kBuffer]\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\nObjectDefineProperties(PerformanceObserverEntryList.prototype\x2C {\x0d\n  getEntries: kEnumerableProperty\x2C\x0d\n  getEntriesByType: kEnumerableProperty\x2C\x0d\n  getEntriesByName: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    __proto__: null\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'PerformanceObserverEntryList'\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nclass PerformanceObserver {\x0d\n  #buffer = [];\x0d\n  #entryTypes = new SafeSet();\x0d\n  #type;\x0d\n  #callback;\x0d\n\x0d\n  constructor(callback) {\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n    this.#callback = callback;\x0d\n  }\x0d\n\x0d\n  observe(options = kEmptyObject) {\x0d\n    validateObject(options\x2C 'options');\x0d\n    const {\x0d\n      entryTypes\x2C\x0d\n      type\x2C\x0d\n      buffered\x2C\x0d\n    } = { ...options };\x0d\n    if (entryTypes === undefined && type === undefined)\x0d\n      throw new ERR_MISSING_ARGS('options.entryTypes'\x2C 'options.type');\x0d\n    if (entryTypes != null && type != null)\x0d\n      throw new ERR_INVALID_ARG_VALUE('options.entryTypes'\x2C\x0d\n                                      entryTypes\x2C\x0d\n                                      'options.entryTypes can not set with ' +\x0d\n                                      'options.type together');\x0d\n\x0d\n    switch (this.#type) {\x0d\n      case undefined:\x0d\n        if (entryTypes !== undefined) this.#type = kTypeMultiple;\x0d\n        if (type !== undefined) this.#type = kTypeSingle;\x0d\n        break;\x0d\n      case kTypeSingle:\x0d\n        if (entryTypes !== undefined)\x0d\n          throw lazyDOMException(\x0d\n            'PerformanceObserver can not change to multiple observations'\x2C\x0d\n            'InvalidModificationError');\x0d\n        break;\x0d\n      case kTypeMultiple:\x0d\n        if (type !== undefined)\x0d\n          throw lazyDOMException(\x0d\n            'PerformanceObserver can not change to single observation'\x2C\x0d\n            'InvalidModificationError');\x0d\n        break;\x0d\n    }\x0d\n\x0d\n    if (this.#type === kTypeMultiple) {\x0d\n      if (!ArrayIsArray(entryTypes)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE(\x0d\n          'options.entryTypes'\x2C\x0d\n          'string[]'\x2C\x0d\n          entryTypes);\x0d\n      }\x0d\n      maybeDecrementObserverCounts(this.#entryTypes);\x0d\n      this.#entryTypes.clear();\x0d\n      for (let n = 0; n < entryTypes.length; n++) {\x0d\n        if (ArrayPrototypeIncludes(kSupportedEntryTypes\x2C entryTypes[n])) {\x0d\n          this.#entryTypes.add(entryTypes[n]);\x0d\n          maybeIncrementObserverCount(entryTypes[n]);\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      if (!ArrayPrototypeIncludes(kSupportedEntryTypes\x2C type))\x0d\n        return;\x0d\n      this.#entryTypes.add(type);\x0d\n      maybeIncrementObserverCount(type);\x0d\n      if (buffered) {\x0d\n        const entries = filterBufferMapByNameAndType(undefined\x2C type);\x0d\n        ArrayPrototypePushApply(this.#buffer\x2C entries);\x0d\n        kPending.add(this);\x0d\n        if (kPending.size)\x0d\n          queuePending();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (this.#entryTypes.size)\x0d\n      kObservers.add(this);\x0d\n    else\x0d\n      this.disconnect();\x0d\n  }\x0d\n\x0d\n  disconnect() {\x0d\n    maybeDecrementObserverCounts(this.#entryTypes);\x0d\n    kObservers.delete(this);\x0d\n    kPending.delete(this);\x0d\n    this.#buffer = [];\x0d\n    this.#entryTypes.clear();\x0d\n    this.#type = undefined;\x0d\n  }\x0d\n\x0d\n  takeRecords() {\x0d\n    const list = this.#buffer;\x0d\n    this.#buffer = [];\x0d\n    return list;\x0d\n  }\x0d\n\x0d\n  static get supportedEntryTypes() {\x0d\n    return kSupportedEntryTypes;\x0d\n  }\x0d\n\x0d\n  [kMaybeBuffer](entry) {\x0d\n    if (!this.#entryTypes.has(entry.entryType))\x0d\n      return;\x0d\n    ArrayPrototypePush(this.#buffer\x2C entry);\x0d\n    kPending.add(this);\x0d\n    if (kPending.size)\x0d\n      queuePending();\x0d\n  }\x0d\n\x0d\n  [kDispatch]() {\x0d\n    const entryList = new PerformanceObserverEntryList(kSkipThrow\x2C this.takeRecords());\x0d\n\x0d\n    this.#callback(entryList\x2C this);\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0) return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x2C\x0d\n    };\x0d\n\x0d\n    return `PerformanceObserver ${inspect({\x0d\n      connected: kObservers.has(this)\x2C\x0d\n      pending: kPending.has(this)\x2C\x0d\n      entryTypes: ArrayFrom(this.#entryTypes)\x2C\x0d\n      buffer: this.#buffer\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\nObjectDefineProperties(PerformanceObserver.prototype\x2C {\x0d\n  observe: kEnumerableProperty\x2C\x0d\n  disconnect: kEnumerableProperty\x2C\x0d\n  takeRecords: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    __proto__: null\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'PerformanceObserver'\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n/**\x0d\n * https://www.w3.org/TR/performance-timeline/#dfn-queue-a-performanceentry\x0d\n *\x0d\n * Add the performance entry to the interested performance observer's queue.\x0d\n */\x0d\nfunction enqueue(entry) {\x0d\n  if (!isPerformanceEntry(entry))\x0d\n    throw new ERR_INVALID_ARG_TYPE('entry'\x2C 'PerformanceEntry'\x2C entry);\x0d\n\x0d\n  for (const obs of kObservers) {\x0d\n    obs[kMaybeBuffer](entry);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Add the user timing entry to the global buffer.\x0d\n */\x0d\nfunction bufferUserTiming(entry) {\x0d\n  const entryType = entry.entryType;\x0d\n  let buffer;\x0d\n  if (entryType === 'mark') {\x0d\n    buffer = markEntryBuffer;\x0d\n  } else if (entryType === 'measure') {\x0d\n    buffer = measureEntryBuffer;\x0d\n  } else {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  ArrayPrototypePush(buffer\x2C entry);\x0d\n  const count = buffer.length;\x0d\n\x0d\n  if (count > kPerformanceEntryBufferWarnSize &&\x0d\n    !kWarnedEntryTypes.has(entryType)) {\x0d\n    kWarnedEntryTypes.set(entryType\x2C true);\x0d\n    // No error code for this since it is a Warning\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const w = new Error('Possible perf_hooks memory leak detected. ' +\x0d\n                        `${count} ${entryType} entries added to the global ` +\x0d\n                        'performance entry buffer. Use ' +\x0d\n                        `${kClearPerformanceEntryBuffers[entryType]} to ` +\x0d\n                        'clear the buffer.');\x0d\n    w.name = 'MaxPerformanceEntryBufferExceededWarning';\x0d\n    w.entryType = entryType;\x0d\n    w.count = count;\x0d\n    process.emitWarning(w);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Add the resource timing entry to the global buffer if the buffer size is not\x0d\n * exceeding the buffer limit\x2C or dispatch a buffer full event on the global\x0d\n * performance object.\x0d\n *\x0d\n * See also https://www.w3.org/TR/resource-timing-2/#dfn-add-a-performanceresourcetiming-entry\x0d\n */\x0d\nfunction bufferResourceTiming(entry) {\x0d\n  if (resourceTimingBuffer.length < resourceTimingBufferSizeLimit && !resourceTimingBufferFullPending) {\x0d\n    ArrayPrototypePush(resourceTimingBuffer\x2C entry);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (!resourceTimingBufferFullPending) {\x0d\n    resourceTimingBufferFullPending = true;\x0d\n    setImmediate(() => {\x0d\n      while (resourceTimingSecondaryBuffer.length > 0) {\x0d\n        const excessNumberBefore = resourceTimingSecondaryBuffer.length;\x0d\n        dispatchBufferFull('resourcetimingbufferfull');\x0d\n\x0d\n        // Calculate the number of items to be pushed to the global buffer.\x0d\n        const numbersToPreserve = MathMax(\x0d\n          MathMin(resourceTimingBufferSizeLimit - resourceTimingBuffer.length\x2C resourceTimingSecondaryBuffer.length)\x2C\x0d\n          0\x2C\x0d\n        );\x0d\n        const excessNumberAfter = resourceTimingSecondaryBuffer.length - numbersToPreserve;\x0d\n        for (let idx = 0; idx < numbersToPreserve; idx++) {\x0d\n          ArrayPrototypePush(resourceTimingBuffer\x2C resourceTimingSecondaryBuffer[idx]);\x0d\n        }\x0d\n\x0d\n        if (excessNumberBefore <= excessNumberAfter) {\x0d\n          resourceTimingSecondaryBuffer = [];\x0d\n        }\x0d\n      }\x0d\n      resourceTimingBufferFullPending = false;\x0d\n    });\x0d\n  }\x0d\n\x0d\n  ArrayPrototypePush(resourceTimingSecondaryBuffer\x2C entry);\x0d\n}\x0d\n\x0d\n// https://w3c.github.io/resource-timing/#dom-performance-setresourcetimingbuffersize\x0d\nfunction setResourceTimingBufferSize(maxSize) {\x0d\n  // If the maxSize parameter is less than resource timing buffer current\x0d\n  // size\x2C no PerformanceResourceTiming objects are to be removed from the\x0d\n  // performance entry buffer.\x0d\n  resourceTimingBufferSizeLimit = maxSize;\x0d\n}\x0d\n\x0d\nfunction setDispatchBufferFull(fn) {\x0d\n  dispatchBufferFull = fn;\x0d\n}\x0d\n\x0d\nfunction clearEntriesFromBuffer(type\x2C name) {\x0d\n  if (type !== 'mark' && type !== 'measure' && type !== 'resource') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (type === 'mark') {\x0d\n    markEntryBuffer = name === undefined ?\x0d\n      [] : ArrayPrototypeFilter(markEntryBuffer\x2C (entry) => entry.name !== name);\x0d\n  } else if (type === 'measure') {\x0d\n    measureEntryBuffer = name === undefined ?\x0d\n      [] : ArrayPrototypeFilter(measureEntryBuffer\x2C (entry) => entry.name !== name);\x0d\n  } else {\x0d\n    resourceTimingBuffer = name === undefined ?\x0d\n      [] : ArrayPrototypeFilter(resourceTimingBuffer\x2C (entry) => entry.name !== name);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction filterBufferMapByNameAndType(name\x2C type) {\x0d\n  let bufferList;\x0d\n  if (type === 'mark') {\x0d\n    bufferList = markEntryBuffer;\x0d\n  } else if (type === 'measure') {\x0d\n    bufferList = measureEntryBuffer;\x0d\n  } else if (type === 'resource') {\x0d\n    bufferList = resourceTimingBuffer;\x0d\n  } else if (type !== undefined) {\x0d\n    // Unrecognized type;\x0d\n    return [];\x0d\n  } else {\x0d\n    bufferList = [];\x0d\n    ArrayPrototypePushApply(bufferList\x2C markEntryBuffer);\x0d\n    ArrayPrototypePushApply(bufferList\x2C measureEntryBuffer);\x0d\n    ArrayPrototypePushApply(bufferList\x2C resourceTimingBuffer);\x0d\n  }\x0d\n  if (name !== undefined) {\x0d\n    bufferList = ArrayPrototypeFilter(bufferList\x2C (buffer) => buffer.name === name);\x0d\n  } else if (type !== undefined) {\x0d\n    bufferList = ArrayPrototypeSlice(bufferList);\x0d\n  }\x0d\n\x0d\n  return ArrayPrototypeSort(bufferList\x2C performanceObserverSorter);\x0d\n}\x0d\n\x0d\nfunction observerCallback(name\x2C type\x2C startTime\x2C duration\x2C details) {\x0d\n  const entry =\x0d\n    createPerformanceNodeEntry(\x0d\n      name\x2C\x0d\n      type\x2C\x0d\n      startTime\x2C\x0d\n      duration\x2C\x0d\n      details);\x0d\n\x0d\n  if (details !== undefined) {\x0d\n    // GC\x2C HTTP2\x2C and HTTP PerformanceEntry used additional\x0d\n    // properties directly off the entry. Those have been\x0d\n    // moved into the details property. The existing accessors\x0d\n    // are still included but are deprecated.\x0d\n    entry[kDeprecatedFields] = new SafeMap();\x0d\n\x0d\n    const detailKeys = ObjectKeys(details);\x0d\n    const props = {};\x0d\n    for (let n = 0; n < detailKeys.length; n++) {\x0d\n      const key = detailKeys[n];\x0d\n      entry[kDeprecatedFields].set(key\x2C details[key]);\x0d\n      props[key] = {\x0d\n        configurable: true\x2C\x0d\n        enumerable: true\x2C\x0d\n        get: deprecate(() => {\x0d\n          return entry[kDeprecatedFields].get(key);\x0d\n        }\x2C kDeprecationMessage\x2C 'DEP0152')\x2C\x0d\n        set: deprecate((value) => {\x0d\n          entry[kDeprecatedFields].set(key\x2C value);\x0d\n        }\x2C kDeprecationMessage\x2C 'DEP0152')\x2C\x0d\n      };\x0d\n    }\x0d\n    ObjectDefineProperties(entry\x2C props);\x0d\n  }\x0d\n\x0d\n  enqueue(entry);\x0d\n}\x0d\n\x0d\nsetupObservers(observerCallback);\x0d\n\x0d\nfunction hasObserver(type) {\x0d\n  const observerType = getObserverType(type);\x0d\n  return observerCounts[observerType] > 0;\x0d\n}\x0d\n\x0d\n\x0d\nfunction startPerf(target\x2C key\x2C context = {}) {\x0d\n  target[key] = {\x0d\n    ...context\x2C\x0d\n    startTime: now()\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction stopPerf(target\x2C key\x2C context = {}) {\x0d\n  const ctx = target[key];\x0d\n  if (!ctx) {\x0d\n    return;\x0d\n  }\x0d\n  const startTime = ctx.startTime;\x0d\n  const entry = createPerformanceNodeEntry(\x0d\n    ctx.name\x2C\x0d\n    ctx.type\x2C\x0d\n    startTime\x2C\x0d\n    now() - startTime\x2C\x0d\n    { ...ctx.detail\x2C ...context.detail }\x2C\x0d\n  );\x0d\n  enqueue(entry);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  PerformanceObserver\x2C\x0d\n  PerformanceObserverEntryList\x2C\x0d\n  enqueue\x2C\x0d\n  hasObserver\x2C\x0d\n  clearEntriesFromBuffer\x2C\x0d\n  filterBufferMapByNameAndType\x2C\x0d\n  startPerf\x2C\x0d\n  stopPerf\x2C\x0d\n\x0d\n  bufferUserTiming\x2C\x0d\n  bufferResourceTiming\x2C\x0d\n  setResourceTimingBufferSize\x2C\x0d\n  setDispatchBufferFull\x2C\x0d\n};\x0d\n
code-source-info,0x10fd419b964,108,0,17335,C0O0C4O17335,,
code-creation,JS,10,156900,0x10fd419d164,1215, node:internal/perf/observe:1:1,0x10fd419b8d8,~
code-source-info,0x10fd419d
code-creation,JS,10,157039,0x10fd419d8a4,50,PerformanceObserver node:internal/perf/observe:243:27,0x10fd419c3b8,~
code-source-info,0x10fd419d8a4,108,6204,9904,C3O6219C13O6240C20O6240C34O6258C43O6268C49O9904,,
code-creation,Eval,10,157279,0x10fd419e664,5, node:internal/perf/performance_entry:1:1,0x10fd419e460,~
script-source,109,node:internal/perf/performance_entry,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperties\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\nconst { validateInternalField } = require('internal/validators');\x0d\n\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst kName = Symbol('PerformanceEntry.Name');\x0d\nconst kEntryType = Symbol('PerformanceEntry.EntryType');\x0d\nconst kStartTime = Symbol('PerformanceEntry.StartTime');\x0d\nconst kDuration = Symbol('PerformanceEntry.Duration');\x0d\nconst kDetail = Symbol('NodePerformanceEntry.Detail');\x0d\nconst kSkipThrow = Symbol('kSkipThrow');\x0d\n\x0d\nfunction isPerformanceEntry(obj) {\x0d\n  return obj?.[kName] !== undefined;\x0d\n}\x0d\n\x0d\nclass PerformanceEntry {\x0d\n  constructor(\x0d\n    skipThrowSymbol = undefined\x2C\x0d\n    name = undefined\x2C\x0d\n    type = undefined\x2C\x0d\n    start = undefined\x2C\x0d\n    duration = undefined\x2C\x0d\n  ) {\x0d\n    if (skipThrowSymbol !== kSkipThrow) {\x0d\n      throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n    }\x0d\n\x0d\n    this[kName] = name;\x0d\n    this[kEntryType] = type;\x0d\n    this[kStartTime] = start;\x0d\n    this[kDuration] = duration;\x0d\n  }\x0d\n\x0d\n  get name() {\x0d\n    validateInternalField(this\x2C kName\x2C 'PerformanceEntry');\x0d\n    return this[kName];\x0d\n  }\x0d\n\x0d\n  get entryType() {\x0d\n    validateInternalField(this\x2C kEntryType\x2C 'PerformanceEntry');\x0d\n    return this[kEntryType];\x0d\n  }\x0d\n\x0d\n  get startTime() {\x0d\n    validateInternalField(this\x2C kStartTime\x2C 'PerformanceEntry');\x0d\n    return this[kStartTime];\x0d\n  }\x0d\n\x0d\n  get duration() {\x0d\n    validateInternalField(this\x2C kDuration\x2C 'PerformanceEntry');\x0d\n    return this[kDuration];\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0) return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x2C\x0d\n    };\x0d\n\x0d\n    return `${this.constructor.name} ${inspect(this.toJSON()\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    validateInternalField(this\x2C kName\x2C 'PerformanceEntry');\x0d\n    return {\x0d\n      name: this[kName]\x2C\x0d\n      entryType: this[kEntryType]\x2C\x0d\n      startTime: this[kStartTime]\x2C\x0d\n      duration: this[kDuration]\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\nObjectDefineProperties(PerformanceEntry.prototype\x2C {\x0d\n  name: kEnumerableProperty\x2C\x0d\n  entryType: kEnumerableProperty\x2C\x0d\n  startTime: kEnumerableProperty\x2C\x0d\n  duration: kEnumerableProperty\x2C\x0d\n  toJSON: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\nfunction createPerformanceEntry(name\x2C type\x2C start\x2C duration) {\x0d\n  return new PerformanceEntry(kSkipThrow\x2C name\x2C type\x2C start\x2C duration);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Node.js specific extension to PerformanceEntry.\x0d\n */\x0d\nclass PerformanceNodeEntry extends PerformanceEntry {\x0d\n  get detail() {\x0d\n    validateInternalField(this\x2C kDetail\x2C 'NodePerformanceEntry');\x0d\n    return this[kDetail];\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    validateInternalField(this\x2C kName\x2C 'PerformanceEntry');\x0d\n    return {\x0d\n      name: this[kName]\x2C\x0d\n      entryType: this[kEntryType]\x2C\x0d\n      startTime: this[kStartTime]\x2C\x0d\n      duration: this[kDuration]\x2C\x0d\n      detail: this[kDetail]\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction createPerformanceNodeEntry(name\x2C type\x2C start\x2C duration\x2C detail) {\x0d\n  const entry = new PerformanceNodeEntry(kSkipThrow\x2C name\x2C type\x2C start\x2C duration);\x0d\n\x0d\n  entry[kDetail] = detail;\x0d\n\x0d\n  return entry;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  createPerformanceEntry\x2C\x0d\n  PerformanceEntry\x2C\x0d\n  isPerformanceEntry\x2C\x0d\n  PerformanceNodeEntry\x2C\x0d\n  createPerformanceNodeEntry\x2C\x0d\n  kSkipThrow\x2C\x0d\n};\x0d\n
code-source-info,0x10fd419e664,109,0,3412,C0O0C4O3412,,
code-creation,JS,10,157462,0x10fd419f39c,371, node:internal/perf/performance_entry:1:1,0x10fd419e5d8,~
code-source-info,0x10fd419f39c,109,0,3412,C0O0C53O28C58O55C63O145C66O145C71O102C76O109C82O247C85O247C90O208C95O221C100O308C103O308C108O282C114O363C117O363C122O351C128O397C131O397C135O397C137O450C140O450C144O450C146O508C149O508C153O508C155O565C158O565C162O565C164O619C167O619C171O619C173O678C176O678C180O678C211O1665C239O782C241O2158C244O2198C256O2220C262O2255C268O2290C274O2324C280O2356C284O2158C292O2624C320O2589C322O3246C329O3268C335O3295C341O3316C347O3339C353O3364C359O3395C365O3261C370O3411,,
code-creation,JS,10,157811,0x10fd41a0eac,34,protoGetter node:net:866:21,0x125aa7bf328,~
code-source-info,0x10fd41a0eac,86,23562,23731,C0O23584C8O23612C13O23623C20O23712C27O23584C33O23730,,
code-creation,Eval,10,158070,0x10fd41a7cdc,5, node:internal/tty:1:1,0x10fd41a7a78,~
script-source,110,node:internal/tty,// MIT License\x0d\n\x0d\n// Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\x0d\n\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a copy\x0d\n// of this software and associated documentation files (the "Software")\x2C to deal\x0d\n// in the Software without restriction\x2C including without limitation the rights\x0d\n// to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C distribute\x2C sublicense\x2C and/or sell\x0d\n// copies of the Software\x2C and to permit persons to whom the Software is\x0d\n// furnished to do so\x2C subject to the following conditions:\x0d\n\x0d\n// The above copyright notice and this permission notice shall be included in\x0d\n// all copies or substantial portions of the Software.\x0d\n\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS OR\x0d\n// IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY\x2C\x0d\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\x0d\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C DAMAGES OR OTHER\x0d\n// LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR OTHERWISE\x2C ARISING FROM\x2C\x0d\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\x0d\n// SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSome\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { validateInteger } = require('internal/validators');\x0d\n\x0d\nlet OSRelease;\x0d\n\x0d\nconst COLORS_2 = 1;\x0d\nconst COLORS_16 = 4;\x0d\nconst COLORS_256 = 8;\x0d\nconst COLORS_16m = 24;\x0d\n\x0d\n// Some entries were taken from `dircolors`\x0d\n// (https://linux.die.net/man/1/dircolors). The corresponding terminals might\x0d\n// support more than 16 colors\x2C but this was not tested for.\x0d\n//\x0d\n// Copyright (C) 1996-2016 Free Software Foundation\x2C Inc. Copying and\x0d\n// distribution of this file\x2C with or without modification\x2C are permitted\x0d\n// provided the copyright notice and this notice are preserved.\x0d\nconst TERM_ENVS = {\x0d\n  'eterm': COLORS_16\x2C\x0d\n  'cons25': COLORS_16\x2C\x0d\n  'console': COLORS_16\x2C\x0d\n  'cygwin': COLORS_16\x2C\x0d\n  'dtterm': COLORS_16\x2C\x0d\n  'gnome': COLORS_16\x2C\x0d\n  'hurd': COLORS_16\x2C\x0d\n  'jfbterm': COLORS_16\x2C\x0d\n  'konsole': COLORS_16\x2C\x0d\n  'kterm': COLORS_16\x2C\x0d\n  'mlterm': COLORS_16\x2C\x0d\n  'mosh': COLORS_16m\x2C\x0d\n  'putty': COLORS_16\x2C\x0d\n  'st': COLORS_16\x2C\x0d\n  // https://github.com/da-x/rxvt-unicode/tree/v9.22-with-24bit-color\x0d\n  'rxvt-unicode-24bit': COLORS_16m\x2C\x0d\n  // https://gist.github.com/XVilka/8346728#gistcomment-2823421\x0d\n  'terminator': COLORS_16m\x2C\x0d\n};\x0d\n\x0d\nconst TERM_ENVS_REG_EXP = [\x0d\n  /ansi/\x2C\x0d\n  /color/\x2C\x0d\n  /linux/\x2C\x0d\n  /^con[0-9]*x[0-9]/\x2C\x0d\n  /^rxvt/\x2C\x0d\n  /^screen/\x2C\x0d\n  /^xterm/\x2C\x0d\n  /^vt100/\x2C\x0d\n];\x0d\n\x0d\nlet warned = false;\x0d\nfunction warnOnDeactivatedColors(env) {\x0d\n  if (warned)\x0d\n    return;\x0d\n  let name = '';\x0d\n  if (env.NODE_DISABLE_COLORS !== undefined)\x0d\n    name = 'NODE_DISABLE_COLORS';\x0d\n  if (env.NO_COLOR !== undefined) {\x0d\n    if (name !== '') {\x0d\n      name += "' and '";\x0d\n    }\x0d\n    name += 'NO_COLOR';\x0d\n  }\x0d\n\x0d\n  if (name !== '') {\x0d\n    process.emitWarning(\x0d\n      `The '${name}' env is ignored due to the 'FORCE_COLOR' env being set.`\x2C\x0d\n      'Warning'\x2C\x0d\n    );\x0d\n    warned = true;\x0d\n  }\x0d\n}\x0d\n\x0d\n// The `getColorDepth` API got inspired by multiple sources such as\x0d\n// https://github.com/chalk/supports-color\x2C\x0d\n// https://github.com/isaacs/color-support.\x0d\nfunction getColorDepth(env = process.env) {\x0d\n  // Use level 0-3 to support the same levels as `chalk` does. This is done for\x0d\n  // consistency throughout the ecosystem.\x0d\n  if (env.FORCE_COLOR !== undefined) {\x0d\n    switch (env.FORCE_COLOR) {\x0d\n      case '':\x0d\n      case '1':\x0d\n      case 'true':\x0d\n        warnOnDeactivatedColors(env);\x0d\n        return COLORS_16;\x0d\n      case '2':\x0d\n        warnOnDeactivatedColors(env);\x0d\n        return COLORS_256;\x0d\n      case '3':\x0d\n        warnOnDeactivatedColors(env);\x0d\n        return COLORS_16m;\x0d\n      default:\x0d\n        return COLORS_2;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (env.NODE_DISABLE_COLORS !== undefined ||\x0d\n      // See https://no-color.org/\x0d\n      env.NO_COLOR !== undefined ||\x0d\n      // The "dumb" special terminal\x2C as defined by terminfo\x2C doesn't support\x0d\n      // ANSI color control codes.\x0d\n      // See https://invisible-island.net/ncurses/terminfo.ti.html#toc-_Specials\x0d\n      env.TERM === 'dumb') {\x0d\n    return COLORS_2;\x0d\n  }\x0d\n\x0d\n  if (process.platform === 'win32') {\x0d\n    // Lazy load for startup performance.\x0d\n    if (OSRelease === undefined) {\x0d\n      const { release } = require('os');\x0d\n      OSRelease = StringPrototypeSplit(release()\x2C '.');\x0d\n    }\x0d\n    // Windows 10 build 10586 is the first Windows release that supports 256\x0d\n    // colors. Windows 10 build 14931 is the first release that supports\x0d\n    // 16m/TrueColor.\x0d\n    if (+OSRelease[0] >= 10) {\x0d\n      const build = +OSRelease[2];\x0d\n      if (build >= 14931)\x0d\n        return COLORS_16m;\x0d\n      if (build >= 10586)\x0d\n        return COLORS_256;\x0d\n    }\x0d\n\x0d\n    return COLORS_16;\x0d\n  }\x0d\n\x0d\n  if (env.TMUX) {\x0d\n    return COLORS_256;\x0d\n  }\x0d\n\x0d\n  if (env.CI) {\x0d\n    if ([\x0d\n      'APPVEYOR'\x2C\x0d\n      'BUILDKITE'\x2C\x0d\n      'CIRCLECI'\x2C\x0d\n      'DRONE'\x2C\x0d\n      'GITHUB_ACTIONS'\x2C\x0d\n      'GITLAB_CI'\x2C\x0d\n      'TRAVIS'\x2C\x0d\n    ].some((sign) => sign in env) || env.CI_NAME === 'codeship') {\x0d\n      return COLORS_256;\x0d\n    }\x0d\n    return COLORS_2;\x0d\n  }\x0d\n\x0d\n  if ('TEAMCITY_VERSION' in env) {\x0d\n    return RegExpPrototypeExec(/^(9\\.(0*[1-9]\\d*)\\.|\\d{2\x2C}\\.)/\x2C env.TEAMCITY_VERSION) !== null ?\x0d\n      COLORS_16 : COLORS_2;\x0d\n  }\x0d\n\x0d\n  switch (env.TERM_PROGRAM) {\x0d\n    case 'iTerm.app':\x0d\n      if (!env.TERM_PROGRAM_VERSION ||\x0d\n        RegExpPrototypeExec(/^[0-2]\\./\x2C env.TERM_PROGRAM_VERSION) !== null\x0d\n      ) {\x0d\n        return COLORS_256;\x0d\n      }\x0d\n      return COLORS_16m;\x0d\n    case 'HyperTerm':\x0d\n    case 'MacTerm':\x0d\n      return COLORS_16m;\x0d\n    case 'Apple_Terminal':\x0d\n      return COLORS_256;\x0d\n  }\x0d\n\x0d\n  if (env.COLORTERM === 'truecolor' || env.COLORTERM === '24bit') {\x0d\n    return COLORS_16m;\x0d\n  }\x0d\n\x0d\n  if (env.TERM) {\x0d\n    if (RegExpPrototypeExec(/^xterm-256/\x2C env.TERM) !== null) {\x0d\n      return COLORS_256;\x0d\n    }\x0d\n\x0d\n    const termEnv = StringPrototypeToLowerCase(env.TERM);\x0d\n\x0d\n    if (TERM_ENVS[termEnv]) {\x0d\n      return TERM_ENVS[termEnv];\x0d\n    }\x0d\n    if (ArrayPrototypeSome(TERM_ENVS_REG_EXP\x2C\x0d\n                           (term) => RegExpPrototypeExec(term\x2C termEnv) !== null)) {\x0d\n      return COLORS_16;\x0d\n    }\x0d\n  }\x0d\n  // Move 16 color COLORTERM below 16m and 256\x0d\n  if (env.COLORTERM) {\x0d\n    return COLORS_16;\x0d\n  }\x0d\n  return COLORS_2;\x0d\n}\x0d\n\x0d\nfunction hasColors(count\x2C env) {\x0d\n  if (env === undefined &&\x0d\n      (count === undefined || (typeof count === 'object' && count !== null))) {\x0d\n    env = count;\x0d\n    count = 16;\x0d\n  } else {\x0d\n    validateInteger(count\x2C 'count'\x2C 2);\x0d\n  }\x0d\n\x0d\n  return count <= 2 ** getColorDepth(env);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  getColorDepth\x2C\x0d\n  hasColors\x2C\x0d\n};\x0d\n
code-source-info,0x10fd41a7cdc,110,0,6722,C0O0C4O6722,,
code-creation,JS,10,158437,0x10fd41a8154,366, node:internal/tty:1:1,0x10fd41a7c50,~
code-source-info,0x10fd41a8154,110,0,6722,C0O0C69O1211C75O1234C81O1258C87O1283C93O1360C99O1360C104O1340C110O1399C111O1399C113O1430C115O1430C117O1452C119O1452C121O1475C123O1475C125O1498C127O1498C129O1924C136O1938C142O1962C148O1987C154O2011C160O2035C166O2058C172O2080C178O2105C184O2130C190O2153C196O2177C202O2199C208O2223C214O2243C220O2350C226O2444C232O1924C234O2489C336O2489C338O2621C339O2621C341O6666C348O6688C354O6706C360O6681C365O6721,,
code-creation,JS,10,158650,0x10fd41a906c,192,WriteStream node:tty:84:21,0x125aa7b61b8,~
code-source-info,0x10fd41a906c,85,2588,3571,C0O2598C2O2609C7O2639C12O2646C17O2666C18O2670C20O2677C26O2682C32O2695C37O2705C44O2711C49O2705C50O2752C52O2771C65O2771C71O2800C77O2827C84O2833C89O2827C90O2873C95O2877C100O2884C112O2941C116O2884C122O3374C127O3382C134O3382C139O3422C149O3422C155O3456C160O3464C165O3464C171O3491C173O3508C174O3530C177O3521C181O3540C183O3559C186O3550C191O3570,,
code-creation,JS,10,158848,0x10fd41a9c5c,926,Socket node:net:353:16,0x125aa7bf170,~
code-source-info,0x10fd41a9c5c
code-creation,JS,10,159110,0x10fd41aa5cc,504,Duplex node:internal/streams/duplex:62:16,0x9b20b63758,~
code-source-info,0x10fd41aa5cc
code-creation,JS,10,159247,0x10fd41ab1b4,254,Readable node:internal/streams/readable:318:18,0x9b20b6aec8,~
code-source-info,0x10fd41ab1b4,97,10417,11476,C0O10417C9O10432C16O10443C21O10470C28O10477C33O10499C34O10505C51O10536C56O10559C61O10581C66O10602C71O10628C77O10518C81O10875C99O10897C104O10895C108O10943C112O10982C120O11010C123O11031C127O11021C131O11063C139O11094C142O11118C146O11108C150O11153C158O11186C161O11212C165O11202C169O11242C175O11257C182O11280C190O11257C195O11305C202O11312C210O11312C216O11338C219O11347C226O11374C233O11386C246O11386C253O11475,,
code-creation,JS,10,159318,0x10fd41ab43c,18,Stream node:internal/streams/legacy:11:16,0x9b20b64a70,~
code-source-info,0x10fd41ab43c,96,155,190,C0O167C5O170C10O170C17O189,,
code-creation,JS,10,160015,0x10fd41ac5e4,365,ReadableState node:internal/streams/readable:260:23,0x9b20b6ae70,~
code-source-info,0x10fd41ac5e4,97,8205,10228,C0O8356C2O8361C7O8371C12O8384C14O8382C20O8399C22O8397C28O8414C30O8412C33O8369C37O8550C41O8573C47O8590C50O8595C56O8606C61O8603C65O8624C71O8640C73O8659C79O8684C82O8689C88O8700C93O8697C97O8862C102O8883C106O8898C121O8898C130O8972C135O8972C139O8881C143O9009C145O9021C149O9030C150O9047C154O9055C155O9067C159O9075C161O9086C165O9157C169O9180C179O9201C182O9206C188O9217C193O9214C197O9309C201O9332C211O9355C214O9360C220O9371C225O9368C229O9613C236O9620C244O9642C249O9689C256O9719C261O9739C264O9744C270O9755C275O9752C281O9787C286O9798C291O9798C298O9834C300O9855C306O9891C313O9897C318O9891C319O10054C320O10077C324O10090C328O10113C334O10130C336O10149C339O10171C346O10145C351O10143C355O10211C359O10201C364O10227,,
code-creation,JS,10,160146,0x10fd41aca2c,98,getHighWaterMark node:internal/streams/state:32:26,0x9b20b70dd8,~
code-source-info,0x10fd41aca2c,99,857,1277,C0O912C12O912C18O964C21O988C26O993C33O1021C38O1048C47O1070C56O1116C69O1122C74O1116C75O1172C80O1179C84O1194C85O1225C88O1262C93O1232C97O1274,,
code-creation,JS,10,160196,0x10fd41acd34,26,highWaterMarkFrom node:internal/streams/state:14:27,0x9b20b70cd0,~
code-source-info,0x10fd41acd34,99,326,470,C0O377C7O409C15O430C19O448C25O467,,
code-creation,JS,10,160299,0x10fd41ad1ac,400,WritableState node:internal/streams/writable:296:23,0x9b20b7f428,~
code-source-info,0x10fd41ad1ac,102,9515,11852,C0O9666C2O9671C7O9681C12O9689C14O9687C20O9704C22O9702C28O9717C30O9715C33O9679C37O9736C41O9759C47O9776C50O9781C56O9792C61O9789C65O9810C71O9826C73O9845C79O9870C82O9875C88O9886C93O9883C97O10092C102O10113C106O10128C121O10128C130O10202C135O10202C139O10111C143O10239C147O10263C157O10288C160O10293C166O10304C171O10301C175O10385C179O10408C189O10429C192O10434C198O10445C203O10442C207O10537C211O10560C221O10583C224O10588C230O10599C235O10596C239O10841C243O10859C251O10886C256O10933C263O10963C268O10983C271O10988C277O10999C282O10996C288O11031C293O11042C298O11042C305O11078C308O11083C314O11095C316O11094C321O11091C325O11122C327O11127C332O11150C338O11186C345O11192C350O11186C351O11395C352O11407C356O11483C357O11495C361O11560C364O11583C371O11583C377O11573C381O11675C382O11689C386O11699C389O11699C393O11830C394O11845C399O11851,,
code-creation,JS,10,160409,0x10fd41ad5dc,22,get node:internal/streams/writable:123:8,0x10fd41848e0,~
code-source-info,0x10fd41ad5dc,102,3884,3925,C0O3889C4O3902C6O3901C12O3910C17O3917C21O3923,,
code-creation,JS,10,160446,0x10fd41ad6d4,15,getDefaultHighWaterMark node:internal/streams/state:19:33,0x9b20b70d28,~
code-source-info,0x10fd41ad6d4,99,506,606,C0O524C6O544C12O577C14O603,,
code-creation,JS,10,160500,0x10fd41ad98c,65,resetBuffer node:internal/streams/writable:356:21,0x9b20b7f480,~
code-source-info,0x10fd41ad98c,102,11876,12025,C0O11889C2O11895C6O11911C10O11922C11O11942C15O11950C17O11956C26O11967C31O11981C33O11979C39O11964C43O11994C46O12000C52O12012C54O12011C59O12008C64O12024,,
code-creation,JS,10,160562,0x10fd41add04,14,set node:net:2342:6,0x9b20b4a848,~
code-source-info,0x10fd41add04,86,67548,67581,C0O67554C2O67566C7O67575C13O67579,,
code-creation,JS,10,160596,0x10fd41addec,8,get node:net:2341:6,0x9b20b4a7f0,~
code-source-info,0x10fd41addec,86,67512,67540,C0O67517C2O67529C4O67528C7O67538,,
code-creation,JS,10,160643,0x10fd41aded4,32,getNewAsyncId node:net:184:23,0x125aa7beda8,~
code-source-info,0x10fd41aded4,86,5136,5255,C0O5150C4O5183C14O5217C17O5217C22O5239C27O5239C31O5252,,
code-creation,JS,10,160727,0x10fd41ae174,315,Readable.on node:internal/streams/readable:1125:33,0x9b20b6c400,~
code-source-info,0x10fd41ae
code-creation,JS,10,160843,0x10fd41ae4ec,133,initSocketHandle node:net:309:26,0x125aa7bf0c0,~
code-source-info,0x10fd41ae4ec,86,8198,8798,C0O8215C5O8215C9O8232C10O8247C14O8336C20O8357C27O8365C32O8379C36O8397C43O8414C45O8412C49O8433C51O8438C57O8476C62O8457C66O8455C70O8507C72O8512C74O8511C78O8527C80O8564C82O8569C84O8568C88O8589C90O8631C94O8650C99O8655C105O8689C106O8696C107O8706C112O8720C116O8752C121O8760C126O8760C132O8797,,
code-creation,JS,10,160937,0x10fd41ae724,155,undestroy node:internal/streams/destroy:172:19,0x9b20b620e0,~
code-source-info,0x10fd41ae724,94,3362,4063,C0O3385C5O3419C10O3440C14O3454C15O3468C19O3481C20O3490C24O3504C25O3519C29O3533C30O3545C34O3559C35O3569C39O3582C40O3597C44O3611C45O3621C49O3647C57O3643C61O3689C69O3685C73O3719C77O3733C78O3747C82O3760C83O3772C87O3786C88O3795C92O3809C93O3824C97O3838C98O3848C102O3861C103O3876C107O3890C108O3904C112O3918C113O3932C117O3958C125O3954C129O3996C137O3992C141O4036C149O4032C154O4062,,
code-creation,JS,10,161006,0x10fd41af45c,50,set node:internal/streams/readable:131:8,0x9b20b76dd0,~
code-source-info,0x10fd41af45c,97,3991,4080,C0O4008C4O4019C8O4024C17O4035C20O4032C26O4052C30O4057C39O4068C44O4065C49O4079,,
code-creation,JS,10,161049,0x10fd41af57c,61,set node:internal/streams/readable:184:8,0x9b20b6b9c8,~
code-source-info,0x10fd41af57c,97,6409,6579,C0O6426C4O6448C6O6453C11O6468C15O6486C17O6491C26O6502C31O6499C37O6537C39O6542C48O6554C50O6553C55O6550C60O6578,,
code-creation,JS,10,161093,0x10fd41af6b4,50,set node:internal/streams/writable:124:8,0x10fd4184938,~
code-source-info,0x10fd41af6b4,102,3935,4024,C0O3952C4O3963C8O3968C17O3979C20O3976C26O3996C30O4001C39O4012C44O4009C49O4023,,
code-creation,JS,10,161137,0x10fd41af7d4,61,set node:internal/streams/writable:209:8,0x9b20b7fb08,~
code-source-info,0x10fd41af7d4,102,7165,7335,C0O7182C4O7204C6O7209C11O7224C15O7242C17O7247C26O7258C31O7255C37O7293C39O7298C48O7310C50O7309C55O7306C60O7334,,
code-creation,JS,10,161184,0x10fd41af91c,45,get node:internal/streams/writable:222:8,0x9b20b7fb60,~
code-source-info,0x10fd41af91c,102,7414,7511,C0O7419C2O7432C4O7431C10O7442C12O7440C17O7456C24O7469C30O7480C32O7478C37O7491C44O7509,,
code-creation,JS,10,161404,0x10fd41b0754,21,addCleanup node:internal/bootstrap/switches/is_main_thread:142:20,0x1d9b7270760,~
code-source-info,0x10fd41b0754,53,3799,3875,C0O3809C5O3813C10O3842C15O3842C20O3874,,
code-creation,JS,10,161469,0x10fd41b089c,81,value node:internal/console/constructor:319:20,0x1d9b726a880,~
code-source-info,0x10fd41b089c,46,9942,10359,C0O9972C2O9977C4O9976C8O9997C10O10007C15O10030C18O10038C22O10054C27O10055C33O10113C38O10124C43O10124C49O10142C51O10178C57O10213C59O10228C63O10257C65O10272C66O10291C72O10306C78O10329C80O10352,,
code-creation,JS,10,161519,0x10fd41b0a24,23,lazyUtilColors node:internal/console/constructor:83:24,0x1d9b7268da0,~
code-source-info,0x10fd41b0a24,46,1980,2060,C0O1988C14O2003C18O1999C20O2039C22O2057,,
code-creation,Eval,10,161604,0x10fd41b0e9c,5, node:internal/util/colors:1:1,0x10fd41b0cf8,~
script-source,111,node:internal/util/colors,'use strict';\x0d\n\x0d\nlet internalTTy;\x0d\nfunction lazyInternalTTY() {\x0d\n  internalTTy ??= require('internal/tty');\x0d\n  return internalTTy;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  blue: ''\x2C\x0d\n  green: ''\x2C\x0d\n  white: ''\x2C\x0d\n  red: ''\x2C\x0d\n  gray: ''\x2C\x0d\n  clear: ''\x2C\x0d\n  hasColors: false\x2C\x0d\n  shouldColorize(stream) {\x0d\n    if (process.env.FORCE_COLOR !== undefined) {\x0d\n      return lazyInternalTTY().getColorDepth() > 2;\x0d\n    }\x0d\n    return stream?.isTTY && (\x0d\n      typeof stream.getColorDepth === 'function' ?\x0d\n        stream.getColorDepth() > 2 : true);\x0d\n  }\x2C\x0d\n  refresh() {\x0d\n    if (process.stderr.isTTY) {\x0d\n      const hasColors = module.exports.shouldColorize(process.stderr);\x0d\n      module.exports.blue = hasColors ? '\\u001b[34m' : '';\x0d\n      module.exports.green = hasColors ? '\\u001b[32m' : '';\x0d\n      module.exports.white = hasColors ? '\\u001b[39m' : '';\x0d\n      module.exports.yellow = hasColors ? '\\u001b[33m' : '';\x0d\n      module.exports.red = hasColors ? '\\u001b[31m' : '';\x0d\n      module.exports.gray = hasColors ? '\\u001b[90m' : '';\x0d\n      module.exports.clear = hasColors ? '\\u001bc' : '';\x0d\n      module.exports.hasColors = hasColors;\x0d\n    }\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nmodule.exports.refresh();\x0d\n
code-source-info,0x10fd41b0e9c,111,0,1162,C0O0C4O1162,,
code-creation,JS,10,161678,0x10fd41b1104,78, node:internal/util/colors:1:1,0x10fd41b0e10,~
code-source-info,0x10fd41b1104,111,0,1162,C0O0C26O21C27O21C29O137C37O260C45O532C55O152C59O1135C62O1142C67O1150C72O1150C77O1161,,
code-creation,JS,10,161779,0x10fd41b16e4,211,refresh node:internal/util/colors:25:10,0x10fd41b0f80,~
code-source-info,0x10fd41b16e4,111,539,1126,C0O549C3O561C8O568C14O602C17O609C22O617C30O640C35O617C41O656C44O663C51O678C59O676C63O716C66O723C73O739C81O737C85O777C88O784C95O800C103O798C107O838C110O845C117O862C125O860C129O900C132O907C139O921C147O919C151O959C154O966C161O981C169O979C173O1019C176O1026C183O1042C191O1040C195O1077C198O1084C205O1102C210O1125,,
code-creation,JS,10,161856,0x10fd41b1afc,104,getStderr node:internal/bootstrap/switches/is_main_thread:170:19,0x1d9b7270838,~
code-source-info,0x10fd41b1afc,53,4613,5305,C0O4621C6O4633C8O4647C9O4651C15O4660C19O4658C21O4693C27O4721C31O4712C35O4733C38O4756C45O4747C51O4834C56O4850C60O4869C63O4880C69O4894C72O4902C83O4902C89O4951C97O4951C101O5288C103O5302,,
code-creation,JS,10,162465,0x10fd41b1da4,19,_getMaxListeners node:events:420:26,0x1d9b724f6b8,~
script-source,23,node:events,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePop\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromiseReject\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n  SymbolDispose\x2C\x0d\n} = primordials;\x0d\nconst kRejection = SymbolFor('nodejs.rejection');\x0d\n\x0d\nconst { kEmptyObject } = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  inspect\x2C\x0d\n  identicalSequenceRange\x2C\x0d\n} = require('internal/util/inspect');\x0d\n\x0d\nlet spliceOne;\x0d\nlet FixedQueue;\x0d\nlet kFirstEventParam;\x0d\nlet kResistStopPropagation;\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  kEnhanceStackBeforeInspector\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_UNHANDLED_ERROR\x2C\x0d\n  }\x2C\x0d\n  genericNodeError\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateInteger\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst kCapture = Symbol('kCapture');\x0d\nconst kErrorMonitor = Symbol('events.errorMonitor');\x0d\nconst kShapeMode = Symbol('shapeMode');\x0d\nconst kMaxEventTargetListeners = Symbol('events.maxEventTargetListeners');\x0d\nconst kMaxEventTargetListenersWarned =\x0d\n  Symbol('events.maxEventTargetListenersWarned');\x0d\nconst kWatermarkData = SymbolFor('nodejs.watermarkData');\x0d\n\x0d\nlet EventEmitterAsyncResource;\x0d\n// The EventEmitterAsyncResource has to be initialized lazily because event.js\x0d\n// is loaded so early in the bootstrap process\x2C before async_hooks is available.\x0d\n//\x0d\n// This implementation was adapted straight from addaleax's\x0d\n// eventemitter-asyncresource MIT-licensed userland module.\x0d\n// https://github.com/addaleax/eventemitter-asyncresource\x0d\nfunction lazyEventEmitterAsyncResource() {\x0d\n  if (EventEmitterAsyncResource === undefined) {\x0d\n    const {\x0d\n      AsyncResource\x2C\x0d\n    } = require('async_hooks');\x0d\n\x0d\n    const kEventEmitter = Symbol('kEventEmitter');\x0d\n    const kAsyncResource = Symbol('kAsyncResource');\x0d\n    class EventEmitterReferencingAsyncResource extends AsyncResource {\x0d\n      /**\x0d\n       * @param {EventEmitter} ee\x0d\n       * @param {string} [type]\x0d\n       * @param {{\x0d\n       *   triggerAsyncId?: number\x2C\x0d\n       *   requireManualDestroy?: boolean\x2C\x0d\n       * }} [options]\x0d\n       */\x0d\n      constructor(ee\x2C type\x2C options) {\x0d\n        super(type\x2C options);\x0d\n        this[kEventEmitter] = ee;\x0d\n      }\x0d\n\x0d\n      /**\x0d\n       * @type {EventEmitter}\x0d\n       */\x0d\n      get eventEmitter() {\x0d\n        if (this[kEventEmitter] === undefined)\x0d\n          throw new ERR_INVALID_THIS('EventEmitterReferencingAsyncResource');\x0d\n        return this[kEventEmitter];\x0d\n      }\x0d\n    }\x0d\n\x0d\n    EventEmitterAsyncResource =\x0d\n      class EventEmitterAsyncResource extends EventEmitter {\x0d\n        /**\x0d\n         * @param {{\x0d\n         *   name?: string\x2C\x0d\n         *   triggerAsyncId?: number\x2C\x0d\n         *   requireManualDestroy?: boolean\x2C\x0d\n         * }} [options]\x0d\n         */\x0d\n        constructor(options = undefined) {\x0d\n          let name;\x0d\n          if (typeof options === 'string') {\x0d\n            name = options;\x0d\n            options = undefined;\x0d\n          } else {\x0d\n            if (new.target === EventEmitterAsyncResource) {\x0d\n              validateString(options?.name\x2C 'options.name');\x0d\n            }\x0d\n            name = options?.name || new.target.name;\x0d\n          }\x0d\n          super(options);\x0d\n\x0d\n          this[kAsyncResource] =\x0d\n            new EventEmitterReferencingAsyncResource(this\x2C name\x2C options);\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @param {symbol\x2Cstring} event\x0d\n         * @param  {...any} args\x0d\n         * @returns {boolean}\x0d\n         */\x0d\n        emit(event\x2C ...args) {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          const { asyncResource } = this;\x0d\n          ArrayPrototypeUnshift(args\x2C super.emit\x2C this\x2C event);\x0d\n          return ReflectApply(asyncResource.runInAsyncScope\x2C asyncResource\x2C\x0d\n                              args);\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @returns {void}\x0d\n         */\x0d\n        emitDestroy() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          this.asyncResource.emitDestroy();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {number}\x0d\n         */\x0d\n        get asyncId() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this.asyncResource.asyncId();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {number}\x0d\n         */\x0d\n        get triggerAsyncId() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this.asyncResource.triggerAsyncId();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {EventEmitterReferencingAsyncResource}\x0d\n         */\x0d\n        get asyncResource() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this[kAsyncResource];\x0d\n        }\x0d\n      };\x0d\n  }\x0d\n  return EventEmitterAsyncResource;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new `EventEmitter` instance.\x0d\n * @param {{ captureRejections?: boolean; }} [opts]\x0d\n * @constructs {EventEmitter}\x0d\n */\x0d\nfunction EventEmitter(opts) {\x0d\n  EventEmitter.init.call(this\x2C opts);\x0d\n}\x0d\nmodule.exports = EventEmitter;\x0d\nmodule.exports.addAbortListener = addAbortListener;\x0d\nmodule.exports.once = once;\x0d\nmodule.exports.on = on;\x0d\nmodule.exports.getEventListeners = getEventListeners;\x0d\nmodule.exports.getMaxListeners = getMaxListeners;\x0d\n// Backwards-compat with node 0.10.x\x0d\nEventEmitter.EventEmitter = EventEmitter;\x0d\n\x0d\nEventEmitter.usingDomains = false;\x0d\n\x0d\nEventEmitter.captureRejectionSymbol = kRejection;\x0d\nObjectDefineProperty(EventEmitter\x2C 'captureRejections'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return EventEmitter.prototype[kCapture];\x0d\n  }\x2C\x0d\n  set(value) {\x0d\n    validateBoolean(value\x2C 'EventEmitter.captureRejections');\x0d\n\x0d\n    EventEmitter.prototype[kCapture] = value;\x0d\n  }\x2C\x0d\n  enumerable: true\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'EventEmitterAsyncResource'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get: lazyEventEmitterAsyncResource\x2C\x0d\n  set: undefined\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\nEventEmitter.errorMonitor = kErrorMonitor;\x0d\n\x0d\n// The default for captureRejections is false\x0d\nObjectDefineProperty(EventEmitter.prototype\x2C kCapture\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: false\x2C\x0d\n  writable: true\x2C\x0d\n  enumerable: false\x2C\x0d\n});\x0d\n\x0d\nEventEmitter.prototype._events = undefined;\x0d\nEventEmitter.prototype._eventsCount = 0;\x0d\nEventEmitter.prototype._maxListeners = undefined;\x0d\n\x0d\n// By default EventEmitters will print a warning if more than 10 listeners are\x0d\n// added to it. This is a useful default which helps finding memory leaks.\x0d\nlet defaultMaxListeners = 10;\x0d\nlet isEventTarget;\x0d\n\x0d\nfunction checkListener(listener) {\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n}\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'defaultMaxListeners'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get: function() {\x0d\n    return defaultMaxListeners;\x0d\n  }\x2C\x0d\n  set: function(arg) {\x0d\n    validateNumber(arg\x2C 'defaultMaxListeners'\x2C 0);\x0d\n    defaultMaxListeners = arg;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperties(EventEmitter\x2C {\x0d\n  kMaxEventTargetListeners: {\x0d\n    __proto__: null\x2C\x0d\n    value: kMaxEventTargetListeners\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x2C\x0d\n  kMaxEventTargetListenersWarned: {\x0d\n    __proto__: null\x2C\x0d\n    value: kMaxEventTargetListenersWarned\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n/**\x0d\n * Sets the max listeners.\x0d\n * @param {number} n\x0d\n * @param {EventTarget[] | EventEmitter[]} [eventTargets]\x0d\n * @returns {void}\x0d\n */\x0d\nEventEmitter.setMaxListeners =\x0d\n  function(n = defaultMaxListeners\x2C ...eventTargets) {\x0d\n    validateNumber(n\x2C 'setMaxListeners'\x2C 0);\x0d\n    if (eventTargets.length === 0) {\x0d\n      defaultMaxListeners = n;\x0d\n    } else {\x0d\n      if (isEventTarget === undefined)\x0d\n        isEventTarget = require('internal/event_target').isEventTarget;\x0d\n\x0d\n      for (let i = 0; i < eventTargets.length; i++) {\x0d\n        const target = eventTargets[i];\x0d\n        if (isEventTarget(target)) {\x0d\n          target[kMaxEventTargetListeners] = n;\x0d\n          target[kMaxEventTargetListenersWarned] = false;\x0d\n        } else if (typeof target.setMaxListeners === 'function') {\x0d\n          target.setMaxListeners(n);\x0d\n        } else {\x0d\n          throw new ERR_INVALID_ARG_TYPE(\x0d\n            'eventTargets'\x2C\x0d\n            ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n            target);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\n// If you're updating this function definition\x2C please also update any\x0d\n// re-definitions\x2C such as the one in the Domain module (lib/domain.js).\x0d\nEventEmitter.init = function(opts) {\x0d\n\x0d\n  if (this._events === undefined ||\x0d\n      this._events === ObjectGetPrototypeOf(this)._events) {\x0d\n    this._events = { __proto__: null };\x0d\n    this._eventsCount = 0;\x0d\n    this[kShapeMode] = false;\x0d\n  } else {\x0d\n    this[kShapeMode] = true;\x0d\n  }\x0d\n\x0d\n  this._maxListeners = this._maxListeners || undefined;\x0d\n\x0d\n\x0d\n  if (opts?.captureRejections) {\x0d\n    validateBoolean(opts.captureRejections\x2C 'options.captureRejections');\x0d\n    this[kCapture] = Boolean(opts.captureRejections);\x0d\n  } else {\x0d\n    // Assigning the kCapture property directly saves an expensive\x0d\n    // prototype lookup in a very sensitive hot path.\x0d\n    this[kCapture] = EventEmitter.prototype[kCapture];\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addCatch(that\x2C promise\x2C type\x2C args) {\x0d\n  if (!that[kCapture]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Handle Promises/A+ spec\x2C then could be a getter\x0d\n  // that throws on second use.\x0d\n  try {\x0d\n    const then = promise.then;\x0d\n\x0d\n    if (typeof then === 'function') {\x0d\n      then.call(promise\x2C undefined\x2C function(err) {\x0d\n        // The callback is called with nextTick to avoid a follow-up\x0d\n        // rejection from this promise.\x0d\n        process.nextTick(emitUnhandledRejectionOrErr\x2C that\x2C err\x2C type\x2C args);\x0d\n      });\x0d\n    }\x0d\n  } catch (err) {\x0d\n    that.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUnhandledRejectionOrErr(ee\x2C err\x2C type\x2C args) {\x0d\n  if (typeof ee[kRejection] === 'function') {\x0d\n    ee[kRejection](err\x2C type\x2C ...args);\x0d\n  } else {\x0d\n    // We have to disable the capture rejections mechanism\x2C otherwise\x0d\n    // we might end up in an infinite loop.\x0d\n    const prev = ee[kCapture];\x0d\n\x0d\n    // If the error handler throws\x2C it is not catchable and it\x0d\n    // will end up in 'uncaughtException'. We restore the previous\x0d\n    // value of kCapture in case the uncaughtException is present\x0d\n    // and the exception is handled.\x0d\n    try {\x0d\n      ee[kCapture] = false;\x0d\n      ee.emit('error'\x2C err);\x0d\n    } finally {\x0d\n      ee[kCapture] = prev;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Increases the max listeners of the event emitter.\x0d\n * @param {number} n\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\x0d\n  validateNumber(n\x2C 'setMaxListeners'\x2C 0);\x0d\n  this._maxListeners = n;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction _getMaxListeners(that) {\x0d\n  if (that._maxListeners === undefined)\x0d\n    return EventEmitter.defaultMaxListeners;\x0d\n  return that._maxListeners;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the current max listener value for the event emitter.\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\x0d\n  return _getMaxListeners(this);\x0d\n};\x0d\n\x0d\nfunction enhanceStackTrace(err\x2C own) {\x0d\n  let ctorInfo = '';\x0d\n  try {\x0d\n    const { name } = this.constructor;\x0d\n    if (name !== 'EventEmitter')\x0d\n      ctorInfo = ` on ${name} instance`;\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  const sep = `\\nEmitted 'error' event${ctorInfo} at:\\n`;\x0d\n\x0d\n  const errStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(err.stack\x2C '\\n')\x2C 1);\x0d\n  const ownStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(own.stack\x2C '\\n')\x2C 1);\x0d\n\x0d\n  const { len\x2C offset } = identicalSequenceRange(ownStack\x2C errStack);\x0d\n  if (len > 0) {\x0d\n    ArrayPrototypeSplice(ownStack\x2C offset + 1\x2C len - 2\x2C\x0d\n                         '    [... lines matching original stack trace ...]');\x0d\n  }\x0d\n\x0d\n  return err.stack + sep + ArrayPrototypeJoin(ownStack\x2C '\\n');\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously calls each of the listeners registered\x0d\n * for the event.\x0d\n * @param {string | symbol} type\x0d\n * @param {...any} [args]\x0d\n * @returns {boolean}\x0d\n */\x0d\nEventEmitter.prototype.emit = function emit(type\x2C ...args) {\x0d\n  let doError = (type === 'error');\x0d\n\x0d\n  const events = this._events;\x0d\n  if (events !== undefined) {\x0d\n    if (doError && events[kErrorMonitor] !== undefined)\x0d\n      this.emit(kErrorMonitor\x2C ...args);\x0d\n    doError = (doError && events.error === undefined);\x0d\n  } else if (!doError)\x0d\n    return false;\x0d\n\x0d\n  // If there is no 'error' event listener then throw.\x0d\n  if (doError) {\x0d\n    let er;\x0d\n    if (args.length > 0)\x0d\n      er = args[0];\x0d\n    if (er instanceof Error) {\x0d\n      try {\x0d\n        const capture = {};\x0d\n        ErrorCaptureStackTrace(capture\x2C EventEmitter.prototype.emit);\x0d\n        ObjectDefineProperty(er\x2C kEnhanceStackBeforeInspector\x2C {\x0d\n          __proto__: null\x2C\x0d\n          value: FunctionPrototypeBind(enhanceStackTrace\x2C this\x2C er\x2C capture)\x2C\x0d\n          configurable: true\x2C\x0d\n        });\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n\x0d\n      // Note: The comments on the `throw` lines are intentional\x2C they show\x0d\n      // up in Node's output if this results in an unhandled exception.\x0d\n      throw er; // Unhandled 'error' event\x0d\n    }\x0d\n\x0d\n    let stringifiedEr;\x0d\n    try {\x0d\n      stringifiedEr = inspect(er);\x0d\n    } catch {\x0d\n      stringifiedEr = er;\x0d\n    }\x0d\n\x0d\n    // At least give some kind of context to the user\x0d\n    const err = new ERR_UNHANDLED_ERROR(stringifiedEr);\x0d\n    err.context = er;\x0d\n    throw err; // Unhandled 'error' event\x0d\n  }\x0d\n\x0d\n  const handler = events[type];\x0d\n\x0d\n  if (handler === undefined)\x0d\n    return false;\x0d\n\x0d\n  if (typeof handler === 'function') {\x0d\n    const result = handler.apply(this\x2C args);\x0d\n\x0d\n    // We check if result is undefined first because that\x0d\n    // is the most common case so we do not pay any perf\x0d\n    // penalty\x0d\n    if (result !== undefined && result !== null) {\x0d\n      addCatch(this\x2C result\x2C type\x2C args);\x0d\n    }\x0d\n  } else {\x0d\n    const len = handler.length;\x0d\n    const listeners = arrayClone(handler);\x0d\n    for (let i = 0; i < len; ++i) {\x0d\n      const result = listeners[i].apply(this\x2C args);\x0d\n\x0d\n      // We check if result is undefined first because that\x0d\n      // is the most common case so we do not pay any perf\x0d\n      // penalty.\x0d\n      // This code is duplicated because extracting it away\x0d\n      // would make it non-inlineable.\x0d\n      if (result !== undefined && result !== null) {\x0d\n        addCatch(this\x2C result\x2C type\x2C args);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return true;\x0d\n};\x0d\n\x0d\nfunction _addListener(target\x2C type\x2C listener\x2C prepend) {\x0d\n  let m;\x0d\n  let events;\x0d\n  let existing;\x0d\n\x0d\n  checkListener(listener);\x0d\n\x0d\n  events = target._events;\x0d\n  if (events === undefined) {\x0d\n    events = target._events = { __proto__: null };\x0d\n    target._eventsCount = 0;\x0d\n  } else {\x0d\n    // To avoid recursion in the case that type === "newListener"! Before\x0d\n    // adding it to the listeners\x2C first emit "newListener".\x0d\n    if (events.newListener !== undefined) {\x0d\n      target.emit('newListener'\x2C type\x2C\x0d\n                  listener.listener ?? listener);\x0d\n\x0d\n      // Re-assign `events` because a newListener handler could have caused the\x0d\n      // this._events to be assigned to a new object\x0d\n      events = target._events;\x0d\n    }\x0d\n    existing = events[type];\x0d\n  }\x0d\n\x0d\n  if (existing === undefined) {\x0d\n    // Optimize the case of one listener. Don't need the extra array object.\x0d\n    events[type] = listener;\x0d\n    ++target._eventsCount;\x0d\n  } else {\x0d\n    if (typeof existing === 'function') {\x0d\n      // Adding the second element\x2C need to change to array.\x0d\n      existing = events[type] =\x0d\n        prepend ? [listener\x2C existing] : [existing\x2C listener];\x0d\n      // If we've already got an array\x2C just append.\x0d\n    } else if (prepend) {\x0d\n      existing.unshift(listener);\x0d\n    } else {\x0d\n      existing.push(listener);\x0d\n    }\x0d\n\x0d\n    // Check for listener leak\x0d\n    m = _getMaxListeners(target);\x0d\n    if (m > 0 && existing.length > m && !existing.warned) {\x0d\n      existing.warned = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      const w = genericNodeError(\x0d\n        `Possible EventEmitter memory leak detected. ${existing.length} ${String(type)} listeners ` +\x0d\n        `added to ${inspect(target\x2C { depth: -1 })}. Use emitter.setMaxListeners() to increase limit`\x2C\x0d\n        { name: 'MaxListenersExceededWarning'\x2C emitter: target\x2C type: type\x2C count: existing.length });\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return target;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a listener to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.addListener = function addListener(type\x2C listener) {\x0d\n  return _addListener(this\x2C type\x2C listener\x2C false);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\x0d\n\x0d\n/**\x0d\n * Adds the `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependListener =\x0d\n    function prependListener(type\x2C listener) {\x0d\n      return _addListener(this\x2C type\x2C listener\x2C true);\x0d\n    };\x0d\n\x0d\nfunction onceWrapper() {\x0d\n  if (!this.fired) {\x0d\n    this.target.removeListener(this.type\x2C this.wrapFn);\x0d\n    this.fired = true;\x0d\n    if (arguments.length === 0)\x0d\n      return this.listener.call(this.target);\x0d\n    return this.listener.apply(this.target\x2C arguments);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction _onceWrap(target\x2C type\x2C listener) {\x0d\n  const state = { fired: false\x2C wrapFn: undefined\x2C target\x2C type\x2C listener };\x0d\n  const wrapped = onceWrapper.bind(state);\x0d\n  wrapped.listener = listener;\x0d\n  state.wrapFn = wrapped;\x0d\n  return wrapped;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.once = function once(type\x2C listener) {\x0d\n  checkListener(listener);\x0d\n\x0d\n  this.on(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n  return this;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependOnceListener =\x0d\n    function prependOnceListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      this.prependListener(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n      return this;\x0d\n    };\x0d\n\x0d\n/**\x0d\n * Removes the specified `listener` from the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeListener =\x0d\n    function removeListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      const list = events[type];\x0d\n      if (list === undefined)\x0d\n        return this;\x0d\n\x0d\n      if (list === listener || list.listener === listener) {\x0d\n        this._eventsCount -= 1;\x0d\n\x0d\n        if (this[kShapeMode]) {\x0d\n          events[type] = undefined;\x0d\n        } else if (this._eventsCount === 0) {\x0d\n          this._events = { __proto__: null };\x0d\n        } else {\x0d\n          delete events[type];\x0d\n          if (events.removeListener)\x0d\n            this.emit('removeListener'\x2C type\x2C list.listener || listener);\x0d\n        }\x0d\n      } else if (typeof list !== 'function') {\x0d\n        let position = -1;\x0d\n\x0d\n        for (let i = list.length - 1; i >= 0; i--) {\x0d\n          if (list[i] === listener || list[i].listener === listener) {\x0d\n            position = i;\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (position < 0)\x0d\n          return this;\x0d\n\x0d\n        if (position === 0)\x0d\n          list.shift();\x0d\n        else {\x0d\n          if (spliceOne === undefined)\x0d\n            spliceOne = require('internal/util').spliceOne;\x0d\n          spliceOne(list\x2C position);\x0d\n        }\x0d\n\x0d\n        if (list.length === 1)\x0d\n          events[type] = list[0];\x0d\n\x0d\n        if (events.removeListener !== undefined)\x0d\n          this.emit('removeListener'\x2C type\x2C listener);\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\x0d\n\x0d\n/**\x0d\n * Removes all listeners from the event emitter. (Only\x0d\n * removes listeners for a specific event name if specified\x0d\n * as `type`).\x0d\n * @param {string | symbol} [type]\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeAllListeners =\x0d\n    function removeAllListeners(type) {\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      // Not listening for removeListener\x2C no need to emit\x0d\n      if (events.removeListener === undefined) {\x0d\n        if (arguments.length === 0) {\x0d\n          this._events = { __proto__: null };\x0d\n          this._eventsCount = 0;\x0d\n        } else if (events[type] !== undefined) {\x0d\n          if (--this._eventsCount === 0)\x0d\n            this._events = { __proto__: null };\x0d\n          else\x0d\n            delete events[type];\x0d\n        }\x0d\n        this[kShapeMode] = false;\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      // Emit removeListener for all listeners on all events\x0d\n      if (arguments.length === 0) {\x0d\n        for (const key of ReflectOwnKeys(events)) {\x0d\n          if (key === 'removeListener') continue;\x0d\n          this.removeAllListeners(key);\x0d\n        }\x0d\n        this.removeAllListeners('removeListener');\x0d\n        this._events = { __proto__: null };\x0d\n        this._eventsCount = 0;\x0d\n        this[kShapeMode] = false;\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      const listeners = events[type];\x0d\n\x0d\n      if (typeof listeners === 'function') {\x0d\n        this.removeListener(type\x2C listeners);\x0d\n      } else if (listeners !== undefined) {\x0d\n        // LIFO order\x0d\n        for (let i = listeners.length - 1; i >= 0; i--) {\x0d\n          this.removeListener(type\x2C listeners[i]);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nfunction _listeners(target\x2C type\x2C unwrap) {\x0d\n  const events = target._events;\x0d\n\x0d\n  if (events === undefined)\x0d\n    return [];\x0d\n\x0d\n  const evlistener = events[type];\x0d\n  if (evlistener === undefined)\x0d\n    return [];\x0d\n\x0d\n  if (typeof evlistener === 'function')\x0d\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\x0d\n\x0d\n  return unwrap ?\x0d\n    unwrapListeners(evlistener) : arrayClone(evlistener);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.listeners = function listeners(type) {\x0d\n  return _listeners(this\x2C type\x2C true);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners and wrappers for\x0d\n * the event name specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\x0d\n  return _listeners(this\x2C type\x2C false);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to the event name\x0d\n * specified as `type`.\x0d\n * @deprecated since v3.2.0\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.listenerCount = function(emitter\x2C type) {\x0d\n  if (typeof emitter.listenerCount === 'function') {\x0d\n    return emitter.listenerCount(type);\x0d\n  }\x0d\n  return FunctionPrototypeCall(listenerCount\x2C emitter\x2C type);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.listenerCount = listenerCount;\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {number}\x0d\n */\x0d\nfunction listenerCount(type\x2C listener) {\x0d\n  const events = this._events;\x0d\n\x0d\n  if (events !== undefined) {\x0d\n    const evlistener = events[type];\x0d\n\x0d\n    if (typeof evlistener === 'function') {\x0d\n      if (listener != null) {\x0d\n        return listener === evlistener || listener === evlistener.listener ? 1 : 0;\x0d\n      }\x0d\n\x0d\n      return 1;\x0d\n    } else if (evlistener !== undefined) {\x0d\n      if (listener != null) {\x0d\n        let matching = 0;\x0d\n\x0d\n        for (let i = 0\x2C l = evlistener.length; i < l; i++) {\x0d\n          if (evlistener[i] === listener || evlistener[i].listener === listener) {\x0d\n            matching++;\x0d\n          }\x0d\n        }\x0d\n\x0d\n        return matching;\x0d\n      }\x0d\n\x0d\n      return evlistener.length;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an array listing the events for which\x0d\n * the emitter has registered listeners.\x0d\n * @returns {any[]}\x0d\n */\x0d\nEventEmitter.prototype.eventNames = function eventNames() {\x0d\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\x0d\n};\x0d\n\x0d\nfunction arrayClone(arr) {\x0d\n  // At least since V8 8.3\x2C this implementation is faster than the previous\x0d\n  // which always used a simple for-loop\x0d\n  switch (arr.length) {\x0d\n    case 2: return [arr[0]\x2C arr[1]];\x0d\n    case 3: return [arr[0]\x2C arr[1]\x2C arr[2]];\x0d\n    case 4: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]];\x0d\n    case 5: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]];\x0d\n    case 6: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]\x2C arr[5]];\x0d\n  }\x0d\n  return ArrayPrototypeSlice(arr);\x0d\n}\x0d\n\x0d\nfunction unwrapListeners(arr) {\x0d\n  const ret = arrayClone(arr);\x0d\n  for (let i = 0; i < ret.length; ++i) {\x0d\n    const orig = ret[i].listener;\x0d\n    if (typeof orig === 'function')\x0d\n      ret[i] = orig;\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {EventEmitter | EventTarget} emitterOrTarget\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nfunction getEventListeners(emitterOrTarget\x2C type) {\x0d\n  // First check if EventEmitter\x0d\n  if (typeof emitterOrTarget.listeners === 'function') {\x0d\n    return emitterOrTarget.listeners(type);\x0d\n  }\x0d\n  // Require event target lazily to avoid always loading it\x0d\n  const { isEventTarget\x2C kEvents } = require('internal/event_target');\x0d\n  if (isEventTarget(emitterOrTarget)) {\x0d\n    const root = emitterOrTarget[kEvents].get(type);\x0d\n    const listeners = [];\x0d\n    let handler = root?.next;\x0d\n    while (handler?.listener !== undefined) {\x0d\n      const listener = handler.listener?.deref ?\x0d\n        handler.listener.deref() : handler.listener;\x0d\n      listeners.push(listener);\x0d\n      handler = handler.next;\x0d\n    }\x0d\n    return listeners;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE('emitter'\x2C\x0d\n                                 ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n                                 emitterOrTarget);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the max listeners set.\x0d\n * @param {EventEmitter | EventTarget} emitterOrTarget\x0d\n * @returns {number}\x0d\n */\x0d\nfunction getMaxListeners(emitterOrTarget) {\x0d\n  if (typeof emitterOrTarget?.getMaxListeners === 'function') {\x0d\n    return _getMaxListeners(emitterOrTarget);\x0d\n  } else if (emitterOrTarget?.[kMaxEventTargetListeners]) {\x0d\n    return emitterOrTarget[kMaxEventTargetListeners];\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE('emitter'\x2C\x0d\n                                 ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n                                 emitterOrTarget);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a `Promise` that is fulfilled when the emitter\x0d\n * emits the given event.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string} name\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {Promise}\x0d\n */\x0d\nasync function once(emitter\x2C name\x2C options = kEmptyObject) {\x0d\n  validateObject(options\x2C 'options');\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError(undefined\x2C { cause: signal?.reason });\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    const errorListener = (err) => {\x0d\n      emitter.removeListener(name\x2C resolver);\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      reject(err);\x0d\n    };\x0d\n    const resolver = (...args) => {\x0d\n      if (typeof emitter.removeListener === 'function') {\x0d\n        emitter.removeListener('error'\x2C errorListener);\x0d\n      }\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      resolve(args);\x0d\n    };\x0d\n\x0d\n    kResistStopPropagation ??= require('internal/event_target').kResistStopPropagation;\x0d\n    const opts = { __proto__: null\x2C once: true\x2C [kResistStopPropagation]: true };\x0d\n    eventTargetAgnosticAddListener(emitter\x2C name\x2C resolver\x2C opts);\x0d\n    if (name !== 'error' && typeof emitter.once === 'function') {\x0d\n      // EventTarget does not have `error` event semantics like Node\x0d\n      // EventEmitters\x2C we listen to `error` events only on EventEmitters.\x0d\n      emitter.once('error'\x2C errorListener);\x0d\n    }\x0d\n    function abortListener() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C name\x2C resolver);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorListener);\x0d\n      reject(new AbortError(undefined\x2C { cause: signal?.reason }));\x0d\n    }\x0d\n    if (signal != null) {\x0d\n      eventTargetAgnosticAddListener(\x0d\n        signal\x2C 'abort'\x2C abortListener\x2C { __proto__: null\x2C once: true\x2C [kResistStopPropagation]: true });\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst AsyncIteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf(async function* () {}).prototype);\x0d\n\x0d\nfunction createIterResult(value\x2C done) {\x0d\n  return { value\x2C done };\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticRemoveListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.removeListener === 'function') {\x0d\n    emitter.removeListener(name\x2C listener);\x0d\n  } else if (typeof emitter.removeEventListener === 'function') {\x0d\n    emitter.removeEventListener(name\x2C listener\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticAddListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.on === 'function') {\x0d\n    if (flags?.once) {\x0d\n      emitter.once(name\x2C listener);\x0d\n    } else {\x0d\n      emitter.on(name\x2C listener);\x0d\n    }\x0d\n  } else if (typeof emitter.addEventListener === 'function') {\x0d\n    emitter.addEventListener(name\x2C listener\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an `AsyncIterator` that iterates `event` events.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} event\x0d\n * @param {{\x0d\n *    signal: AbortSignal;\x0d\n *    close?: string[];\x0d\n *    highWatermark?: number\x2C\x0d\n *    lowWatermark?: number\x0d\n *   }} [options]\x0d\n * @returns {AsyncIterator}\x0d\n */\x0d\nfunction on(emitter\x2C event\x2C options = kEmptyObject) {\x0d\n  // Parameters validation\x0d\n  validateObject(options\x2C 'options');\x0d\n  const signal = options.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError(undefined\x2C { cause: signal?.reason });\x0d\n  const highWatermark = options.highWatermark ?? NumberMAX_SAFE_INTEGER;\x0d\n  validateInteger(highWatermark\x2C 'options.highWatermark'\x2C 1);\x0d\n  const lowWatermark = options.lowWatermark ?? 1;\x0d\n  validateInteger(lowWatermark\x2C 'options.lowWatermark'\x2C 1);\x0d\n\x0d\n  // Preparing controlling queues and variables\x0d\n  FixedQueue ??= require('internal/fixed_queue');\x0d\n  const unconsumedEvents = new FixedQueue();\x0d\n  const unconsumedPromises = new FixedQueue();\x0d\n  let paused = false;\x0d\n  let error = null;\x0d\n  let finished = false;\x0d\n  let size = 0;\x0d\n\x0d\n  const iterator = ObjectSetPrototypeOf({\x0d\n    next() {\x0d\n      // First\x2C we consume all unread events\x0d\n      if (size) {\x0d\n        const value = unconsumedEvents.shift();\x0d\n        size--;\x0d\n        if (paused && size < lowWatermark) {\x0d\n          emitter.resume();\x0d\n          paused = false;\x0d\n        }\x0d\n        return PromiseResolve(createIterResult(value\x2C false));\x0d\n      }\x0d\n\x0d\n      // Then we error\x2C if an error happened\x0d\n      // This happens one time if at all\x2C because after 'error'\x0d\n      // we stop listening\x0d\n      if (error) {\x0d\n        const p = PromiseReject(error);\x0d\n        // Only the first element errors\x0d\n        error = null;\x0d\n        return p;\x0d\n      }\x0d\n\x0d\n      // If the iterator is finished\x2C resolve to done\x0d\n      if (finished) return closeHandler();\x0d\n\x0d\n      // Wait until an event happens\x0d\n      return new Promise(function(resolve\x2C reject) {\x0d\n        unconsumedPromises.push({ resolve\x2C reject });\x0d\n      });\x0d\n    }\x2C\x0d\n\x0d\n    return() {\x0d\n      return closeHandler();\x0d\n    }\x2C\x0d\n\x0d\n    throw(err) {\x0d\n      if (!err || !(err instanceof Error)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('EventEmitter.AsyncIterator'\x2C\x0d\n                                       'Error'\x2C err);\x0d\n      }\x0d\n      errorHandler(err);\x0d\n    }\x2C\x0d\n    [SymbolAsyncIterator]() {\x0d\n      return this;\x0d\n    }\x2C\x0d\n    [kWatermarkData]: {\x0d\n      /**\x0d\n       * The current queue size\x0d\n       */\x0d\n      get size() {\x0d\n        return size;\x0d\n      }\x2C\x0d\n      /**\x0d\n       * The low watermark. The emitter is resumed every time size is lower than it\x0d\n       */\x0d\n      get low() {\x0d\n        return lowWatermark;\x0d\n      }\x2C\x0d\n      /**\x0d\n       * The high watermark. The emitter is paused every time size is higher than it\x0d\n       */\x0d\n      get high() {\x0d\n        return highWatermark;\x0d\n      }\x2C\x0d\n      /**\x0d\n       * It checks whether the emitter is paused by the watermark controller or not\x0d\n       */\x0d\n      get isPaused() {\x0d\n        return paused;\x0d\n      }\x2C\x0d\n    }\x2C\x0d\n  }\x2C AsyncIteratorPrototype);\x0d\n\x0d\n  // Adding event handlers\x0d\n  const { addEventListener\x2C removeAll } = listenersController();\x0d\n  kFirstEventParam ??= require('internal/events/symbols').kFirstEventParam;\x0d\n  addEventListener(emitter\x2C event\x2C options[kFirstEventParam] ? eventHandler : function(...args) {\x0d\n    return eventHandler(args);\x0d\n  });\x0d\n  if (event !== 'error' && typeof emitter.on === 'function') {\x0d\n    addEventListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n  }\x0d\n  const closeEvents = options?.close;\x0d\n  if (closeEvents?.length) {\x0d\n    for (let i = 0; i < closeEvents.length; i++) {\x0d\n      addEventListener(emitter\x2C closeEvents[i]\x2C closeHandler);\x0d\n    }\x0d\n  }\x0d\n  if (signal) {\x0d\n    kResistStopPropagation ??= require('internal/event_target').kResistStopPropagation;\x0d\n    eventTargetAgnosticAddListener(\x0d\n      signal\x2C\x0d\n      'abort'\x2C\x0d\n      abortListener\x2C\x0d\n      { __proto__: null\x2C once: true\x2C [kResistStopPropagation]: true });\x0d\n  }\x0d\n\x0d\n  return iterator;\x0d\n\x0d\n  function abortListener() {\x0d\n    errorHandler(new AbortError(undefined\x2C { cause: signal?.reason }));\x0d\n  }\x0d\n\x0d\n  function eventHandler(value) {\x0d\n    if (unconsumedPromises.isEmpty()) {\x0d\n      size++;\x0d\n      if (!paused && size > highWatermark) {\x0d\n        paused = true;\x0d\n        emitter.pause();\x0d\n      }\x0d\n      unconsumedEvents.push(value);\x0d\n    } else unconsumedPromises.shift().resolve(createIterResult(value\x2C false));\x0d\n  }\x0d\n\x0d\n  function errorHandler(err) {\x0d\n    if (unconsumedPromises.isEmpty()) error = err;\x0d\n    else unconsumedPromises.shift().reject(err);\x0d\n\x0d\n    closeHandler();\x0d\n  }\x0d\n\x0d\n  function closeHandler() {\x0d\n    removeAll();\x0d\n    finished = true;\x0d\n    const doneResult = createIterResult(undefined\x2C true);\x0d\n    while (!unconsumedPromises.isEmpty()) {\x0d\n      unconsumedPromises.shift().resolve(doneResult);\x0d\n    }\x0d\n\x0d\n    return PromiseResolve(doneResult);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction listenersController() {\x0d\n  const listeners = [];\x0d\n\x0d\n  return {\x0d\n    addEventListener(emitter\x2C event\x2C handler\x2C flags) {\x0d\n      eventTargetAgnosticAddListener(emitter\x2C event\x2C handler\x2C flags);\x0d\n      ArrayPrototypePush(listeners\x2C [emitter\x2C event\x2C handler\x2C flags]);\x0d\n    }\x2C\x0d\n    removeAll() {\x0d\n      while (listeners.length > 0) {\x0d\n        ReflectApply(eventTargetAgnosticRemoveListener\x2C undefined\x2C ArrayPrototypePop(listeners));\x0d\n      }\x0d\n    }\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nlet queueMicrotask;\x0d\n\x0d\nfunction addAbortListener(signal\x2C listener) {\x0d\n  if (signal === undefined) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('signal'\x2C 'AbortSignal'\x2C signal);\x0d\n  }\x0d\n  validateAbortSignal(signal\x2C 'signal');\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n\x0d\n  let removeEventListener;\x0d\n  if (signal.aborted) {\x0d\n    queueMicrotask ??= require('internal/process/task_queues').queueMicrotask;\x0d\n    queueMicrotask(() => listener());\x0d\n  } else {\x0d\n    kResistStopPropagation ??= require('internal/event_target').kResistStopPropagation;\x0d\n    // TODO(atlowChemi) add { subscription: true } and return directly\x0d\n    signal.addEventListener('abort'\x2C listener\x2C { __proto__: null\x2C once: true\x2C [kResistStopPropagation]: true });\x0d\n    removeEventListener = () => {\x0d\n      signal.removeEventListener('abort'\x2C listener);\x0d\n    };\x0d\n  }\x0d\n  return {\x0d\n    __proto__: null\x2C\x0d\n    [SymbolDispose]() {\x0d\n      removeEventListener?.();\x0d\n    }\x2C\x0d\n  };\x0d\n}\x0d\n
code-source-info,0x10fd41b1da4,23,12522,12650,C0O12543C6O12577C9O12597C13O12617C14O12633C18O12647,,
tick,0x7ffdb202f464,164342,0,0x0,3,0x7ff7b3cc62d0,0x1d9b724fd5b,0x1d9b725018a,0x10fd41b1b4f,0x10fd41b16e7,0x10fd41b114c,0x7ff734383f77,0x7ff734383c87,0x10fd41b0a32,0x10fd41b08ae,0x125aa7b4161,0x125aa7b4024,0x7ff75414ef5f,0x125aa7b3c21,0x125aa7ab020,0x3151437ffa6
code-creation,JS,10,164364,0x10fd41b45fc,5,get node:events:282:16,0x1d9b724f130,~
code-source-info,0x10fd41b45fc,23,8518,8560,C0O8528C4O8555,,
code-creation,JS,10,164433,0x10fd41b46f4,80,shouldColorize node:internal/util/colors:17:17,0x10fd41b0f28,~
code-source-info,0x10fd41b46f4,111,274,527,C0O290C3O302C8O306C14O342C17O349C21O366C26O367C33O383C36O387C37O400C44O413C53O447C61O494C66O494C73O510C79O522,,
code-creation,JS,10,164631,0x10fd41b4de4,750,getColorDepth node:internal/tty:106:23,0x10fd41a7d68,~
code-source-info,0x10fd41b4de
code-creation,Eval,10,165115,0x10fd41b730c,5, node:os:1:1,0x10fd41b6f88,~
script-source,112,node:os,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  Float64Array\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  SymbolToPrimitive\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { safeGetenv } = internalBinding('credentials');\x0d\nconst constants = internalBinding('constants').os;\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_SYSTEM_ERROR\x2C\x0d\n  }\x2C\x0d\n  hideStackFrames\x2C\x0d\n} = require('internal/errors');\x0d\nconst { validateInt32 } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  getAvailableParallelism\x2C\x0d\n  getCPUs\x2C\x0d\n  getFreeMem\x2C\x0d\n  getHomeDirectory: _getHomeDirectory\x2C\x0d\n  getHostname: _getHostname\x2C\x0d\n  getInterfaceAddresses: _getInterfaceAddresses\x2C\x0d\n  getLoadAvg\x2C\x0d\n  getPriority: _getPriority\x2C\x0d\n  getOSInformation: _getOSInformation\x2C\x0d\n  getTotalMem\x2C\x0d\n  getUserInfo\x2C\x0d\n  getUptime: _getUptime\x2C\x0d\n  isBigEndian\x2C\x0d\n  setPriority: _setPriority\x2C\x0d\n} = internalBinding('os');\x0d\n\x0d\nfunction getCheckedFunction(fn) {\x0d\n  return hideStackFrames(function checkError() {\x0d\n    const ctx = {};\x0d\n    const ret = fn(ctx);\x0d\n    if (ret === undefined) {\x0d\n      throw new ERR_SYSTEM_ERROR.HideStackFramesError(ctx);\x0d\n    }\x0d\n    return ret;\x0d\n  });\x0d\n}\x0d\n\x0d\nconst {\x0d\n  0: type\x2C\x0d\n  1: version\x2C\x0d\n  2: release\x2C\x0d\n  3: machine\x2C\x0d\n} = _getOSInformation();\x0d\n\x0d\nconst getHomeDirectory = getCheckedFunction(_getHomeDirectory);\x0d\nconst getHostname = getCheckedFunction(_getHostname);\x0d\nconst getInterfaceAddresses = getCheckedFunction(_getInterfaceAddresses);\x0d\nconst getUptime = getCheckedFunction(_getUptime);\x0d\n\x0d\n/**\x0d\n * @returns {string}\x0d\n */\x0d\nconst getOSRelease = () => release;\x0d\n/**\x0d\n * @returns {string}\x0d\n */\x0d\nconst getOSType = () => type;\x0d\n/**\x0d\n * @returns {string}\x0d\n */\x0d\nconst getOSVersion = () => version;\x0d\n/**\x0d\n * @returns {string}\x0d\n */\x0d\nconst getMachine = () => machine;\x0d\n\x0d\ngetAvailableParallelism[SymbolToPrimitive] = () => getAvailableParallelism();\x0d\ngetFreeMem[SymbolToPrimitive] = () => getFreeMem();\x0d\ngetHostname[SymbolToPrimitive] = () => getHostname();\x0d\ngetOSVersion[SymbolToPrimitive] = () => getOSVersion();\x0d\ngetOSType[SymbolToPrimitive] = () => getOSType();\x0d\ngetOSRelease[SymbolToPrimitive] = () => getOSRelease();\x0d\ngetMachine[SymbolToPrimitive] = () => getMachine();\x0d\ngetHomeDirectory[SymbolToPrimitive] = () => getHomeDirectory();\x0d\ngetTotalMem[SymbolToPrimitive] = () => getTotalMem();\x0d\ngetUptime[SymbolToPrimitive] = () => getUptime();\x0d\n\x0d\nconst kEndianness = isBigEndian ? 'BE' : 'LE';\x0d\n\x0d\nconst avgValues = new Float64Array(3);\x0d\n\x0d\n/**\x0d\n * @returns {[number\x2C number\x2C number]}\x0d\n */\x0d\nfunction loadavg() {\x0d\n  getLoadAvg(avgValues);\x0d\n  return [avgValues[0]\x2C avgValues[1]\x2C avgValues[2]];\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an array of objects containing information about each\x0d\n * logical CPU core.\x0d\n * @returns {Array<{\x0d\n *  model: string\x2C\x0d\n *  speed: number\x2C\x0d\n *  times: {\x0d\n *    user: number\x2C\x0d\n *    nice: number\x2C\x0d\n *    sys: number\x2C\x0d\n *    idle: number\x2C\x0d\n *    irq: number\x2C\x0d\n *  }\x2C\x0d\n * }>}\x0d\n */\x0d\nfunction cpus() {\x0d\n  // [] is a bugfix for a regression introduced in 51cea61\x0d\n  const data = getCPUs() || [];\x0d\n  const result = [];\x0d\n  let i = 0;\x0d\n  while (i < data.length) {\x0d\n    ArrayPrototypePush(result\x2C {\x0d\n      model: data[i++]\x2C\x0d\n      speed: data[i++]\x2C\x0d\n      times: {\x0d\n        user: data[i++]\x2C\x0d\n        nice: data[i++]\x2C\x0d\n        sys: data[i++]\x2C\x0d\n        idle: data[i++]\x2C\x0d\n        irq: data[i++]\x2C\x0d\n      }\x2C\x0d\n    });\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @returns {string}\x0d\n */\x0d\nfunction arch() {\x0d\n  return process.arch;\x0d\n}\x0d\narch[SymbolToPrimitive] = () => process.arch;\x0d\n\x0d\n/**\x0d\n * @returns {string}\x0d\n */\x0d\nfunction platform() {\x0d\n  return process.platform;\x0d\n}\x0d\nplatform[SymbolToPrimitive] = () => process.platform;\x0d\n\x0d\n/**\x0d\n * @returns {string}\x0d\n */\x0d\nfunction tmpdir() {\x0d\n  let path;\x0d\n  if (isWindows) {\x0d\n    path = process.env.TEMP ||\x0d\n           process.env.TMP ||\x0d\n           (process.env.SystemRoot || process.env.windir) + '\\\\temp';\x0d\n    if (path.length > 1 && StringPrototypeEndsWith(path\x2C '\\\\') &&\x0d\n        !StringPrototypeEndsWith(path\x2C ':\\\\'))\x0d\n      path = StringPrototypeSlice(path\x2C 0\x2C -1);\x0d\n  } else {\x0d\n    path = safeGetenv('TMPDIR') ||\x0d\n           safeGetenv('TMP') ||\x0d\n           safeGetenv('TEMP') ||\x0d\n           '/tmp';\x0d\n    if (path.length > 1 && StringPrototypeEndsWith(path\x2C '/'))\x0d\n      path = StringPrototypeSlice(path\x2C 0\x2C -1);\x0d\n  }\x0d\n\x0d\n  return path;\x0d\n}\x0d\ntmpdir[SymbolToPrimitive] = () => tmpdir();\x0d\n\x0d\n/**\x0d\n * @returns {'BE' | 'LE'}\x0d\n */\x0d\nfunction endianness() {\x0d\n  return kEndianness;\x0d\n}\x0d\nendianness[SymbolToPrimitive] = () => kEndianness;\x0d\n\x0d\n// Returns the number of ones in the binary representation of the decimal\x0d\n// number.\x0d\nfunction countBinaryOnes(n) {\x0d\n  // Count the number of bits set in parallel\x2C which is faster than looping\x0d\n  n = n - ((n >>> 1) & 0x55555555);\x0d\n  n = (n & 0x33333333) + ((n >>> 2) & 0x33333333);\x0d\n  return ((n + (n >>> 4) & 0xF0F0F0F) * 0x1010101) >>> 24;\x0d\n}\x0d\n\x0d\nfunction getCIDR(address\x2C netmask\x2C family) {\x0d\n  let ones = 0;\x0d\n  let split = '.';\x0d\n  let range = 10;\x0d\n  let groupLength = 8;\x0d\n  let hasZeros = false;\x0d\n  let lastPos = 0;\x0d\n\x0d\n  if (family === 'IPv6') {\x0d\n    split = ':';\x0d\n    range = 16;\x0d\n    groupLength = 16;\x0d\n  }\x0d\n\x0d\n  for (let i = 0; i < netmask.length; i++) {\x0d\n    if (netmask[i] !== split) {\x0d\n      if (i + 1 < netmask.length) {\x0d\n        continue;\x0d\n      }\x0d\n      i++;\x0d\n    }\x0d\n    const part = StringPrototypeSlice(netmask\x2C lastPos\x2C i);\x0d\n    lastPos = i + 1;\x0d\n    if (part !== '') {\x0d\n      if (hasZeros) {\x0d\n        if (part !== '0') {\x0d\n          return null;\x0d\n        }\x0d\n      } else {\x0d\n        const binary = NumberParseInt(part\x2C range);\x0d\n        const binaryOnes = countBinaryOnes(binary);\x0d\n        ones += binaryOnes;\x0d\n        if (binaryOnes !== groupLength) {\x0d\n          if ((binary & 1) !== 0) {\x0d\n            return null;\x0d\n          }\x0d\n          hasZeros = true;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return `${address}/${ones}`;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @returns {Record<string\x2C Array<{\x0d\n *  address: string\x2C\x0d\n *  netmask: string\x2C\x0d\n *  family: 'IPv4' | 'IPv6'\x2C\x0d\n *  mac: string\x2C\x0d\n *  internal: boolean\x2C\x0d\n *  scopeid: number\x2C\x0d\n *  cidr: string | null\x2C\x0d\n * }>>}\x0d\n */\x0d\nfunction networkInterfaces() {\x0d\n  const data = getInterfaceAddresses();\x0d\n  const result = {};\x0d\n\x0d\n  if (data === undefined)\x0d\n    return result;\x0d\n  for (let i = 0; i < data.length; i += 7) {\x0d\n    const name = data[i];\x0d\n    const entry = {\x0d\n      address: data[i + 1]\x2C\x0d\n      netmask: data[i + 2]\x2C\x0d\n      family: data[i + 3]\x2C\x0d\n      mac: data[i + 4]\x2C\x0d\n      internal: data[i + 5]\x2C\x0d\n      cidr: getCIDR(data[i + 1]\x2C data[i + 2]\x2C data[i + 3])\x2C\x0d\n    };\x0d\n    const scopeid = data[i + 6];\x0d\n    if (scopeid !== -1)\x0d\n      entry.scopeid = scopeid;\x0d\n\x0d\n    const existing = result[name];\x0d\n    if (existing !== undefined)\x0d\n      ArrayPrototypePush(existing\x2C entry);\x0d\n    else\x0d\n      result[name] = [entry];\x0d\n  }\x0d\n\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {number} [pid=0]\x0d\n * @param {number} priority\x0d\n * @returns {void}\x0d\n */\x0d\nfunction setPriority(pid\x2C priority) {\x0d\n  if (priority === undefined) {\x0d\n    priority = pid;\x0d\n    pid = 0;\x0d\n  }\x0d\n\x0d\n  validateInt32(pid\x2C 'pid');\x0d\n  validateInt32(priority\x2C 'priority'\x2C -20\x2C 19);\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (_setPriority(pid\x2C priority\x2C ctx) !== 0)\x0d\n    throw new ERR_SYSTEM_ERROR(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {number} [pid=0]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction getPriority(pid) {\x0d\n  if (pid === undefined)\x0d\n    pid = 0;\x0d\n  else\x0d\n    validateInt32(pid\x2C 'pid');\x0d\n\x0d\n  const ctx = {};\x0d\n  const priority = _getPriority(pid\x2C ctx);\x0d\n\x0d\n  if (priority === undefined)\x0d\n    throw new ERR_SYSTEM_ERROR(ctx);\x0d\n\x0d\n  return priority;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {{ encoding?: string }} [options=utf8] If `encoding` is set to\x0d\n * `'buffer'`\x2C the `username`\x2C `shell`\x2C and `homedir` values will\x0d\n * be `Buffer` instances.\x0d\n * @returns {{\x0d\n *   uid: number\x2C\x0d\n *   gid: number\x2C\x0d\n *   username: string\x2C\x0d\n *   homedir: string\x2C\x0d\n *   shell: string | null\x2C\x0d\n * }}\x0d\n */\x0d\nfunction userInfo(options) {\x0d\n  if (typeof options !== 'object')\x0d\n    options = null;\x0d\n\x0d\n  const ctx = {};\x0d\n  const user = getUserInfo(options\x2C ctx);\x0d\n\x0d\n  if (user === undefined)\x0d\n    throw new ERR_SYSTEM_ERROR(ctx);\x0d\n\x0d\n  if (isWindows) {\x0d\n    user.uid |= 0;\x0d\n    user.gid |= 0;\x0d\n  }\x0d\n\x0d\n  return user;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  arch\x2C\x0d\n  availableParallelism: getAvailableParallelism\x2C\x0d\n  cpus\x2C\x0d\n  endianness\x2C\x0d\n  freemem: getFreeMem\x2C\x0d\n  getPriority\x2C\x0d\n  homedir: getHomeDirectory\x2C\x0d\n  hostname: getHostname\x2C\x0d\n  loadavg\x2C\x0d\n  networkInterfaces\x2C\x0d\n  platform\x2C\x0d\n  release: getOSRelease\x2C\x0d\n  setPriority\x2C\x0d\n  tmpdir\x2C\x0d\n  totalmem: getTotalMem\x2C\x0d\n  type: getOSType\x2C\x0d\n  userInfo\x2C\x0d\n  uptime: getUptime\x2C\x0d\n  version: getOSVersion\x2C\x0d\n  machine: getMachine\x2C\x0d\n};\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  constants: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x2C\x0d\n  }\x2C\x0d\n\x0d\n  EOL: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    writable: false\x2C\x0d\n    value: isWindows ? '\\r\\n' : '\\n'\x2C\x0d\n  }\x2C\x0d\n\x0d\n  devNull: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    writable: false\x2C\x0d\n    value: isWindows ? '\\\\\\\\.\\\\nul' : '/dev/null'\x2C\x0d\n  }\x2C\x0d\n});\x0d\n
code-source-info,0x10fd41b730c,112,0,10195,C0O0C4O10195,,
code-creation,JS,10,165723,0x10fd41b8774,886, node:os:1:1,0x10fd41b7280,~
code-source-info,0x10fd41b
code-creation,JS,10,166081,0x10fd41ba3a4,26,getCheckedFunction node:os:63:28,0x10fd41b7340,~
code-source-info,0x10fd41ba3a4,112,2115,2343,C0O2115C9O2125C21O2132C25O2340,,
code-creation,JS,10,166194,0x10fd41bbe3c,5,getOSRelease node:os:89:22,0x10fd41b77e0,~
code-source-info,0x10fd41bbe3c,112,2742,2755,C0O2748C4O2755,,
new,MemoryChunk,0x21de9b40000,262144
code-creation,JS,10,166459,0x10fd41bbf8c,38,formatWithOptions node:internal/util/inspect:2158:27,0x1d9b724d1f8,~
script-source,21,node:internal/util/inspect,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePop\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypePushApply\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  BigIntPrototypeValueOf\x2C\x0d\n  BooleanPrototypeValueOf\x2C\x0d\n  DatePrototypeGetTime\x2C\x0d\n  DatePrototypeToISOString\x2C\x0d\n  DatePrototypeToString\x2C\x0d\n  ErrorPrototypeToString\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  FunctionPrototypeToString\x2C\x0d\n  JSONStringify\x2C\x0d\n  MapPrototypeGetSize\x2C\x0d\n  MapPrototypeEntries\x2C\x0d\n  MathFloor\x2C\x0d\n  MathMax\x2C\x0d\n  MathMin\x2C\x0d\n  MathRound\x2C\x0d\n  MathSqrt\x2C\x0d\n  MathTrunc\x2C\x0d\n  Number\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseFloat\x2C\x0d\n  NumberParseInt\x2C\x0d\n  NumberPrototypeToString\x2C\x0d\n  NumberPrototypeValueOf\x2C\x0d\n  Object\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectGetOwnPropertySymbols\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectIs\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectPrototypePropertyIsEnumerable\x2C\x0d\n  ObjectSeal\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  RegExpPrototypeSymbolSplit\x2C\x0d\n  RegExpPrototypeToString\x2C\x0d\n  SafeStringIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  SetPrototypeGetSize\x2C\x0d\n  SetPrototypeValues\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeCodePointAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeNormalize\x2C\x0d\n  StringPrototypePadEnd\x2C\x0d\n  StringPrototypePadStart\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeReplaceAll\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  StringPrototypeValueOf\x2C\x0d\n  SymbolPrototypeToString\x2C\x0d\n  SymbolPrototypeValueOf\x2C\x0d\n  SymbolIterator\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  TypedArrayPrototypeGetLength\x2C\x0d\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\x0d\n  Uint8Array\x2C\x0d\n  globalThis\x2C\x0d\n  uncurryThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  constants: {\x0d\n    ALL_PROPERTIES\x2C\x0d\n    ONLY_ENUMERABLE\x2C\x0d\n    kPending\x2C\x0d\n    kRejected\x2C\x0d\n  }\x2C\x0d\n  getOwnNonIndexProperties\x2C\x0d\n  getPromiseDetails\x2C\x0d\n  getProxyDetails\x2C\x0d\n  previewEntries\x2C\x0d\n  getConstructorName: internalGetConstructorName\x2C\x0d\n  getExternalValue\x2C\x0d\n} = internalBinding('util');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  isError\x2C\x0d\n  join\x2C\x0d\n  removeColors\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  isStackOverflowError\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  isAsyncFunction\x2C\x0d\n  isGeneratorFunction\x2C\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBuffer\x2C\x0d\n  isArgumentsObject\x2C\x0d\n  isBoxedPrimitive\x2C\x0d\n  isDataView\x2C\x0d\n  isExternal\x2C\x0d\n  isMap\x2C\x0d\n  isMapIterator\x2C\x0d\n  isModuleNamespaceObject\x2C\x0d\n  isNativeError\x2C\x0d\n  isPromise\x2C\x0d\n  isSet\x2C\x0d\n  isSetIterator\x2C\x0d\n  isWeakMap\x2C\x0d\n  isWeakSet\x2C\x0d\n  isRegExp\x2C\x0d\n  isDate\x2C\x0d\n  isTypedArray\x2C\x0d\n  isStringObject\x2C\x0d\n  isNumberObject\x2C\x0d\n  isBooleanObject\x2C\x0d\n  isBigIntObject\x2C\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst { BuiltinModule } = require('internal/bootstrap/realm');\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n  kValidateObjectAllowArray\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nlet hexSlice;\x0d\nlet internalUrl;\x0d\n\x0d\nfunction pathToFileUrlHref(filepath) {\x0d\n  internalUrl ??= require('internal/url');\x0d\n  return internalUrl.pathToFileURL(filepath).href;\x0d\n}\x0d\n\x0d\nconst builtInObjects = new SafeSet(\x0d\n  ArrayPrototypeFilter(\x0d\n    ObjectGetOwnPropertyNames(globalThis)\x2C\x0d\n    (e) => RegExpPrototypeExec(/^[A-Z][a-zA-Z0-9]+$/\x2C e) !== null\x2C\x0d\n  )\x2C\x0d\n);\x0d\n\x0d\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot\x0d\nconst isUndetectableObject = (v) => typeof v === 'undefined' && v !== undefined;\x0d\n\x0d\n// These options must stay in sync with `getUserOptions`. So if any option will\x0d\n// be added or removed\x2C `getUserOptions` must also be updated accordingly.\x0d\nconst inspectDefaultOptions = ObjectSeal({\x0d\n  showHidden: false\x2C\x0d\n  depth: 2\x2C\x0d\n  colors: false\x2C\x0d\n  customInspect: true\x2C\x0d\n  showProxy: false\x2C\x0d\n  maxArrayLength: 100\x2C\x0d\n  maxStringLength: 10000\x2C\x0d\n  breakLength: 80\x2C\x0d\n  compact: 3\x2C\x0d\n  sorted: false\x2C\x0d\n  getters: false\x2C\x0d\n  numericSeparator: false\x2C\x0d\n});\x0d\n\x0d\nconst kObjectType = 0;\x0d\nconst kArrayType = 1;\x0d\nconst kArrayExtrasType = 2;\x0d\n\x0d\n/* eslint-disable no-control-regex */\x0d\nconst strEscapeSequencesRegExp = /[\\x00-\\x1f\\x27\\x5c\\x7f-\\x9f]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|(?<![\\ud800-\\udbff])[\\udc00-\\udfff]/;\x0d\nconst strEscapeSequencesReplacer = /[\\x00-\\x1f\\x27\\x5c\\x7f-\\x9f]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|(?<![\\ud800-\\udbff])[\\udc00-\\udfff]/g;\x0d\nconst strEscapeSequencesRegExpSingle = /[\\x00-\\x1f\\x5c\\x7f-\\x9f]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|(?<![\\ud800-\\udbff])[\\udc00-\\udfff]/;\x0d\nconst strEscapeSequencesReplacerSingle = /[\\x00-\\x1f\\x5c\\x7f-\\x9f]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|(?<![\\ud800-\\udbff])[\\udc00-\\udfff]/g;\x0d\n/* eslint-enable no-control-regex */\x0d\n\x0d\nconst keyStrRegExp = /^[a-zA-Z_][a-zA-Z_0-9]*$/;\x0d\nconst numberRegExp = /^(0|[1-9][0-9]*)$/;\x0d\n\x0d\nconst coreModuleRegExp = /^ {4}at (?:[^/\\\\(]+ \\(|)node:(.+):\\d+:\\d+\\)?$/;\x0d\nconst nodeModulesRegExp = /[/\\\\]node_modules[/\\\\](.+?)(?=[/\\\\])/g;\x0d\n\x0d\nconst classRegExp = /^(\\s+[^(]*?)\\s*{/;\x0d\n// eslint-disable-next-line node-core/no-unescaped-regexp-dot\x0d\nconst stripCommentsRegExp = /(\\/\\/.*?\\n)|(\\/\\*(.|\\n)*?\\*\\/)/g;\x0d\n\x0d\nconst kMinLineLength = 16;\x0d\n\x0d\n// Constants to map the iterator state.\x0d\nconst kWeak = 0;\x0d\nconst kIterator = 1;\x0d\nconst kMapEntries = 2;\x0d\n\x0d\n// Escaped control characters (plus the single quote and the backslash). Use\x0d\n// empty strings to fill up unused entries.\x0d\nconst meta = [\x0d\n  '\\\\x00'\x2C '\\\\x01'\x2C '\\\\x02'\x2C '\\\\x03'\x2C '\\\\x04'\x2C '\\\\x05'\x2C '\\\\x06'\x2C '\\\\x07'\x2C // x07\x0d\n  '\\\\b'\x2C '\\\\t'\x2C '\\\\n'\x2C '\\\\x0B'\x2C '\\\\f'\x2C '\\\\r'\x2C '\\\\x0E'\x2C '\\\\x0F'\x2C           // x0F\x0d\n  '\\\\x10'\x2C '\\\\x11'\x2C '\\\\x12'\x2C '\\\\x13'\x2C '\\\\x14'\x2C '\\\\x15'\x2C '\\\\x16'\x2C '\\\\x17'\x2C // x17\x0d\n  '\\\\x18'\x2C '\\\\x19'\x2C '\\\\x1A'\x2C '\\\\x1B'\x2C '\\\\x1C'\x2C '\\\\x1D'\x2C '\\\\x1E'\x2C '\\\\x1F'\x2C // x1F\x0d\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C "\\\\'"\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C      // x2F\x0d\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C         // x3F\x0d\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C         // x4F\x0d\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C '\\\\\\\\'\x2C ''\x2C ''\x2C ''\x2C     // x5F\x0d\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C         // x6F\x0d\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C '\\\\x7F'\x2C    // x7F\x0d\n  '\\\\x80'\x2C '\\\\x81'\x2C '\\\\x82'\x2C '\\\\x83'\x2C '\\\\x84'\x2C '\\\\x85'\x2C '\\\\x86'\x2C '\\\\x87'\x2C // x87\x0d\n  '\\\\x88'\x2C '\\\\x89'\x2C '\\\\x8A'\x2C '\\\\x8B'\x2C '\\\\x8C'\x2C '\\\\x8D'\x2C '\\\\x8E'\x2C '\\\\x8F'\x2C // x8F\x0d\n  '\\\\x90'\x2C '\\\\x91'\x2C '\\\\x92'\x2C '\\\\x93'\x2C '\\\\x94'\x2C '\\\\x95'\x2C '\\\\x96'\x2C '\\\\x97'\x2C // x97\x0d\n  '\\\\x98'\x2C '\\\\x99'\x2C '\\\\x9A'\x2C '\\\\x9B'\x2C '\\\\x9C'\x2C '\\\\x9D'\x2C '\\\\x9E'\x2C '\\\\x9F'\x2C // x9F\x0d\n];\x0d\n\x0d\n// Regex used for ansi escape code splitting\x0d\n// Adopted from https://github.com/chalk/ansi-regex/blob/HEAD/index.js\x0d\n// License: MIT\x2C authors: @sindresorhus\x2C Qix-\x2C arjunmehta and LitoMore\x0d\n// Matches all ansi escape code sequences in a string\x0d\nconst ansiPattern = '[\\\\u001B\\\\u009B][[\\\\]()#;?]*' +\x0d\n  '(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*' +\x0d\n  '|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)' +\x0d\n  '|(?:(?:\\\\d{1\x2C4}(?:;\\\\d{0\x2C4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))';\x0d\nconst ansi = new RegExp(ansiPattern\x2C 'g');\x0d\n\x0d\nlet getStringWidth;\x0d\n\x0d\nfunction getUserOptions(ctx\x2C isCrossContext) {\x0d\n  const ret = {\x0d\n    stylize: ctx.stylize\x2C\x0d\n    showHidden: ctx.showHidden\x2C\x0d\n    depth: ctx.depth\x2C\x0d\n    colors: ctx.colors\x2C\x0d\n    customInspect: ctx.customInspect\x2C\x0d\n    showProxy: ctx.showProxy\x2C\x0d\n    maxArrayLength: ctx.maxArrayLength\x2C\x0d\n    maxStringLength: ctx.maxStringLength\x2C\x0d\n    breakLength: ctx.breakLength\x2C\x0d\n    compact: ctx.compact\x2C\x0d\n    sorted: ctx.sorted\x2C\x0d\n    getters: ctx.getters\x2C\x0d\n    numericSeparator: ctx.numericSeparator\x2C\x0d\n    ...ctx.userOptions\x2C\x0d\n  };\x0d\n\x0d\n  // Typically\x2C the target value will be an instance of `Object`. If that is\x0d\n  // *not* the case\x2C the object may come from another vm.Context\x2C and we want\x0d\n  // to avoid passing it objects from this Context in that case\x2C so we remove\x0d\n  // the prototype from the returned object itself + the `stylize()` function\x2C\x0d\n  // and remove all other non-primitives\x2C including non-primitive user options.\x0d\n  if (isCrossContext) {\x0d\n    ObjectSetPrototypeOf(ret\x2C null);\x0d\n    for (const key of ObjectKeys(ret)) {\x0d\n      if ((typeof ret[key] === 'object' || typeof ret[key] === 'function') &&\x0d\n          ret[key] !== null) {\x0d\n        delete ret[key];\x0d\n      }\x0d\n    }\x0d\n    ret.stylize = ObjectSetPrototypeOf((value\x2C flavour) => {\x0d\n      let stylized;\x0d\n      try {\x0d\n        stylized = `${ctx.stylize(value\x2C flavour)}`;\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n\x0d\n      if (typeof stylized !== 'string') return value;\x0d\n      // `stylized` is a string as it should be\x2C which is safe to pass along.\x0d\n      return stylized;\x0d\n    }\x2C null);\x0d\n  }\x0d\n\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Echos the value of any input. Tries to print the value out\x0d\n * in the best way possible given the different types.\x0d\n * @param {any} value The value to print out.\x0d\n * @param {object} opts Optional options object that alters the output.\x0d\n */\x0d\n/* Legacy: value\x2C showHidden\x2C depth\x2C colors */\x0d\nfunction inspect(value\x2C opts) {\x0d\n  // Default options\x0d\n  const ctx = {\x0d\n    budget: {}\x2C\x0d\n    indentationLvl: 0\x2C\x0d\n    seen: []\x2C\x0d\n    currentDepth: 0\x2C\x0d\n    stylize: stylizeNoColor\x2C\x0d\n    showHidden: inspectDefaultOptions.showHidden\x2C\x0d\n    depth: inspectDefaultOptions.depth\x2C\x0d\n    colors: inspectDefaultOptions.colors\x2C\x0d\n    customInspect: inspectDefaultOptions.customInspect\x2C\x0d\n    showProxy: inspectDefaultOptions.showProxy\x2C\x0d\n    maxArrayLength: inspectDefaultOptions.maxArrayLength\x2C\x0d\n    maxStringLength: inspectDefaultOptions.maxStringLength\x2C\x0d\n    breakLength: inspectDefaultOptions.breakLength\x2C\x0d\n    compact: inspectDefaultOptions.compact\x2C\x0d\n    sorted: inspectDefaultOptions.sorted\x2C\x0d\n    getters: inspectDefaultOptions.getters\x2C\x0d\n    numericSeparator: inspectDefaultOptions.numericSeparator\x2C\x0d\n  };\x0d\n  if (arguments.length > 1) {\x0d\n    // Legacy...\x0d\n    if (arguments.length > 2) {\x0d\n      if (arguments[2] !== undefined) {\x0d\n        ctx.depth = arguments[2];\x0d\n      }\x0d\n      if (arguments.length > 3 && arguments[3] !== undefined) {\x0d\n        ctx.colors = arguments[3];\x0d\n      }\x0d\n    }\x0d\n    // Set user-specified options\x0d\n    if (typeof opts === 'boolean') {\x0d\n      ctx.showHidden = opts;\x0d\n    } else if (opts) {\x0d\n      const optKeys = ObjectKeys(opts);\x0d\n      for (let i = 0; i < optKeys.length; ++i) {\x0d\n        const key = optKeys[i];\x0d\n        // TODO(BridgeAR): Find a solution what to do about stylize. Either make\x0d\n        // this function public or add a new API with a similar or better\x0d\n        // functionality.\x0d\n        if (\x0d\n          ObjectPrototypeHasOwnProperty(inspectDefaultOptions\x2C key) ||\x0d\n          key === 'stylize') {\x0d\n          ctx[key] = opts[key];\x0d\n        } else if (ctx.userOptions === undefined) {\x0d\n          // This is required to pass through the actual user input.\x0d\n          ctx.userOptions = opts;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\x0d\n  if (ctx.maxArrayLength === null) ctx.maxArrayLength = Infinity;\x0d\n  if (ctx.maxStringLength === null) ctx.maxStringLength = Infinity;\x0d\n  return formatValue(ctx\x2C value\x2C 0);\x0d\n}\x0d\ninspect.custom = customInspectSymbol;\x0d\n\x0d\nObjectDefineProperty(inspect\x2C 'defaultOptions'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return inspectDefaultOptions;\x0d\n  }\x2C\x0d\n  set(options) {\x0d\n    validateObject(options\x2C 'options');\x0d\n    return ObjectAssign(inspectDefaultOptions\x2C options);\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// Set Graphics Rendition https://en.wikipedia.org/wiki/ANSI_escape_code#graphics\x0d\n// Each color consists of an array with the color code as first entry and the\x0d\n// reset code as second entry.\x0d\nconst defaultFG = 39;\x0d\nconst defaultBG = 49;\x0d\ninspect.colors = {\x0d\n  __proto__: null\x2C\x0d\n  reset: [0\x2C 0]\x2C\x0d\n  bold: [1\x2C 22]\x2C\x0d\n  dim: [2\x2C 22]\x2C // Alias: faint\x0d\n  italic: [3\x2C 23]\x2C\x0d\n  underline: [4\x2C 24]\x2C\x0d\n  blink: [5\x2C 25]\x2C\x0d\n  // Swap foreground and background colors\x0d\n  inverse: [7\x2C 27]\x2C // Alias: swapcolors\x2C swapColors\x0d\n  hidden: [8\x2C 28]\x2C // Alias: conceal\x0d\n  strikethrough: [9\x2C 29]\x2C // Alias: strikeThrough\x2C crossedout\x2C crossedOut\x0d\n  doubleunderline: [21\x2C 24]\x2C // Alias: doubleUnderline\x0d\n  black: [30\x2C defaultFG]\x2C\x0d\n  red: [31\x2C defaultFG]\x2C\x0d\n  green: [32\x2C defaultFG]\x2C\x0d\n  yellow: [33\x2C defaultFG]\x2C\x0d\n  blue: [34\x2C defaultFG]\x2C\x0d\n  magenta: [35\x2C defaultFG]\x2C\x0d\n  cyan: [36\x2C defaultFG]\x2C\x0d\n  white: [37\x2C defaultFG]\x2C\x0d\n  bgBlack: [40\x2C defaultBG]\x2C\x0d\n  bgRed: [41\x2C defaultBG]\x2C\x0d\n  bgGreen: [42\x2C defaultBG]\x2C\x0d\n  bgYellow: [43\x2C defaultBG]\x2C\x0d\n  bgBlue: [44\x2C defaultBG]\x2C\x0d\n  bgMagenta: [45\x2C defaultBG]\x2C\x0d\n  bgCyan: [46\x2C defaultBG]\x2C\x0d\n  bgWhite: [47\x2C defaultBG]\x2C\x0d\n  framed: [51\x2C 54]\x2C\x0d\n  overlined: [53\x2C 55]\x2C\x0d\n  gray: [90\x2C defaultFG]\x2C // Alias: grey\x2C blackBright\x0d\n  redBright: [91\x2C defaultFG]\x2C\x0d\n  greenBright: [92\x2C defaultFG]\x2C\x0d\n  yellowBright: [93\x2C defaultFG]\x2C\x0d\n  blueBright: [94\x2C defaultFG]\x2C\x0d\n  magentaBright: [95\x2C defaultFG]\x2C\x0d\n  cyanBright: [96\x2C defaultFG]\x2C\x0d\n  whiteBright: [97\x2C defaultFG]\x2C\x0d\n  bgGray: [100\x2C defaultBG]\x2C // Alias: bgGrey\x2C bgBlackBright\x0d\n  bgRedBright: [101\x2C defaultBG]\x2C\x0d\n  bgGreenBright: [102\x2C defaultBG]\x2C\x0d\n  bgYellowBright: [103\x2C defaultBG]\x2C\x0d\n  bgBlueBright: [104\x2C defaultBG]\x2C\x0d\n  bgMagentaBright: [105\x2C defaultBG]\x2C\x0d\n  bgCyanBright: [106\x2C defaultBG]\x2C\x0d\n  bgWhiteBright: [107\x2C defaultBG]\x2C\x0d\n};\x0d\n\x0d\nfunction defineColorAlias(target\x2C alias) {\x0d\n  ObjectDefineProperty(inspect.colors\x2C alias\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this[target];\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      this[target] = value;\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\ndefineColorAlias('gray'\x2C 'grey');\x0d\ndefineColorAlias('gray'\x2C 'blackBright');\x0d\ndefineColorAlias('bgGray'\x2C 'bgGrey');\x0d\ndefineColorAlias('bgGray'\x2C 'bgBlackBright');\x0d\ndefineColorAlias('dim'\x2C 'faint');\x0d\ndefineColorAlias('strikethrough'\x2C 'crossedout');\x0d\ndefineColorAlias('strikethrough'\x2C 'strikeThrough');\x0d\ndefineColorAlias('strikethrough'\x2C 'crossedOut');\x0d\ndefineColorAlias('hidden'\x2C 'conceal');\x0d\ndefineColorAlias('inverse'\x2C 'swapColors');\x0d\ndefineColorAlias('inverse'\x2C 'swapcolors');\x0d\ndefineColorAlias('doubleunderline'\x2C 'doubleUnderline');\x0d\n\x0d\n// TODO(BridgeAR): Add function style support for more complex styles.\x0d\n// Don't use 'blue' not visible on cmd.exe\x0d\ninspect.styles = ObjectAssign({ __proto__: null }\x2C {\x0d\n  special: 'cyan'\x2C\x0d\n  number: 'yellow'\x2C\x0d\n  bigint: 'yellow'\x2C\x0d\n  boolean: 'yellow'\x2C\x0d\n  undefined: 'grey'\x2C\x0d\n  null: 'bold'\x2C\x0d\n  string: 'green'\x2C\x0d\n  symbol: 'green'\x2C\x0d\n  date: 'magenta'\x2C\x0d\n  // "name": intentionally not styling\x0d\n  // TODO(BridgeAR): Highlight regular expressions properly.\x0d\n  regexp: 'red'\x2C\x0d\n  module: 'underline'\x2C\x0d\n});\x0d\n\x0d\nfunction addQuotes(str\x2C quotes) {\x0d\n  if (quotes === -1) {\x0d\n    return `"${str}"`;\x0d\n  }\x0d\n  if (quotes === -2) {\x0d\n    return `\\`${str}\\``;\x0d\n  }\x0d\n  return `'${str}'`;\x0d\n}\x0d\n\x0d\nfunction escapeFn(str) {\x0d\n  const charCode = StringPrototypeCharCodeAt(str);\x0d\n  return meta.length > charCode ? meta[charCode] : `\\\\u${NumberPrototypeToString(charCode\x2C 16)}`;\x0d\n}\x0d\n\x0d\n// Escape control characters\x2C single quotes and the backslash.\x0d\n// This is similar to JSON stringify escaping.\x0d\nfunction strEscape(str) {\x0d\n  let escapeTest = strEscapeSequencesRegExp;\x0d\n  let escapeReplace = strEscapeSequencesReplacer;\x0d\n  let singleQuote = 39;\x0d\n\x0d\n  // Check for double quotes. If not present\x2C do not escape single quotes and\x0d\n  // instead wrap the text in double quotes. If double quotes exist\x2C check for\x0d\n  // backticks. If they do not exist\x2C use those as fallback instead of the\x0d\n  // double quotes.\x0d\n  if (StringPrototypeIncludes(str\x2C "'")) {\x0d\n    // This invalidates the charCode and therefore can not be matched for\x0d\n    // anymore.\x0d\n    if (!StringPrototypeIncludes(str\x2C '"')) {\x0d\n      singleQuote = -1;\x0d\n    } else if (!StringPrototypeIncludes(str\x2C '`') &&\x0d\n               !StringPrototypeIncludes(str\x2C '${')) {\x0d\n      singleQuote = -2;\x0d\n    }\x0d\n    if (singleQuote !== 39) {\x0d\n      escapeTest = strEscapeSequencesRegExpSingle;\x0d\n      escapeReplace = strEscapeSequencesReplacerSingle;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Some magic numbers that worked out fine while benchmarking with v8 6.0\x0d\n  if (str.length < 5000 && RegExpPrototypeExec(escapeTest\x2C str) === null)\x0d\n    return addQuotes(str\x2C singleQuote);\x0d\n  if (str.length > 100) {\x0d\n    str = RegExpPrototypeSymbolReplace(escapeReplace\x2C str\x2C escapeFn);\x0d\n    return addQuotes(str\x2C singleQuote);\x0d\n  }\x0d\n\x0d\n  let result = '';\x0d\n  let last = 0;\x0d\n  for (let i = 0; i < str.length; i++) {\x0d\n    const point = StringPrototypeCharCodeAt(str\x2C i);\x0d\n    if (point === singleQuote ||\x0d\n        point === 92 ||\x0d\n        point < 32 ||\x0d\n        (point > 126 && point < 160)) {\x0d\n      if (last === i) {\x0d\n        result += meta[point];\x0d\n      } else {\x0d\n        result += `${StringPrototypeSlice(str\x2C last\x2C i)}${meta[point]}`;\x0d\n      }\x0d\n      last = i + 1;\x0d\n    } else if (point >= 0xd800 && point <= 0xdfff) {\x0d\n      if (point <= 0xdbff && i + 1 < str.length) {\x0d\n        const point = StringPrototypeCharCodeAt(str\x2C i + 1);\x0d\n        if (point >= 0xdc00 && point <= 0xdfff) {\x0d\n          i++;\x0d\n          continue;\x0d\n        }\x0d\n      }\x0d\n      result += `${StringPrototypeSlice(str\x2C last\x2C i)}\\\\u${NumberPrototypeToString(point\x2C 16)}`;\x0d\n      last = i + 1;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (last !== str.length) {\x0d\n    result += StringPrototypeSlice(str\x2C last);\x0d\n  }\x0d\n  return addQuotes(result\x2C singleQuote);\x0d\n}\x0d\n\x0d\nfunction stylizeWithColor(str\x2C styleType) {\x0d\n  const style = inspect.styles[styleType];\x0d\n  if (style !== undefined) {\x0d\n    const color = inspect.colors[style];\x0d\n    if (color !== undefined)\x0d\n      return `\\u001b[${color[0]}m${str}\\u001b[${color[1]}m`;\x0d\n  }\x0d\n  return str;\x0d\n}\x0d\n\x0d\nfunction stylizeNoColor(str) {\x0d\n  return str;\x0d\n}\x0d\n\x0d\n// Return a new empty array to push in the results of the default formatter.\x0d\nfunction getEmptyFormatArray() {\x0d\n  return [];\x0d\n}\x0d\n\x0d\nfunction isInstanceof(object\x2C proto) {\x0d\n  try {\x0d\n    return object instanceof proto;\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getConstructorName(obj\x2C ctx\x2C recurseTimes\x2C protoProps) {\x0d\n  let firstProto;\x0d\n  const tmp = obj;\x0d\n  while (obj || isUndetectableObject(obj)) {\x0d\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\x0d\n    if (descriptor !== undefined &&\x0d\n        typeof descriptor.value === 'function' &&\x0d\n        descriptor.value.name !== '' &&\x0d\n        isInstanceof(tmp\x2C descriptor.value)) {\x0d\n      if (protoProps !== undefined &&\x0d\n         (firstProto !== obj ||\x0d\n         !builtInObjects.has(descriptor.value.name))) {\x0d\n        addPrototypeProperties(\x0d\n          ctx\x2C tmp\x2C firstProto || tmp\x2C recurseTimes\x2C protoProps);\x0d\n      }\x0d\n      return String(descriptor.value.name);\x0d\n    }\x0d\n\x0d\n    obj = ObjectGetPrototypeOf(obj);\x0d\n    if (firstProto === undefined) {\x0d\n      firstProto = obj;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (firstProto === null) {\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  const res = internalGetConstructorName(tmp);\x0d\n\x0d\n  if (recurseTimes > ctx.depth && ctx.depth !== null) {\x0d\n    return `${res} <Complex prototype>`;\x0d\n  }\x0d\n\x0d\n  const protoConstr = getConstructorName(\x0d\n    firstProto\x2C ctx\x2C recurseTimes + 1\x2C protoProps);\x0d\n\x0d\n  if (protoConstr === null) {\x0d\n    return `${res} <${inspect(firstProto\x2C {\x0d\n      ...ctx\x2C\x0d\n      customInspect: false\x2C\x0d\n      depth: -1\x2C\x0d\n    })}>`;\x0d\n  }\x0d\n\x0d\n  return `${res} <${protoConstr}>`;\x0d\n}\x0d\n\x0d\n// This function has the side effect of adding prototype properties to the\x0d\n// `output` argument (which is an array). This is intended to highlight user\x0d\n// defined prototype properties.\x0d\nfunction addPrototypeProperties(ctx\x2C main\x2C obj\x2C recurseTimes\x2C output) {\x0d\n  let depth = 0;\x0d\n  let keys;\x0d\n  let keySet;\x0d\n  do {\x0d\n    if (depth !== 0 || main === obj) {\x0d\n      obj = ObjectGetPrototypeOf(obj);\x0d\n      // Stop as soon as a null prototype is encountered.\x0d\n      if (obj === null) {\x0d\n        return;\x0d\n      }\x0d\n      // Stop as soon as a built-in object type is detected.\x0d\n      const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\x0d\n      if (descriptor !== undefined &&\x0d\n          typeof descriptor.value === 'function' &&\x0d\n          builtInObjects.has(descriptor.value.name)) {\x0d\n        return;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (depth === 0) {\x0d\n      keySet = new SafeSet();\x0d\n    } else {\x0d\n      ArrayPrototypeForEach(keys\x2C (key) => keySet.add(key));\x0d\n    }\x0d\n    // Get all own property names and symbols.\x0d\n    keys = ReflectOwnKeys(obj);\x0d\n    ArrayPrototypePush(ctx.seen\x2C main);\x0d\n    for (const key of keys) {\x0d\n      // Ignore the `constructor` property and keys that exist on layers above.\x0d\n      if (key === 'constructor' ||\x0d\n          ObjectPrototypeHasOwnProperty(main\x2C key) ||\x0d\n          (depth !== 0 && keySet.has(key))) {\x0d\n        continue;\x0d\n      }\x0d\n      const desc = ObjectGetOwnPropertyDescriptor(obj\x2C key);\x0d\n      if (typeof desc.value === 'function') {\x0d\n        continue;\x0d\n      }\x0d\n      const value = formatProperty(\x0d\n        ctx\x2C obj\x2C recurseTimes\x2C key\x2C kObjectType\x2C desc\x2C main);\x0d\n      if (ctx.colors) {\x0d\n        // Faint!\x0d\n        ArrayPrototypePush(output\x2C `\\u001b[2m${value}\\u001b[22m`);\x0d\n      } else {\x0d\n        ArrayPrototypePush(output\x2C value);\x0d\n      }\x0d\n    }\x0d\n    ArrayPrototypePop(ctx.seen);\x0d\n  // Limit the inspection to up to three prototype layers. Using `recurseTimes`\x0d\n  // is not a good choice here\x2C because it's as if the properties are declared\x0d\n  // on the current object from the users perspective.\x0d\n  } while (++depth !== 3);\x0d\n}\x0d\n\x0d\nfunction getPrefix(constructor\x2C tag\x2C fallback\x2C size = '') {\x0d\n  if (constructor === null) {\x0d\n    if (tag !== '' && fallback !== tag) {\x0d\n      return `[${fallback}${size}: null prototype] [${tag}] `;\x0d\n    }\x0d\n    return `[${fallback}${size}: null prototype] `;\x0d\n  }\x0d\n\x0d\n  if (tag !== '' && constructor !== tag) {\x0d\n    return `${constructor}${size} [${tag}] `;\x0d\n  }\x0d\n  return `${constructor}${size} `;\x0d\n}\x0d\n\x0d\n// Look up the keys of the object.\x0d\nfunction getKeys(value\x2C showHidden) {\x0d\n  let keys;\x0d\n  const symbols = ObjectGetOwnPropertySymbols(value);\x0d\n  if (showHidden) {\x0d\n    keys = ObjectGetOwnPropertyNames(value);\x0d\n    if (symbols.length !== 0)\x0d\n      ArrayPrototypePushApply(keys\x2C symbols);\x0d\n  } else {\x0d\n    // This might throw if `value` is a Module Namespace Object from an\x0d\n    // unevaluated module\x2C but we don't want to perform the actual type\x0d\n    // check because it's expensive.\x0d\n    // TODO(devsnek): track https://github.com/tc39/ecma262/issues/1209\x0d\n    // and modify this logic as needed.\x0d\n    try {\x0d\n      keys = ObjectKeys(value);\x0d\n    } catch (err) {\x0d\n      assert(isNativeError(err) && err.name === 'ReferenceError' &&\x0d\n             isModuleNamespaceObject(value));\x0d\n      keys = ObjectGetOwnPropertyNames(value);\x0d\n    }\x0d\n    if (symbols.length !== 0) {\x0d\n      const filter = (key) => ObjectPrototypePropertyIsEnumerable(value\x2C key);\x0d\n      ArrayPrototypePushApply(keys\x2C ArrayPrototypeFilter(symbols\x2C filter));\x0d\n    }\x0d\n  }\x0d\n  return keys;\x0d\n}\x0d\n\x0d\nfunction getCtxStyle(value\x2C constructor\x2C tag) {\x0d\n  let fallback = '';\x0d\n  if (constructor === null) {\x0d\n    fallback = internalGetConstructorName(value);\x0d\n    if (fallback === tag) {\x0d\n      fallback = 'Object';\x0d\n    }\x0d\n  }\x0d\n  return getPrefix(constructor\x2C tag\x2C fallback);\x0d\n}\x0d\n\x0d\nfunction formatProxy(ctx\x2C proxy\x2C recurseTimes) {\x0d\n  if (recurseTimes > ctx.depth && ctx.depth !== null) {\x0d\n    return ctx.stylize('Proxy [Array]'\x2C 'special');\x0d\n  }\x0d\n  recurseTimes += 1;\x0d\n  ctx.indentationLvl += 2;\x0d\n  const res = [\x0d\n    formatValue(ctx\x2C proxy[0]\x2C recurseTimes)\x2C\x0d\n    formatValue(ctx\x2C proxy[1]\x2C recurseTimes)\x2C\x0d\n  ];\x0d\n  ctx.indentationLvl -= 2;\x0d\n  return reduceToSingleString(\x0d\n    ctx\x2C res\x2C ''\x2C ['Proxy ['\x2C ']']\x2C kArrayExtrasType\x2C recurseTimes);\x0d\n}\x0d\n\x0d\n// Note: using `formatValue` directly requires the indentation level to be\x0d\n// corrected by setting `ctx.indentationLvL += diff` and then to decrease the\x0d\n// value afterwards again.\x0d\nfunction formatValue(ctx\x2C value\x2C recurseTimes\x2C typedArray) {\x0d\n  // Primitive types cannot have properties.\x0d\n  if (typeof value !== 'object' &&\x0d\n      typeof value !== 'function' &&\x0d\n      !isUndetectableObject(value)) {\x0d\n    return formatPrimitive(ctx.stylize\x2C value\x2C ctx);\x0d\n  }\x0d\n  if (value === null) {\x0d\n    return ctx.stylize('null'\x2C 'null');\x0d\n  }\x0d\n\x0d\n  // Memorize the context for custom inspection on proxies.\x0d\n  const context = value;\x0d\n  // Always check for proxies to prevent side effects and to prevent triggering\x0d\n  // any proxy handlers.\x0d\n  const proxy = getProxyDetails(value\x2C !!ctx.showProxy);\x0d\n  if (proxy !== undefined) {\x0d\n    if (proxy === null || proxy[0] === null) {\x0d\n      return ctx.stylize('<Revoked Proxy>'\x2C 'special');\x0d\n    }\x0d\n    if (ctx.showProxy) {\x0d\n      return formatProxy(ctx\x2C proxy\x2C recurseTimes);\x0d\n    }\x0d\n    value = proxy;\x0d\n  }\x0d\n\x0d\n  // Provide a hook for user-specified inspect functions.\x0d\n  // Check that value is an object with an inspect function on it.\x0d\n  if (ctx.customInspect) {\x0d\n    const maybeCustom = value[customInspectSymbol];\x0d\n    if (typeof maybeCustom === 'function' &&\x0d\n        // Filter out the util module\x2C its inspect function is special.\x0d\n        maybeCustom !== inspect &&\x0d\n        // Also filter out any prototype objects using the circular check.\x0d\n        !(value.constructor && value.constructor.prototype === value)) {\x0d\n      // This makes sure the recurseTimes are reported as before while using\x0d\n      // a counter internally.\x0d\n      const depth = ctx.depth === null ? null : ctx.depth - recurseTimes;\x0d\n      const isCrossContext =\x0d\n        proxy !== undefined || !(context instanceof Object);\x0d\n      const ret = FunctionPrototypeCall(\x0d\n        maybeCustom\x2C\x0d\n        context\x2C\x0d\n        depth\x2C\x0d\n        getUserOptions(ctx\x2C isCrossContext)\x2C\x0d\n        inspect\x2C\x0d\n      );\x0d\n      // If the custom inspection method returned `this`\x2C don't go into\x0d\n      // infinite recursion.\x0d\n      if (ret !== context) {\x0d\n        if (typeof ret !== 'string') {\x0d\n          return formatValue(ctx\x2C ret\x2C recurseTimes);\x0d\n        }\x0d\n        return StringPrototypeReplaceAll(ret\x2C '\\n'\x2C `\\n${StringPrototypeRepeat(' '\x2C ctx.indentationLvl)}`);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Using an array here is actually better for the average case than using\x0d\n  // a Set. `seen` will only check for the depth and will never grow too large.\x0d\n  if (ctx.seen.includes(value)) {\x0d\n    let index = 1;\x0d\n    if (ctx.circular === undefined) {\x0d\n      ctx.circular = new SafeMap();\x0d\n      ctx.circular.set(value\x2C index);\x0d\n    } else {\x0d\n      index = ctx.circular.get(value);\x0d\n      if (index === undefined) {\x0d\n        index = ctx.circular.size + 1;\x0d\n        ctx.circular.set(value\x2C index);\x0d\n      }\x0d\n    }\x0d\n    return ctx.stylize(`[Circular *${index}]`\x2C 'special');\x0d\n  }\x0d\n\x0d\n  return formatRaw(ctx\x2C value\x2C recurseTimes\x2C typedArray);\x0d\n}\x0d\n\x0d\nfunction formatRaw(ctx\x2C value\x2C recurseTimes\x2C typedArray) {\x0d\n  let keys;\x0d\n  let protoProps;\x0d\n  if (ctx.showHidden && (recurseTimes <= ctx.depth || ctx.depth === null)) {\x0d\n    protoProps = [];\x0d\n  }\x0d\n\x0d\n  const constructor = getConstructorName(value\x2C ctx\x2C recurseTimes\x2C protoProps);\x0d\n  // Reset the variable to check for this later on.\x0d\n  if (protoProps !== undefined && protoProps.length === 0) {\x0d\n    protoProps = undefined;\x0d\n  }\x0d\n\x0d\n  let tag = value[SymbolToStringTag];\x0d\n  // Only list the tag in case it's non-enumerable / not an own property.\x0d\n  // Otherwise we'd print this twice.\x0d\n  if (typeof tag !== 'string' ||\x0d\n      (tag !== '' &&\x0d\n      (ctx.showHidden ?\x0d\n        ObjectPrototypeHasOwnProperty :\x0d\n        ObjectPrototypePropertyIsEnumerable)(\x0d\n        value\x2C SymbolToStringTag\x2C\x0d\n      ))) {\x0d\n    tag = '';\x0d\n  }\x0d\n  let base = '';\x0d\n  let formatter = getEmptyFormatArray;\x0d\n  let braces;\x0d\n  let noIterator = true;\x0d\n  let i = 0;\x0d\n  const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\x0d\n\x0d\n  let extrasType = kObjectType;\x0d\n\x0d\n  // Iterators and the rest are split to reduce checks.\x0d\n  // We have to check all values in case the constructor is set to null.\x0d\n  // Otherwise it would not possible to identify all types properly.\x0d\n  if (SymbolIterator in value || constructor === null) {\x0d\n    noIterator = false;\x0d\n    if (ArrayIsArray(value)) {\x0d\n      // Only set the constructor for non ordinary ("Array [...]") arrays.\x0d\n      const prefix = (constructor !== 'Array' || tag !== '') ?\x0d\n        getPrefix(constructor\x2C tag\x2C 'Array'\x2C `(${value.length})`) :\x0d\n        '';\x0d\n      keys = getOwnNonIndexProperties(value\x2C filter);\x0d\n      braces = [`${prefix}[`\x2C ']'];\x0d\n      if (value.length === 0 && keys.length === 0 && protoProps === undefined)\x0d\n        return `${braces[0]}]`;\x0d\n      extrasType = kArrayExtrasType;\x0d\n      formatter = formatArray;\x0d\n    } else if (isSet(value)) {\x0d\n      const size = SetPrototypeGetSize(value);\x0d\n      const prefix = getPrefix(constructor\x2C tag\x2C 'Set'\x2C `(${size})`);\x0d\n      keys = getKeys(value\x2C ctx.showHidden);\x0d\n      formatter = constructor !== null ?\x0d\n        FunctionPrototypeBind(formatSet\x2C null\x2C value) :\x0d\n        FunctionPrototypeBind(formatSet\x2C null\x2C SetPrototypeValues(value));\x0d\n      if (size === 0 && keys.length === 0 && protoProps === undefined)\x0d\n        return `${prefix}{}`;\x0d\n      braces = [`${prefix}{`\x2C '}'];\x0d\n    } else if (isMap(value)) {\x0d\n      const size = MapPrototypeGetSize(value);\x0d\n      const prefix = getPrefix(constructor\x2C tag\x2C 'Map'\x2C `(${size})`);\x0d\n      keys = getKeys(value\x2C ctx.showHidden);\x0d\n      formatter = constructor !== null ?\x0d\n        FunctionPrototypeBind(formatMap\x2C null\x2C value) :\x0d\n        FunctionPrototypeBind(formatMap\x2C null\x2C MapPrototypeEntries(value));\x0d\n      if (size === 0 && keys.length === 0 && protoProps === undefined)\x0d\n        return `${prefix}{}`;\x0d\n      braces = [`${prefix}{`\x2C '}'];\x0d\n    } else if (isTypedArray(value)) {\x0d\n      keys = getOwnNonIndexProperties(value\x2C filter);\x0d\n      let bound = value;\x0d\n      let fallback = '';\x0d\n      if (constructor === null) {\x0d\n        fallback = TypedArrayPrototypeGetSymbolToStringTag(value);\x0d\n        // Reconstruct the array information.\x0d\n        bound = new primordials[fallback](value);\x0d\n      }\x0d\n      const size = TypedArrayPrototypeGetLength(value);\x0d\n      const prefix = getPrefix(constructor\x2C tag\x2C fallback\x2C `(${size})`);\x0d\n      braces = [`${prefix}[`\x2C ']'];\x0d\n      if (value.length === 0 && keys.length === 0 && !ctx.showHidden)\x0d\n        return `${braces[0]}]`;\x0d\n      // Special handle the value. The original value is required below. The\x0d\n      // bound function is required to reconstruct missing information.\x0d\n      formatter = FunctionPrototypeBind(formatTypedArray\x2C null\x2C bound\x2C size);\x0d\n      extrasType = kArrayExtrasType;\x0d\n    } else if (isMapIterator(value)) {\x0d\n      keys = getKeys(value\x2C ctx.showHidden);\x0d\n      braces = getIteratorBraces('Map'\x2C tag);\x0d\n      // Add braces to the formatter parameters.\x0d\n      formatter = FunctionPrototypeBind(formatIterator\x2C null\x2C braces);\x0d\n    } else if (isSetIterator(value)) {\x0d\n      keys = getKeys(value\x2C ctx.showHidden);\x0d\n      braces = getIteratorBraces('Set'\x2C tag);\x0d\n      // Add braces to the formatter parameters.\x0d\n      formatter = FunctionPrototypeBind(formatIterator\x2C null\x2C braces);\x0d\n    } else {\x0d\n      noIterator = true;\x0d\n    }\x0d\n  }\x0d\n  if (noIterator) {\x0d\n    keys = getKeys(value\x2C ctx.showHidden);\x0d\n    braces = ['{'\x2C '}'];\x0d\n    if (constructor === 'Object') {\x0d\n      if (isArgumentsObject(value)) {\x0d\n        braces[0] = '[Arguments] {';\x0d\n      } else if (tag !== '') {\x0d\n        braces[0] = `${getPrefix(constructor\x2C tag\x2C 'Object')}{`;\x0d\n      }\x0d\n      if (keys.length === 0 && protoProps === undefined) {\x0d\n        return `${braces[0]}}`;\x0d\n      }\x0d\n    } else if (typeof value === 'function') {\x0d\n      base = getFunctionBase(value\x2C constructor\x2C tag);\x0d\n      if (keys.length === 0 && protoProps === undefined)\x0d\n        return ctx.stylize(base\x2C 'special');\x0d\n    } else if (isRegExp(value)) {\x0d\n      // Make RegExps say that they are RegExps\x0d\n      base = RegExpPrototypeToString(\x0d\n        constructor !== null ? value : new RegExp(value)\x2C\x0d\n      );\x0d\n      const prefix = getPrefix(constructor\x2C tag\x2C 'RegExp');\x0d\n      if (prefix !== 'RegExp ')\x0d\n        base = `${prefix}${base}`;\x0d\n      if ((keys.length === 0 && protoProps === undefined) ||\x0d\n          (recurseTimes > ctx.depth && ctx.depth !== null)) {\x0d\n        return ctx.stylize(base\x2C 'regexp');\x0d\n      }\x0d\n    } else if (isDate(value)) {\x0d\n      // Make dates with properties first say the date\x0d\n      base = NumberIsNaN(DatePrototypeGetTime(value)) ?\x0d\n        DatePrototypeToString(value) :\x0d\n        DatePrototypeToISOString(value);\x0d\n      const prefix = getPrefix(constructor\x2C tag\x2C 'Date');\x0d\n      if (prefix !== 'Date ')\x0d\n        base = `${prefix}${base}`;\x0d\n      if (keys.length === 0 && protoProps === undefined) {\x0d\n        return ctx.stylize(base\x2C 'date');\x0d\n      }\x0d\n    } else if (isError(value)) {\x0d\n      base = formatError(value\x2C constructor\x2C tag\x2C ctx\x2C keys);\x0d\n      if (keys.length === 0 && protoProps === undefined)\x0d\n        return base;\x0d\n    } else if (isAnyArrayBuffer(value)) {\x0d\n      // Fast path for ArrayBuffer and SharedArrayBuffer.\x0d\n      // Can't do the same for DataView because it has a non-primitive\x0d\n      // .buffer property that we need to recurse for.\x0d\n      const arrayType = isArrayBuffer(value) ? 'ArrayBuffer' :\x0d\n        'SharedArrayBuffer';\x0d\n      const prefix = getPrefix(constructor\x2C tag\x2C arrayType);\x0d\n      if (typedArray === undefined) {\x0d\n        formatter = formatArrayBuffer;\x0d\n      } else if (keys.length === 0 && protoProps === undefined) {\x0d\n        return prefix +\x0d\n              `{ byteLength: ${formatNumber(ctx.stylize\x2C value.byteLength\x2C false)} }`;\x0d\n      }\x0d\n      braces[0] = `${prefix}{`;\x0d\n      ArrayPrototypeUnshift(keys\x2C 'byteLength');\x0d\n    } else if (isDataView(value)) {\x0d\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'DataView')}{`;\x0d\n      // .buffer goes last\x2C it's not a primitive like the others.\x0d\n      ArrayPrototypeUnshift(keys\x2C 'byteLength'\x2C 'byteOffset'\x2C 'buffer');\x0d\n    } else if (isPromise(value)) {\x0d\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'Promise')}{`;\x0d\n      formatter = formatPromise;\x0d\n    } else if (isWeakSet(value)) {\x0d\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'WeakSet')}{`;\x0d\n      formatter = ctx.showHidden ? formatWeakSet : formatWeakCollection;\x0d\n    } else if (isWeakMap(value)) {\x0d\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'WeakMap')}{`;\x0d\n      formatter = ctx.showHidden ? formatWeakMap : formatWeakCollection;\x0d\n    } else if (isModuleNamespaceObject(value)) {\x0d\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'Module')}{`;\x0d\n      // Special handle keys for namespace objects.\x0d\n      formatter = formatNamespaceObject.bind(null\x2C keys);\x0d\n    } else if (isBoxedPrimitive(value)) {\x0d\n      base = getBoxedBase(value\x2C ctx\x2C keys\x2C constructor\x2C tag);\x0d\n      if (keys.length === 0 && protoProps === undefined) {\x0d\n        return base;\x0d\n      }\x0d\n    } else {\x0d\n      if (keys.length === 0 && protoProps === undefined) {\x0d\n        if (isExternal(value)) {\x0d\n          const address = getExternalValue(value).toString(16);\x0d\n          return ctx.stylize(`[External: ${address}]`\x2C 'special');\x0d\n        }\x0d\n        return `${getCtxStyle(value\x2C constructor\x2C tag)}{}`;\x0d\n      }\x0d\n      braces[0] = `${getCtxStyle(value\x2C constructor\x2C tag)}{`;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (recurseTimes > ctx.depth && ctx.depth !== null) {\x0d\n    let constructorName = StringPrototypeSlice(getCtxStyle(value\x2C constructor\x2C tag)\x2C 0\x2C -1);\x0d\n    if (constructor !== null)\x0d\n      constructorName = `[${constructorName}]`;\x0d\n    return ctx.stylize(constructorName\x2C 'special');\x0d\n  }\x0d\n  recurseTimes += 1;\x0d\n\x0d\n  ctx.seen.push(value);\x0d\n  ctx.currentDepth = recurseTimes;\x0d\n  let output;\x0d\n  const indentationLvl = ctx.indentationLvl;\x0d\n  try {\x0d\n    output = formatter(ctx\x2C value\x2C recurseTimes);\x0d\n    for (i = 0; i < keys.length; i++) {\x0d\n      ArrayPrototypePush(\x0d\n        output\x2C\x0d\n        formatProperty(ctx\x2C value\x2C recurseTimes\x2C keys[i]\x2C extrasType)\x2C\x0d\n      );\x0d\n    }\x0d\n    if (protoProps !== undefined) {\x0d\n      ArrayPrototypePushApply(output\x2C protoProps);\x0d\n    }\x0d\n  } catch (err) {\x0d\n    const constructorName = StringPrototypeSlice(getCtxStyle(value\x2C constructor\x2C tag)\x2C 0\x2C -1);\x0d\n    return handleMaxCallStackSize(ctx\x2C err\x2C constructorName\x2C indentationLvl);\x0d\n  }\x0d\n  if (ctx.circular !== undefined) {\x0d\n    const index = ctx.circular.get(value);\x0d\n    if (index !== undefined) {\x0d\n      const reference = ctx.stylize(`<ref *${index}>`\x2C 'special');\x0d\n      // Add reference always to the very beginning of the output.\x0d\n      if (ctx.compact !== true) {\x0d\n        base = base === '' ? reference : `${reference} ${base}`;\x0d\n      } else {\x0d\n        braces[0] = `${reference} ${braces[0]}`;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  ctx.seen.pop();\x0d\n\x0d\n  if (ctx.sorted) {\x0d\n    const comparator = ctx.sorted === true ? undefined : ctx.sorted;\x0d\n    if (extrasType === kObjectType) {\x0d\n      ArrayPrototypeSort(output\x2C comparator);\x0d\n    } else if (keys.length > 1) {\x0d\n      const sorted = ArrayPrototypeSort(ArrayPrototypeSlice(output\x2C output.length - keys.length)\x2C comparator);\x0d\n      ArrayPrototypeUnshift(sorted\x2C output\x2C output.length - keys.length\x2C keys.length);\x0d\n      ReflectApply(ArrayPrototypeSplice\x2C null\x2C sorted);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const res = reduceToSingleString(\x0d\n    ctx\x2C output\x2C base\x2C braces\x2C extrasType\x2C recurseTimes\x2C value);\x0d\n  const budget = ctx.budget[ctx.indentationLvl] || 0;\x0d\n  const newLength = budget + res.length;\x0d\n  ctx.budget[ctx.indentationLvl] = newLength;\x0d\n  // If any indentationLvl exceeds this limit\x2C limit further inspecting to the\x0d\n  // minimum. Otherwise the recursive algorithm might continue inspecting the\x0d\n  // object even though the maximum string size (~2 ** 28 on 32 bit systems and\x0d\n  // ~2 ** 30 on 64 bit systems) exceeded. The actual output is not limited at\x0d\n  // exactly 2 ** 27 but a bit higher. This depends on the object shape.\x0d\n  // This limit also makes sure that huge objects don't block the event loop\x0d\n  // significantly.\x0d\n  if (newLength > 2 ** 27) {\x0d\n    ctx.depth = -1;\x0d\n  }\x0d\n  return res;\x0d\n}\x0d\n\x0d\nfunction getIteratorBraces(type\x2C tag) {\x0d\n  if (tag !== `${type} Iterator`) {\x0d\n    if (tag !== '')\x0d\n      tag += '] [';\x0d\n    tag += `${type} Iterator`;\x0d\n  }\x0d\n  return [`[${tag}] {`\x2C '}'];\x0d\n}\x0d\n\x0d\nfunction getBoxedBase(value\x2C ctx\x2C keys\x2C constructor\x2C tag) {\x0d\n  let fn;\x0d\n  let type;\x0d\n  if (isNumberObject(value)) {\x0d\n    fn = NumberPrototypeValueOf;\x0d\n    type = 'Number';\x0d\n  } else if (isStringObject(value)) {\x0d\n    fn = StringPrototypeValueOf;\x0d\n    type = 'String';\x0d\n    // For boxed Strings\x2C we have to remove the 0-n indexed entries\x2C\x0d\n    // since they just noisy up the output and are redundant\x0d\n    // Make boxed primitive Strings look like such\x0d\n    keys.splice(0\x2C value.length);\x0d\n  } else if (isBooleanObject(value)) {\x0d\n    fn = BooleanPrototypeValueOf;\x0d\n    type = 'Boolean';\x0d\n  } else if (isBigIntObject(value)) {\x0d\n    fn = BigIntPrototypeValueOf;\x0d\n    type = 'BigInt';\x0d\n  } else {\x0d\n    fn = SymbolPrototypeValueOf;\x0d\n    type = 'Symbol';\x0d\n  }\x0d\n  let base = `[${type}`;\x0d\n  if (type !== constructor) {\x0d\n    if (constructor === null) {\x0d\n      base += ' (null prototype)';\x0d\n    } else {\x0d\n      base += ` (${constructor})`;\x0d\n    }\x0d\n  }\x0d\n  base += `: ${formatPrimitive(stylizeNoColor\x2C fn(value)\x2C ctx)}]`;\x0d\n  if (tag !== '' && tag !== constructor) {\x0d\n    base += ` [${tag}]`;\x0d\n  }\x0d\n  if (keys.length !== 0 || ctx.stylize === stylizeNoColor)\x0d\n    return base;\x0d\n  return ctx.stylize(base\x2C StringPrototypeToLowerCase(type));\x0d\n}\x0d\n\x0d\nfunction getClassBase(value\x2C constructor\x2C tag) {\x0d\n  const hasName = ObjectPrototypeHasOwnProperty(value\x2C 'name');\x0d\n  const name = (hasName && value.name) || '(anonymous)';\x0d\n  let base = `class ${name}`;\x0d\n  if (constructor !== 'Function' && constructor !== null) {\x0d\n    base += ` [${constructor}]`;\x0d\n  }\x0d\n  if (tag !== '' && constructor !== tag) {\x0d\n    base += ` [${tag}]`;\x0d\n  }\x0d\n  if (constructor !== null) {\x0d\n    const superName = ObjectGetPrototypeOf(value).name;\x0d\n    if (superName) {\x0d\n      base += ` extends ${superName}`;\x0d\n    }\x0d\n  } else {\x0d\n    base += ' extends [null prototype]';\x0d\n  }\x0d\n  return `[${base}]`;\x0d\n}\x0d\n\x0d\nfunction getFunctionBase(value\x2C constructor\x2C tag) {\x0d\n  const stringified = FunctionPrototypeToString(value);\x0d\n  if (StringPrototypeStartsWith(stringified\x2C 'class') && StringPrototypeEndsWith(stringified\x2C '}')) {\x0d\n    const slice = StringPrototypeSlice(stringified\x2C 5\x2C -1);\x0d\n    const bracketIndex = StringPrototypeIndexOf(slice\x2C '{');\x0d\n    if (bracketIndex !== -1 &&\x0d\n        (!StringPrototypeIncludes(StringPrototypeSlice(slice\x2C 0\x2C bracketIndex)\x2C '(') ||\x0d\n        // Slow path to guarantee that it's indeed a class.\x0d\n        RegExpPrototypeExec(classRegExp\x2C RegExpPrototypeSymbolReplace(stripCommentsRegExp\x2C slice)) !== null)\x0d\n    ) {\x0d\n      return getClassBase(value\x2C constructor\x2C tag);\x0d\n    }\x0d\n  }\x0d\n  let type = 'Function';\x0d\n  if (isGeneratorFunction(value)) {\x0d\n    type = `Generator${type}`;\x0d\n  }\x0d\n  if (isAsyncFunction(value)) {\x0d\n    type = `Async${type}`;\x0d\n  }\x0d\n  let base = `[${type}`;\x0d\n  if (constructor === null) {\x0d\n    base += ' (null prototype)';\x0d\n  }\x0d\n  if (value.name === '') {\x0d\n    base += ' (anonymous)';\x0d\n  } else {\x0d\n    base += `: ${value.name}`;\x0d\n  }\x0d\n  base += ']';\x0d\n  if (constructor !== type && constructor !== null) {\x0d\n    base += ` ${constructor}`;\x0d\n  }\x0d\n  if (tag !== '' && constructor !== tag) {\x0d\n    base += ` [${tag}]`;\x0d\n  }\x0d\n  return base;\x0d\n}\x0d\n\x0d\nfunction identicalSequenceRange(a\x2C b) {\x0d\n  for (let i = 0; i < a.length - 3; i++) {\x0d\n    // Find the first entry of b that matches the current entry of a.\x0d\n    const pos = ArrayPrototypeIndexOf(b\x2C a[i]);\x0d\n    if (pos !== -1) {\x0d\n      const rest = b.length - pos;\x0d\n      if (rest > 3) {\x0d\n        let len = 1;\x0d\n        const maxLen = MathMin(a.length - i\x2C rest);\x0d\n        // Count the number of consecutive entries.\x0d\n        while (maxLen > len && a[i + len] === b[pos + len]) {\x0d\n          len++;\x0d\n        }\x0d\n        if (len > 3) {\x0d\n          return { len\x2C offset: i };\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return { len: 0\x2C offset: 0 };\x0d\n}\x0d\n\x0d\nfunction getStackString(error) {\x0d\n  return error.stack ? String(error.stack) : ErrorPrototypeToString(error);\x0d\n}\x0d\n\x0d\nfunction getStackFrames(ctx\x2C err\x2C stack) {\x0d\n  const frames = StringPrototypeSplit(stack\x2C '\\n');\x0d\n\x0d\n  let cause;\x0d\n  try {\x0d\n    ({ cause } = err);\x0d\n  } catch {\x0d\n    // If 'cause' is a getter that throws\x2C ignore it.\x0d\n  }\x0d\n\x0d\n  // Remove stack frames identical to frames in cause.\x0d\n  if (cause != null && isError(cause)) {\x0d\n    const causeStack = getStackString(cause);\x0d\n    const causeStackStart = StringPrototypeIndexOf(causeStack\x2C '\\n    at');\x0d\n    if (causeStackStart !== -1) {\x0d\n      const causeFrames = StringPrototypeSplit(StringPrototypeSlice(causeStack\x2C causeStackStart + 1)\x2C '\\n');\x0d\n      const { len\x2C offset } = identicalSequenceRange(frames\x2C causeFrames);\x0d\n      if (len > 0) {\x0d\n        const skipped = len - 2;\x0d\n        const msg = `    ... ${skipped} lines matching cause stack trace ...`;\x0d\n        frames.splice(offset + 1\x2C skipped\x2C ctx.stylize(msg\x2C 'undefined'));\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return frames;\x0d\n}\x0d\n\x0d\nfunction improveStack(stack\x2C constructor\x2C name\x2C tag) {\x0d\n  // A stack trace may contain arbitrary data. Only manipulate the output\x0d\n  // for "regular errors" (errors that "look normal") for now.\x0d\n  let len = name.length;\x0d\n\x0d\n  if (constructor === null ||\x0d\n      (StringPrototypeEndsWith(name\x2C 'Error') &&\x0d\n      StringPrototypeStartsWith(stack\x2C name) &&\x0d\n      (stack.length === len || stack[len] === ':' || stack[len] === '\\n'))) {\x0d\n    let fallback = 'Error';\x0d\n    if (constructor === null) {\x0d\n      const start = RegExpPrototypeExec(/^([A-Z][a-z_ A-Z0-9[\\]()-]+)(?::|\\n {4}at)/\x2C stack) ||\x0d\n      RegExpPrototypeExec(/^([a-z_A-Z0-9-]*Error)$/\x2C stack);\x0d\n      fallback = (start && start[1]) || '';\x0d\n      len = fallback.length;\x0d\n      fallback = fallback || 'Error';\x0d\n    }\x0d\n    const prefix = StringPrototypeSlice(getPrefix(constructor\x2C tag\x2C fallback)\x2C 0\x2C -1);\x0d\n    if (name !== prefix) {\x0d\n      if (StringPrototypeIncludes(prefix\x2C name)) {\x0d\n        if (len === 0) {\x0d\n          stack = `${prefix}: ${stack}`;\x0d\n        } else {\x0d\n          stack = `${prefix}${StringPrototypeSlice(stack\x2C len)}`;\x0d\n        }\x0d\n      } else {\x0d\n        stack = `${prefix} [${name}]${StringPrototypeSlice(stack\x2C len)}`;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return stack;\x0d\n}\x0d\n\x0d\nfunction removeDuplicateErrorKeys(ctx\x2C keys\x2C err\x2C stack) {\x0d\n  if (!ctx.showHidden && keys.length !== 0) {\x0d\n    for (const name of ['name'\x2C 'message'\x2C 'stack']) {\x0d\n      const index = ArrayPrototypeIndexOf(keys\x2C name);\x0d\n      // Only hide the property in case it's part of the original stack\x0d\n      if (index !== -1 && StringPrototypeIncludes(stack\x2C err[name])) {\x0d\n        ArrayPrototypeSplice(keys\x2C index\x2C 1);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction markNodeModules(ctx\x2C line) {\x0d\n  let tempLine = '';\x0d\n  let nodeModule;\x0d\n  let pos = 0;\x0d\n  while ((nodeModule = nodeModulesRegExp.exec(line)) !== null) {\x0d\n    // '/node_modules/'.length === 14\x0d\n    tempLine += StringPrototypeSlice(line\x2C pos\x2C nodeModule.index + 14);\x0d\n    tempLine += ctx.stylize(nodeModule[1]\x2C 'module');\x0d\n    pos = nodeModule.index + nodeModule[0].length;\x0d\n  }\x0d\n  if (pos !== 0) {\x0d\n    line = tempLine + StringPrototypeSlice(line\x2C pos);\x0d\n  }\x0d\n  return line;\x0d\n}\x0d\n\x0d\nfunction markCwd(ctx\x2C line\x2C workingDirectory) {\x0d\n  let cwdStartPos = StringPrototypeIndexOf(line\x2C workingDirectory);\x0d\n  let tempLine = '';\x0d\n  let cwdLength = workingDirectory.length;\x0d\n  if (cwdStartPos !== -1) {\x0d\n    if (StringPrototypeSlice(line\x2C cwdStartPos - 7\x2C cwdStartPos) === 'file://') {\x0d\n      cwdLength += 7;\x0d\n      cwdStartPos -= 7;\x0d\n    }\x0d\n    const start = line[cwdStartPos - 1] === '(' ? cwdStartPos - 1 : cwdStartPos;\x0d\n    const end = start !== cwdStartPos && StringPrototypeEndsWith(line\x2C ')') ? -1 : line.length;\x0d\n    const workingDirectoryEndPos = cwdStartPos + cwdLength + 1;\x0d\n    const cwdSlice = StringPrototypeSlice(line\x2C start\x2C workingDirectoryEndPos);\x0d\n\x0d\n    tempLine += StringPrototypeSlice(line\x2C 0\x2C start);\x0d\n    tempLine += ctx.stylize(cwdSlice\x2C 'undefined');\x0d\n    tempLine += StringPrototypeSlice(line\x2C workingDirectoryEndPos\x2C end);\x0d\n    if (end === -1) {\x0d\n      tempLine += ctx.stylize(')'\x2C 'undefined');\x0d\n    }\x0d\n  } else {\x0d\n    tempLine += line;\x0d\n  }\x0d\n  return tempLine;\x0d\n}\x0d\n\x0d\nfunction safeGetCWD() {\x0d\n  let workingDirectory;\x0d\n  try {\x0d\n    workingDirectory = process.cwd();\x0d\n  } catch {\x0d\n    return;\x0d\n  }\x0d\n  return workingDirectory;\x0d\n}\x0d\n\x0d\nfunction formatError(err\x2C constructor\x2C tag\x2C ctx\x2C keys) {\x0d\n  const name = err.name != null ? String(err.name) : 'Error';\x0d\n  let stack = getStackString(err);\x0d\n\x0d\n  removeDuplicateErrorKeys(ctx\x2C keys\x2C err\x2C stack);\x0d\n\x0d\n  if ('cause' in err &&\x0d\n      (keys.length === 0 || !ArrayPrototypeIncludes(keys\x2C 'cause'))) {\x0d\n    ArrayPrototypePush(keys\x2C 'cause');\x0d\n  }\x0d\n\x0d\n  // Print errors aggregated into AggregateError\x0d\n  if (ArrayIsArray(err.errors) &&\x0d\n      (keys.length === 0 || !ArrayPrototypeIncludes(keys\x2C 'errors'))) {\x0d\n    ArrayPrototypePush(keys\x2C 'errors');\x0d\n  }\x0d\n\x0d\n  stack = improveStack(stack\x2C constructor\x2C name\x2C tag);\x0d\n\x0d\n  // Ignore the error message if it's contained in the stack.\x0d\n  let pos = (err.message && StringPrototypeIndexOf(stack\x2C err.message)) || -1;\x0d\n  if (pos !== -1)\x0d\n    pos += err.message.length;\x0d\n  // Wrap the error in brackets in case it has no stack trace.\x0d\n  const stackStart = StringPrototypeIndexOf(stack\x2C '\\n    at'\x2C pos);\x0d\n  if (stackStart === -1) {\x0d\n    stack = `[${stack}]`;\x0d\n  } else {\x0d\n    let newStack = StringPrototypeSlice(stack\x2C 0\x2C stackStart);\x0d\n    const stackFramePart = StringPrototypeSlice(stack\x2C stackStart + 1);\x0d\n    const lines = getStackFrames(ctx\x2C err\x2C stackFramePart);\x0d\n    if (ctx.colors) {\x0d\n      // Highlight userland code and node modules.\x0d\n      const workingDirectory = safeGetCWD();\x0d\n      let esmWorkingDirectory;\x0d\n      for (let line of lines) {\x0d\n        const core = RegExpPrototypeExec(coreModuleRegExp\x2C line);\x0d\n        if (core !== null && BuiltinModule.exists(core[1])) {\x0d\n          newStack += `\\n${ctx.stylize(line\x2C 'undefined')}`;\x0d\n        } else {\x0d\n          newStack += '\\n';\x0d\n\x0d\n          line = markNodeModules(ctx\x2C line);\x0d\n          if (workingDirectory !== undefined) {\x0d\n            let newLine = markCwd(ctx\x2C line\x2C workingDirectory);\x0d\n            if (newLine === line) {\x0d\n              esmWorkingDirectory ??= pathToFileUrlHref(workingDirectory);\x0d\n              newLine = markCwd(ctx\x2C line\x2C esmWorkingDirectory);\x0d\n            }\x0d\n            line = newLine;\x0d\n          }\x0d\n\x0d\n          newStack += line;\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      newStack += `\\n${ArrayPrototypeJoin(lines\x2C '\\n')}`;\x0d\n    }\x0d\n    stack = newStack;\x0d\n  }\x0d\n  // The message and the stack have to be indented as well!\x0d\n  if (ctx.indentationLvl !== 0) {\x0d\n    const indentation = StringPrototypeRepeat(' '\x2C ctx.indentationLvl);\x0d\n    stack = StringPrototypeReplaceAll(stack\x2C '\\n'\x2C `\\n${indentation}`);\x0d\n  }\x0d\n  return stack;\x0d\n}\x0d\n\x0d\nfunction groupArrayElements(ctx\x2C output\x2C value) {\x0d\n  let totalLength = 0;\x0d\n  let maxLength = 0;\x0d\n  let i = 0;\x0d\n  let outputLength = output.length;\x0d\n  if (ctx.maxArrayLength < output.length) {\x0d\n    // This makes sure the "... n more items" part is not taken into account.\x0d\n    outputLength--;\x0d\n  }\x0d\n  const separatorSpace = 2; // Add 1 for the space and 1 for the separator.\x0d\n  const dataLen = new Array(outputLength);\x0d\n  // Calculate the total length of all output entries and the individual max\x0d\n  // entries length of all output entries. We have to remove colors first\x2C\x0d\n  // otherwise the length would not be calculated properly.\x0d\n  for (; i < outputLength; i++) {\x0d\n    const len = getStringWidth(output[i]\x2C ctx.colors);\x0d\n    dataLen[i] = len;\x0d\n    totalLength += len + separatorSpace;\x0d\n    if (maxLength < len)\x0d\n      maxLength = len;\x0d\n  }\x0d\n  // Add two to `maxLength` as we add a single whitespace character plus a comma\x0d\n  // in-between two entries.\x0d\n  const actualMax = maxLength + separatorSpace;\x0d\n  // Check if at least three entries fit next to each other and prevent grouping\x0d\n  // of arrays that contains entries of very different length (i.e.\x2C if a single\x0d\n  // entry is longer than 1/5 of all other entries combined). Otherwise the\x0d\n  // space in-between small entries would be enormous.\x0d\n  if (actualMax * 3 + ctx.indentationLvl < ctx.breakLength &&\x0d\n      (totalLength / actualMax > 5 || maxLength <= 6)) {\x0d\n\x0d\n    const approxCharHeights = 2.5;\x0d\n    const averageBias = MathSqrt(actualMax - totalLength / output.length);\x0d\n    const biasedMax = MathMax(actualMax - 3 - averageBias\x2C 1);\x0d\n    // Dynamically check how many columns seem possible.\x0d\n    const columns = MathMin(\x0d\n      // Ideally a square should be drawn. We expect a character to be about 2.5\x0d\n      // times as high as wide. This is the area formula to calculate a square\x0d\n      // which contains n rectangles of size `actualMax * approxCharHeights`.\x0d\n      // Divide that by `actualMax` to receive the correct number of columns.\x0d\n      // The added bias increases the columns for short entries.\x0d\n      MathRound(\x0d\n        MathSqrt(\x0d\n          approxCharHeights * biasedMax * outputLength\x2C\x0d\n        ) / biasedMax\x2C\x0d\n      )\x2C\x0d\n      // Do not exceed the breakLength.\x0d\n      MathFloor((ctx.breakLength - ctx.indentationLvl) / actualMax)\x2C\x0d\n      // Limit array grouping for small `compact` modes as the user requested\x0d\n      // minimal grouping.\x0d\n      ctx.compact * 4\x2C\x0d\n      // Limit the columns to a maximum of fifteen.\x0d\n      15\x2C\x0d\n    );\x0d\n    // Return with the original output if no grouping should happen.\x0d\n    if (columns <= 1) {\x0d\n      return output;\x0d\n    }\x0d\n    const tmp = [];\x0d\n    const maxLineLength = [];\x0d\n    for (let i = 0; i < columns; i++) {\x0d\n      let lineMaxLength = 0;\x0d\n      for (let j = i; j < output.length; j += columns) {\x0d\n        if (dataLen[j] > lineMaxLength)\x0d\n          lineMaxLength = dataLen[j];\x0d\n      }\x0d\n      lineMaxLength += separatorSpace;\x0d\n      maxLineLength[i] = lineMaxLength;\x0d\n    }\x0d\n    let order = StringPrototypePadStart;\x0d\n    if (value !== undefined) {\x0d\n      for (let i = 0; i < output.length; i++) {\x0d\n        if (typeof value[i] !== 'number' && typeof value[i] !== 'bigint') {\x0d\n          order = StringPrototypePadEnd;\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    // Each iteration creates a single line of grouped entries.\x0d\n    for (let i = 0; i < outputLength; i += columns) {\x0d\n      // The last lines may contain less entries than columns.\x0d\n      const max = MathMin(i + columns\x2C outputLength);\x0d\n      let str = '';\x0d\n      let j = i;\x0d\n      for (; j < max - 1; j++) {\x0d\n        // Calculate extra color padding in case it's active. This has to be\x0d\n        // done line by line as some lines might contain more colors than\x0d\n        // others.\x0d\n        const padding = maxLineLength[j - i] + output[j].length - dataLen[j];\x0d\n        str += order(`${output[j]}\x2C `\x2C padding\x2C ' ');\x0d\n      }\x0d\n      if (order === StringPrototypePadStart) {\x0d\n        const padding = maxLineLength[j - i] +\x0d\n                        output[j].length -\x0d\n                        dataLen[j] -\x0d\n                        separatorSpace;\x0d\n        str += StringPrototypePadStart(output[j]\x2C padding\x2C ' ');\x0d\n      } else {\x0d\n        str += output[j];\x0d\n      }\x0d\n      ArrayPrototypePush(tmp\x2C str);\x0d\n    }\x0d\n    if (ctx.maxArrayLength < output.length) {\x0d\n      ArrayPrototypePush(tmp\x2C output[outputLength]);\x0d\n    }\x0d\n    output = tmp;\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction handleMaxCallStackSize(ctx\x2C err\x2C constructorName\x2C indentationLvl) {\x0d\n  if (isStackOverflowError(err)) {\x0d\n    ctx.seen.pop();\x0d\n    ctx.indentationLvl = indentationLvl;\x0d\n    return ctx.stylize(\x0d\n      `[${constructorName}: Inspection interrupted ` +\x0d\n        'prematurely. Maximum call stack size exceeded.]'\x2C\x0d\n      'special'\x2C\x0d\n    );\x0d\n  }\x0d\n  /* c8 ignore next */\x0d\n  assert.fail(err.stack);\x0d\n}\x0d\n\x0d\nfunction addNumericSeparator(integerString) {\x0d\n  let result = '';\x0d\n  let i = integerString.length;\x0d\n  const start = StringPrototypeStartsWith(integerString\x2C '-') ? 1 : 0;\x0d\n  for (; i >= start + 4; i -= 3) {\x0d\n    result = `_${StringPrototypeSlice(integerString\x2C i - 3\x2C i)}${result}`;\x0d\n  }\x0d\n  return i === integerString.length ?\x0d\n    integerString :\x0d\n    `${StringPrototypeSlice(integerString\x2C 0\x2C i)}${result}`;\x0d\n}\x0d\n\x0d\nfunction addNumericSeparatorEnd(integerString) {\x0d\n  let result = '';\x0d\n  let i = 0;\x0d\n  for (; i < integerString.length - 3; i += 3) {\x0d\n    result += `${StringPrototypeSlice(integerString\x2C i\x2C i + 3)}_`;\x0d\n  }\x0d\n  return i === 0 ?\x0d\n    integerString :\x0d\n    `${result}${StringPrototypeSlice(integerString\x2C i)}`;\x0d\n}\x0d\n\x0d\nconst remainingText = (remaining) => `... ${remaining} more item${remaining > 1 ? 's' : ''}`;\x0d\n\x0d\nfunction formatNumber(fn\x2C number\x2C numericSeparator) {\x0d\n  if (!numericSeparator) {\x0d\n    // Format -0 as '-0'. Checking `number === -0` won't distinguish 0 from -0.\x0d\n    if (ObjectIs(number\x2C -0)) {\x0d\n      return fn('-0'\x2C 'number');\x0d\n    }\x0d\n    return fn(`${number}`\x2C 'number');\x0d\n  }\x0d\n  const integer = MathTrunc(number);\x0d\n  const string = String(integer);\x0d\n  if (integer === number) {\x0d\n    if (!NumberIsFinite(number) || StringPrototypeIncludes(string\x2C 'e')) {\x0d\n      return fn(string\x2C 'number');\x0d\n    }\x0d\n    return fn(`${addNumericSeparator(string)}`\x2C 'number');\x0d\n  }\x0d\n  if (NumberIsNaN(number)) {\x0d\n    return fn(string\x2C 'number');\x0d\n  }\x0d\n  return fn(`${\x0d\n    addNumericSeparator(string)\x0d\n  }.${\x0d\n    addNumericSeparatorEnd(\x0d\n      StringPrototypeSlice(String(number)\x2C string.length + 1)\x2C\x0d\n    )\x0d\n  }`\x2C 'number');\x0d\n}\x0d\n\x0d\nfunction formatBigInt(fn\x2C bigint\x2C numericSeparator) {\x0d\n  const string = String(bigint);\x0d\n  if (!numericSeparator) {\x0d\n    return fn(`${string}n`\x2C 'bigint');\x0d\n  }\x0d\n  return fn(`${addNumericSeparator(string)}n`\x2C 'bigint');\x0d\n}\x0d\n\x0d\nfunction formatPrimitive(fn\x2C value\x2C ctx) {\x0d\n  if (typeof value === 'string') {\x0d\n    let trailer = '';\x0d\n    if (value.length > ctx.maxStringLength) {\x0d\n      const remaining = value.length - ctx.maxStringLength;\x0d\n      value = StringPrototypeSlice(value\x2C 0\x2C ctx.maxStringLength);\x0d\n      trailer = `... ${remaining} more character${remaining > 1 ? 's' : ''}`;\x0d\n    }\x0d\n    if (ctx.compact !== true &&\x0d\n        // We do not support handling unicode characters width with\x0d\n        // the readline getStringWidth function as there are\x0d\n        // performance implications.\x0d\n        value.length > kMinLineLength &&\x0d\n        value.length > ctx.breakLength - ctx.indentationLvl - 4) {\x0d\n      return ArrayPrototypeJoin(\x0d\n        ArrayPrototypeMap(\x0d\n          RegExpPrototypeSymbolSplit(/(?<=\\n)/\x2C value)\x2C\x0d\n          (line) => fn(strEscape(line)\x2C 'string')\x2C\x0d\n        )\x2C\x0d\n        ` +\\n${StringPrototypeRepeat(' '\x2C ctx.indentationLvl + 2)}`\x2C\x0d\n      ) + trailer;\x0d\n    }\x0d\n    return fn(strEscape(value)\x2C 'string') + trailer;\x0d\n  }\x0d\n  if (typeof value === 'number')\x0d\n    return formatNumber(fn\x2C value\x2C ctx.numericSeparator);\x0d\n  if (typeof value === 'bigint')\x0d\n    return formatBigInt(fn\x2C value\x2C ctx.numericSeparator);\x0d\n  if (typeof value === 'boolean')\x0d\n    return fn(`${value}`\x2C 'boolean');\x0d\n  if (typeof value === 'undefined')\x0d\n    return fn('undefined'\x2C 'undefined');\x0d\n  // es6 symbol primitive\x0d\n  return fn(SymbolPrototypeToString(value)\x2C 'symbol');\x0d\n}\x0d\n\x0d\nfunction formatNamespaceObject(keys\x2C ctx\x2C value\x2C recurseTimes) {\x0d\n  const output = new Array(keys.length);\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    try {\x0d\n      output[i] = formatProperty(ctx\x2C value\x2C recurseTimes\x2C keys[i]\x2C\x0d\n                                 kObjectType);\x0d\n    } catch (err) {\x0d\n      assert(isNativeError(err) && err.name === 'ReferenceError');\x0d\n      // Use the existing functionality. This makes sure the indentation and\x0d\n      // line breaks are always correct. Otherwise it is very difficult to keep\x0d\n      // this aligned\x2C even though this is a hacky way of dealing with this.\x0d\n      const tmp = { [keys[i]]: '' };\x0d\n      output[i] = formatProperty(ctx\x2C tmp\x2C recurseTimes\x2C keys[i]\x2C kObjectType);\x0d\n      const pos = StringPrototypeLastIndexOf(output[i]\x2C ' ');\x0d\n      // We have to find the last whitespace and have to replace that value as\x0d\n      // it will be visualized as a regular string.\x0d\n      output[i] = StringPrototypeSlice(output[i]\x2C 0\x2C pos + 1) +\x0d\n                  ctx.stylize('<uninitialized>'\x2C 'special');\x0d\n    }\x0d\n  }\x0d\n  // Reset the keys to an empty array. This prevents duplicated inspection.\x0d\n  keys.length = 0;\x0d\n  return output;\x0d\n}\x0d\n\x0d\n// The array is sparse and/or has extra keys\x0d\nfunction formatSpecialArray(ctx\x2C value\x2C recurseTimes\x2C maxLength\x2C output\x2C i) {\x0d\n  const keys = ObjectKeys(value);\x0d\n  let index = i;\x0d\n  for (; i < keys.length && output.length < maxLength; i++) {\x0d\n    const key = keys[i];\x0d\n    const tmp = +key;\x0d\n    // Arrays can only have up to 2^32 - 1 entries\x0d\n    if (tmp > 2 ** 32 - 2) {\x0d\n      break;\x0d\n    }\x0d\n    if (`${index}` !== key) {\x0d\n      if (RegExpPrototypeExec(numberRegExp\x2C key) === null) {\x0d\n        break;\x0d\n      }\x0d\n      const emptyItems = tmp - index;\x0d\n      const ending = emptyItems > 1 ? 's' : '';\x0d\n      const message = `<${emptyItems} empty item${ending}>`;\x0d\n      ArrayPrototypePush(output\x2C ctx.stylize(message\x2C 'undefined'));\x0d\n      index = tmp;\x0d\n      if (output.length === maxLength) {\x0d\n        break;\x0d\n      }\x0d\n    }\x0d\n    ArrayPrototypePush(output\x2C formatProperty(ctx\x2C value\x2C recurseTimes\x2C key\x2C kArrayType));\x0d\n    index++;\x0d\n  }\x0d\n  const remaining = value.length - index;\x0d\n  if (output.length !== maxLength) {\x0d\n    if (remaining > 0) {\x0d\n      const ending = remaining > 1 ? 's' : '';\x0d\n      const message = `<${remaining} empty item${ending}>`;\x0d\n      ArrayPrototypePush(output\x2C ctx.stylize(message\x2C 'undefined'));\x0d\n    }\x0d\n  } else if (remaining > 0) {\x0d\n    ArrayPrototypePush(output\x2C remainingText(remaining));\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatArrayBuffer(ctx\x2C value) {\x0d\n  let buffer;\x0d\n  try {\x0d\n    buffer = new Uint8Array(value);\x0d\n  } catch {\x0d\n    return [ctx.stylize('(detached)'\x2C 'special')];\x0d\n  }\x0d\n  if (hexSlice === undefined)\x0d\n    hexSlice = uncurryThis(require('buffer').Buffer.prototype.hexSlice);\x0d\n  let str = StringPrototypeTrim(RegExpPrototypeSymbolReplace(\x0d\n    /(.{2})/g\x2C\x0d\n    hexSlice(buffer\x2C 0\x2C MathMin(ctx.maxArrayLength\x2C buffer.length))\x2C\x0d\n    '$1 '\x2C\x0d\n  ));\x0d\n  const remaining = buffer.length - ctx.maxArrayLength;\x0d\n  if (remaining > 0)\x0d\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\x0d\n  return [`${ctx.stylize('[Uint8Contents]'\x2C 'special')}: <${str}>`];\x0d\n}\x0d\n\x0d\nfunction formatArray(ctx\x2C value\x2C recurseTimes) {\x0d\n  const valLen = value.length;\x0d\n  const len = MathMin(MathMax(0\x2C ctx.maxArrayLength)\x2C valLen);\x0d\n\x0d\n  const remaining = valLen - len;\x0d\n  const output = [];\x0d\n  for (let i = 0; i < len; i++) {\x0d\n    // Special handle sparse arrays.\x0d\n    if (!ObjectPrototypeHasOwnProperty(value\x2C i)) {\x0d\n      return formatSpecialArray(ctx\x2C value\x2C recurseTimes\x2C len\x2C output\x2C i);\x0d\n    }\x0d\n    ArrayPrototypePush(output\x2C formatProperty(ctx\x2C value\x2C recurseTimes\x2C i\x2C kArrayType));\x0d\n  }\x0d\n  if (remaining > 0) {\x0d\n    ArrayPrototypePush(output\x2C remainingText(remaining));\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatTypedArray(value\x2C length\x2C ctx\x2C ignored\x2C recurseTimes) {\x0d\n  const maxLength = MathMin(MathMax(0\x2C ctx.maxArrayLength)\x2C length);\x0d\n  const remaining = value.length - maxLength;\x0d\n  const output = new Array(maxLength);\x0d\n  const elementFormatter = value.length > 0 && typeof value[0] === 'number' ?\x0d\n    formatNumber :\x0d\n    formatBigInt;\x0d\n  for (let i = 0; i < maxLength; ++i) {\x0d\n    output[i] = elementFormatter(ctx.stylize\x2C value[i]\x2C ctx.numericSeparator);\x0d\n  }\x0d\n  if (remaining > 0) {\x0d\n    output[maxLength] = remainingText(remaining);\x0d\n  }\x0d\n  if (ctx.showHidden) {\x0d\n    // .buffer goes last\x2C it's not a primitive like the others.\x0d\n    // All besides `BYTES_PER_ELEMENT` are actually getters.\x0d\n    ctx.indentationLvl += 2;\x0d\n    for (const key of [\x0d\n      'BYTES_PER_ELEMENT'\x2C\x0d\n      'length'\x2C\x0d\n      'byteLength'\x2C\x0d\n      'byteOffset'\x2C\x0d\n      'buffer'\x2C\x0d\n    ]) {\x0d\n      const str = formatValue(ctx\x2C value[key]\x2C recurseTimes\x2C true);\x0d\n      ArrayPrototypePush(output\x2C `[${key}]: ${str}`);\x0d\n    }\x0d\n    ctx.indentationLvl -= 2;\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatSet(value\x2C ctx\x2C ignored\x2C recurseTimes) {\x0d\n  const length = value.size;\x0d\n  const maxLength = MathMin(MathMax(0\x2C ctx.maxArrayLength)\x2C length);\x0d\n  const remaining = length - maxLength;\x0d\n  const output = [];\x0d\n  ctx.indentationLvl += 2;\x0d\n  let i = 0;\x0d\n  for (const v of value) {\x0d\n    if (i >= maxLength) break;\x0d\n    ArrayPrototypePush(output\x2C formatValue(ctx\x2C v\x2C recurseTimes));\x0d\n    i++;\x0d\n  }\x0d\n  if (remaining > 0) {\x0d\n    ArrayPrototypePush(output\x2C remainingText(remaining));\x0d\n  }\x0d\n  ctx.indentationLvl -= 2;\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatMap(value\x2C ctx\x2C ignored\x2C recurseTimes) {\x0d\n  const length = value.size;\x0d\n  const maxLength = MathMin(MathMax(0\x2C ctx.maxArrayLength)\x2C length);\x0d\n  const remaining = length - maxLength;\x0d\n  const output = [];\x0d\n  ctx.indentationLvl += 2;\x0d\n  let i = 0;\x0d\n  for (const { 0: k\x2C 1: v } of value) {\x0d\n    if (i >= maxLength) break;\x0d\n    ArrayPrototypePush(\x0d\n      output\x2C\x0d\n      `${formatValue(ctx\x2C k\x2C recurseTimes)} => ${formatValue(ctx\x2C v\x2C recurseTimes)}`\x2C\x0d\n    );\x0d\n    i++;\x0d\n  }\x0d\n  if (remaining > 0) {\x0d\n    ArrayPrototypePush(output\x2C remainingText(remaining));\x0d\n  }\x0d\n  ctx.indentationLvl -= 2;\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatSetIterInner(ctx\x2C recurseTimes\x2C entries\x2C state) {\x0d\n  const maxArrayLength = MathMax(ctx.maxArrayLength\x2C 0);\x0d\n  const maxLength = MathMin(maxArrayLength\x2C entries.length);\x0d\n  const output = new Array(maxLength);\x0d\n  ctx.indentationLvl += 2;\x0d\n  for (let i = 0; i < maxLength; i++) {\x0d\n    output[i] = formatValue(ctx\x2C entries[i]\x2C recurseTimes);\x0d\n  }\x0d\n  ctx.indentationLvl -= 2;\x0d\n  if (state === kWeak && !ctx.sorted) {\x0d\n    // Sort all entries to have a halfway reliable output (if more entries than\x0d\n    // retrieved ones exist\x2C we can not reliably return the same output) if the\x0d\n    // output is not sorted anyway.\x0d\n    ArrayPrototypeSort(output);\x0d\n  }\x0d\n  const remaining = entries.length - maxLength;\x0d\n  if (remaining > 0) {\x0d\n    ArrayPrototypePush(output\x2C remainingText(remaining));\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatMapIterInner(ctx\x2C recurseTimes\x2C entries\x2C state) {\x0d\n  const maxArrayLength = MathMax(ctx.maxArrayLength\x2C 0);\x0d\n  // Entries exist as [key1\x2C val1\x2C key2\x2C val2\x2C ...]\x0d\n  const len = entries.length / 2;\x0d\n  const remaining = len - maxArrayLength;\x0d\n  const maxLength = MathMin(maxArrayLength\x2C len);\x0d\n  const output = new Array(maxLength);\x0d\n  let i = 0;\x0d\n  ctx.indentationLvl += 2;\x0d\n  if (state === kWeak) {\x0d\n    for (; i < maxLength; i++) {\x0d\n      const pos = i * 2;\x0d\n      output[i] =\x0d\n        `${formatValue(ctx\x2C entries[pos]\x2C recurseTimes)} => ${formatValue(ctx\x2C entries[pos + 1]\x2C recurseTimes)}`;\x0d\n    }\x0d\n    // Sort all entries to have a halfway reliable output (if more entries than\x0d\n    // retrieved ones exist\x2C we can not reliably return the same output) if the\x0d\n    // output is not sorted anyway.\x0d\n    if (!ctx.sorted)\x0d\n      ArrayPrototypeSort(output);\x0d\n  } else {\x0d\n    for (; i < maxLength; i++) {\x0d\n      const pos = i * 2;\x0d\n      const res = [\x0d\n        formatValue(ctx\x2C entries[pos]\x2C recurseTimes)\x2C\x0d\n        formatValue(ctx\x2C entries[pos + 1]\x2C recurseTimes)\x2C\x0d\n      ];\x0d\n      output[i] = reduceToSingleString(\x0d\n        ctx\x2C res\x2C ''\x2C ['['\x2C ']']\x2C kArrayExtrasType\x2C recurseTimes);\x0d\n    }\x0d\n  }\x0d\n  ctx.indentationLvl -= 2;\x0d\n  if (remaining > 0) {\x0d\n    ArrayPrototypePush(output\x2C remainingText(remaining));\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatWeakCollection(ctx) {\x0d\n  return [ctx.stylize('<items unknown>'\x2C 'special')];\x0d\n}\x0d\n\x0d\nfunction formatWeakSet(ctx\x2C value\x2C recurseTimes) {\x0d\n  const entries = previewEntries(value);\x0d\n  return formatSetIterInner(ctx\x2C recurseTimes\x2C entries\x2C kWeak);\x0d\n}\x0d\n\x0d\nfunction formatWeakMap(ctx\x2C value\x2C recurseTimes) {\x0d\n  const entries = previewEntries(value);\x0d\n  return formatMapIterInner(ctx\x2C recurseTimes\x2C entries\x2C kWeak);\x0d\n}\x0d\n\x0d\nfunction formatIterator(braces\x2C ctx\x2C value\x2C recurseTimes) {\x0d\n  const { 0: entries\x2C 1: isKeyValue } = previewEntries(value\x2C true);\x0d\n  if (isKeyValue) {\x0d\n    // Mark entry iterators as such.\x0d\n    braces[0] = RegExpPrototypeSymbolReplace(/ Iterator] {$/\x2C braces[0]\x2C ' Entries] {');\x0d\n    return formatMapIterInner(ctx\x2C recurseTimes\x2C entries\x2C kMapEntries);\x0d\n  }\x0d\n\x0d\n  return formatSetIterInner(ctx\x2C recurseTimes\x2C entries\x2C kIterator);\x0d\n}\x0d\n\x0d\nfunction formatPromise(ctx\x2C value\x2C recurseTimes) {\x0d\n  let output;\x0d\n  const { 0: state\x2C 1: result } = getPromiseDetails(value);\x0d\n  if (state === kPending) {\x0d\n    output = [ctx.stylize('<pending>'\x2C 'special')];\x0d\n  } else {\x0d\n    ctx.indentationLvl += 2;\x0d\n    const str = formatValue(ctx\x2C result\x2C recurseTimes);\x0d\n    ctx.indentationLvl -= 2;\x0d\n    output = [\x0d\n      state === kRejected ?\x0d\n        `${ctx.stylize('<rejected>'\x2C 'special')} ${str}` :\x0d\n        str\x2C\x0d\n    ];\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatProperty(ctx\x2C value\x2C recurseTimes\x2C key\x2C type\x2C desc\x2C\x0d\n                        original = value) {\x0d\n  let name\x2C str;\x0d\n  let extra = ' ';\x0d\n  desc = desc || ObjectGetOwnPropertyDescriptor(value\x2C key) ||\x0d\n    { value: value[key]\x2C enumerable: true };\x0d\n  if (desc.value !== undefined) {\x0d\n    const diff = (ctx.compact !== true || type !== kObjectType) ? 2 : 3;\x0d\n    ctx.indentationLvl += diff;\x0d\n    str = formatValue(ctx\x2C desc.value\x2C recurseTimes);\x0d\n    if (diff === 3 && ctx.breakLength < getStringWidth(str\x2C ctx.colors)) {\x0d\n      extra = `\\n${StringPrototypeRepeat(' '\x2C ctx.indentationLvl)}`;\x0d\n    }\x0d\n    ctx.indentationLvl -= diff;\x0d\n  } else if (desc.get !== undefined) {\x0d\n    const label = desc.set !== undefined ? 'Getter/Setter' : 'Getter';\x0d\n    const s = ctx.stylize;\x0d\n    const sp = 'special';\x0d\n    if (ctx.getters && (ctx.getters === true ||\x0d\n          (ctx.getters === 'get' && desc.set === undefined) ||\x0d\n          (ctx.getters === 'set' && desc.set !== undefined))) {\x0d\n      try {\x0d\n        const tmp = FunctionPrototypeCall(desc.get\x2C original);\x0d\n        ctx.indentationLvl += 2;\x0d\n        if (tmp === null) {\x0d\n          str = `${s(`[${label}:`\x2C sp)} ${s('null'\x2C 'null')}${s(']'\x2C sp)}`;\x0d\n        } else if (typeof tmp === 'object') {\x0d\n          str = `${s(`[${label}]`\x2C sp)} ${formatValue(ctx\x2C tmp\x2C recurseTimes)}`;\x0d\n        } else {\x0d\n          const primitive = formatPrimitive(s\x2C tmp\x2C ctx);\x0d\n          str = `${s(`[${label}:`\x2C sp)} ${primitive}${s(']'\x2C sp)}`;\x0d\n        }\x0d\n        ctx.indentationLvl -= 2;\x0d\n      } catch (err) {\x0d\n        const message = `<Inspection threw (${err.message})>`;\x0d\n        str = `${s(`[${label}:`\x2C sp)} ${message}${s(']'\x2C sp)}`;\x0d\n      }\x0d\n    } else {\x0d\n      str = ctx.stylize(`[${label}]`\x2C sp);\x0d\n    }\x0d\n  } else if (desc.set !== undefined) {\x0d\n    str = ctx.stylize('[Setter]'\x2C 'special');\x0d\n  } else {\x0d\n    str = ctx.stylize('undefined'\x2C 'undefined');\x0d\n  }\x0d\n  if (type === kArrayType) {\x0d\n    return str;\x0d\n  }\x0d\n  if (typeof key === 'symbol') {\x0d\n    const tmp = RegExpPrototypeSymbolReplace(\x0d\n      strEscapeSequencesReplacer\x2C\x0d\n      SymbolPrototypeToString(key)\x2C\x0d\n      escapeFn\x2C\x0d\n    );\x0d\n    name = `[${ctx.stylize(tmp\x2C 'symbol')}]`;\x0d\n  } else if (key === '__proto__') {\x0d\n    name = "['__proto__']";\x0d\n  } else if (desc.enumerable === false) {\x0d\n    const tmp = RegExpPrototypeSymbolReplace(\x0d\n      strEscapeSequencesReplacer\x2C\x0d\n      key\x2C\x0d\n      escapeFn\x2C\x0d\n    );\x0d\n    name = `[${tmp}]`;\x0d\n  } else if (RegExpPrototypeExec(keyStrRegExp\x2C key) !== null) {\x0d\n    name = ctx.stylize(key\x2C 'name');\x0d\n  } else {\x0d\n    name = ctx.stylize(strEscape(key)\x2C 'string');\x0d\n  }\x0d\n  return `${name}:${extra}${str}`;\x0d\n}\x0d\n\x0d\nfunction isBelowBreakLength(ctx\x2C output\x2C start\x2C base) {\x0d\n  // Each entry is separated by at least a comma. Thus\x2C we start with a total\x0d\n  // length of at least `output.length`. In addition\x2C some cases have a\x0d\n  // whitespace in-between each other that is added to the total as well.\x0d\n  // TODO(BridgeAR): Add unicode support. Use the readline getStringWidth\x0d\n  // function. Check the performance overhead and make it an opt-in in case it's\x0d\n  // significant.\x0d\n  let totalLength = output.length + start;\x0d\n  if (totalLength + output.length > ctx.breakLength)\x0d\n    return false;\x0d\n  for (let i = 0; i < output.length; i++) {\x0d\n    if (ctx.colors) {\x0d\n      totalLength += removeColors(output[i]).length;\x0d\n    } else {\x0d\n      totalLength += output[i].length;\x0d\n    }\x0d\n    if (totalLength > ctx.breakLength) {\x0d\n      return false;\x0d\n    }\x0d\n  }\x0d\n  // Do not line up properties on the same line if `base` contains line breaks.\x0d\n  return base === '' || !StringPrototypeIncludes(base\x2C '\\n');\x0d\n}\x0d\n\x0d\nfunction reduceToSingleString(\x0d\n  ctx\x2C output\x2C base\x2C braces\x2C extrasType\x2C recurseTimes\x2C value) {\x0d\n  if (ctx.compact !== true) {\x0d\n    if (typeof ctx.compact === 'number' && ctx.compact >= 1) {\x0d\n      // Memorize the original output length. In case the output is grouped\x2C\x0d\n      // prevent lining up the entries on a single line.\x0d\n      const entries = output.length;\x0d\n      // Group array elements together if the array contains at least six\x0d\n      // separate entries.\x0d\n      if (extrasType === kArrayExtrasType && entries > 6) {\x0d\n        output = groupArrayElements(ctx\x2C output\x2C value);\x0d\n      }\x0d\n      // `ctx.currentDepth` is set to the most inner depth of the currently\x0d\n      // inspected object part while `recurseTimes` is the actual current depth\x0d\n      // that is inspected.\x0d\n      //\x0d\n      // Example:\x0d\n      //\x0d\n      // const a = { first: [ 1\x2C 2\x2C 3 ]\x2C second: { inner: [ 1\x2C 2\x2C 3 ] } }\x0d\n      //\x0d\n      // The deepest depth of `a` is 2 (a.second.inner) and `a.first` has a max\x0d\n      // depth of 1.\x0d\n      //\x0d\n      // Consolidate all entries of the local most inner depth up to\x0d\n      // `ctx.compact`\x2C as long as the properties are smaller than\x0d\n      // `ctx.breakLength`.\x0d\n      if (ctx.currentDepth - recurseTimes < ctx.compact &&\x0d\n          entries === output.length) {\x0d\n        // Line up all entries on a single line in case the entries do not\x0d\n        // exceed `breakLength`. Add 10 as constant to start next to all other\x0d\n        // factors that may reduce `breakLength`.\x0d\n        const start = output.length + ctx.indentationLvl +\x0d\n                      braces[0].length + base.length + 10;\x0d\n        if (isBelowBreakLength(ctx\x2C output\x2C start\x2C base)) {\x0d\n          const joinedOutput = join(output\x2C '\x2C ');\x0d\n          if (!StringPrototypeIncludes(joinedOutput\x2C '\\n')) {\x0d\n            return `${base ? `${base} ` : ''}${braces[0]} ${joinedOutput}` +\x0d\n              ` ${braces[1]}`;\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    // Line up each entry on an individual line.\x0d\n    const indentation = `\\n${StringPrototypeRepeat(' '\x2C ctx.indentationLvl)}`;\x0d\n    return `${base ? `${base} ` : ''}${braces[0]}${indentation}  ` +\x0d\n      `${join(output\x2C `\x2C${indentation}  `)}${indentation}${braces[1]}`;\x0d\n  }\x0d\n  // Line up all entries on a single line in case the entries do not exceed\x0d\n  // `breakLength`.\x0d\n  if (isBelowBreakLength(ctx\x2C output\x2C 0\x2C base)) {\x0d\n    return `${braces[0]}${base ? ` ${base}` : ''} ${join(output\x2C '\x2C ')} ` +\x0d\n      braces[1];\x0d\n  }\x0d\n  const indentation = StringPrototypeRepeat(' '\x2C ctx.indentationLvl);\x0d\n  // If the opening "brace" is too large\x2C like in the case of "Set {"\x2C\x0d\n  // we need to force the first item to be on the next line or the\x0d\n  // items will not line up correctly.\x0d\n  const ln = base === '' && braces[0].length === 1 ?\x0d\n    ' ' : `${base ? ` ${base}` : ''}\\n${indentation}  `;\x0d\n  // Line up each entry on an individual line.\x0d\n  return `${braces[0]}${ln}${join(output\x2C `\x2C\\n${indentation}  `)} ${braces[1]}`;\x0d\n}\x0d\n\x0d\nfunction hasBuiltInToString(value) {\x0d\n  // Prevent triggering proxy traps.\x0d\n  const getFullProxy = false;\x0d\n  const proxyTarget = getProxyDetails(value\x2C getFullProxy);\x0d\n  if (proxyTarget !== undefined) {\x0d\n    if (proxyTarget === null) {\x0d\n      return true;\x0d\n    }\x0d\n    value = proxyTarget;\x0d\n  }\x0d\n\x0d\n  // Count objects that have no `toString` function as built-in.\x0d\n  if (typeof value.toString !== 'function') {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  // The object has a own `toString` property. Thus it's not not a built-in one.\x0d\n  if (ObjectPrototypeHasOwnProperty(value\x2C 'toString')) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  // Find the object that has the `toString` property as own property in the\x0d\n  // prototype chain.\x0d\n  let pointer = value;\x0d\n  do {\x0d\n    pointer = ObjectGetPrototypeOf(pointer);\x0d\n  } while (!ObjectPrototypeHasOwnProperty(pointer\x2C 'toString'));\x0d\n\x0d\n  // Check closer if the object is a built-in.\x0d\n  const descriptor = ObjectGetOwnPropertyDescriptor(pointer\x2C 'constructor');\x0d\n  return descriptor !== undefined &&\x0d\n    typeof descriptor.value === 'function' &&\x0d\n    builtInObjects.has(descriptor.value.name);\x0d\n}\x0d\n\x0d\nconst firstErrorLine = (error) => StringPrototypeSplit(error.message\x2C '\\n'\x2C 1)[0];\x0d\nlet CIRCULAR_ERROR_MESSAGE;\x0d\nfunction tryStringify(arg) {\x0d\n  try {\x0d\n    return JSONStringify(arg);\x0d\n  } catch (err) {\x0d\n    // Populate the circular error message lazily\x0d\n    if (!CIRCULAR_ERROR_MESSAGE) {\x0d\n      try {\x0d\n        const a = {};\x0d\n        a.a = a;\x0d\n        JSONStringify(a);\x0d\n      } catch (circularError) {\x0d\n        CIRCULAR_ERROR_MESSAGE = firstErrorLine(circularError);\x0d\n      }\x0d\n    }\x0d\n    if (err.name === 'TypeError' &&\x0d\n        firstErrorLine(err) === CIRCULAR_ERROR_MESSAGE) {\x0d\n      return '[Circular]';\x0d\n    }\x0d\n    throw err;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction format(...args) {\x0d\n  return formatWithOptionsInternal(undefined\x2C args);\x0d\n}\x0d\n\x0d\nfunction formatWithOptions(inspectOptions\x2C ...args) {\x0d\n  validateObject(inspectOptions\x2C 'inspectOptions'\x2C kValidateObjectAllowArray);\x0d\n  return formatWithOptionsInternal(inspectOptions\x2C args);\x0d\n}\x0d\n\x0d\nfunction formatNumberNoColor(number\x2C options) {\x0d\n  return formatNumber(\x0d\n    stylizeNoColor\x2C\x0d\n    number\x2C\x0d\n    options?.numericSeparator ?? inspectDefaultOptions.numericSeparator\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction formatBigIntNoColor(bigint\x2C options) {\x0d\n  return formatBigInt(\x0d\n    stylizeNoColor\x2C\x0d\n    bigint\x2C\x0d\n    options?.numericSeparator ?? inspectDefaultOptions.numericSeparator\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction formatWithOptionsInternal(inspectOptions\x2C args) {\x0d\n  const first = args[0];\x0d\n  let a = 0;\x0d\n  let str = '';\x0d\n  let join = '';\x0d\n\x0d\n  if (typeof first === 'string') {\x0d\n    if (args.length === 1) {\x0d\n      return first;\x0d\n    }\x0d\n    let tempStr;\x0d\n    let lastPos = 0;\x0d\n\x0d\n    for (let i = 0; i < first.length - 1; i++) {\x0d\n      if (StringPrototypeCharCodeAt(first\x2C i) === 37) { // '%'\x0d\n        const nextChar = StringPrototypeCharCodeAt(first\x2C ++i);\x0d\n        if (a + 1 !== args.length) {\x0d\n          switch (nextChar) {\x0d\n            case 115: { // 's'\x0d\n              const tempArg = args[++a];\x0d\n              if (typeof tempArg === 'number') {\x0d\n                tempStr = formatNumberNoColor(tempArg\x2C inspectOptions);\x0d\n              } else if (typeof tempArg === 'bigint') {\x0d\n                tempStr = formatBigIntNoColor(tempArg\x2C inspectOptions);\x0d\n              } else if (typeof tempArg !== 'object' ||\x0d\n                         tempArg === null ||\x0d\n                         !hasBuiltInToString(tempArg)) {\x0d\n                tempStr = String(tempArg);\x0d\n              } else {\x0d\n                tempStr = inspect(tempArg\x2C {\x0d\n                  ...inspectOptions\x2C\x0d\n                  compact: 3\x2C\x0d\n                  colors: false\x2C\x0d\n                  depth: 0\x2C\x0d\n                });\x0d\n              }\x0d\n              break;\x0d\n            }\x0d\n            case 106: // 'j'\x0d\n              tempStr = tryStringify(args[++a]);\x0d\n              break;\x0d\n            case 100: { // 'd'\x0d\n              const tempNum = args[++a];\x0d\n              if (typeof tempNum === 'bigint') {\x0d\n                tempStr = formatBigIntNoColor(tempNum\x2C inspectOptions);\x0d\n              } else if (typeof tempNum === 'symbol') {\x0d\n                tempStr = 'NaN';\x0d\n              } else {\x0d\n                tempStr = formatNumberNoColor(Number(tempNum)\x2C inspectOptions);\x0d\n              }\x0d\n              break;\x0d\n            }\x0d\n            case 79: // 'O'\x0d\n              tempStr = inspect(args[++a]\x2C inspectOptions);\x0d\n              break;\x0d\n            case 111: // 'o'\x0d\n              tempStr = inspect(args[++a]\x2C {\x0d\n                ...inspectOptions\x2C\x0d\n                showHidden: true\x2C\x0d\n                showProxy: true\x2C\x0d\n                depth: 4\x2C\x0d\n              });\x0d\n              break;\x0d\n            case 105: { // 'i'\x0d\n              const tempInteger = args[++a];\x0d\n              if (typeof tempInteger === 'bigint') {\x0d\n                tempStr = formatBigIntNoColor(tempInteger\x2C inspectOptions);\x0d\n              } else if (typeof tempInteger === 'symbol') {\x0d\n                tempStr = 'NaN';\x0d\n              } else {\x0d\n                tempStr = formatNumberNoColor(\x0d\n                  NumberParseInt(tempInteger)\x2C inspectOptions);\x0d\n              }\x0d\n              break;\x0d\n            }\x0d\n            case 102: { // 'f'\x0d\n              const tempFloat = args[++a];\x0d\n              if (typeof tempFloat === 'symbol') {\x0d\n                tempStr = 'NaN';\x0d\n              } else {\x0d\n                tempStr = formatNumberNoColor(\x0d\n                  NumberParseFloat(tempFloat)\x2C inspectOptions);\x0d\n              }\x0d\n              break;\x0d\n            }\x0d\n            case 99: // 'c'\x0d\n              a += 1;\x0d\n              tempStr = '';\x0d\n              break;\x0d\n            case 37: // '%'\x0d\n              str += StringPrototypeSlice(first\x2C lastPos\x2C i);\x0d\n              lastPos = i + 1;\x0d\n              continue;\x0d\n            default: // Any other character is not a correct placeholder\x0d\n              continue;\x0d\n          }\x0d\n          if (lastPos !== i - 1) {\x0d\n            str += StringPrototypeSlice(first\x2C lastPos\x2C i - 1);\x0d\n          }\x0d\n          str += tempStr;\x0d\n          lastPos = i + 1;\x0d\n        } else if (nextChar === 37) {\x0d\n          str += StringPrototypeSlice(first\x2C lastPos\x2C i);\x0d\n          lastPos = i + 1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    if (lastPos !== 0) {\x0d\n      a++;\x0d\n      join = ' ';\x0d\n      if (lastPos < first.length) {\x0d\n        str += StringPrototypeSlice(first\x2C lastPos);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  while (a < args.length) {\x0d\n    const value = args[a];\x0d\n    str += join;\x0d\n    str += typeof value !== 'string' ? inspect(value\x2C inspectOptions) : value;\x0d\n    join = ' ';\x0d\n    a++;\x0d\n  }\x0d\n  return str;\x0d\n}\x0d\n\x0d\nfunction isZeroWidthCodePoint(code) {\x0d\n  return code <= 0x1F || // C0 control codes\x0d\n    (code >= 0x7F && code <= 0x9F) || // C1 control codes\x0d\n    (code >= 0x300 && code <= 0x36F) || // Combining Diacritical Marks\x0d\n    (code >= 0x200B && code <= 0x200F) || // Modifying Invisible Characters\x0d\n    // Combining Diacritical Marks for Symbols\x0d\n    (code >= 0x20D0 && code <= 0x20FF) ||\x0d\n    (code >= 0xFE00 && code <= 0xFE0F) || // Variation Selectors\x0d\n    (code >= 0xFE20 && code <= 0xFE2F) || // Combining Half Marks\x0d\n    (code >= 0xE0100 && code <= 0xE01EF); // Variation Selectors\x0d\n}\x0d\n\x0d\nif (internalBinding('config').hasIntl) {\x0d\n  const icu = internalBinding('icu');\x0d\n  // icu.getStringWidth(string\x2C ambiguousAsFullWidth\x2C expandEmojiSequence)\x0d\n  // Defaults: ambiguousAsFullWidth = false; expandEmojiSequence = true;\x0d\n  // TODO(BridgeAR): Expose the options to the user. That is probably the\x0d\n  // best thing possible at the moment\x2C since it's difficult to know what\x0d\n  // the receiving end supports.\x0d\n  getStringWidth = function getStringWidth(str\x2C removeControlChars = true) {\x0d\n    let width = 0;\x0d\n\x0d\n    if (removeControlChars) {\x0d\n      str = stripVTControlCharacters(str);\x0d\n    }\x0d\n    for (let i = 0; i < str.length; i++) {\x0d\n      // Try to avoid calling into C++ by first handling the ASCII portion of\x0d\n      // the string. If it is fully ASCII\x2C we skip the C++ part.\x0d\n      const code = str.charCodeAt(i);\x0d\n      if (code >= 127) {\x0d\n        width += icu.getStringWidth(StringPrototypeNormalize(StringPrototypeSlice(str\x2C i)\x2C 'NFC'));\x0d\n        break;\x0d\n      }\x0d\n      width += code >= 32 ? 1 : 0;\x0d\n    }\x0d\n    return width;\x0d\n  };\x0d\n} else {\x0d\n  /**\x0d\n   * Returns the number of columns required to display the given string.\x0d\n   */\x0d\n  getStringWidth = function getStringWidth(str\x2C removeControlChars = true) {\x0d\n    let width = 0;\x0d\n\x0d\n    if (removeControlChars)\x0d\n      str = stripVTControlCharacters(str);\x0d\n    str = StringPrototypeNormalize(str\x2C 'NFC');\x0d\n    for (const char of new SafeStringIterator(str)) {\x0d\n      const code = StringPrototypeCodePointAt(char\x2C 0);\x0d\n      if (isFullWidthCodePoint(code)) {\x0d\n        width += 2;\x0d\n      } else if (!isZeroWidthCodePoint(code)) {\x0d\n        width++;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return width;\x0d\n  };\x0d\n\x0d\n  /**\x0d\n   * Returns true if the character represented by a given\x0d\n   * Unicode code point is full-width. Otherwise returns false.\x0d\n   */\x0d\n  const isFullWidthCodePoint = (code) => {\x0d\n    // Code points are partially derived from:\x0d\n    // https://www.unicode.org/Public/UNIDATA/EastAsianWidth.txt\x0d\n    return code >= 0x1100 && (\x0d\n      code <= 0x115f ||  // Hangul Jamo\x0d\n      code === 0x2329 || // LEFT-POINTING ANGLE BRACKET\x0d\n      code === 0x232a || // RIGHT-POINTING ANGLE BRACKET\x0d\n      // CJK Radicals Supplement .. Enclosed CJK Letters and Months\x0d\n      (code >= 0x2e80 && code <= 0x3247 && code !== 0x303f) ||\x0d\n      // Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A\x0d\n      (code >= 0x3250 && code <= 0x4dbf) ||\x0d\n      // CJK Unified Ideographs .. Yi Radicals\x0d\n      (code >= 0x4e00 && code <= 0xa4c6) ||\x0d\n      // Hangul Jamo Extended-A\x0d\n      (code >= 0xa960 && code <= 0xa97c) ||\x0d\n      // Hangul Syllables\x0d\n      (code >= 0xac00 && code <= 0xd7a3) ||\x0d\n      // CJK Compatibility Ideographs\x0d\n      (code >= 0xf900 && code <= 0xfaff) ||\x0d\n      // Vertical Forms\x0d\n      (code >= 0xfe10 && code <= 0xfe19) ||\x0d\n      // CJK Compatibility Forms .. Small Form Variants\x0d\n      (code >= 0xfe30 && code <= 0xfe6b) ||\x0d\n      // Halfwidth and Fullwidth Forms\x0d\n      (code >= 0xff01 && code <= 0xff60) ||\x0d\n      (code >= 0xffe0 && code <= 0xffe6) ||\x0d\n      // Kana Supplement\x0d\n      (code >= 0x1b000 && code <= 0x1b001) ||\x0d\n      // Enclosed Ideographic Supplement\x0d\n      (code >= 0x1f200 && code <= 0x1f251) ||\x0d\n      // Miscellaneous Symbols and Pictographs 0x1f300 - 0x1f5ff\x0d\n      // Emoticons 0x1f600 - 0x1f64f\x0d\n      (code >= 0x1f300 && code <= 0x1f64f) ||\x0d\n      // CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane\x0d\n      (code >= 0x20000 && code <= 0x3fffd)\x0d\n    );\x0d\n  };\x0d\n\x0d\n}\x0d\n\x0d\n/**\x0d\n * Remove all VT control characters. Use to estimate displayed string width.\x0d\n */\x0d\nfunction stripVTControlCharacters(str) {\x0d\n  validateString(str\x2C 'str');\x0d\n\x0d\n  return RegExpPrototypeSymbolReplace(ansi\x2C str\x2C '');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  identicalSequenceRange\x2C\x0d\n  inspect\x2C\x0d\n  inspectDefaultOptions\x2C\x0d\n  format\x2C\x0d\n  formatWithOptions\x2C\x0d\n  getStringWidth\x2C\x0d\n  stripVTControlCharacters\x2C\x0d\n  isZeroWidthCodePoint\x2C\x0d\n};\x0d\n
code-source-info,0x10fd41bbf8c,21,74795,74964,C0O74795C8O74826C18O74875C24O74826C29O74906C32O74913C37O74961,,
code-creation,JS,10,171753,0x21de9b45e6c,251, node:internal/validators:240:3,0x1d9b72433b8,~
code-source-info,0x21de9b45e6c,15,6822,7870,C12O6846C19O6877C21O6893C23O6889C28O6923C34O6945C37O6945C43O6977C59O6983C64O6977C65O7050C71O7092C87O7098C92O7092C95O7201C102O7231C107O7242C111O7258C117O7308C133O7314C138O7308C139O7402C146O7429C151O7440C155O7456C159O7476C162O7476C168O7508C184O7514C189O7508C190O7605C197O7635C202O7646C206O7680C210O7703C218O7736C222O7767C227O7795C243O7801C248O7795C250O7869,,
code-creation,JS,10,172036,0x21de9b46204,762,formatWithOptionsInternal node:internal/util/inspect:2179:35,0x1d9b724d300,~
code-source-info,0x21de9b
code-creation,JS,10,172348,0x21de9b46904,269,value node:internal/console/constructor:276:20,0x1d9b726a7f0,~
code-source-info,0x21de9b46904,46,8352,9834,C0O8410C5O8452C7O8457C9O8456C13O8499C15O8516C17O8512C21O8550C23O8567C29O8582C34O8619C38O8645C44O8672C49O8718C55O8725C60O8743C68O8747C75O8799C91O8857C99O8808C106O8893C108O8914C113O8940C123O8965C128O9007C133O9007C138O9021C145O9346C153O9346C160O9369C165O9394C176O9394C182O9433C187O9433C206O9633C216O9637C222O9673C224O9673C238O9781C239O9788C250O9788C268O9833,,
code-creation,JS,10,172495,0x21de9b46bac,127,listenerCount node:events:853:23,0x1d9b7250620,~
code-source-info,0x21de9b46bac,23,25271,25984,C0O25313C5O25327C7O25379C9O25385C13O25400C17O25447C22O25480C24O25496C29O25538C33O25523C43O25555C44O25574C46O25583C47O25596C51O25635C56O25683C58O25710C60O25728C65O25738C67O25738C72O25761C74O25775C80O25779C87O25805C91O25809C98O25818C103O25847C108O25744C113O25697C117O25894C119O25910C120O25947C124O25954C125O25972C126O25981,,
code-creation,JS,10,172588,0x21de9b46d54,39,once node:events:652:44,0x1d9b7250320,~
code-source-info,0x21de9b46d54,23,19609,19727,C0O19631C3O19631C7O19666C24O19675C30O19666C36O19712C38O19724,,
code-creation,JS,10,172669,0x21de9b46f34,60,_onceWrap node:events:638:19,0x1d9b72502c8,~
code-source-info,0x21de9b46f34,23,19168,19397,C0O19212C6O19236C12O19247C18O19255C24O19261C31O19292C34O19304C39O19304C45O19320C47O19337C51O19352C53O19365C57O19379C59O19394,,
code-creation,JS,10,172798,0x21de9b472cc,42,Writable.write node:internal/streams/writable:496:36,0x10fd41811b8,~
code-source-info,0x21de9b472cc,102,15754,15944,C0O15781C11O15844C14O15864C17O15891C32O15898C41O15941,,
code-creation,JS,10,172930,0x21de9b474e4,401,_write node:internal/streams/writable:445:16,0x9b20b7f530,~
code-source-info,0x21de9b474e
code-creation,JS,10,173153,0x21de9b4792c,425,writeOrBuffer node:internal/streams/writable:540:23,0x9b20b7f588,~
code-source-info,0x21de9b4792c
code-creation,JS,10,173337,0x21de9b47cbc,61,set node:internal/streams/writable:254:8,0x9b20b7fd18,~
code-source-info,0x21de9b47cbc,102,8462,8632,C0O8479C4O8501C6O8506C11O8521C15O8539C17O8544C26O8555C31O8552C37O8590C39O8595C48O8607C50O8606C55O8603C60O8631,,
code-creation,JS,10,173405,0x21de9b47e3c,26,Socket._write node:net:963:35,0x9b20b49f00,~
code-source-info,0x21de9b47e3c,86,25990,26065,C0O26021C19O26021C25O26064,,
code-creation,JS,10,173493,0x21de9b480e4,217,Socket._writeGeneric node:net:921:42,0x9b20b49da8,~
code-source-info,0x21de9b480e4,86,24907,25845,C0O24907C21O25113C37O25132C41O25150C45O25163C49O25185C53O25207C66O25207C72O25440C83O25440C89O25469C90O25476C91O25485C92O25503C96O25514C98O25536C102O25557C108O25573C115O25580C118O25576C124O25573C128O25607C129O25620C130O25636C135O25636C139O25660C141O25668C145O25685C161O25691C169O25735C188O25741C194O25792C200O25804C204O25809C207O25836C211O25830C216O25844,,
code-creation,JS,10,173606,0x21de9b48354,44,_unrefTimer node:net:505:52,0x125aa7bfd38,~
code-source-info,0x21de9b48354,86,14386,14501,C0O14407C5O14415C9O14447C11O14453C13O14452C18O14471C20O14472C24O14483C29O14483C33O14431C38O14394C43O14500,,
code-creation,JS,10,173688,0x21de9b48464,55,writeGeneric node:internal/stream_base_commons:147:22,0x10fd4192ab8,~
code-source-info,0x21de9b48464,106,3750,3940,C0O3794C5O3815C7O3814C11O3794C17O3845C29O3845C35O3887C47O3887C52O3926C54O3937,,
code-creation,JS,10,173749,0x21de9b48e8c,47,createWriteWrap node:internal/stream_base_commons:109:25,0x10fd4192a08,~
code-source-info,0x21de9b48e8c,106,2834,3059,C0O2870C5O2870C11O2892C13O2903C17O2916C19O2931C23O2953C24O2963C28O2975C29O2985C33O2993C34O3004C38O3015C40O3028C44O3045C46O3056,,
code-creation,JS,10,173870,0x21de9b4928c,215,handleWriteReq node:internal/stream_base_commons:45:24,0x10fd4192958,~
code-source-info,0x21de9b4928c,106,1221,2086,C0O1256C5O1277C80O1350C85O1350C92O1381C99O1401C101O1400C106O1431C108O1442C112O1457C114O1468C115O1537C120O1537C126O1566C127O1625C132O1625C138O1652C139O1693C144O1693C150O1721C151O1823C156O1823C162O1850C163O1894C168O1901C173O1901C180O1949C185O1949C192O1982C199O2002C201O2001C206O2032C208O2043C212O2060C214O2071,,
code-creation,JS,10,174132,0x21de9b494d4,91,afterWriteDispatched node:internal/stream_base_commons:155:30,0x10fd4192b10,~
code-source-info,0x21de9b494d4,106,3973,4261,C0O3993C2O4005C7O4021C9O4020C12O4003C16O4040C21O4070C23O4069C27O4050C31O4096C32O4104C37O4116C39O4130C45O4163C55O4126C61O4123C65O4171C66O4186C72O4206C80O4242C85O4242C90O4260,,
code-creation,JS,10,174287,0x21de9b49784,729,onwrite node:internal/streams/writable:607:17,0x9b20b7f690,~
code-source-info,0x21de9b
code-creation,JS,10,174513,0x21de9b49fb4,371,nextTick node:internal/process/task_queues:103:18,0x1d9b72636a8,~
script-source,35,node:internal/process/task_queues,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  // For easy access to the nextTick state in the C++ land\x2C\x0d\n  // and to avoid unnecessary calls into JS land.\x0d\n  tickInfo\x2C\x0d\n  // Used to run V8's micro task queue.\x0d\n  runMicrotasks\x2C\x0d\n  setTickCallback\x2C\x0d\n  enqueueMicrotask\x2C\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst {\x0d\n  setHasRejectionToWarn\x2C\x0d\n  hasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x2C\x0d\n} = require('internal/process/promises');\x0d\n\x0d\nconst {\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  newAsyncId\x2C\x0d\n  initHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit\x2C\x0d\n  emitBefore\x2C\x0d\n  emitAfter\x2C\x0d\n  emitDestroy\x2C\x0d\n  symbols: { async_id_symbol\x2C trigger_async_id_symbol }\x2C\x0d\n} = require('internal/async_hooks');\x0d\nconst FixedQueue = require('internal/fixed_queue');\x0d\n\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst { AsyncResource } = require('async_hooks');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasTickScheduled = 0;\x0d\n\x0d\nfunction hasTickScheduled() {\x0d\n  return tickInfo[kHasTickScheduled] === 1;\x0d\n}\x0d\n\x0d\nfunction setHasTickScheduled(value) {\x0d\n  tickInfo[kHasTickScheduled] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nconst queue = new FixedQueue();\x0d\n\x0d\n// Should be in sync with RunNextTicksNative in node_task_queue.cc\x0d\nfunction runNextTicks() {\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    runMicrotasks();\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    return;\x0d\n\x0d\n  processTicksAndRejections();\x0d\n}\x0d\n\x0d\nfunction processTicksAndRejections() {\x0d\n  let tock;\x0d\n  do {\x0d\n    while ((tock = queue.shift()) !== null) {\x0d\n      const asyncId = tock[async_id_symbol];\x0d\n      emitBefore(asyncId\x2C tock[trigger_async_id_symbol]\x2C tock);\x0d\n\x0d\n      try {\x0d\n        const callback = tock.callback;\x0d\n        if (tock.args === undefined) {\x0d\n          callback();\x0d\n        } else {\x0d\n          const args = tock.args;\x0d\n          switch (args.length) {\x0d\n            case 1: callback(args[0]); break;\x0d\n            case 2: callback(args[0]\x2C args[1]); break;\x0d\n            case 3: callback(args[0]\x2C args[1]\x2C args[2]); break;\x0d\n            case 4: callback(args[0]\x2C args[1]\x2C args[2]\x2C args[3]); break;\x0d\n            default: callback(...args);\x0d\n          }\x0d\n        }\x0d\n      } finally {\x0d\n        if (destroyHooksExist())\x0d\n          emitDestroy(asyncId);\x0d\n      }\x0d\n\x0d\n      emitAfter(asyncId);\x0d\n    }\x0d\n    runMicrotasks();\x0d\n  } while (!queue.isEmpty() || processPromiseRejections());\x0d\n  setHasTickScheduled(false);\x0d\n  setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\n// `nextTick()` will not enqueue any callback when the process is about to\x0d\n// exit since the callback would not have a chance to be executed.\x0d\nfunction nextTick(callback) {\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  if (process._exiting)\x0d\n    return;\x0d\n\x0d\n  let args;\x0d\n  switch (arguments.length) {\x0d\n    case 1: break;\x0d\n    case 2: args = [arguments[1]]; break;\x0d\n    case 3: args = [arguments[1]\x2C arguments[2]]; break;\x0d\n    case 4: args = [arguments[1]\x2C arguments[2]\x2C arguments[3]]; break;\x0d\n    default:\x0d\n      args = new Array(arguments.length - 1);\x0d\n      for (let i = 1; i < arguments.length; i++)\x0d\n        args[i - 1] = arguments[i];\x0d\n  }\x0d\n\x0d\n  if (queue.isEmpty())\x0d\n    setHasTickScheduled(true);\x0d\n  const asyncId = newAsyncId();\x0d\n  const triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  const tickObject = {\x0d\n    [async_id_symbol]: asyncId\x2C\x0d\n    [trigger_async_id_symbol]: triggerAsyncId\x2C\x0d\n    callback\x2C\x0d\n    args\x2C\x0d\n  };\x0d\n  if (initHooksExist())\x0d\n    emitInit(asyncId\x2C 'TickObject'\x2C triggerAsyncId\x2C tickObject);\x0d\n  queue.push(tickObject);\x0d\n}\x0d\n\x0d\nfunction runMicrotask() {\x0d\n  this.runInAsyncScope(() => {\x0d\n    const callback = this.callback;\x0d\n    try {\x0d\n      callback();\x0d\n    } finally {\x0d\n      this.emitDestroy();\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst defaultMicrotaskResourceOpts = { requireManualDestroy: true };\x0d\n\x0d\nfunction queueMicrotask(callback) {\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  const asyncResource = new AsyncResource(\x0d\n    'Microtask'\x2C\x0d\n    defaultMicrotaskResourceOpts\x2C\x0d\n  );\x0d\n  asyncResource.callback = callback;\x0d\n\x0d\n  enqueueMicrotask(FunctionPrototypeBind(runMicrotask\x2C asyncResource));\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  setupTaskQueue() {\x0d\n    // Sets the per-isolate promise rejection callback\x0d\n    listenForRejections();\x0d\n    // Sets the callback to be run in every tick.\x0d\n    setTickCallback(processTicksAndRejections);\x0d\n    return {\x0d\n      nextTick\x2C\x0d\n      runNextTicks\x2C\x0d\n    };\x0d\n  }\x2C\x0d\n  queueMicrotask\x2C\x0d\n};\x0d\n
code-source-info,0x21de9b49fb
code-creation,JS,10,174805,0x21de9b4a824,21,get node:internal/bootstrap/node:100:8,0xa4fec3e6c0,~
code-source-info,0x21de9b4a824,12,3932,3981,C0O3944C9O3958C11O3957C17O3968C20O3974,,
code-creation,JS,10,174845,0x21de9b4a91c,15,isEmpty node:internal/fixed_queue:95:10,0x1d9b7264b58,~
script-source,37,node:internal/fixed_queue,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Currently optimal queue size\x2C tested on V8 6.0 - 6.6. Must be power of two.\x0d\nconst kSize = 2048;\x0d\nconst kMask = kSize - 1;\x0d\n\x0d\n// The FixedQueue is implemented as a singly-linked list of fixed-size\x0d\n// circular buffers. It looks something like this:\x0d\n//\x0d\n//  head                                                       tail\x0d\n//    |                                                          |\x0d\n//    v                                                          v\x0d\n// +-----------+ <-----\\       +-----------+ <------\\         +-----------+\x0d\n// |  [null]   |        \\----- |   next    |         \\------- |   next    |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n// |   item    | <-- bottom    |   item    | <-- bottom       |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |       bottom --> |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |    ...    |               |    ...    |                  |    ...    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |  [empty]  | <-- top       |   item    |                  |   item    |\x0d\n// |  [empty]  |               |   item    |                  |   item    |\x0d\n// |  [empty]  |               |  [empty]  | <-- top  top --> |  [empty]  |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n//\x0d\n// Or\x2C if there is only one circular buffer\x2C it looks something\x0d\n// like either of these:\x0d\n//\x0d\n//  head   tail                                 head   tail\x0d\n//    |     |                                     |     |\x0d\n//    v     v                                     v     v\x0d\n// +-----------+                               +-----------+\x0d\n// |  [null]   |                               |  [null]   |\x0d\n// +-----------+                               +-----------+\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |   item    | <-- bottom            top --> |  [empty]  |\x0d\n// |   item    |                               |  [empty]  |\x0d\n// |  [empty]  | <-- top            bottom --> |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// +-----------+                               +-----------+\x0d\n//\x0d\n// Adding a value means moving `top` forward by one\x2C removing means\x0d\n// moving `bottom` forward by one. After reaching the end\x2C the queue\x0d\n// wraps around.\x0d\n//\x0d\n// When `top === bottom` the current queue is empty and when\x0d\n// `top + 1 === bottom` it's full. This wastes a single space of storage\x0d\n// but allows much quicker checks.\x0d\n\x0d\nclass FixedCircularBuffer {\x0d\n  constructor() {\x0d\n    this.bottom = 0;\x0d\n    this.top = 0;\x0d\n    this.list = new Array(kSize);\x0d\n    this.next = null;\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.top === this.bottom;\x0d\n  }\x0d\n\x0d\n  isFull() {\x0d\n    return ((this.top + 1) & kMask) === this.bottom;\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    this.list[this.top] = data;\x0d\n    this.top = (this.top + 1) & kMask;\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const nextItem = this.list[this.bottom];\x0d\n    if (nextItem === undefined)\x0d\n      return null;\x0d\n    this.list[this.bottom] = undefined;\x0d\n    this.bottom = (this.bottom + 1) & kMask;\x0d\n    return nextItem;\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = class FixedQueue {\x0d\n  constructor() {\x0d\n    this.head = this.tail = new FixedCircularBuffer();\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.head.isEmpty();\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    if (this.head.isFull()) {\x0d\n      // Head is full: Creates a new queue\x2C sets the old queue's `.next` to it\x2C\x0d\n      // and sets it as the new main queue.\x0d\n      this.head = this.head.next = new FixedCircularBuffer();\x0d\n    }\x0d\n    this.head.push(data);\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const tail = this.tail;\x0d\n    const next = tail.shift();\x0d\n    if (tail.isEmpty() && tail.next !== null) {\x0d\n      // If there is another queue\x2C it forms the new tail.\x0d\n      this.tail = tail.next;\x0d\n      tail.next = null;\x0d\n    }\x0d\n    return next;\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x21de9b4a91c,37,3731,3773,C0O3753C5O3758C10O3758C14O3768,,
code-creation,JS,10,175108,0x21de9b4add4,13,isEmpty node:internal/fixed_queue:67:10,0x1d9b7264880,~
code-source-info,0x21de9b4add4,37,3150,3197,C0O3172C5O3185C9O3176C12O3192,,
code-creation,JS,10,175141,0x21de9b4aec4,25,setHasTickScheduled node:internal/process/task_queues:51:29,0x1d9b72635a0,~
code-source-info,0x21de9b4aec4,35,1137,1197,C0O1150C7O1159C12O1180C19O1178C24O1196,,
code-creation,JS,10,175203,0x21de9b4afbc,23,newAsyncId node:internal/async_hooks:417:20,0x1d9b7242348,~
script-source,14,node:internal/async_hooks,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { exitCodes: { kGenericUserError } } = internalBinding('errors');\x0d\n\x0d\nconst async_wrap = internalBinding('async_wrap');\x0d\nconst { setCallbackTrampoline } = async_wrap;\x0d\n/* async_hook_fields is a Uint32Array wrapping the uint32_t array of\x0d\n * Environment::AsyncHooks::fields_[]. Each index tracks the number of active\x0d\n * hooks for each type.\x0d\n *\x0d\n * async_id_fields is a Float64Array wrapping the double array of\x0d\n * Environment::AsyncHooks::async_id_fields_[]. Each index contains the ids for\x0d\n * the various asynchronous states of the application. These are:\x0d\n *  kExecutionAsyncId: The async_id assigned to the resource responsible for the\x0d\n *    current execution stack.\x0d\n *  kTriggerAsyncId: The async_id of the resource that caused (or 'triggered')\x0d\n *    the resource corresponding to the current execution stack.\x0d\n *  kAsyncIdCounter: Incremental counter tracking the next assigned async_id.\x0d\n *  kDefaultTriggerAsyncId: Written immediately before a resource's constructor\x0d\n *    that sets the value of the init()'s triggerAsyncId. The precedence order\x0d\n *    of retrieving the triggerAsyncId value is:\x0d\n *    1. the value passed directly to the constructor\x0d\n *    2. value set in kDefaultTriggerAsyncId\x0d\n *    3. executionAsyncId of the current resource.\x0d\n *\x0d\n * async_ids_stack is a Float64Array that contains part of the async ID\x0d\n * stack. Each pushAsyncContext() call adds two doubles to it\x2C and each\x0d\n * popAsyncContext() call removes two doubles from it.\x0d\n * It has a fixed size\x2C so if that is exceeded\x2C calls to the native\x0d\n * side are used instead in pushAsyncContext() and popAsyncContext().\x0d\n */\x0d\nconst {\x0d\n  async_hook_fields\x2C\x0d\n  async_id_fields\x2C\x0d\n  execution_async_resources\x2C\x0d\n} = async_wrap;\x0d\n// Store the pair executionAsyncId and triggerAsyncId in a AliasedFloat64Array\x0d\n// in Environment::AsyncHooks::async_ids_stack_ which tracks the resource\x0d\n// responsible for the current execution stack. This is unwound as each resource\x0d\n// exits. In the case of a fatal exception this stack is emptied after calling\x0d\n// each hook's after() callback.\x0d\nconst {\x0d\n  pushAsyncContext: pushAsyncContext_\x2C\x0d\n  popAsyncContext: popAsyncContext_\x2C\x0d\n  executionAsyncResource: executionAsyncResource_\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n} = async_wrap;\x0d\n// Properties in active_hooks are used to keep track of the set of hooks being\x0d\n// executed in case another hook is enabled/disabled. The new set of hooks is\x0d\n// then restored once the active set of hooks is finished executing.\x0d\nconst active_hooks = {\x0d\n  // Array of all AsyncHooks that will be iterated whenever an async event\x0d\n  // fires. Using var instead of (preferably const) in order to assign\x0d\n  // active_hooks.tmp_array if a hook is enabled/disabled during hook\x0d\n  // execution.\x0d\n  array: []\x2C\x0d\n  // Use a counter to track nested calls of async hook callbacks and make sure\x0d\n  // the active_hooks.array isn't altered mid execution.\x0d\n  call_depth: 0\x2C\x0d\n  // Use to temporarily store and updated active_hooks.array if the user\x0d\n  // enables or disables a hook while hooks are being processed. If a hook is\x0d\n  // enabled() or disabled() during hook execution then the current set of\x0d\n  // active hooks is duplicated and set equal to active_hooks.tmp_array. Any\x0d\n  // subsequent changes are on the duplicated array. When all hooks have\x0d\n  // completed executing active_hooks.tmp_array is assigned to\x0d\n  // active_hooks.array.\x0d\n  tmp_array: null\x2C\x0d\n  // Keep track of the field counts held in active_hooks.tmp_array. Because the\x0d\n  // async_hook_fields can't be reassigned\x2C store each uint32 in an array that\x0d\n  // is written back to async_hook_fields when active_hooks.array is restored.\x0d\n  tmp_fields: null\x2C\x0d\n};\x0d\n\x0d\nconst { registerDestroyHook } = async_wrap;\x0d\nconst { enqueueMicrotask } = internalBinding('task_queue');\x0d\nconst { resource_symbol\x2C owner_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Each constant tracks how many callbacks there are for any given step of\x0d\n// async execution. These are tracked so if the user didn't include callbacks\x0d\n// for a given step\x2C that step can bail out early.\x0d\nconst {\x0d\n  kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x2C\x0d\n  kCheck\x2C kExecutionAsyncId\x2C kAsyncIdCounter\x2C kTriggerAsyncId\x2C\x0d\n  kDefaultTriggerAsyncId\x2C kStackLength\x2C kUsesExecutionAsyncResource\x2C\x0d\n} = async_wrap.constants;\x0d\n\x0d\nconst { async_id_symbol\x2C\x0d\n        trigger_async_id_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Lazy load of internal/util/inspect;\x0d\nlet inspect;\x0d\n\x0d\n// Used in AsyncHook and AsyncResource.\x0d\nconst init_symbol = Symbol('init');\x0d\nconst before_symbol = Symbol('before');\x0d\nconst after_symbol = Symbol('after');\x0d\nconst destroy_symbol = Symbol('destroy');\x0d\nconst promise_resolve_symbol = Symbol('promiseResolve');\x0d\nconst emitBeforeNative = emitHookFactory(before_symbol\x2C 'emitBeforeNative');\x0d\nconst emitAfterNative = emitHookFactory(after_symbol\x2C 'emitAfterNative');\x0d\nconst emitDestroyNative = emitHookFactory(destroy_symbol\x2C 'emitDestroyNative');\x0d\nconst emitPromiseResolveNative =\x0d\n    emitHookFactory(promise_resolve_symbol\x2C 'emitPromiseResolveNative');\x0d\n\x0d\nlet domain_cb;\x0d\nfunction useDomainTrampoline(fn) {\x0d\n  domain_cb = fn;\x0d\n}\x0d\n\x0d\nfunction callbackTrampoline(asyncId\x2C resource\x2C cb\x2C ...args) {\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  execution_async_resources[index] = resource;\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n\x0d\n  let result;\x0d\n  if (asyncId === 0 && typeof domain_cb === 'function') {\x0d\n    args.unshift(cb);\x0d\n    result = domain_cb.apply(this\x2C args);\x0d\n  } else {\x0d\n    result = cb.apply(this\x2C args);\x0d\n  }\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  execution_async_resources.pop();\x0d\n  return result;\x0d\n}\x0d\n\x0d\nconst topLevelResource = {};\x0d\n\x0d\nfunction executionAsyncResource() {\x0d\n  // Indicate to the native layer that this function is likely to be used\x2C\x0d\n  // in which case it will inform JS about the current async resource via\x0d\n  // the trampoline above.\x0d\n  async_hook_fields[kUsesExecutionAsyncResource] = 1;\x0d\n\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  if (index === -1) return topLevelResource;\x0d\n  const resource = execution_async_resources[index] ||\x0d\n    executionAsyncResource_(index);\x0d\n  return lookupPublicResource(resource);\x0d\n}\x0d\n\x0d\nfunction inspectExceptionValue(e) {\x0d\n  inspect ??= require('internal/util/inspect').inspect;\x0d\n  return { message: inspect(e) };\x0d\n}\x0d\n\x0d\n// Used to fatally abort the process if a callback throws.\x0d\nfunction fatalError(e) {\x0d\n  if (typeof e?.stack === 'string') {\x0d\n    process._rawDebug(e.stack);\x0d\n  } else {\x0d\n    const o = inspectExceptionValue(e);\x0d\n    ErrorCaptureStackTrace(o\x2C fatalError);\x0d\n    process._rawDebug(o.stack);\x0d\n  }\x0d\n\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (getOptionValue('--abort-on-uncaught-exception')) {\x0d\n    process.abort();\x0d\n  }\x0d\n  process.exit(kGenericUserError);\x0d\n}\x0d\n\x0d\nfunction lookupPublicResource(resource) {\x0d\n  if (typeof resource !== 'object' || resource === null) return resource;\x0d\n  // TODO(addaleax): Merge this with owner_symbol and use it across all\x0d\n  // AsyncWrap instances.\x0d\n  const publicResource = resource[resource_symbol];\x0d\n  if (publicResource !== undefined)\x0d\n    return publicResource;\x0d\n  return resource;\x0d\n}\x0d\n\x0d\n// Emit From Native //\x0d\n\x0d\n// Used by C++ to call all init() callbacks. Because some state can be setup\x0d\n// from C++ there's no need to perform all the same operations as in\x0d\n// emitInitScript.\x0d\nfunction emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  resource = lookupPublicResource(resource);\x0d\n  // Use a single try/catch for all hooks to avoid setting up one per iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    // eslint-disable-next-line no-var\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][init_symbol] === 'function') {\x0d\n        active_hooks.array[i][init_symbol](\x0d\n          asyncId\x2C type\x2C triggerAsyncId\x2C\x0d\n          resource\x2C\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case active_hooks.tmp_array\x0d\n  // will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Called from native. The asyncId stack handling is taken care of there\x0d\n// before this is called.\x0d\nfunction emitHook(symbol\x2C asyncId) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  // Use a single try/catch for all hook to avoid setting up one per\x0d\n  // iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    // eslint-disable-next-line no-var\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][symbol] === 'function') {\x0d\n        active_hooks.array[i][symbol](asyncId);\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case\x0d\n  // active_hooks.tmp_array will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitHookFactory(symbol\x2C name) {\x0d\n  const fn = emitHook.bind(undefined\x2C symbol);\x0d\n\x0d\n  // Set the name property of the function as it looks good in the stack trace.\x0d\n  ObjectDefineProperty(fn\x2C 'name'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: name\x2C\x0d\n  });\x0d\n  return fn;\x0d\n}\x0d\n\x0d\n// Manage Active Hooks //\x0d\n\x0d\nfunction getHookArrays() {\x0d\n  if (active_hooks.call_depth === 0)\x0d\n    return [active_hooks.array\x2C async_hook_fields];\x0d\n  // If this hook is being enabled while in the middle of processing the array\x0d\n  // of currently active hooks then duplicate the current set of active hooks\x0d\n  // and store this there. This shouldn't fire until the next time hooks are\x0d\n  // processed.\x0d\n  if (active_hooks.tmp_array === null)\x0d\n    storeActiveHooks();\x0d\n  return [active_hooks.tmp_array\x2C active_hooks.tmp_fields];\x0d\n}\x0d\n\x0d\n\x0d\nfunction storeActiveHooks() {\x0d\n  active_hooks.tmp_array = ArrayPrototypeSlice(active_hooks.array);\x0d\n  // Don't want to make the assumption that kInit to kDestroy are indexes 0 to\x0d\n  // 4. So do this the long way.\x0d\n  active_hooks.tmp_fields = [];\x0d\n  copyHooks(active_hooks.tmp_fields\x2C async_hook_fields);\x0d\n}\x0d\n\x0d\nfunction copyHooks(destination\x2C source) {\x0d\n  destination[kInit] = source[kInit];\x0d\n  destination[kBefore] = source[kBefore];\x0d\n  destination[kAfter] = source[kAfter];\x0d\n  destination[kDestroy] = source[kDestroy];\x0d\n  destination[kPromiseResolve] = source[kPromiseResolve];\x0d\n}\x0d\n\x0d\n\x0d\n// Then restore the correct hooks array in case any hooks were added/removed\x0d\n// during hook callback execution.\x0d\nfunction restoreActiveHooks() {\x0d\n  active_hooks.array = active_hooks.tmp_array;\x0d\n  copyHooks(async_hook_fields\x2C active_hooks.tmp_fields);\x0d\n\x0d\n  active_hooks.tmp_array = null;\x0d\n  active_hooks.tmp_fields = null;\x0d\n}\x0d\n\x0d\nfunction trackPromise(promise\x2C parent) {\x0d\n  if (promise[async_id_symbol]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Get trigger id from parent async id before making the async id of the\x0d\n  // child so if a new one must be made it will be lower than the child.\x0d\n  const triggerAsyncId = parent ? getOrSetAsyncId(parent) :\x0d\n    getDefaultTriggerAsyncId();\x0d\n\x0d\n  promise[async_id_symbol] = newAsyncId();\x0d\n  promise[trigger_async_id_symbol] = triggerAsyncId;\x0d\n}\x0d\n\x0d\nfunction promiseInitHook(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerAsyncId = promise[trigger_async_id_symbol];\x0d\n  emitInitScript(asyncId\x2C 'PROMISE'\x2C triggerAsyncId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseInitHookWithDestroyTracking(promise\x2C parent) {\x0d\n  promiseInitHook(promise\x2C parent);\x0d\n  destroyTracking(promise\x2C parent);\x0d\n}\x0d\n\x0d\nfunction destroyTracking(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  registerDestroyHook(promise\x2C asyncId);\x0d\n}\x0d\n\x0d\nfunction promiseBeforeHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerId = promise[trigger_async_id_symbol];\x0d\n  emitBeforeScript(asyncId\x2C triggerId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseAfterHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  if (hasHooks(kAfter)) {\x0d\n    emitAfterNative(asyncId);\x0d\n  }\x0d\n  if (asyncId === executionAsyncId()) {\x0d\n    // This condition might not be true if async_hooks was enabled during\x0d\n    // the promise callback execution.\x0d\n    // Popping it off the stack can be skipped in that case\x2C because it is\x0d\n    // known that it would correspond to exactly one call with\x0d\n    // PromiseHookType::kBefore that was not witnessed by the PromiseHook.\x0d\n    popAsyncContext(asyncId);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseResolveHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  emitPromiseResolveNative(asyncId);\x0d\n}\x0d\n\x0d\nlet wantPromiseHook = false;\x0d\nfunction enableHooks() {\x0d\n  async_hook_fields[kCheck] += 1;\x0d\n\x0d\n  setCallbackTrampoline(callbackTrampoline);\x0d\n}\x0d\n\x0d\nlet stopPromiseHook;\x0d\nfunction updatePromiseHookMode() {\x0d\n  wantPromiseHook = true;\x0d\n  let initHook;\x0d\n  if (initHooksExist()) {\x0d\n    initHook = destroyHooksExist() ? promiseInitHookWithDestroyTracking :\x0d\n      promiseInitHook;\x0d\n  } else if (destroyHooksExist()) {\x0d\n    initHook = destroyTracking;\x0d\n  }\x0d\n  if (stopPromiseHook) stopPromiseHook();\x0d\n  const promiseHooks = require('internal/promise_hooks');\x0d\n  stopPromiseHook = promiseHooks.createHook({\x0d\n    init: initHook\x2C\x0d\n    before: promiseBeforeHook\x2C\x0d\n    after: promiseAfterHook\x2C\x0d\n    settled: promiseResolveHooksExist() ? promiseResolveHook : undefined\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction disableHooks() {\x0d\n  async_hook_fields[kCheck] -= 1;\x0d\n\x0d\n  wantPromiseHook = false;\x0d\n\x0d\n  setCallbackTrampoline();\x0d\n\x0d\n  // Delay the call to `disablePromiseHook()` because we might currently be\x0d\n  // between the `before` and `after` calls of a Promise.\x0d\n  enqueueMicrotask(disablePromiseHookIfNecessary);\x0d\n}\x0d\n\x0d\nfunction disablePromiseHookIfNecessary() {\x0d\n  if (!wantPromiseHook && stopPromiseHook) {\x0d\n    stopPromiseHook();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Internal Embedder API //\x0d\n\x0d\n// Increment the internal id counter and return the value. Important that the\x0d\n// counter increment first. Since it's done the same way in\x0d\n// Environment::new_async_uid()\x0d\nfunction newAsyncId() {\x0d\n  return ++async_id_fields[kAsyncIdCounter];\x0d\n}\x0d\n\x0d\nfunction getOrSetAsyncId(object) {\x0d\n  if (ObjectPrototypeHasOwnProperty(object\x2C async_id_symbol)) {\x0d\n    return object[async_id_symbol];\x0d\n  }\x0d\n\x0d\n  return object[async_id_symbol] = newAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\n// Return the triggerAsyncId meant for the constructor calling it. It's up to\x0d\n// the user to safeguard this call and make sure it's zero'd out when the\x0d\n// constructor is complete.\x0d\nfunction getDefaultTriggerAsyncId() {\x0d\n  const defaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  // If defaultTriggerAsyncId isn't set\x2C use the executionAsyncId\x0d\n  if (defaultTriggerAsyncId < 0)\x0d\n    return async_id_fields[kExecutionAsyncId];\x0d\n  return defaultTriggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearDefaultTriggerAsyncId() {\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = -1;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets a default top level trigger ID to be used\x0d\n * @template {Array<unknown>} T\x0d\n * @template {unknown} R\x0d\n * @param {number} triggerAsyncId\x0d\n * @param { (...T: args) => R } block\x0d\n * @param  {T} args\x0d\n * @returns {R}\x0d\n */\x0d\nfunction defaultTriggerAsyncIdScope(triggerAsyncId\x2C block\x2C ...args) {\x0d\n  if (triggerAsyncId === undefined)\x0d\n    return block.apply(null\x2C args);\x0d\n  // CHECK(NumberIsSafeInteger(triggerAsyncId))\x0d\n  // CHECK(triggerAsyncId > 0)\x0d\n  const oldDefaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = triggerAsyncId;\x0d\n\x0d\n  try {\x0d\n    return block.apply(null\x2C args);\x0d\n  } finally {\x0d\n    async_id_fields[kDefaultTriggerAsyncId] = oldDefaultTriggerAsyncId;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction hasHooks(key) {\x0d\n  return async_hook_fields[key] > 0;\x0d\n}\x0d\n\x0d\nfunction enabledHooksExist() {\x0d\n  return hasHooks(kCheck);\x0d\n}\x0d\n\x0d\nfunction initHooksExist() {\x0d\n  return hasHooks(kInit);\x0d\n}\x0d\n\x0d\nfunction afterHooksExist() {\x0d\n  return hasHooks(kAfter);\x0d\n}\x0d\n\x0d\nfunction destroyHooksExist() {\x0d\n  return hasHooks(kDestroy);\x0d\n}\x0d\n\x0d\nfunction promiseResolveHooksExist() {\x0d\n  return hasHooks(kPromiseResolve);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitInitScript(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  // Short circuit all checks for the common case. Which is that no hooks have\x0d\n  // been set. Do this to remove performance impact for embedders (and core).\x0d\n  if (!hasHooks(kInit))\x0d\n    return;\x0d\n\x0d\n  if (triggerAsyncId === null) {\x0d\n    triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  }\x0d\n\x0d\n  emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitBeforeScript(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource);\x0d\n\x0d\n  if (hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitAfterScript(asyncId) {\x0d\n  if (hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  popAsyncContext(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitDestroyScript(asyncId) {\x0d\n  // Return early if there are no destroy callbacks\x2C or invalid asyncId.\x0d\n  if (!hasHooks(kDestroy) || asyncId <= 0)\x0d\n    return;\x0d\n  async_wrap.queueDestroyAsyncId(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction hasAsyncIdStack() {\x0d\n  return hasHooks(kStackLength);\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native push_async_ids() call.\x0d\nfunction pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  const offset = async_hook_fields[kStackLength];\x0d\n  execution_async_resources[offset] = resource;\x0d\n  if (offset * 2 >= async_wrap.async_ids_stack.length)\x0d\n    return pushAsyncContext_(asyncId\x2C triggerAsyncId);\x0d\n  async_wrap.async_ids_stack[offset * 2] = async_id_fields[kExecutionAsyncId];\x0d\n  async_wrap.async_ids_stack[offset * 2 + 1] = async_id_fields[kTriggerAsyncId];\x0d\n  async_hook_fields[kStackLength]++;\x0d\n  async_id_fields[kExecutionAsyncId] = asyncId;\x0d\n  async_id_fields[kTriggerAsyncId] = triggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native pop_async_ids() call.\x0d\nfunction popAsyncContext(asyncId) {\x0d\n  const stackLength = async_hook_fields[kStackLength];\x0d\n  if (stackLength === 0) return false;\x0d\n\x0d\n  if (enabledHooksExist() && async_id_fields[kExecutionAsyncId] !== asyncId) {\x0d\n    // Do the same thing as the native code (i.e. crash hard).\x0d\n    return popAsyncContext_(asyncId);\x0d\n  }\x0d\n\x0d\n  const offset = stackLength - 1;\x0d\n  async_id_fields[kExecutionAsyncId] = async_wrap.async_ids_stack[2 * offset];\x0d\n  async_id_fields[kTriggerAsyncId] = async_wrap.async_ids_stack[2 * offset + 1];\x0d\n  execution_async_resources.pop();\x0d\n  async_hook_fields[kStackLength] = offset;\x0d\n  return offset > 0;\x0d\n}\x0d\n\x0d\n\x0d\nfunction executionAsyncId() {\x0d\n  return async_id_fields[kExecutionAsyncId];\x0d\n}\x0d\n\x0d\nfunction triggerAsyncId() {\x0d\n  return async_id_fields[kTriggerAsyncId];\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  executionAsyncId\x2C\x0d\n  triggerAsyncId\x2C\x0d\n  // Private API\x0d\n  getHookArrays\x2C\x0d\n  symbols: {\x0d\n    async_id_symbol\x2C trigger_async_id_symbol\x2C\x0d\n    init_symbol\x2C before_symbol\x2C after_symbol\x2C destroy_symbol\x2C\x0d\n    promise_resolve_symbol\x2C owner_symbol\x2C\x0d\n  }\x2C\x0d\n  constants: {\x0d\n    kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x2C\x0d\n  }\x2C\x0d\n  enableHooks\x2C\x0d\n  disableHooks\x2C\x0d\n  updatePromiseHookMode\x2C\x0d\n  clearDefaultTriggerAsyncId\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n  hasAsyncIdStack\x2C\x0d\n  executionAsyncResource\x2C\x0d\n  // Internal Embedder API\x0d\n  newAsyncId\x2C\x0d\n  getOrSetAsyncId\x2C\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  enabledHooksExist\x2C\x0d\n  initHooksExist\x2C\x0d\n  afterHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit: emitInitScript\x2C\x0d\n  emitBefore: emitBeforeScript\x2C\x0d\n  emitAfter: emitAfterScript\x2C\x0d\n  emitDestroy: emitDestroyScript\x2C\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n  registerDestroyHook\x2C\x0d\n  useDomainTrampoline\x2C\x0d\n  nativeHooks: {\x0d\n    init: emitInitNative\x2C\x0d\n    before: emitBeforeNative\x2C\x0d\n    after: emitAfterNative\x2C\x0d\n    destroy: emitDestroyNative\x2C\x0d\n    promise_resolve: emitPromiseResolveNative\x2C\x0d\n  }\x2C\x0d\n  asyncWrap: {\x0d\n    Providers: async_wrap.Providers\x2C\x0d\n  }\x2C\x0d\n};\x0d\n
code-source-info,0x21de9b4afbc,14,14984,15037,C0O14992C7O15017C16O15032C22O15034,,
code-creation,JS,10,176141,0x21de9b4c494,33,getDefaultTriggerAsyncId node:internal/async_hooks:433:34,0x1d9b72423f8,~
code-source-info,0x21de9b4c494,14,15459,15722,C0O15497C7O15513C9O15512C13O15608C14O15634C19O15644C24O15667C26O15666C29O15686C30O15690C32O15719,,
code-creation,JS,10,176187,0x21de9b4c6bc,13,initHooksExist node:internal/async_hooks:478:24,0x1d9b72425b0,~
code-source-info,0x21de9b4c6bc,14,16722,16756,C0O16730C5O16746C8O16737C12O16753,,
code-creation,JS,10,176218,0x21de9b4c7a4,16,hasHooks node:internal/async_hooks:470:18,0x1d9b7242500,~
code-source-info,0x21de9b4c7a4,14,16582,16630,C0O16593C7O16617C12O16623C15O16627,,
code-creation,JS,10,176255,0x21de9b4c8ac,59,push node:internal/fixed_queue:99:7,0x1d9b7264bb0,~
code-source-info,0x21de9b4c8ac,37,3783,4050,C0O3806C5O3811C10O3811C16O3973C23O3989C26O3985C32O3983C38O3966C42O4029C47O4034C52O4034C58O4049,,
code-creation,JS,10,176293,0x21de9b4c9e4,24,isFull node:internal/fixed_queue:71:9,0x1d9b72648d8,~
code-source-info,0x21de9b4c9e4,37,3209,3272,C0O3233C4O3237C10O3244C12O3242C16O3260C20O3251C23O3267,,
code-creation,JS,10,176332,0x21de9b4caec,37,push node:internal/fixed_queue:75:7,0x1d9b7264930,~
code-source-info,0x21de9b4caec,37,3282,3368,C0O3301C5O3311C12O3316C16O3346C20O3350C26O3357C28O3355C31O3338C36O3367,,
code-creation,JS,10,176393,0x21de9b4cc44,118,Readable.removeListener node:internal/streams/readable:1157:45,0x9b20b6c490,~
code-source-info,0x21de9b4cc44,97,37260,37978,C0O37293C5O37326C10O37333C15O37343C20O37358C34O37358C40O37435C42O37442C47O37799C50O37807C58O37807C66O37858C68O37865C73O37884C81O37884C88O37906C93O37920C95O37926C104O37938C106O37937C111O37934C115O37964C117O37975,,
code-creation,JS,10,176499,0x21de9b4ce1c,313,removeListener node:events:681:28,0x1d9b72503d0,~
code-source-info,0x21de9b4ce1c
code-creation,Eval,10,176675,0x21de9b4da84,5, node:internal/repl:1:1,0x21de9b4d8d0,~
script-source,113,node:internal/repl,'use strict';\x0d\n\x0d\nconst {\x0d\n  Number\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseInt\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst REPL = require('repl');\x0d\nconst { kStandaloneREPL } = require('internal/repl/utils');\x0d\n\x0d\nmodule.exports = { __proto__: REPL };\x0d\nmodule.exports.createInternalRepl = createRepl;\x0d\n\x0d\nfunction createRepl(env\x2C opts\x2C cb) {\x0d\n  if (typeof opts === 'function') {\x0d\n    cb = opts;\x0d\n    opts = null;\x0d\n  }\x0d\n  opts = {\x0d\n    [kStandaloneREPL]: true\x2C\x0d\n    ignoreUndefined: false\x2C\x0d\n    useGlobal: true\x2C\x0d\n    breakEvalOnSigint: true\x2C\x0d\n    ...opts\x2C\x0d\n  };\x0d\n\x0d\n  if (NumberParseInt(env.NODE_NO_READLINE)) {\x0d\n    opts.terminal = false;\x0d\n  }\x0d\n\x0d\n  if (env.NODE_REPL_MODE) {\x0d\n    opts.replMode = {\x0d\n      'strict': REPL.REPL_MODE_STRICT\x2C\x0d\n      'sloppy': REPL.REPL_MODE_SLOPPY\x2C\x0d\n    }[env.NODE_REPL_MODE.toLowerCase().trim()];\x0d\n  }\x0d\n\x0d\n  if (opts.replMode === undefined) {\x0d\n    opts.replMode = REPL.REPL_MODE_SLOPPY;\x0d\n  }\x0d\n\x0d\n  const historySize = Number(env.NODE_REPL_HISTORY_SIZE);\x0d\n  if (!NumberIsNaN(historySize) && historySize > 0) {\x0d\n    opts.historySize = historySize;\x0d\n  } else {\x0d\n    opts.historySize = 1000;\x0d\n  }\x0d\n\x0d\n  const repl = REPL.start(opts);\x0d\n  const term = 'terminal' in opts ? opts.terminal : process.stdout.isTTY;\x0d\n  repl.setupHistory(term ? env.NODE_REPL_HISTORY : ''\x2C cb);\x0d\n}\x0d\n
code-source-info,0x21de9b4da84,113,0,1267,C0O0C4O1267,,
code-creation,JS,10,176755,0x21de9b4dbac,105, node:internal/repl:1:1,0x21de9b4d9f8,~
code-source-info,0x21de9b4dbac,113,0,1267,C0O0C29O28C35O39C41O55C47O105C50O105C54O105C56O151C59O151C64O131C70O186C81O216C88O201C92O232C99O259C104O1266,,
code-creation,Eval,10,177950,0x21de9b54c74,5, node:repl:1:1,0x21de9b536d8,~
script-source,114,node:repl,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n/* A REPL library that you can include in your own code to get a runtime\x0d\n * interface to your program.\x0d\n *\x0d\n *   const repl = require("repl");\x0d\n *   // start repl on stdin\x0d\n *   repl.start("prompt> ");\x0d\n *\x0d\n *   // listen for unix socket connections and start repl on them\x0d\n *   net.createServer(function(socket) {\x0d\n *     repl.start("node via Unix socket> "\x2C socket);\x0d\n *   }).listen("/tmp/node-repl-sock");\x0d\n *\x0d\n *   // listen for TCP socket connections and start repl on them\x0d\n *   net.createServer(function(socket) {\x0d\n *     repl.start("node via TCP socket> "\x2C socket);\x0d\n *   }).listen(5001);\x0d\n *\x0d\n *   // expose foo to repl context\x0d\n *   repl.start("node > ").context.foo = "stdin is fun";\x0d\n */\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeAt\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeFindLastIndex\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePop\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypePushApply\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Boolean\x2C\x0d\n  Error: MainContextError\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  JSONStringify\x2C\x0d\n  MathMaxApply\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseFloat\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafePromiseRace\x2C\x0d\n  SafeSet\x2C\x0d\n  SafeWeakSet\x2C\x0d\n  StringPrototypeCharAt\x2C\x0d\n  StringPrototypeCodePointAt\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  StringPrototypeTrimStart\x2C\x0d\n  StringPrototypeToLocaleLowerCase\x2C\x0d\n  Symbol\x2C\x0d\n  SyntaxError\x2C\x0d\n  SyntaxErrorPrototype\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { BuiltinModule } = require('internal/bootstrap/realm');\x0d\nconst {\x0d\n  makeRequireFunction\x2C\x0d\n  addBuiltinLibsToObject\x2C\x0d\n} = require('internal/modules/helpers');\x0d\nconst {\x0d\n  isIdentifierStart\x2C\x0d\n  isIdentifierChar\x2C\x0d\n  parse: acornParse\x2C\x0d\n} = require('internal/deps/acorn/acorn/dist/acorn');\x0d\nconst acornWalk = require('internal/deps/acorn/acorn-walk/dist/walk');\x0d\nconst {\x0d\n  decorateErrorStack\x2C\x0d\n  isError\x2C\x0d\n  deprecate\x2C\x0d\n  SideEffectFreeRegExpPrototypeSymbolReplace\x2C\x0d\n  SideEffectFreeRegExpPrototypeSymbolSplit\x2C\x0d\n} = require('internal/util');\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\nconst vm = require('vm');\x0d\n\x0d\nconst { runInThisContext\x2C runInContext } = vm.Script.prototype;\x0d\n\x0d\nconst path = require('path');\x0d\nconst fs = require('fs');\x0d\nconst { Interface } = require('readline');\x0d\nconst {\x0d\n  commonPrefix\x2C\x0d\n} = require('internal/readline/utils');\x0d\nconst { Console } = require('console');\x0d\nconst { shouldColorize } = require('internal/util/colors');\x0d\nconst CJSModule = require('internal/modules/cjs/loader').Module;\x0d\nlet _builtinLibs = ArrayPrototypeFilter(\x0d\n  CJSModule.builtinModules\x2C\x0d\n  (e) => !StringPrototypeStartsWith(e\x2C '_')\x2C\x0d\n);\x0d\nconst nodeSchemeBuiltinLibs = ArrayPrototypeMap(\x0d\n  _builtinLibs\x2C (lib) => `node:${lib}`);\x0d\nArrayPrototypeForEach(\x0d\n  BuiltinModule.getSchemeOnlyModuleNames()\x2C\x0d\n  (lib) => ArrayPrototypePush(nodeSchemeBuiltinLibs\x2C `node:${lib}`)\x2C\x0d\n);\x0d\nconst domain = require('domain');\x0d\nlet debug = require('internal/util/debuglog').debuglog('repl'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_CANNOT_WATCH_SIGINT\x2C\x0d\n    ERR_INVALID_REPL_EVAL_CONFIG\x2C\x0d\n    ERR_INVALID_REPL_INPUT\x2C\x0d\n    ERR_SCRIPT_EXECUTION_INTERRUPTED\x2C\x0d\n  }\x2C\x0d\n  isErrorStackTraceLimitWritable\x2C\x0d\n  overrideStackTrace\x2C\x0d\n  ErrorPrepareStackTrace\x2C\x0d\n} = require('internal/errors');\x0d\nconst { sendInspectorCommand } = require('internal/util/inspector');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst experimentalREPLAwait = getOptionValue(\x0d\n  '--experimental-repl-await'\x2C\x0d\n);\x0d\nconst pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\nconst {\x0d\n  REPL_MODE_SLOPPY\x2C\x0d\n  REPL_MODE_STRICT\x2C\x0d\n  isRecoverableError\x2C\x0d\n  kStandaloneREPL\x2C\x0d\n  setupPreview\x2C\x0d\n  setupReverseSearch\x2C\x0d\n} = require('internal/repl/utils');\x0d\nconst {\x0d\n  constants: {\x0d\n    ALL_PROPERTIES\x2C\x0d\n    SKIP_SYMBOLS\x2C\x0d\n  }\x2C\x0d\n  getOwnNonIndexProperties\x2C\x0d\n} = internalBinding('util');\x0d\nconst {\x0d\n  startSigintWatchdog\x2C\x0d\n  stopSigintWatchdog\x2C\x0d\n} = internalBinding('contextify');\x0d\n\x0d\nconst history = require('internal/repl/history');\x0d\nconst {\x0d\n  extensionFormatMap\x2C\x0d\n} = require('internal/modules/esm/formats');\x0d\nconst {\x0d\n  makeContextifyScript\x2C\x0d\n} = require('internal/vm');\x0d\nlet nextREPLResourceNumber = 1;\x0d\n// This prevents v8 code cache from getting confused and using a different\x0d\n// cache from a resource of the same name\x0d\nfunction getREPLResourceName() {\x0d\n  return `REPL${nextREPLResourceNumber++}`;\x0d\n}\x0d\n\x0d\n// Lazy-loaded.\x0d\nlet processTopLevelAwait;\x0d\n\x0d\nconst globalBuiltins =\x0d\n  new SafeSet(vm.runInNewContext('Object.getOwnPropertyNames(globalThis)'));\x0d\n\x0d\nconst parentModule = module;\x0d\nconst domainSet = new SafeWeakSet();\x0d\n\x0d\nconst kBufferedCommandSymbol = Symbol('bufferedCommand');\x0d\nconst kContextId = Symbol('contextId');\x0d\nconst kLoadingSymbol = Symbol('loading');\x0d\n\x0d\nlet addedNewListener = false;\x0d\n\x0d\ntry {\x0d\n  // Hack for require.resolve("./relative") to work properly.\x0d\n  module.filename = path.resolve('repl');\x0d\n} catch {\x0d\n  // path.resolve('repl') fails when the current working directory has been\x0d\n  // deleted.  Fall back to the directory name of the (absolute) executable\x0d\n  // path.  It's not really correct but what are the alternatives?\x0d\n  const dirname = path.dirname(process.execPath);\x0d\n  module.filename = path.resolve(dirname\x2C 'repl');\x0d\n}\x0d\n\x0d\n// Hack for repl require to work properly with node_modules folders\x0d\nmodule.paths = CJSModule._nodeModulePaths(module.filename);\x0d\n\x0d\n// This is the default "writer" value\x2C if none is passed in the REPL options\x2C\x0d\n// and it can be overridden by custom print functions\x2C such as `probe` or\x0d\n// `eyes.js`.\x0d\nconst writer = (obj) => inspect(obj\x2C writer.options);\x0d\nwriter.options = { ...inspect.defaultOptions\x2C showProxy: true };\x0d\n\x0d\n// Converts static import statement to dynamic import statement\x0d\nconst toDynamicImport = (codeLine) => {\x0d\n  let dynamicImportStatement = '';\x0d\n  const ast = acornParse(codeLine\x2C { __proto__: null\x2C sourceType: 'module'\x2C ecmaVersion: 'latest' });\x0d\n  acornWalk.ancestor(ast\x2C {\x0d\n    ImportDeclaration(node) {\x0d\n      const awaitDynamicImport = `await import(${JSONStringify(node.source.value)});`;\x0d\n      if (node.specifiers.length === 0) {\x0d\n        dynamicImportStatement += awaitDynamicImport;\x0d\n      } else if (node.specifiers.length === 1 && node.specifiers[0].type === 'ImportNamespaceSpecifier') {\x0d\n        dynamicImportStatement += `const ${node.specifiers[0].local.name} = ${awaitDynamicImport}`;\x0d\n      } else {\x0d\n        const importNames = ArrayPrototypeJoin(ArrayPrototypeMap(node.specifiers\x2C ({ local\x2C imported }) =>\x0d\n          (local.name === imported?.name ? local.name : `${imported?.name ?? 'default'}: ${local.name}`)\x2C\x0d\n        )\x2C '\x2C ');\x0d\n        dynamicImportStatement += `const { ${importNames} } = ${awaitDynamicImport}`;\x0d\n      }\x0d\n    }\x2C\x0d\n  });\x0d\n  return dynamicImportStatement;\x0d\n};\x0d\n\x0d\nfunction REPLServer(prompt\x2C\x0d\n                    stream\x2C\x0d\n                    eval_\x2C\x0d\n                    useGlobal\x2C\x0d\n                    ignoreUndefined\x2C\x0d\n                    replMode) {\x0d\n  if (!(this instanceof REPLServer)) {\x0d\n    return new REPLServer(prompt\x2C\x0d\n                          stream\x2C\x0d\n                          eval_\x2C\x0d\n                          useGlobal\x2C\x0d\n                          ignoreUndefined\x2C\x0d\n                          replMode);\x0d\n  }\x0d\n\x0d\n  let options;\x0d\n  if (prompt !== null && typeof prompt === 'object') {\x0d\n    // An options object was given.\x0d\n    options = { ...prompt };\x0d\n    stream = options.stream || options.socket;\x0d\n    eval_ = options.eval;\x0d\n    useGlobal = options.useGlobal;\x0d\n    ignoreUndefined = options.ignoreUndefined;\x0d\n    prompt = options.prompt;\x0d\n    replMode = options.replMode;\x0d\n  } else {\x0d\n    options = {};\x0d\n  }\x0d\n\x0d\n  if (!options.input && !options.output) {\x0d\n    // Legacy API\x2C passing a 'stream'/'socket' option.\x0d\n    if (!stream) {\x0d\n      // Use stdin and stdout as the default streams if none were given.\x0d\n      stream = process;\x0d\n    }\x0d\n    // We're given a duplex readable/writable Stream\x2C like a `net.Socket`\x0d\n    // or a custom object with 2 streams\x2C or the `process` object.\x0d\n    options.input = stream.stdin || stream;\x0d\n    options.output = stream.stdout || stream;\x0d\n  }\x0d\n\x0d\n  if (options.terminal === undefined) {\x0d\n    options.terminal = options.output.isTTY;\x0d\n  }\x0d\n  options.terminal = !!options.terminal;\x0d\n\x0d\n  if (options.terminal && options.useColors === undefined) {\x0d\n    // If possible\x2C check if stdout supports colors or not.\x0d\n    options.useColors = shouldColorize(options.output);\x0d\n  }\x0d\n\x0d\n  // TODO(devsnek): Add a test case for custom eval functions.\x0d\n  const preview = options.terminal &&\x0d\n    (options.preview !== undefined ? !!options.preview : !eval_);\x0d\n\x0d\n  ObjectDefineProperty(this\x2C 'inputStream'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get: pendingDeprecation ?\x0d\n      deprecate(() => this.input\x2C\x0d\n                'repl.inputStream and repl.outputStream are deprecated. ' +\x0d\n                  'Use repl.input and repl.output instead'\x2C\x0d\n                'DEP0141') :\x0d\n      () => this.input\x2C\x0d\n    set: pendingDeprecation ?\x0d\n      deprecate((val) => this.input = val\x2C\x0d\n                'repl.inputStream and repl.outputStream are deprecated. ' +\x0d\n                  'Use repl.input and repl.output instead'\x2C\x0d\n                'DEP0141') :\x0d\n      (val) => this.input = val\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n  ObjectDefineProperty(this\x2C 'outputStream'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get: pendingDeprecation ?\x0d\n      deprecate(() => this.output\x2C\x0d\n                'repl.inputStream and repl.outputStream are deprecated. ' +\x0d\n                  'Use repl.input and repl.output instead'\x2C\x0d\n                'DEP0141') :\x0d\n      () => this.output\x2C\x0d\n    set: pendingDeprecation ?\x0d\n      deprecate((val) => this.output = val\x2C\x0d\n                'repl.inputStream and repl.outputStream are deprecated. ' +\x0d\n                  'Use repl.input and repl.output instead'\x2C\x0d\n                'DEP0141') :\x0d\n      (val) => this.output = val\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n\x0d\n  this.allowBlockingCompletions = !!options.allowBlockingCompletions;\x0d\n  this.useColors = !!options.useColors;\x0d\n  this._domain = options.domain || domain.create();\x0d\n  this.useGlobal = !!useGlobal;\x0d\n  this.ignoreUndefined = !!ignoreUndefined;\x0d\n  this.replMode = replMode || module.exports.REPL_MODE_SLOPPY;\x0d\n  this.underscoreAssigned = false;\x0d\n  this.last = undefined;\x0d\n  this.underscoreErrAssigned = false;\x0d\n  this.lastError = undefined;\x0d\n  this.breakEvalOnSigint = !!options.breakEvalOnSigint;\x0d\n  this.editorMode = false;\x0d\n  // Context id for use with the inspector protocol.\x0d\n  this[kContextId] = undefined;\x0d\n\x0d\n  if (this.breakEvalOnSigint && eval_) {\x0d\n    // Allowing this would not reflect user expectations.\x0d\n    // breakEvalOnSigint affects only the behavior of the default eval().\x0d\n    throw new ERR_INVALID_REPL_EVAL_CONFIG();\x0d\n  }\x0d\n\x0d\n  if (options[kStandaloneREPL]) {\x0d\n    // It is possible to introspect the running REPL accessing this variable\x0d\n    // from inside the REPL. This is useful for anyone working on the REPL.\x0d\n    module.exports.repl = this;\x0d\n  } else if (!addedNewListener) {\x0d\n    // Add this listener only once and use a WeakSet that contains the REPLs\x0d\n    // domains. Otherwise we'd have to add a single listener to each REPL\x0d\n    // instance and that could trigger the `MaxListenersExceededWarning`.\x0d\n    process.prependListener('newListener'\x2C (event\x2C listener) => {\x0d\n      if (event === 'uncaughtException' &&\x0d\n          process.domain &&\x0d\n          listener.name !== 'domainUncaughtExceptionClear' &&\x0d\n          domainSet.has(process.domain)) {\x0d\n        // Throw an error so that the event will not be added and the current\x0d\n        // domain takes over. That way the user is notified about the error\x0d\n        // and the current code evaluation is stopped\x2C just as any other code\x0d\n        // that contains an error.\x0d\n        throw new ERR_INVALID_REPL_INPUT(\x0d\n          'Listeners for `uncaughtException` cannot be used in the REPL');\x0d\n      }\x0d\n    });\x0d\n    addedNewListener = true;\x0d\n  }\x0d\n\x0d\n  domainSet.add(this._domain);\x0d\n\x0d\n  const savedRegExMatches = [''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''];\x0d\n  const sep = '\\u0000\\u0000\\u0000';\x0d\n  const regExMatcher = new RegExp(`^${sep}(.*)${sep}(.*)${sep}(.*)${sep}(.*)` +\x0d\n                                  `${sep}(.*)${sep}(.*)${sep}(.*)${sep}(.*)` +\x0d\n                                  `${sep}(.*)$`);\x0d\n\x0d\n  eval_ = eval_ || defaultEval;\x0d\n\x0d\n  const self = this;\x0d\n\x0d\n  // Pause taking in new input\x2C and store the keys in a buffer.\x0d\n  const pausedBuffer = [];\x0d\n  let paused = false;\x0d\n  function pause() {\x0d\n    paused = true;\x0d\n  }\x0d\n\x0d\n  function unpause() {\x0d\n    if (!paused) return;\x0d\n    paused = false;\x0d\n    let entry;\x0d\n    const tmpCompletionEnabled = self.isCompletionEnabled;\x0d\n    while ((entry = ArrayPrototypeShift(pausedBuffer)) !== undefined) {\x0d\n      const { 0: type\x2C 1: payload\x2C 2: isCompletionEnabled } = entry;\x0d\n      switch (type) {\x0d\n        case 'key': {\x0d\n          const { 0: d\x2C 1: key } = payload;\x0d\n          self.isCompletionEnabled = isCompletionEnabled;\x0d\n          self._ttyWrite(d\x2C key);\x0d\n          break;\x0d\n        }\x0d\n        case 'close':\x0d\n          self.emit('exit');\x0d\n          break;\x0d\n      }\x0d\n      if (paused) {\x0d\n        break;\x0d\n      }\x0d\n    }\x0d\n    self.isCompletionEnabled = tmpCompletionEnabled;\x0d\n  }\x0d\n\x0d\n  function defaultEval(code\x2C context\x2C file\x2C cb) {\x0d\n    let result\x2C script\x2C wrappedErr;\x0d\n    let err = null;\x0d\n    let wrappedCmd = false;\x0d\n    let awaitPromise = false;\x0d\n    const input = code;\x0d\n\x0d\n    // It's confusing for `{ a : 1 }` to be interpreted as a block\x0d\n    // statement rather than an object literal.  So\x2C we first try\x0d\n    // to wrap it in parentheses\x2C so that it will be interpreted as\x0d\n    // an expression.  Note that if the above condition changes\x2C\x0d\n    // lib/internal/repl/utils.js needs to be changed to match.\x0d\n    if (RegExpPrototypeExec(/^\\s*{/\x2C code) !== null &&\x0d\n        RegExpPrototypeExec(/;\\s*$/\x2C code) === null) {\x0d\n      code = `(${StringPrototypeTrim(code)})\\n`;\x0d\n      wrappedCmd = true;\x0d\n    }\x0d\n\x0d\n    const hostDefinedOptionId = Symbol(`eval:${file}`);\x0d\n    let parentURL;\x0d\n    try {\x0d\n      const { pathToFileURL } = require('internal/url');\x0d\n      // Adding `/repl` prevents dynamic imports from loading relative\x0d\n      // to the parent of `process.cwd()`.\x0d\n      parentURL = pathToFileURL(path.join(process.cwd()\x2C 'repl')).href;\x0d\n    } catch {\x0d\n      // Continue regardless of error.\x0d\n    }\x0d\n    async function importModuleDynamically(specifier\x2C _\x2C importAttributes) {\x0d\n      const asyncESM = require('internal/process/esm_loader');\x0d\n      return asyncESM.esmLoader.import(specifier\x2C parentURL\x2C\x0d\n                                       importAttributes);\x0d\n    }\x0d\n    // `experimentalREPLAwait` is set to true by default.\x0d\n    // Shall be false in case `--no-experimental-repl-await` flag is used.\x0d\n    if (experimentalREPLAwait && StringPrototypeIncludes(code\x2C 'await')) {\x0d\n      if (processTopLevelAwait === undefined) {\x0d\n        ({ processTopLevelAwait } = require('internal/repl/await'));\x0d\n      }\x0d\n\x0d\n      try {\x0d\n        const potentialWrappedCode = processTopLevelAwait(code);\x0d\n        if (potentialWrappedCode !== null) {\x0d\n          code = potentialWrappedCode;\x0d\n          wrappedCmd = true;\x0d\n          awaitPromise = true;\x0d\n        }\x0d\n      } catch (e) {\x0d\n        let recoverableError = false;\x0d\n        if (e.name === 'SyntaxError') {\x0d\n          // Remove all "await"s and attempt running the script\x0d\n          // in order to detect if error is truly non recoverable\x0d\n          const fallbackCode = SideEffectFreeRegExpPrototypeSymbolReplace(/\\bawait\\b/g\x2C code\x2C '');\x0d\n          try {\x0d\n            makeContextifyScript(\x0d\n              fallbackCode\x2C            // code\x0d\n              file\x2C                    // filename\x2C\x0d\n              0\x2C                       // lineOffset\x0d\n              0\x2C                       // columnOffset\x2C\x0d\n              undefined\x2C               // cachedData\x0d\n              false\x2C                   // produceCachedData\x0d\n              undefined\x2C               // parsingContext\x0d\n              hostDefinedOptionId\x2C     // hostDefinedOptionId\x0d\n              importModuleDynamically\x2C // importModuleDynamically\x0d\n            );\x0d\n          } catch (fallbackError) {\x0d\n            if (isRecoverableError(fallbackError\x2C fallbackCode)) {\x0d\n              recoverableError = true;\x0d\n              err = new Recoverable(e);\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n        if (!recoverableError) {\x0d\n          decorateErrorStack(e);\x0d\n          err = e;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // First\x2C create the Script object to check the syntax\x0d\n    if (code === '\\n')\x0d\n      return cb(null);\x0d\n\x0d\n    if (err === null) {\x0d\n      while (true) {\x0d\n        try {\x0d\n          if (self.replMode === module.exports.REPL_MODE_STRICT &&\x0d\n              RegExpPrototypeExec(/^\\s*$/\x2C code) === null) {\x0d\n            // "void 0" keeps the repl from returning "use strict" as the result\x0d\n            // value for statements and declarations that don't return a value.\x0d\n            code = `'use strict'; void 0;\\n${code}`;\x0d\n          }\x0d\n          script = makeContextifyScript(\x0d\n            code\x2C                    // code\x0d\n            file\x2C                    // filename\x2C\x0d\n            0\x2C                       // lineOffset\x0d\n            0\x2C                       // columnOffset\x2C\x0d\n            undefined\x2C               // cachedData\x0d\n            false\x2C                   // produceCachedData\x0d\n            undefined\x2C               // parsingContext\x0d\n            hostDefinedOptionId\x2C     // hostDefinedOptionId\x0d\n            importModuleDynamically\x2C // importModuleDynamically\x0d\n          );\x0d\n        } catch (e) {\x0d\n          debug('parse error %j'\x2C code\x2C e);\x0d\n          if (wrappedCmd) {\x0d\n            // Unwrap and try again\x0d\n            wrappedCmd = false;\x0d\n            awaitPromise = false;\x0d\n            code = input;\x0d\n            wrappedErr = e;\x0d\n            continue;\x0d\n          }\x0d\n          // Preserve original error for wrapped command\x0d\n          const error = wrappedErr || e;\x0d\n          if (isRecoverableError(error\x2C code))\x0d\n            err = new Recoverable(error);\x0d\n          else\x0d\n            err = error;\x0d\n        }\x0d\n        break;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // This will set the values from `savedRegExMatches` to corresponding\x0d\n    // predefined RegExp properties `RegExp.$1`\x2C `RegExp.$2` ... `RegExp.$9`\x0d\n    RegExpPrototypeExec(regExMatcher\x2C\x0d\n                        ArrayPrototypeJoin(savedRegExMatches\x2C sep));\x0d\n\x0d\n    let finished = false;\x0d\n    function finishExecution(err\x2C result) {\x0d\n      if (finished) return;\x0d\n      finished = true;\x0d\n\x0d\n      // After executing the current expression\x2C store the values of RegExp\x0d\n      // predefined properties back in `savedRegExMatches`\x0d\n      for (let idx = 1; idx < savedRegExMatches.length; idx += 1) {\x0d\n        savedRegExMatches[idx] = RegExp[`$${idx}`];\x0d\n      }\x0d\n\x0d\n      cb(err\x2C result);\x0d\n    }\x0d\n\x0d\n    if (!err) {\x0d\n      // Unset raw mode during evaluation so that Ctrl+C raises a signal.\x0d\n      let previouslyInRawMode;\x0d\n      if (self.breakEvalOnSigint) {\x0d\n        // Start the SIGINT watchdog before entering raw mode so that a very\x0d\n        // quick Ctrl+C doesn't lead to aborting the process completely.\x0d\n        if (!startSigintWatchdog())\x0d\n          throw new ERR_CANNOT_WATCH_SIGINT();\x0d\n        previouslyInRawMode = self._setRawMode(false);\x0d\n      }\x0d\n\x0d\n      try {\x0d\n        try {\x0d\n          const scriptOptions = {\x0d\n            displayErrors: false\x2C\x0d\n            breakOnSigint: self.breakEvalOnSigint\x2C\x0d\n          };\x0d\n\x0d\n          if (self.useGlobal) {\x0d\n            result = ReflectApply(runInThisContext\x2C script\x2C [scriptOptions]);\x0d\n          } else {\x0d\n            result = ReflectApply(runInContext\x2C script\x2C [context\x2C scriptOptions]);\x0d\n          }\x0d\n        } finally {\x0d\n          if (self.breakEvalOnSigint) {\x0d\n            // Reset terminal mode to its previous value.\x0d\n            self._setRawMode(previouslyInRawMode);\x0d\n\x0d\n            // Returns true if there were pending SIGINTs *after* the script\x0d\n            // has terminated without being interrupted itself.\x0d\n            if (stopSigintWatchdog()) {\x0d\n              self.emit('SIGINT');\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      } catch (e) {\x0d\n        err = e;\x0d\n\x0d\n        if (process.domain) {\x0d\n          debug('not recoverable\x2C send to domain');\x0d\n          process.domain.emit('error'\x2C err);\x0d\n          process.domain.exit();\x0d\n          return;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (awaitPromise && !err) {\x0d\n        let sigintListener;\x0d\n        pause();\x0d\n        let promise = result;\x0d\n        if (self.breakEvalOnSigint) {\x0d\n          const interrupt = new Promise((resolve\x2C reject) => {\x0d\n            sigintListener = () => {\x0d\n              const tmp = MainContextError.stackTraceLimit;\x0d\n              if (isErrorStackTraceLimitWritable()) MainContextError.stackTraceLimit = 0;\x0d\n              const err = new ERR_SCRIPT_EXECUTION_INTERRUPTED();\x0d\n              if (isErrorStackTraceLimitWritable()) MainContextError.stackTraceLimit = tmp;\x0d\n              reject(err);\x0d\n            };\x0d\n            prioritizedSigintQueue.add(sigintListener);\x0d\n          });\x0d\n          promise = SafePromiseRace([promise\x2C interrupt]);\x0d\n        }\x0d\n\x0d\n        (async () => {\x0d\n          try {\x0d\n            const result = (await promise)?.value;\x0d\n            finishExecution(null\x2C result);\x0d\n          } catch (err) {\x0d\n            if (err && process.domain) {\x0d\n              debug('not recoverable\x2C send to domain');\x0d\n              process.domain.emit('error'\x2C err);\x0d\n              process.domain.exit();\x0d\n              return;\x0d\n            }\x0d\n            finishExecution(err);\x0d\n          } finally {\x0d\n            // Remove prioritized SIGINT listener if it was not called.\x0d\n            prioritizedSigintQueue.delete(sigintListener);\x0d\n            unpause();\x0d\n          }\x0d\n        })();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (!awaitPromise || err) {\x0d\n      finishExecution(err\x2C result);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  self.eval = self._domain.bind(eval_);\x0d\n\x0d\n  self._domain.on('error'\x2C function debugDomainError(e) {\x0d\n    debug('domain error');\x0d\n    let errStack = '';\x0d\n\x0d\n    if (typeof e === 'object' && e !== null) {\x0d\n      overrideStackTrace.set(e\x2C (error\x2C stackFrames) => {\x0d\n        let frames;\x0d\n        if (typeof stackFrames === 'object') {\x0d\n          // Search from the bottom of the call stack to\x0d\n          // find the first frame with a null function name\x0d\n          const idx = ArrayPrototypeFindLastIndex(\x0d\n            stackFrames\x2C\x0d\n            (frame) => frame.getFunctionName() === null\x2C\x0d\n          );\x0d\n          // If found\x2C get rid of it and everything below it\x0d\n          frames = ArrayPrototypeSlice(stackFrames\x2C 0\x2C idx);\x0d\n        } else {\x0d\n          frames = stackFrames;\x0d\n        }\x0d\n        // FIXME(devsnek): this is inconsistent with the checks\x0d\n        // that the real prepareStackTrace dispatch uses in\x0d\n        // lib/internal/errors.js.\x0d\n        if (typeof MainContextError.prepareStackTrace === 'function') {\x0d\n          return MainContextError.prepareStackTrace(error\x2C frames);\x0d\n        }\x0d\n        return ErrorPrepareStackTrace(error\x2C frames);\x0d\n      });\x0d\n      decorateErrorStack(e);\x0d\n\x0d\n      if (e.domainThrown) {\x0d\n        delete e.domain;\x0d\n        delete e.domainThrown;\x0d\n      }\x0d\n\x0d\n      if (isError(e)) {\x0d\n        if (e.stack) {\x0d\n          if (e.name === 'SyntaxError') {\x0d\n            // Remove stack trace.\x0d\n            e.stack = SideEffectFreeRegExpPrototypeSymbolReplace(\x0d\n              /^\\s+at\\s.*\\n?/gm\x2C\x0d\n              SideEffectFreeRegExpPrototypeSymbolReplace(/^REPL\\d+:\\d+\\r?\\n/\x2C e.stack\x2C '')\x2C\x0d\n              '');\x0d\n            const importErrorStr = 'Cannot use import statement outside a ' +\x0d\n              'module';\x0d\n            if (StringPrototypeIncludes(e.message\x2C importErrorStr)) {\x0d\n              e.message = 'Cannot use import statement inside the Node.js ' +\x0d\n                'REPL\x2C alternatively use dynamic import: ' + toDynamicImport(ArrayPrototypeAt(self.lines\x2C -1));\x0d\n              e.stack = SideEffectFreeRegExpPrototypeSymbolReplace(\x0d\n                /SyntaxError:.*\\n/\x2C\x0d\n                e.stack\x2C\x0d\n                `SyntaxError: ${e.message}\\n`);\x0d\n            }\x0d\n          } else if (self.replMode === module.exports.REPL_MODE_STRICT) {\x0d\n            e.stack = SideEffectFreeRegExpPrototypeSymbolReplace(\x0d\n              /(\\s+at\\s+REPL\\d+:)(\\d+)/\x2C\x0d\n              e.stack\x2C\x0d\n              (_\x2C pre\x2C line) => pre + (line - 1)\x2C\x0d\n            );\x0d\n          }\x0d\n        }\x0d\n        errStack = self.writer(e);\x0d\n\x0d\n        // Remove one line error braces to keep the old style in place.\x0d\n        if (errStack[0] === '[' && errStack[errStack.length - 1] === ']') {\x0d\n          errStack = StringPrototypeSlice(errStack\x2C 1\x2C -1);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (!self.underscoreErrAssigned) {\x0d\n      self.lastError = e;\x0d\n    }\x0d\n\x0d\n    if (options[kStandaloneREPL] &&\x0d\n        process.listenerCount('uncaughtException') !== 0) {\x0d\n      process.nextTick(() => {\x0d\n        process.emit('uncaughtException'\x2C e);\x0d\n        self.clearBufferedCommand();\x0d\n        self.lines.level = [];\x0d\n        self.displayPrompt();\x0d\n      });\x0d\n    } else {\x0d\n      if (errStack === '') {\x0d\n        errStack = self.writer(e);\x0d\n      }\x0d\n      const lines = SideEffectFreeRegExpPrototypeSymbolSplit(/(?<=\\n)/\x2C errStack);\x0d\n      let matched = false;\x0d\n\x0d\n      errStack = '';\x0d\n      ArrayPrototypeForEach(lines\x2C (line) => {\x0d\n        if (!matched &&\x0d\n            RegExpPrototypeExec(/^\\[?([A-Z][a-z0-9_]*)*Error/\x2C line) !== null) {\x0d\n          errStack += writer.options.breakLength >= line.length ?\x0d\n            `Uncaught ${line}` :\x0d\n            `Uncaught:\\n${line}`;\x0d\n          matched = true;\x0d\n        } else {\x0d\n          errStack += line;\x0d\n        }\x0d\n      });\x0d\n      if (!matched) {\x0d\n        const ln = lines.length === 1 ? ' ' : ':\\n';\x0d\n        errStack = `Uncaught${ln}${errStack}`;\x0d\n      }\x0d\n      // Normalize line endings.\x0d\n      errStack += StringPrototypeEndsWith(errStack\x2C '\\n') ? '' : '\\n';\x0d\n      self.output.write(errStack);\x0d\n      self.clearBufferedCommand();\x0d\n      self.lines.level = [];\x0d\n      self.displayPrompt();\x0d\n    }\x0d\n  });\x0d\n\x0d\n  self.clearBufferedCommand();\x0d\n\x0d\n  function completer(text\x2C cb) {\x0d\n    ReflectApply(complete\x2C self\x2C\x0d\n                 [text\x2C self.editorMode ? self.completeOnEditorMode(cb) : cb]);\x0d\n  }\x0d\n\x0d\n  ReflectApply(Interface\x2C this\x2C [{\x0d\n    input: options.input\x2C\x0d\n    output: options.output\x2C\x0d\n    completer: options.completer || completer\x2C\x0d\n    terminal: options.terminal\x2C\x0d\n    historySize: options.historySize\x2C\x0d\n    prompt\x2C\x0d\n  }]);\x0d\n\x0d\n  self.resetContext();\x0d\n\x0d\n  this.commands = { __proto__: null };\x0d\n  defineDefaultCommands(this);\x0d\n\x0d\n  // Figure out which "writer" function to use\x0d\n  self.writer = options.writer || module.exports.writer;\x0d\n\x0d\n  if (self.writer === writer) {\x0d\n    // Conditionally turn on ANSI coloring.\x0d\n    writer.options.colors = self.useColors;\x0d\n\x0d\n    if (options[kStandaloneREPL]) {\x0d\n      ObjectDefineProperty(inspect\x2C 'replDefaults'\x2C {\x0d\n        __proto__: null\x2C\x0d\n        get() {\x0d\n          return writer.options;\x0d\n        }\x2C\x0d\n        set(options) {\x0d\n          validateObject(options\x2C 'options');\x0d\n          return ObjectAssign(writer.options\x2C options);\x0d\n        }\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function _parseREPLKeyword(keyword\x2C rest) {\x0d\n    const cmd = this.commands[keyword];\x0d\n    if (cmd) {\x0d\n      ReflectApply(cmd.action\x2C this\x2C [rest]);\x0d\n      return true;\x0d\n    }\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  self.on('close'\x2C function emitExit() {\x0d\n    if (paused) {\x0d\n      ArrayPrototypePush(pausedBuffer\x2C ['close']);\x0d\n      return;\x0d\n    }\x0d\n    self.emit('exit');\x0d\n  });\x0d\n\x0d\n  let sawSIGINT = false;\x0d\n  let sawCtrlD = false;\x0d\n  const prioritizedSigintQueue = new SafeSet();\x0d\n  self.on('SIGINT'\x2C function onSigInt() {\x0d\n    if (prioritizedSigintQueue.size > 0) {\x0d\n      for (const task of prioritizedSigintQueue) {\x0d\n        task();\x0d\n      }\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    const empty = self.line.length === 0;\x0d\n    self.clearLine();\x0d\n    _turnOffEditorMode(self);\x0d\n\x0d\n    const cmd = self[kBufferedCommandSymbol];\x0d\n    if (!(cmd && cmd.length > 0) && empty) {\x0d\n      if (sawSIGINT) {\x0d\n        self.close();\x0d\n        sawSIGINT = false;\x0d\n        return;\x0d\n      }\x0d\n      self.output.write(\x0d\n        '(To exit\x2C press Ctrl+C again or Ctrl+D or type .exit)\\n'\x2C\x0d\n      );\x0d\n      sawSIGINT = true;\x0d\n    } else {\x0d\n      sawSIGINT = false;\x0d\n    }\x0d\n\x0d\n    self.clearBufferedCommand();\x0d\n    self.lines.level = [];\x0d\n    self.displayPrompt();\x0d\n  });\x0d\n\x0d\n  self.on('line'\x2C function onLine(cmd) {\x0d\n    debug('line %j'\x2C cmd);\x0d\n    cmd = cmd || '';\x0d\n    sawSIGINT = false;\x0d\n\x0d\n    if (self.editorMode) {\x0d\n      self[kBufferedCommandSymbol] += cmd + '\\n';\x0d\n\x0d\n      // code alignment\x0d\n      const matches = self._sawKeyPress && !self[kLoadingSymbol] ?\x0d\n        RegExpPrototypeExec(/^\\s+/\x2C cmd) : null;\x0d\n      if (matches) {\x0d\n        const prefix = matches[0];\x0d\n        self.write(prefix);\x0d\n        self.line = prefix;\x0d\n        self.cursor = prefix.length;\x0d\n      }\x0d\n      ReflectApply(_memory\x2C self\x2C [cmd]);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    // Check REPL keywords and empty lines against a trimmed line input.\x0d\n    const trimmedCmd = StringPrototypeTrim(cmd);\x0d\n\x0d\n    // Check to see if a REPL keyword was used. If it returns true\x2C\x0d\n    // display next prompt and return.\x0d\n    if (trimmedCmd) {\x0d\n      if (StringPrototypeCharAt(trimmedCmd\x2C 0) === '.' &&\x0d\n          StringPrototypeCharAt(trimmedCmd\x2C 1) !== '.' &&\x0d\n          NumberIsNaN(NumberParseFloat(trimmedCmd))) {\x0d\n        const matches = RegExpPrototypeExec(/^\\.([^\\s]+)\\s*(.*)$/\x2C trimmedCmd);\x0d\n        const keyword = matches && matches[1];\x0d\n        const rest = matches && matches[2];\x0d\n        if (ReflectApply(_parseREPLKeyword\x2C self\x2C [keyword\x2C rest]) === true) {\x0d\n          return;\x0d\n        }\x0d\n        if (!self[kBufferedCommandSymbol]) {\x0d\n          self.output.write('Invalid REPL keyword\\n');\x0d\n          finish(null);\x0d\n          return;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    const evalCmd = self[kBufferedCommandSymbol] + cmd + '\\n';\x0d\n\x0d\n    debug('eval %j'\x2C evalCmd);\x0d\n    self.eval(evalCmd\x2C self.context\x2C getREPLResourceName()\x2C finish);\x0d\n\x0d\n    function finish(e\x2C ret) {\x0d\n      debug('finish'\x2C e\x2C ret);\x0d\n      ReflectApply(_memory\x2C self\x2C [cmd]);\x0d\n\x0d\n      if (e && !self[kBufferedCommandSymbol] &&\x0d\n          StringPrototypeStartsWith(StringPrototypeTrim(cmd)\x2C 'npm ')) {\x0d\n        self.output.write('npm should be run outside of the ' +\x0d\n                                'Node.js REPL\x2C in your normal shell.\\n' +\x0d\n                                '(Press Ctrl+D to exit.)\\n');\x0d\n        self.displayPrompt();\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      // If error was SyntaxError and not JSON.parse error\x0d\n      if (e) {\x0d\n        if (e instanceof Recoverable && !sawCtrlD) {\x0d\n          // Start buffering data like that:\x0d\n          // {\x0d\n          // ...  x: 1\x0d\n          // ... }\x0d\n          self[kBufferedCommandSymbol] += cmd + '\\n';\x0d\n          self.displayPrompt();\x0d\n          return;\x0d\n        }\x0d\n        self._domain.emit('error'\x2C e.err || e);\x0d\n      }\x0d\n\x0d\n      // Clear buffer if no SyntaxErrors\x0d\n      self.clearBufferedCommand();\x0d\n      sawCtrlD = false;\x0d\n\x0d\n      // If we got any output - print it (if no error)\x0d\n      if (!e &&\x0d\n          // When an invalid REPL command is used\x2C error message is printed\x0d\n          // immediately. We don't have to print anything else. So\x2C only when\x0d\n          // the second argument to this function is there\x2C print it.\x0d\n          arguments.length === 2 &&\x0d\n          (!self.ignoreUndefined || ret !== undefined)) {\x0d\n        if (!self.underscoreAssigned) {\x0d\n          self.last = ret;\x0d\n        }\x0d\n        self.output.write(self.writer(ret) + '\\n');\x0d\n      }\x0d\n\x0d\n      // Display prompt again (unless we already did by emitting the 'error'\x0d\n      // event on the domain instance).\x0d\n      if (!e) {\x0d\n        self.displayPrompt();\x0d\n      }\x0d\n    }\x0d\n  });\x0d\n\x0d\n  self.on('SIGCONT'\x2C function onSigCont() {\x0d\n    if (self.editorMode) {\x0d\n      self.output.write(`${self._initialPrompt}.editor\\n`);\x0d\n      self.output.write(\x0d\n        '// Entering editor mode (Ctrl+D to finish\x2C Ctrl+C to cancel)\\n');\x0d\n      self.output.write(`${self[kBufferedCommandSymbol]}\\n`);\x0d\n      self.prompt(true);\x0d\n    } else {\x0d\n      self.displayPrompt(true);\x0d\n    }\x0d\n  });\x0d\n\x0d\n  const { reverseSearch } = setupReverseSearch(this);\x0d\n\x0d\n  const {\x0d\n    clearPreview\x2C\x0d\n    showPreview\x2C\x0d\n  } = setupPreview(\x0d\n    this\x2C\x0d\n    kContextId\x2C\x0d\n    kBufferedCommandSymbol\x2C\x0d\n    preview\x2C\x0d\n  );\x0d\n\x0d\n  // Wrap readline tty to enable editor mode and pausing.\x0d\n  const ttyWrite = FunctionPrototypeBind(self._ttyWrite\x2C self);\x0d\n  self._ttyWrite = (d\x2C key) => {\x0d\n    key = key || {};\x0d\n    if (paused && !(self.breakEvalOnSigint && key.ctrl && key.name === 'c')) {\x0d\n      ArrayPrototypePush(pausedBuffer\x2C\x0d\n                         ['key'\x2C [d\x2C key]\x2C self.isCompletionEnabled]);\x0d\n      return;\x0d\n    }\x0d\n    if (!self.editorMode || !self.terminal) {\x0d\n      // Before exiting\x2C make sure to clear the line.\x0d\n      if (key.ctrl && key.name === 'd' &&\x0d\n          self.cursor === 0 && self.line.length === 0) {\x0d\n        self.clearLine();\x0d\n      }\x0d\n      clearPreview(key);\x0d\n      if (!reverseSearch(d\x2C key)) {\x0d\n        ttyWrite(d\x2C key);\x0d\n        const showCompletionPreview = key.name !== 'escape';\x0d\n        showPreview(showCompletionPreview);\x0d\n      }\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    // Editor mode\x0d\n    if (key.ctrl && !key.shift) {\x0d\n      switch (key.name) {\x0d\n        // TODO(BridgeAR): There should not be a special mode necessary for full\x0d\n        // multiline support.\x0d\n        case 'd': // End editor mode\x0d\n          _turnOffEditorMode(self);\x0d\n          sawCtrlD = true;\x0d\n          ttyWrite(d\x2C { name: 'return' });\x0d\n          break;\x0d\n        case 'n': // Override next history item\x0d\n        case 'p': // Override previous history item\x0d\n          break;\x0d\n        default:\x0d\n          ttyWrite(d\x2C key);\x0d\n      }\x0d\n    } else {\x0d\n      switch (key.name) {\x0d\n        case 'up':   // Override previous history item\x0d\n        case 'down': // Override next history item\x0d\n          break;\x0d\n        case 'tab':\x0d\n          // Prevent double tab behavior\x0d\n          self._previousKey = null;\x0d\n          ttyWrite(d\x2C key);\x0d\n          break;\x0d\n        default:\x0d\n          ttyWrite(d\x2C key);\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\n  self.displayPrompt();\x0d\n}\x0d\nObjectSetPrototypeOf(REPLServer.prototype\x2C Interface.prototype);\x0d\nObjectSetPrototypeOf(REPLServer\x2C Interface);\x0d\n\x0d\n// Prompt is a string to print on each line for the prompt\x2C\x0d\n// source is a stream to use for I/O\x2C defaulting to stdin/stdout.\x0d\nfunction start(prompt\x2C source\x2C eval_\x2C useGlobal\x2C ignoreUndefined\x2C replMode) {\x0d\n  return new REPLServer(\x0d\n    prompt\x2C source\x2C eval_\x2C useGlobal\x2C ignoreUndefined\x2C replMode);\x0d\n}\x0d\n\x0d\nREPLServer.prototype.setupHistory = function setupHistory(historyFile\x2C cb) {\x0d\n  history(this\x2C historyFile\x2C cb);\x0d\n};\x0d\n\x0d\nREPLServer.prototype.clearBufferedCommand = function clearBufferedCommand() {\x0d\n  this[kBufferedCommandSymbol] = '';\x0d\n};\x0d\n\x0d\nREPLServer.prototype.close = function close() {\x0d\n  if (this.terminal && this._flushing && !this._closingOnFlush) {\x0d\n    this._closingOnFlush = true;\x0d\n    this.once('flushHistory'\x2C () =>\x0d\n      ReflectApply(Interface.prototype.close\x2C this\x2C [])\x2C\x0d\n    );\x0d\n\x0d\n    return;\x0d\n  }\x0d\n  process.nextTick(() =>\x0d\n    ReflectApply(Interface.prototype.close\x2C this\x2C [])\x2C\x0d\n  );\x0d\n};\x0d\n\x0d\nREPLServer.prototype.createContext = function() {\x0d\n  let context;\x0d\n  if (this.useGlobal) {\x0d\n    context = globalThis;\x0d\n  } else {\x0d\n    sendInspectorCommand((session) => {\x0d\n      session.post('Runtime.enable');\x0d\n      session.once('Runtime.executionContextCreated'\x2C ({ params }) => {\x0d\n        this[kContextId] = params.context.id;\x0d\n      });\x0d\n      context = vm.createContext();\x0d\n      session.post('Runtime.disable');\x0d\n    }\x2C () => {\x0d\n      context = vm.createContext();\x0d\n    });\x0d\n    ArrayPrototypeForEach(ObjectGetOwnPropertyNames(globalThis)\x2C (name) => {\x0d\n      // Only set properties that do not already exist as a global builtin.\x0d\n      if (!globalBuiltins.has(name)) {\x0d\n        ObjectDefineProperty(context\x2C name\x2C\x0d\n                             {\x0d\n                               __proto__: null\x2C\x0d\n                               ...ObjectGetOwnPropertyDescriptor(globalThis\x2C name)\x2C\x0d\n                             });\x0d\n      }\x0d\n    });\x0d\n    context.global = context;\x0d\n    const _console = new Console(this.output);\x0d\n    ObjectDefineProperty(context\x2C 'console'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: true\x2C\x0d\n      value: _console\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  const replModule = new CJSModule('<repl>');\x0d\n  replModule.paths = CJSModule._resolveLookupPaths('<repl>'\x2C parentModule);\x0d\n\x0d\n  ObjectDefineProperty(context\x2C 'module'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n    value: replModule\x2C\x0d\n  });\x0d\n  ObjectDefineProperty(context\x2C 'require'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n    value: makeRequireFunction(replModule)\x2C\x0d\n  });\x0d\n\x0d\n  addBuiltinLibsToObject(context\x2C '<REPL>');\x0d\n\x0d\n  return context;\x0d\n};\x0d\n\x0d\nREPLServer.prototype.resetContext = function() {\x0d\n  this.context = this.createContext();\x0d\n  this.underscoreAssigned = false;\x0d\n  this.underscoreErrAssigned = false;\x0d\n  // TODO(BridgeAR): Deprecate the lines.\x0d\n  this.lines = [];\x0d\n  this.lines.level = [];\x0d\n\x0d\n  ObjectDefineProperty(this.context\x2C '_'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    get: () => this.last\x2C\x0d\n    set: (value) => {\x0d\n      this.last = value;\x0d\n      if (!this.underscoreAssigned) {\x0d\n        this.underscoreAssigned = true;\x0d\n        this.output.write('Expression assignment to _ now disabled.\\n');\x0d\n      }\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  ObjectDefineProperty(this.context\x2C '_error'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    get: () => this.lastError\x2C\x0d\n    set: (value) => {\x0d\n      this.lastError = value;\x0d\n      if (!this.underscoreErrAssigned) {\x0d\n        this.underscoreErrAssigned = true;\x0d\n        this.output.write(\x0d\n          'Expression assignment to _error now disabled.\\n');\x0d\n      }\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  // Allow REPL extensions to extend the new context\x0d\n  this.emit('reset'\x2C this.context);\x0d\n};\x0d\n\x0d\nREPLServer.prototype.displayPrompt = function(preserveCursor) {\x0d\n  let prompt = this._initialPrompt;\x0d\n  if (this[kBufferedCommandSymbol].length) {\x0d\n    prompt = '...';\x0d\n    const len = this.lines.level.length ? this.lines.level.length - 1 : 0;\x0d\n    const levelInd = StringPrototypeRepeat('..'\x2C len);\x0d\n    prompt += levelInd + ' ';\x0d\n  }\x0d\n\x0d\n  // Do not overwrite `_initialPrompt` here\x0d\n  ReflectApply(Interface.prototype.setPrompt\x2C this\x2C [prompt]);\x0d\n  this.prompt(preserveCursor);\x0d\n};\x0d\n\x0d\n// When invoked as an API method\x2C overwrite _initialPrompt\x0d\nREPLServer.prototype.setPrompt = function setPrompt(prompt) {\x0d\n  this._initialPrompt = prompt;\x0d\n  ReflectApply(Interface.prototype.setPrompt\x2C this\x2C [prompt]);\x0d\n};\x0d\n\x0d\nconst importRE = /\\bimport\\s*\\(\\s*['"`](([\\w@./:-]+\\/)?(?:[\\w@./:-]*))(?![^'"`])$/;\x0d\nconst requireRE = /\\brequire\\s*\\(\\s*['"`](([\\w@./:-]+\\/)?(?:[\\w@./:-]*))(?![^'"`])$/;\x0d\nconst fsAutoCompleteRE = /fs(?:\\.promises)?\\.\\s*[a-z][a-zA-Z]+\\(\\s*["'](.*)/;\x0d\nconst simpleExpressionRE =\x0d\n    /(?:[\\w$'"`[{(](?:\\w|\\$|['"`\\]})])*\\??\\.)*[a-zA-Z_$](?:\\w|\\$)*\\??\\.?$/;\x0d\nconst versionedFileNamesRe = /-\\d+\\.\\d+/;\x0d\n\x0d\nfunction isIdentifier(str) {\x0d\n  if (str === '') {\x0d\n    return false;\x0d\n  }\x0d\n  const first = StringPrototypeCodePointAt(str\x2C 0);\x0d\n  if (!isIdentifierStart(first)) {\x0d\n    return false;\x0d\n  }\x0d\n  const firstLen = first > 0xffff ? 2 : 1;\x0d\n  for (let i = firstLen; i < str.length; i += 1) {\x0d\n    const cp = StringPrototypeCodePointAt(str\x2C i);\x0d\n    if (!isIdentifierChar(cp)) {\x0d\n      return false;\x0d\n    }\x0d\n    if (cp > 0xffff) {\x0d\n      i += 1;\x0d\n    }\x0d\n  }\x0d\n  return true;\x0d\n}\x0d\n\x0d\nfunction isNotLegacyObjectPrototypeMethod(str) {\x0d\n  return isIdentifier(str) &&\x0d\n    str !== '__defineGetter__' &&\x0d\n    str !== '__defineSetter__' &&\x0d\n    str !== '__lookupGetter__' &&\x0d\n    str !== '__lookupSetter__';\x0d\n}\x0d\n\x0d\nfunction filteredOwnPropertyNames(obj) {\x0d\n  if (!obj) return [];\x0d\n  // `Object.prototype` is the only non-contrived object that fulfills\x0d\n  // `Object.getPrototypeOf(X) === null &&\x0d\n  //  Object.getPrototypeOf(Object.getPrototypeOf(X.constructor)) === X`.\x0d\n  let isObjectPrototype = false;\x0d\n  if (ObjectGetPrototypeOf(obj) === null) {\x0d\n    const ctorDescriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\x0d\n    if (ctorDescriptor && ctorDescriptor.value) {\x0d\n      const ctorProto = ObjectGetPrototypeOf(ctorDescriptor.value);\x0d\n      isObjectPrototype = ctorProto && ObjectGetPrototypeOf(ctorProto) === obj;\x0d\n    }\x0d\n  }\x0d\n  const filter = ALL_PROPERTIES | SKIP_SYMBOLS;\x0d\n  return ArrayPrototypeFilter(\x0d\n    getOwnNonIndexProperties(obj\x2C filter)\x2C\x0d\n    isObjectPrototype ? isNotLegacyObjectPrototypeMethod : isIdentifier);\x0d\n}\x0d\n\x0d\nfunction getGlobalLexicalScopeNames(contextId) {\x0d\n  return sendInspectorCommand((session) => {\x0d\n    let names = [];\x0d\n    session.post('Runtime.globalLexicalScopeNames'\x2C {\x0d\n      executionContextId: contextId\x2C\x0d\n    }\x2C (error\x2C result) => {\x0d\n      if (!error) names = result.names;\x0d\n    });\x0d\n    return names;\x0d\n  }\x2C () => []);\x0d\n}\x0d\n\x0d\nREPLServer.prototype.complete = function() {\x0d\n  ReflectApply(this.completer\x2C this\x2C arguments);\x0d\n};\x0d\n\x0d\nfunction gracefulReaddir(...args) {\x0d\n  try {\x0d\n    return ReflectApply(fs.readdirSync\x2C null\x2C args);\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction completeFSFunctions(match) {\x0d\n  let baseName = '';\x0d\n  let filePath = match[1];\x0d\n  let fileList = gracefulReaddir(filePath\x2C { withFileTypes: true });\x0d\n\x0d\n  if (!fileList) {\x0d\n    baseName = path.basename(filePath);\x0d\n    filePath = path.dirname(filePath);\x0d\n    fileList = gracefulReaddir(filePath\x2C { withFileTypes: true }) || [];\x0d\n  }\x0d\n\x0d\n  const completions = ArrayPrototypeMap(\x0d\n    ArrayPrototypeFilter(\x0d\n      fileList\x2C\x0d\n      (dirent) => StringPrototypeStartsWith(dirent.name\x2C baseName)\x2C\x0d\n    )\x2C\x0d\n    (d) => d.name\x2C\x0d\n  );\x0d\n\x0d\n  return [[completions]\x2C baseName];\x0d\n}\x0d\n\x0d\n// Provide a list of completions for the given leading text. This is\x0d\n// given to the readline interface for handling tab completion.\x0d\n//\x0d\n// Example:\x0d\n//  complete('let foo = util.')\x0d\n//    -> [['util.print'\x2C 'util.debug'\x2C 'util.log'\x2C 'util.inspect']\x2C\x0d\n//        'util.' ]\x0d\n//\x0d\n// Warning: This eval's code like "foo.bar.baz"\x2C so it will run property\x0d\n// getter code.\x0d\nfunction complete(line\x2C callback) {\x0d\n  // List of completion lists\x2C one for each inheritance "level"\x0d\n  let completionGroups = [];\x0d\n  let completeOn\x2C group;\x0d\n\x0d\n  // Ignore right whitespace. It could change the outcome.\x0d\n  line = StringPrototypeTrimStart(line);\x0d\n\x0d\n  let filter = '';\x0d\n\x0d\n  let match;\x0d\n  // REPL commands (e.g. ".break").\x0d\n  if ((match = RegExpPrototypeExec(/^\\s*\\.(\\w*)$/\x2C line)) !== null) {\x0d\n    ArrayPrototypePush(completionGroups\x2C ObjectKeys(this.commands));\x0d\n    completeOn = match[1];\x0d\n    if (completeOn.length) {\x0d\n      filter = completeOn;\x0d\n    }\x0d\n  } else if ((match = RegExpPrototypeExec(requireRE\x2C line)) !== null) {\x0d\n    // require('...<Tab>')\x0d\n    completeOn = match[1];\x0d\n    filter = completeOn;\x0d\n    if (this.allowBlockingCompletions) {\x0d\n      const subdir = match[2] || '';\x0d\n      const extensions = ObjectKeys(this.context.require.extensions);\x0d\n      const indexes = ArrayPrototypeMap(extensions\x2C\x0d\n                                        (extension) => `index${extension}`);\x0d\n      ArrayPrototypePush(indexes\x2C 'package.json'\x2C 'index');\x0d\n\x0d\n      group = [];\x0d\n      let paths = [];\x0d\n\x0d\n      if (completeOn === '.') {\x0d\n        group = ['./'\x2C '../'];\x0d\n      } else if (completeOn === '..') {\x0d\n        group = ['../'];\x0d\n      } else if (RegExpPrototypeExec(/^\\.\\.?\\//\x2C completeOn) !== null) {\x0d\n        paths = [process.cwd()];\x0d\n      } else {\x0d\n        paths = [];\x0d\n        ArrayPrototypePushApply(paths\x2C module.paths);\x0d\n        ArrayPrototypePushApply(paths\x2C CJSModule.globalPaths);\x0d\n      }\x0d\n\x0d\n      ArrayPrototypeForEach(paths\x2C (dir) => {\x0d\n        dir = path.resolve(dir\x2C subdir);\x0d\n        const dirents = gracefulReaddir(dir\x2C { withFileTypes: true }) || [];\x0d\n        ArrayPrototypeForEach(dirents\x2C (dirent) => {\x0d\n          if (RegExpPrototypeExec(versionedFileNamesRe\x2C dirent.name) !== null ||\x0d\n              dirent.name === '.npm') {\x0d\n            // Exclude versioned names that 'npm' installs.\x0d\n            return;\x0d\n          }\x0d\n          const extension = path.extname(dirent.name);\x0d\n          const base = StringPrototypeSlice(dirent.name\x2C 0\x2C -extension.length);\x0d\n          if (!dirent.isDirectory()) {\x0d\n            if (StringPrototypeIncludes(extensions\x2C extension) &&\x0d\n                (!subdir || base !== 'index')) {\x0d\n              ArrayPrototypePush(group\x2C `${subdir}${base}`);\x0d\n            }\x0d\n            return;\x0d\n          }\x0d\n          ArrayPrototypePush(group\x2C `${subdir}${dirent.name}/`);\x0d\n          const absolute = path.resolve(dir\x2C dirent.name);\x0d\n          if (ArrayPrototypeSome(\x0d\n            gracefulReaddir(absolute) || []\x2C\x0d\n            (subfile) => ArrayPrototypeIncludes(indexes\x2C subfile)\x2C\x0d\n          )) {\x0d\n            ArrayPrototypePush(group\x2C `${subdir}${dirent.name}`);\x0d\n          }\x0d\n        });\x0d\n      });\x0d\n      if (group.length) {\x0d\n        ArrayPrototypePush(completionGroups\x2C group);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(completionGroups\x2C _builtinLibs\x2C nodeSchemeBuiltinLibs);\x0d\n  } else if ((match = RegExpPrototypeExec(importRE\x2C line)) !== null) {\x0d\n    // import('...<Tab>')\x0d\n    completeOn = match[1];\x0d\n    filter = completeOn;\x0d\n    if (this.allowBlockingCompletions) {\x0d\n      const subdir = match[2] || '';\x0d\n      // File extensions that can be imported:\x0d\n      const extensions = ObjectKeys(extensionFormatMap);\x0d\n\x0d\n      // Only used when loading bare module specifiers from `node_modules`:\x0d\n      const indexes = ArrayPrototypeMap(extensions\x2C (ext) => `index${ext}`);\x0d\n      ArrayPrototypePush(indexes\x2C 'package.json');\x0d\n\x0d\n      group = [];\x0d\n      let paths = [];\x0d\n      if (completeOn === '.') {\x0d\n        group = ['./'\x2C '../'];\x0d\n      } else if (completeOn === '..') {\x0d\n        group = ['../'];\x0d\n      } else if (RegExpPrototypeExec(/^\\.\\.?\\//\x2C completeOn) !== null) {\x0d\n        paths = [process.cwd()];\x0d\n      } else {\x0d\n        paths = ArrayPrototypeSlice(module.paths);\x0d\n      }\x0d\n\x0d\n      ArrayPrototypeForEach(paths\x2C (dir) => {\x0d\n        dir = path.resolve(dir\x2C subdir);\x0d\n        const isInNodeModules = path.basename(dir) === 'node_modules';\x0d\n        const dirents = gracefulReaddir(dir\x2C { withFileTypes: true }) || [];\x0d\n        ArrayPrototypeForEach(dirents\x2C (dirent) => {\x0d\n          const { name } = dirent;\x0d\n          if (RegExpPrototypeExec(versionedFileNamesRe\x2C name) !== null ||\x0d\n              name === '.npm') {\x0d\n            // Exclude versioned names that 'npm' installs.\x0d\n            return;\x0d\n          }\x0d\n\x0d\n          if (!dirent.isDirectory()) {\x0d\n            const extension = path.extname(name);\x0d\n            if (StringPrototypeIncludes(extensions\x2C extension)) {\x0d\n              ArrayPrototypePush(group\x2C `${subdir}${name}`);\x0d\n            }\x0d\n            return;\x0d\n          }\x0d\n\x0d\n          ArrayPrototypePush(group\x2C `${subdir}${name}/`);\x0d\n          if (!subdir && isInNodeModules) {\x0d\n            const absolute = path.resolve(dir\x2C name);\x0d\n            const subfiles = gracefulReaddir(absolute) || [];\x0d\n            if (ArrayPrototypeSome(subfiles\x2C (subfile) => {\x0d\n              return ArrayPrototypeIncludes(indexes\x2C subfile);\x0d\n            })) {\x0d\n              ArrayPrototypePush(group\x2C `${subdir}${name}`);\x0d\n            }\x0d\n          }\x0d\n        });\x0d\n      });\x0d\n\x0d\n      if (group.length) {\x0d\n        ArrayPrototypePush(completionGroups\x2C group);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    ArrayPrototypePush(completionGroups\x2C _builtinLibs\x2C nodeSchemeBuiltinLibs);\x0d\n  } else if ((match = RegExpPrototypeExec(fsAutoCompleteRE\x2C line)) !== null &&\x0d\n             this.allowBlockingCompletions) {\x0d\n    ({ 0: completionGroups\x2C 1: completeOn } = completeFSFunctions(match));\x0d\n  // Handle variable member lookup.\x0d\n  // We support simple chained expressions like the following (no function\x0d\n  // calls\x2C etc.). That is for simplicity and also because we *eval* that\x0d\n  // leading expression so for safety (see WARNING above) don't want to\x0d\n  // eval function calls.\x0d\n  //\x0d\n  //   foo.bar<|>     # completions for 'foo' with filter 'bar'\x0d\n  //   spam.eggs.<|>  # completions for 'spam.eggs' with filter ''\x0d\n  //   foo<|>         # all scope vars with filter 'foo'\x0d\n  //   foo.<|>        # completions for 'foo' with filter ''\x0d\n  } else if (line.length === 0 ||\x0d\n             RegExpPrototypeExec(/\\w|\\.|\\$/\x2C line[line.length - 1]) !== null) {\x0d\n    const { 0: match } = RegExpPrototypeExec(simpleExpressionRE\x2C line) || [''];\x0d\n    if (line.length !== 0 && !match) {\x0d\n      completionGroupsLoaded();\x0d\n      return;\x0d\n    }\x0d\n    let expr = '';\x0d\n    completeOn = match;\x0d\n    if (StringPrototypeEndsWith(line\x2C '.')) {\x0d\n      expr = StringPrototypeSlice(match\x2C 0\x2C -1);\x0d\n    } else if (line.length !== 0) {\x0d\n      const bits = StringPrototypeSplit(match\x2C '.');\x0d\n      filter = ArrayPrototypePop(bits);\x0d\n      expr = ArrayPrototypeJoin(bits\x2C '.');\x0d\n    }\x0d\n\x0d\n    // Resolve expr and get its completions.\x0d\n    if (!expr) {\x0d\n      // Get global vars synchronously\x0d\n      ArrayPrototypePush(completionGroups\x2C\x0d\n                         getGlobalLexicalScopeNames(this[kContextId]));\x0d\n      let contextProto = this.context;\x0d\n      while ((contextProto = ObjectGetPrototypeOf(contextProto)) !== null) {\x0d\n        ArrayPrototypePush(completionGroups\x2C\x0d\n                           filteredOwnPropertyNames(contextProto));\x0d\n      }\x0d\n      const contextOwnNames = filteredOwnPropertyNames(this.context);\x0d\n      if (!this.useGlobal) {\x0d\n        // When the context is not `global`\x2C builtins are not own\x0d\n        // properties of it.\x0d\n        // `globalBuiltins` is a `SafeSet`\x2C not an Array-like.\x0d\n        ArrayPrototypePush(contextOwnNames\x2C ...globalBuiltins);\x0d\n      }\x0d\n      ArrayPrototypePush(completionGroups\x2C contextOwnNames);\x0d\n      if (filter !== '') addCommonWords(completionGroups);\x0d\n      completionGroupsLoaded();\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    let chaining = '.';\x0d\n    if (StringPrototypeEndsWith(expr\x2C '?')) {\x0d\n      expr = StringPrototypeSlice(expr\x2C 0\x2C -1);\x0d\n      chaining = '?.';\x0d\n    }\x0d\n\x0d\n    const memberGroups = [];\x0d\n    const evalExpr = `try { ${expr} } catch {}`;\x0d\n    this.eval(evalExpr\x2C this.context\x2C getREPLResourceName()\x2C (e\x2C obj) => {\x0d\n      try {\x0d\n        let p;\x0d\n        if ((typeof obj === 'object' && obj !== null) ||\x0d\n            typeof obj === 'function') {\x0d\n          memberGroups.push(filteredOwnPropertyNames(obj));\x0d\n          p = ObjectGetPrototypeOf(obj);\x0d\n        } else {\x0d\n          p = obj.constructor ? obj.constructor.prototype : null;\x0d\n        }\x0d\n        // Circular refs possible? Let's guard against that.\x0d\n        let sentinel = 5;\x0d\n        while (p !== null && sentinel-- !== 0) {\x0d\n          memberGroups.push(filteredOwnPropertyNames(p));\x0d\n          p = ObjectGetPrototypeOf(p);\x0d\n        }\x0d\n      } catch {\x0d\n        // Maybe a Proxy object without `getOwnPropertyNames` trap.\x0d\n        // We simply ignore it here\x2C as we don't want to break the\x0d\n        // autocompletion. Fixes the bug\x0d\n        // https://github.com/nodejs/node/issues/2119\x0d\n      }\x0d\n\x0d\n      if (memberGroups.length) {\x0d\n        expr += chaining;\x0d\n        ArrayPrototypeForEach(memberGroups\x2C (group) => {\x0d\n          ArrayPrototypePush(completionGroups\x2C\x0d\n                             ArrayPrototypeMap(group\x2C\x0d\n                                               (member) => `${expr}${member}`));\x0d\n        });\x0d\n        if (filter) {\x0d\n          filter = `${expr}${filter}`;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      completionGroupsLoaded();\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  return completionGroupsLoaded();\x0d\n\x0d\n  // Will be called when all completionGroups are in place\x0d\n  // Useful for async autocompletion\x0d\n  function completionGroupsLoaded() {\x0d\n    // Filter\x2C sort (within each group)\x2C uniq and merge the completion groups.\x0d\n    if (completionGroups.length && filter) {\x0d\n      const newCompletionGroups = [];\x0d\n      const lowerCaseFilter = StringPrototypeToLocaleLowerCase(filter);\x0d\n      ArrayPrototypeForEach(completionGroups\x2C (group) => {\x0d\n        const filteredGroup = ArrayPrototypeFilter(group\x2C (str) => {\x0d\n          // Filter is always case-insensitive following chromium autocomplete\x0d\n          // behavior.\x0d\n          return StringPrototypeStartsWith(\x0d\n            StringPrototypeToLocaleLowerCase(str)\x2C\x0d\n            lowerCaseFilter\x2C\x0d\n          );\x0d\n        });\x0d\n        if (filteredGroup.length) {\x0d\n          ArrayPrototypePush(newCompletionGroups\x2C filteredGroup);\x0d\n        }\x0d\n      });\x0d\n      completionGroups = newCompletionGroups;\x0d\n    }\x0d\n\x0d\n    const completions = [];\x0d\n    // Unique completions across all groups.\x0d\n    const uniqueSet = new SafeSet();\x0d\n    uniqueSet.add('');\x0d\n    // Completion group 0 is the "closest" (least far up the inheritance\x0d\n    // chain) so we put its completions last: to be closest in the REPL.\x0d\n    ArrayPrototypeForEach(completionGroups\x2C (group) => {\x0d\n      ArrayPrototypeSort(group\x2C (a\x2C b) => (b > a ? 1 : -1));\x0d\n      const setSize = uniqueSet.size;\x0d\n      ArrayPrototypeForEach(group\x2C (entry) => {\x0d\n        if (!uniqueSet.has(entry)) {\x0d\n          ArrayPrototypeUnshift(completions\x2C entry);\x0d\n          uniqueSet.add(entry);\x0d\n        }\x0d\n      });\x0d\n      // Add a separator between groups.\x0d\n      if (uniqueSet.size !== setSize) {\x0d\n        ArrayPrototypeUnshift(completions\x2C '');\x0d\n      }\x0d\n    });\x0d\n\x0d\n    // Remove obsolete group entry\x2C if present.\x0d\n    if (completions[0] === '') {\x0d\n      ArrayPrototypeShift(completions);\x0d\n    }\x0d\n\x0d\n    callback(null\x2C [completions\x2C completeOn]);\x0d\n  }\x0d\n}\x0d\n\x0d\nREPLServer.prototype.completeOnEditorMode = (callback) => (err\x2C results) => {\x0d\n  if (err) return callback(err);\x0d\n\x0d\n  const { 0: completions\x2C 1: completeOn = '' } = results;\x0d\n  let result = ArrayPrototypeFilter(completions\x2C Boolean);\x0d\n\x0d\n  if (completeOn && result.length !== 0) {\x0d\n    result = [commonPrefix(result)];\x0d\n  }\x0d\n\x0d\n  callback(null\x2C [result\x2C completeOn]);\x0d\n};\x0d\n\x0d\nREPLServer.prototype.defineCommand = function(keyword\x2C cmd) {\x0d\n  if (typeof cmd === 'function') {\x0d\n    cmd = { action: cmd };\x0d\n  } else {\x0d\n    validateFunction(cmd.action\x2C 'cmd.action');\x0d\n  }\x0d\n  this.commands[keyword] = cmd;\x0d\n};\x0d\n\x0d\n// TODO(BridgeAR): This should be replaced with acorn to build an AST. The\x0d\n// language became more complex and using a simple approach like this is not\x0d\n// sufficient anymore.\x0d\nfunction _memory(cmd) {\x0d\n  const self = this;\x0d\n  self.lines = self.lines || [];\x0d\n  self.lines.level = self.lines.level || [];\x0d\n\x0d\n  // Save the line so I can do magic later\x0d\n  if (cmd) {\x0d\n    const len = self.lines.level.length ? self.lines.level.length - 1 : 0;\x0d\n    ArrayPrototypePush(self.lines\x2C StringPrototypeRepeat('  '\x2C len) + cmd);\x0d\n  } else {\x0d\n    // I don't want to not change the format too much...\x0d\n    ArrayPrototypePush(self.lines\x2C '');\x0d\n  }\x0d\n\x0d\n  if (!cmd) {\x0d\n    self.lines.level = [];\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // I need to know "depth."\x0d\n  // Because I can not tell the difference between a } that\x0d\n  // closes an object literal and a } that closes a function\x0d\n  const countMatches = (regex\x2C str) => {\x0d\n    let count = 0;\x0d\n    while (RegExpPrototypeExec(regex\x2C str) !== null) count++;\x0d\n    return count;\x0d\n  };\x0d\n\x0d\n  // Going down is { and (   e.g. function() {\x0d\n  // going up is } and )\x0d\n  const dw = countMatches(/[{(]/g\x2C cmd);\x0d\n  const up = countMatches(/[})]/g\x2C cmd);\x0d\n  let depth = dw.length - up.length;\x0d\n\x0d\n  if (depth) {\x0d\n    (function workIt() {\x0d\n      if (depth > 0) {\x0d\n        // Going... down.\x0d\n        // Push the line#\x2C depth count\x2C and if the line is a function.\x0d\n        // Since JS only has functional scope I only need to remove\x0d\n        // "function() {" lines\x2C clearly this will not work for\x0d\n        // "function()\x0d\n        // {" but nothing should break\x2C only tab completion for local\x0d\n        // scope will not work for this function.\x0d\n        ArrayPrototypePush(self.lines.level\x2C {\x0d\n          line: self.lines.length - 1\x2C\x0d\n          depth: depth\x2C\x0d\n        });\x0d\n      } else if (depth < 0) {\x0d\n        // Going... up.\x0d\n        const curr = ArrayPrototypePop(self.lines.level);\x0d\n        if (curr) {\x0d\n          const tmp = curr.depth + depth;\x0d\n          if (tmp < 0) {\x0d\n            // More to go\x2C recurse\x0d\n            depth += curr.depth;\x0d\n            workIt();\x0d\n          } else if (tmp > 0) {\x0d\n            // Remove and push back\x0d\n            curr.depth += depth;\x0d\n            ArrayPrototypePush(self.lines.level\x2C curr);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }());\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addCommonWords(completionGroups) {\x0d\n  // Only words which do not yet exist as global property should be added to\x0d\n  // this list.\x0d\n  ArrayPrototypePush(completionGroups\x2C [\x0d\n    'async'\x2C 'await'\x2C 'break'\x2C 'case'\x2C 'catch'\x2C 'const'\x2C 'continue'\x2C\x0d\n    'debugger'\x2C 'default'\x2C 'delete'\x2C 'do'\x2C 'else'\x2C 'export'\x2C 'false'\x2C\x0d\n    'finally'\x2C 'for'\x2C 'function'\x2C 'if'\x2C 'import'\x2C 'in'\x2C 'instanceof'\x2C 'let'\x2C\x0d\n    'new'\x2C 'null'\x2C 'return'\x2C 'switch'\x2C 'this'\x2C 'throw'\x2C 'true'\x2C 'try'\x2C\x0d\n    'typeof'\x2C 'var'\x2C 'void'\x2C 'while'\x2C 'with'\x2C 'yield'\x2C\x0d\n  ]);\x0d\n}\x0d\n\x0d\nfunction _turnOnEditorMode(repl) {\x0d\n  repl.editorMode = true;\x0d\n  ReflectApply(Interface.prototype.setPrompt\x2C repl\x2C ['']);\x0d\n}\x0d\n\x0d\nfunction _turnOffEditorMode(repl) {\x0d\n  repl.editorMode = false;\x0d\n  repl.setPrompt(repl._initialPrompt);\x0d\n}\x0d\n\x0d\nfunction defineDefaultCommands(repl) {\x0d\n  repl.defineCommand('break'\x2C {\x0d\n    help: 'Sometimes you get stuck\x2C this gets you out'\x2C\x0d\n    action: function() {\x0d\n      this.clearBufferedCommand();\x0d\n      this.displayPrompt();\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  let clearMessage;\x0d\n  if (repl.useGlobal) {\x0d\n    clearMessage = 'Alias for .break';\x0d\n  } else {\x0d\n    clearMessage = 'Break\x2C and also clear the local context';\x0d\n  }\x0d\n  repl.defineCommand('clear'\x2C {\x0d\n    help: clearMessage\x2C\x0d\n    action: function() {\x0d\n      this.clearBufferedCommand();\x0d\n      if (!this.useGlobal) {\x0d\n        this.output.write('Clearing context...\\n');\x0d\n        this.resetContext();\x0d\n      }\x0d\n      this.displayPrompt();\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  repl.defineCommand('exit'\x2C {\x0d\n    help: 'Exit the REPL'\x2C\x0d\n    action: function() {\x0d\n      this.close();\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  repl.defineCommand('help'\x2C {\x0d\n    help: 'Print this help message'\x2C\x0d\n    action: function() {\x0d\n      const names = ArrayPrototypeSort(ObjectKeys(this.commands));\x0d\n      const longestNameLength = MathMaxApply(\x0d\n        ArrayPrototypeMap(names\x2C (name) => name.length)\x2C\x0d\n      );\x0d\n      ArrayPrototypeForEach(names\x2C (name) => {\x0d\n        const cmd = this.commands[name];\x0d\n        const spaces =\x0d\n          StringPrototypeRepeat(' '\x2C longestNameLength - name.length + 3);\x0d\n        const line = `.${name}${cmd.help ? spaces + cmd.help : ''}\\n`;\x0d\n        this.output.write(line);\x0d\n      });\x0d\n      this.output.write('\\nPress Ctrl+C to abort current expression\x2C ' +\x0d\n        'Ctrl+D to exit the REPL\\n');\x0d\n      this.displayPrompt();\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  repl.defineCommand('save'\x2C {\x0d\n    help: 'Save all evaluated commands in this REPL session to a file'\x2C\x0d\n    action: function(file) {\x0d\n      try {\x0d\n        fs.writeFileSync(file\x2C ArrayPrototypeJoin(this.lines\x2C '\\n'));\x0d\n        this.output.write(`Session saved to: ${file}\\n`);\x0d\n      } catch {\x0d\n        this.output.write(`Failed to save: ${file}\\n`);\x0d\n      }\x0d\n      this.displayPrompt();\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  repl.defineCommand('load'\x2C {\x0d\n    help: 'Load JS from a file into the REPL session'\x2C\x0d\n    action: function(file) {\x0d\n      try {\x0d\n        const stats = fs.statSync(file);\x0d\n        if (stats && stats.isFile()) {\x0d\n          _turnOnEditorMode(this);\x0d\n          this[kLoadingSymbol] = true;\x0d\n          const data = fs.readFileSync(file\x2C 'utf8');\x0d\n          this.write(data);\x0d\n          this[kLoadingSymbol] = false;\x0d\n          _turnOffEditorMode(this);\x0d\n          this.write('\\n');\x0d\n        } else {\x0d\n          this.output.write(\x0d\n            `Failed to load: ${file} is not a valid file\\n`\x2C\x0d\n          );\x0d\n        }\x0d\n      } catch {\x0d\n        this.output.write(`Failed to load: ${file}\\n`);\x0d\n      }\x0d\n      this.displayPrompt();\x0d\n    }\x2C\x0d\n  });\x0d\n  if (repl.terminal) {\x0d\n    repl.defineCommand('editor'\x2C {\x0d\n      help: 'Enter editor mode'\x2C\x0d\n      action() {\x0d\n        _turnOnEditorMode(this);\x0d\n        this.output.write(\x0d\n          '// Entering editor mode (Ctrl+D to finish\x2C Ctrl+C to cancel)\\n');\x0d\n      }\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction Recoverable(err) {\x0d\n  this.err = err;\x0d\n}\x0d\nObjectSetPrototypeOf(Recoverable.prototype\x2C SyntaxErrorPrototype);\x0d\nObjectSetPrototypeOf(Recoverable\x2C SyntaxError);\x0d\n\x0d\nmodule.exports = {\x0d\n  start\x2C\x0d\n  writer\x2C\x0d\n  REPLServer\x2C\x0d\n  REPL_MODE_SLOPPY\x2C\x0d\n  REPL_MODE_STRICT\x2C\x0d\n  Recoverable\x2C\x0d\n};\x0d\n\x0d\nObjectDefineProperty(module.exports\x2C 'builtinModules'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: () => _builtinLibs\x2C\x0d\n  set: (val) => _builtinLibs = val\x2C\x0d\n  enumerable: true\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(module.exports\x2C '_builtinLibs'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: pendingDeprecation ? deprecate(\x0d\n    () => _builtinLibs\x2C\x0d\n    'repl._builtinLibs is deprecated. Check module.builtinModules instead'\x2C\x0d\n    'DEP0142'\x2C\x0d\n  ) : () => _builtinLibs\x2C\x0d\n  set: pendingDeprecation ? deprecate(\x0d\n    (val) => _builtinLibs = val\x2C\x0d\n    'repl._builtinLibs is deprecated. Check module.builtinModules instead'\x2C\x0d\n    'DEP0142'\x2C\x0d\n  ) : (val) => _builtinLibs = val\x2C\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n
code-source-info,0x21de9b54c74,114,0,62703,C0O0C4O62703,,
code-creation,JS,10,181039,0x21de9b56614,2422, node:repl:1:1,0x21de9b54be8,~
code-source-info,0x21de9b
tick,0x7ff7b4b820a3,181332,0,0x0,3,0x7ff734383eb2,0x7ff734383c87,0x21de9b4dbde,0x7ff734383f77,0x7ff734383c87,0x125aa7b3c2c,0x125aa7ab020,0x3151437ffa6
code-creation,Eval,10,185070,0x21de9b6d31c,5, node:internal/deps/acorn/acorn/dist/acorn:1:1,0x21de9b6bd40,~
script-source,115,node:internal/deps/acorn/acorn/dist/acorn,(function (global\x2C factory) {\x0d\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\x0d\n  typeof define === 'function' && define.amd ? define(['exports']\x2C factory) :\x0d\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self\x2C factory(global.acorn = {}));\x0d\n})(this\x2C (function (exports) { 'use strict';\x0d\n\x0d\n  // This file was generated. Do not modify manually!\x0d\n  var astralIdentifierCodes = [509\x2C 0\x2C 227\x2C 0\x2C 150\x2C 4\x2C 294\x2C 9\x2C 1368\x2C 2\x2C 2\x2C 1\x2C 6\x2C 3\x2C 41\x2C 2\x2C 5\x2C 0\x2C 166\x2C 1\x2C 574\x2C 3\x2C 9\x2C 9\x2C 370\x2C 1\x2C 81\x2C 2\x2C 71\x2C 10\x2C 50\x2C 3\x2C 123\x2C 2\x2C 54\x2C 14\x2C 32\x2C 10\x2C 3\x2C 1\x2C 11\x2C 3\x2C 46\x2C 10\x2C 8\x2C 0\x2C 46\x2C 9\x2C 7\x2C 2\x2C 37\x2C 13\x2C 2\x2C 9\x2C 6\x2C 1\x2C 45\x2C 0\x2C 13\x2C 2\x2C 49\x2C 13\x2C 9\x2C 3\x2C 2\x2C 11\x2C 83\x2C 11\x2C 7\x2C 0\x2C 3\x2C 0\x2C 158\x2C 11\x2C 6\x2C 9\x2C 7\x2C 3\x2C 56\x2C 1\x2C 2\x2C 6\x2C 3\x2C 1\x2C 3\x2C 2\x2C 10\x2C 0\x2C 11\x2C 1\x2C 3\x2C 6\x2C 4\x2C 4\x2C 193\x2C 17\x2C 10\x2C 9\x2C 5\x2C 0\x2C 82\x2C 19\x2C 13\x2C 9\x2C 214\x2C 6\x2C 3\x2C 8\x2C 28\x2C 1\x2C 83\x2C 16\x2C 16\x2C 9\x2C 82\x2C 12\x2C 9\x2C 9\x2C 84\x2C 14\x2C 5\x2C 9\x2C 243\x2C 14\x2C 166\x2C 9\x2C 71\x2C 5\x2C 2\x2C 1\x2C 3\x2C 3\x2C 2\x2C 0\x2C 2\x2C 1\x2C 13\x2C 9\x2C 120\x2C 6\x2C 3\x2C 6\x2C 4\x2C 0\x2C 29\x2C 9\x2C 41\x2C 6\x2C 2\x2C 3\x2C 9\x2C 0\x2C 10\x2C 10\x2C 47\x2C 15\x2C 406\x2C 7\x2C 2\x2C 7\x2C 17\x2C 9\x2C 57\x2C 21\x2C 2\x2C 13\x2C 123\x2C 5\x2C 4\x2C 0\x2C 2\x2C 1\x2C 2\x2C 6\x2C 2\x2C 0\x2C 9\x2C 9\x2C 49\x2C 4\x2C 2\x2C 1\x2C 2\x2C 4\x2C 9\x2C 9\x2C 330\x2C 3\x2C 10\x2C 1\x2C 2\x2C 0\x2C 49\x2C 6\x2C 4\x2C 4\x2C 14\x2C 9\x2C 5351\x2C 0\x2C 7\x2C 14\x2C 13835\x2C 9\x2C 87\x2C 9\x2C 39\x2C 4\x2C 60\x2C 6\x2C 26\x2C 9\x2C 1014\x2C 0\x2C 2\x2C 54\x2C 8\x2C 3\x2C 82\x2C 0\x2C 12\x2C 1\x2C 19628\x2C 1\x2C 4706\x2C 45\x2C 3\x2C 22\x2C 543\x2C 4\x2C 4\x2C 5\x2C 9\x2C 7\x2C 3\x2C 6\x2C 31\x2C 3\x2C 149\x2C 2\x2C 1418\x2C 49\x2C 513\x2C 54\x2C 5\x2C 49\x2C 9\x2C 0\x2C 15\x2C 0\x2C 23\x2C 4\x2C 2\x2C 14\x2C 1361\x2C 6\x2C 2\x2C 16\x2C 3\x2C 6\x2C 2\x2C 1\x2C 2\x2C 4\x2C 101\x2C 0\x2C 161\x2C 6\x2C 10\x2C 9\x2C 357\x2C 0\x2C 62\x2C 13\x2C 499\x2C 13\x2C 983\x2C 6\x2C 110\x2C 6\x2C 6\x2C 9\x2C 4759\x2C 9\x2C 787719\x2C 239];\x0d\n\x0d\n  // This file was generated. Do not modify manually!\x0d\n  var astralIdentifierStartCodes = [0\x2C 11\x2C 2\x2C 25\x2C 2\x2C 18\x2C 2\x2C 1\x2C 2\x2C 14\x2C 3\x2C 13\x2C 35\x2C 122\x2C 70\x2C 52\x2C 268\x2C 28\x2C 4\x2C 48\x2C 48\x2C 31\x2C 14\x2C 29\x2C 6\x2C 37\x2C 11\x2C 29\x2C 3\x2C 35\x2C 5\x2C 7\x2C 2\x2C 4\x2C 43\x2C 157\x2C 19\x2C 35\x2C 5\x2C 35\x2C 5\x2C 39\x2C 9\x2C 51\x2C 13\x2C 10\x2C 2\x2C 14\x2C 2\x2C 6\x2C 2\x2C 1\x2C 2\x2C 10\x2C 2\x2C 14\x2C 2\x2C 6\x2C 2\x2C 1\x2C 68\x2C 310\x2C 10\x2C 21\x2C 11\x2C 7\x2C 25\x2C 5\x2C 2\x2C 41\x2C 2\x2C 8\x2C 70\x2C 5\x2C 3\x2C 0\x2C 2\x2C 43\x2C 2\x2C 1\x2C 4\x2C 0\x2C 3\x2C 22\x2C 11\x2C 22\x2C 10\x2C 30\x2C 66\x2C 18\x2C 2\x2C 1\x2C 11\x2C 21\x2C 11\x2C 25\x2C 71\x2C 55\x2C 7\x2C 1\x2C 65\x2C 0\x2C 16\x2C 3\x2C 2\x2C 2\x2C 2\x2C 28\x2C 43\x2C 28\x2C 4\x2C 28\x2C 36\x2C 7\x2C 2\x2C 27\x2C 28\x2C 53\x2C 11\x2C 21\x2C 11\x2C 18\x2C 14\x2C 17\x2C 111\x2C 72\x2C 56\x2C 50\x2C 14\x2C 50\x2C 14\x2C 35\x2C 349\x2C 41\x2C 7\x2C 1\x2C 79\x2C 28\x2C 11\x2C 0\x2C 9\x2C 21\x2C 43\x2C 17\x2C 47\x2C 20\x2C 28\x2C 22\x2C 13\x2C 52\x2C 58\x2C 1\x2C 3\x2C 0\x2C 14\x2C 44\x2C 33\x2C 24\x2C 27\x2C 35\x2C 30\x2C 0\x2C 3\x2C 0\x2C 9\x2C 34\x2C 4\x2C 0\x2C 13\x2C 47\x2C 15\x2C 3\x2C 22\x2C 0\x2C 2\x2C 0\x2C 36\x2C 17\x2C 2\x2C 24\x2C 20\x2C 1\x2C 64\x2C 6\x2C 2\x2C 0\x2C 2\x2C 3\x2C 2\x2C 14\x2C 2\x2C 9\x2C 8\x2C 46\x2C 39\x2C 7\x2C 3\x2C 1\x2C 3\x2C 21\x2C 2\x2C 6\x2C 2\x2C 1\x2C 2\x2C 4\x2C 4\x2C 0\x2C 19\x2C 0\x2C 13\x2C 4\x2C 159\x2C 52\x2C 19\x2C 3\x2C 21\x2C 2\x2C 31\x2C 47\x2C 21\x2C 1\x2C 2\x2C 0\x2C 185\x2C 46\x2C 42\x2C 3\x2C 37\x2C 47\x2C 21\x2C 0\x2C 60\x2C 42\x2C 14\x2C 0\x2C 72\x2C 26\x2C 38\x2C 6\x2C 186\x2C 43\x2C 117\x2C 63\x2C 32\x2C 7\x2C 3\x2C 0\x2C 3\x2C 7\x2C 2\x2C 1\x2C 2\x2C 23\x2C 16\x2C 0\x2C 2\x2C 0\x2C 95\x2C 7\x2C 3\x2C 38\x2C 17\x2C 0\x2C 2\x2C 0\x2C 29\x2C 0\x2C 11\x2C 39\x2C 8\x2C 0\x2C 22\x2C 0\x2C 12\x2C 45\x2C 20\x2C 0\x2C 19\x2C 72\x2C 264\x2C 8\x2C 2\x2C 36\x2C 18\x2C 0\x2C 50\x2C 29\x2C 113\x2C 6\x2C 2\x2C 1\x2C 2\x2C 37\x2C 22\x2C 0\x2C 26\x2C 5\x2C 2\x2C 1\x2C 2\x2C 31\x2C 15\x2C 0\x2C 328\x2C 18\x2C 16\x2C 0\x2C 2\x2C 12\x2C 2\x2C 33\x2C 125\x2C 0\x2C 80\x2C 921\x2C 103\x2C 110\x2C 18\x2C 195\x2C 2637\x2C 96\x2C 16\x2C 1071\x2C 18\x2C 5\x2C 4026\x2C 582\x2C 8634\x2C 568\x2C 8\x2C 30\x2C 18\x2C 78\x2C 18\x2C 29\x2C 19\x2C 47\x2C 17\x2C 3\x2C 32\x2C 20\x2C 6\x2C 18\x2C 689\x2C 63\x2C 129\x2C 74\x2C 6\x2C 0\x2C 67\x2C 12\x2C 65\x2C 1\x2C 2\x2C 0\x2C 29\x2C 6135\x2C 9\x2C 1237\x2C 43\x2C 8\x2C 8936\x2C 3\x2C 2\x2C 6\x2C 2\x2C 1\x2C 2\x2C 290\x2C 16\x2C 0\x2C 30\x2C 2\x2C 3\x2C 0\x2C 15\x2C 3\x2C 9\x2C 395\x2C 2309\x2C 106\x2C 6\x2C 12\x2C 4\x2C 8\x2C 8\x2C 9\x2C 5991\x2C 84\x2C 2\x2C 70\x2C 2\x2C 1\x2C 3\x2C 0\x2C 3\x2C 1\x2C 3\x2C 3\x2C 2\x2C 11\x2C 2\x2C 0\x2C 2\x2C 6\x2C 2\x2C 64\x2C 2\x2C 3\x2C 3\x2C 7\x2C 2\x2C 6\x2C 2\x2C 27\x2C 2\x2C 3\x2C 2\x2C 4\x2C 2\x2C 0\x2C 4\x2C 6\x2C 2\x2C 339\x2C 3\x2C 24\x2C 2\x2C 24\x2C 2\x2C 30\x2C 2\x2C 24\x2C 2\x2C 30\x2C 2\x2C 24\x2C 2\x2C 30\x2C 2\x2C 24\x2C 2\x2C 30\x2C 2\x2C 24\x2C 2\x2C 7\x2C 1845\x2C 30\x2C 7\x2C 5\x2C 262\x2C 61\x2C 147\x2C 44\x2C 11\x2C 6\x2C 17\x2C 0\x2C 322\x2C 29\x2C 19\x2C 43\x2C 485\x2C 27\x2C 757\x2C 6\x2C 2\x2C 3\x2C 2\x2C 1\x2C 2\x2C 14\x2C 2\x2C 196\x2C 60\x2C 67\x2C 8\x2C 0\x2C 1205\x2C 3\x2C 2\x2C 26\x2C 2\x2C 1\x2C 2\x2C 0\x2C 3\x2C 0\x2C 2\x2C 9\x2C 2\x2C 3\x2C 2\x2C 0\x2C 2\x2C 0\x2C 7\x2C 0\x2C 5\x2C 0\x2C 2\x2C 0\x2C 2\x2C 0\x2C 2\x2C 2\x2C 2\x2C 1\x2C 2\x2C 0\x2C 3\x2C 0\x2C 2\x2C 0\x2C 2\x2C 0\x2C 2\x2C 0\x2C 2\x2C 0\x2C 2\x2C 1\x2C 2\x2C 0\x2C 3\x2C 3\x2C 2\x2C 6\x2C 2\x2C 3\x2C 2\x2C 3\x2C 2\x2C 0\x2C 2\x2C 9\x2C 2\x2C 16\x2C 6\x2C 2\x2C 2\x2C 4\x2C 2\x2C 16\x2C 4421\x2C 42719\x2C 33\x2C 4153\x2C 7\x2C 221\x2C 3\x2C 5761\x2C 15\x2C 7472\x2C 16\x2C 621\x2C 2467\x2C 541\x2C 1507\x2C 4938\x2C 6\x2C 4191];\x0d\n\x0d\n  // This file was generated. Do not modify manually!\x0d\n  var nonASCIIidentifierChars = "\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0cf3\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ece\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u200c\\u200d\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\u30fb\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\\uff65";\x0d\n\x0d\n  // This file was generated. Do not modify manually!\x0d\n  var nonASCIIidentifierStartChars = "\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc";\x0d\n\x0d\n  // These are a run-length and offset encoded representation of the\x0d\n  // >0xffff code points that are a valid part of identifiers. The\x0d\n  // offset starts at 0x10000\x2C and each pair of numbers represents an\x0d\n  // offset to the next range\x2C and then a size of the range.\x0d\n\x0d\n  // Reserved word lists for various dialects of the language\x0d\n\x0d\n  var reservedWords = {\x0d\n    3: "abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile"\x2C\x0d\n    5: "class enum extends super const export import"\x2C\x0d\n    6: "enum"\x2C\x0d\n    strict: "implements interface let package private protected public static yield"\x2C\x0d\n    strictBind: "eval arguments"\x0d\n  };\x0d\n\x0d\n  // And the keywords\x0d\n\x0d\n  var ecma5AndLessKeywords = "break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this";\x0d\n\x0d\n  var keywords$1 = {\x0d\n    5: ecma5AndLessKeywords\x2C\x0d\n    "5module": ecma5AndLessKeywords + " export import"\x2C\x0d\n    6: ecma5AndLessKeywords + " const class extends export import super"\x0d\n  };\x0d\n\x0d\n  var keywordRelationalOperator = /^in(stanceof)?$/;\x0d\n\x0d\n  // ## Character categories\x0d\n\x0d\n  var nonASCIIidentifierStart = new RegExp("[" + nonASCIIidentifierStartChars + "]");\x0d\n  var nonASCIIidentifier = new RegExp("[" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + "]");\x0d\n\x0d\n  // This has a complexity linear to the value of the code. The\x0d\n  // assumption is that looking up astral identifier characters is\x0d\n  // rare.\x0d\n  function isInAstralSet(code\x2C set) {\x0d\n    var pos = 0x10000;\x0d\n    for (var i = 0; i < set.length; i += 2) {\x0d\n      pos += set[i];\x0d\n      if (pos > code) { return false }\x0d\n      pos += set[i + 1];\x0d\n      if (pos >= code) { return true }\x0d\n    }\x0d\n    return false\x0d\n  }\x0d\n\x0d\n  // Test whether a given character code starts an identifier.\x0d\n\x0d\n  function isIdentifierStart(code\x2C astral) {\x0d\n    if (code < 65) { return code === 36 }\x0d\n    if (code < 91) { return true }\x0d\n    if (code < 97) { return code === 95 }\x0d\n    if (code < 123) { return true }\x0d\n    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\x0d\n    if (astral === false) { return false }\x0d\n    return isInAstralSet(code\x2C astralIdentifierStartCodes)\x0d\n  }\x0d\n\x0d\n  // Test whether a given character is part of an identifier.\x0d\n\x0d\n  function isIdentifierChar(code\x2C astral) {\x0d\n    if (code < 48) { return code === 36 }\x0d\n    if (code < 58) { return true }\x0d\n    if (code < 65) { return false }\x0d\n    if (code < 91) { return true }\x0d\n    if (code < 97) { return code === 95 }\x0d\n    if (code < 123) { return true }\x0d\n    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\x0d\n    if (astral === false) { return false }\x0d\n    return isInAstralSet(code\x2C astralIdentifierStartCodes) || isInAstralSet(code\x2C astralIdentifierCodes)\x0d\n  }\x0d\n\x0d\n  // ## Token types\x0d\n\x0d\n  // The assignment of fine-grained\x2C information-carrying type objects\x0d\n  // allows the tokenizer to store the information it has about a\x0d\n  // token in a way that is very cheap for the parser to look up.\x0d\n\x0d\n  // All token type variables start with an underscore\x2C to make them\x0d\n  // easy to recognize.\x0d\n\x0d\n  // The `beforeExpr` property is used to disambiguate between regular\x0d\n  // expressions and divisions. It is set on all token types that can\x0d\n  // be followed by an expression (thus\x2C a slash after them would be a\x0d\n  // regular expression).\x0d\n  //\x0d\n  // The `startsExpr` property is used to check if the token ends a\x0d\n  // `yield` expression. It is set on all token types that either can\x0d\n  // directly start an expression (like a quotation mark) or can\x0d\n  // continue an expression (like the body of a string).\x0d\n  //\x0d\n  // `isLoop` marks a keyword as starting a loop\x2C which is important\x0d\n  // to know when parsing a label\x2C in order to allow or disallow\x0d\n  // continue jumps to that label.\x0d\n\x0d\n  var TokenType = function TokenType(label\x2C conf) {\x0d\n    if ( conf === void 0 ) conf = {};\x0d\n\x0d\n    this.label = label;\x0d\n    this.keyword = conf.keyword;\x0d\n    this.beforeExpr = !!conf.beforeExpr;\x0d\n    this.startsExpr = !!conf.startsExpr;\x0d\n    this.isLoop = !!conf.isLoop;\x0d\n    this.isAssign = !!conf.isAssign;\x0d\n    this.prefix = !!conf.prefix;\x0d\n    this.postfix = !!conf.postfix;\x0d\n    this.binop = conf.binop || null;\x0d\n    this.updateContext = null;\x0d\n  };\x0d\n\x0d\n  function binop(name\x2C prec) {\x0d\n    return new TokenType(name\x2C {beforeExpr: true\x2C binop: prec})\x0d\n  }\x0d\n  var beforeExpr = {beforeExpr: true}\x2C startsExpr = {startsExpr: true};\x0d\n\x0d\n  // Map keyword names to token types.\x0d\n\x0d\n  var keywords = {};\x0d\n\x0d\n  // Succinct definitions of keyword token types\x0d\n  function kw(name\x2C options) {\x0d\n    if ( options === void 0 ) options = {};\x0d\n\x0d\n    options.keyword = name;\x0d\n    return keywords[name] = new TokenType(name\x2C options)\x0d\n  }\x0d\n\x0d\n  var types$1 = {\x0d\n    num: new TokenType("num"\x2C startsExpr)\x2C\x0d\n    regexp: new TokenType("regexp"\x2C startsExpr)\x2C\x0d\n    string: new TokenType("string"\x2C startsExpr)\x2C\x0d\n    name: new TokenType("name"\x2C startsExpr)\x2C\x0d\n    privateId: new TokenType("privateId"\x2C startsExpr)\x2C\x0d\n    eof: new TokenType("eof")\x2C\x0d\n\x0d\n    // Punctuation token types.\x0d\n    bracketL: new TokenType("["\x2C {beforeExpr: true\x2C startsExpr: true})\x2C\x0d\n    bracketR: new TokenType("]")\x2C\x0d\n    braceL: new TokenType("{"\x2C {beforeExpr: true\x2C startsExpr: true})\x2C\x0d\n    braceR: new TokenType("}")\x2C\x0d\n    parenL: new TokenType("("\x2C {beforeExpr: true\x2C startsExpr: true})\x2C\x0d\n    parenR: new TokenType(")")\x2C\x0d\n    comma: new TokenType("\x2C"\x2C beforeExpr)\x2C\x0d\n    semi: new TokenType(";"\x2C beforeExpr)\x2C\x0d\n    colon: new TokenType(":"\x2C beforeExpr)\x2C\x0d\n    dot: new TokenType(".")\x2C\x0d\n    question: new TokenType("?"\x2C beforeExpr)\x2C\x0d\n    questionDot: new TokenType("?.")\x2C\x0d\n    arrow: new TokenType("=>"\x2C beforeExpr)\x2C\x0d\n    template: new TokenType("template")\x2C\x0d\n    invalidTemplate: new TokenType("invalidTemplate")\x2C\x0d\n    ellipsis: new TokenType("..."\x2C beforeExpr)\x2C\x0d\n    backQuote: new TokenType("`"\x2C startsExpr)\x2C\x0d\n    dollarBraceL: new TokenType("${"\x2C {beforeExpr: true\x2C startsExpr: true})\x2C\x0d\n\x0d\n    // Operators. These carry several kinds of properties to help the\x0d\n    // parser use them properly (the presence of these properties is\x0d\n    // what categorizes them as operators).\x0d\n    //\x0d\n    // `binop`\x2C when present\x2C specifies that this operator is a binary\x0d\n    // operator\x2C and will refer to its precedence.\x0d\n    //\x0d\n    // `prefix` and `postfix` mark the operator as a prefix or postfix\x0d\n    // unary operator.\x0d\n    //\x0d\n    // `isAssign` marks all of `=`\x2C `+=`\x2C `-=` etcetera\x2C which act as\x0d\n    // binary operators with a very low precedence\x2C that should result\x0d\n    // in AssignmentExpression nodes.\x0d\n\x0d\n    eq: new TokenType("="\x2C {beforeExpr: true\x2C isAssign: true})\x2C\x0d\n    assign: new TokenType("_="\x2C {beforeExpr: true\x2C isAssign: true})\x2C\x0d\n    incDec: new TokenType("++/--"\x2C {prefix: true\x2C postfix: true\x2C startsExpr: true})\x2C\x0d\n    prefix: new TokenType("!/~"\x2C {beforeExpr: true\x2C prefix: true\x2C startsExpr: true})\x2C\x0d\n    logicalOR: binop("||"\x2C 1)\x2C\x0d\n    logicalAND: binop("&&"\x2C 2)\x2C\x0d\n    bitwiseOR: binop("|"\x2C 3)\x2C\x0d\n    bitwiseXOR: binop("^"\x2C 4)\x2C\x0d\n    bitwiseAND: binop("&"\x2C 5)\x2C\x0d\n    equality: binop("==/!=/===/!=="\x2C 6)\x2C\x0d\n    relational: binop("</>/<=/>="\x2C 7)\x2C\x0d\n    bitShift: binop("<</>>/>>>"\x2C 8)\x2C\x0d\n    plusMin: new TokenType("+/-"\x2C {beforeExpr: true\x2C binop: 9\x2C prefix: true\x2C startsExpr: true})\x2C\x0d\n    modulo: binop("%"\x2C 10)\x2C\x0d\n    star: binop("*"\x2C 10)\x2C\x0d\n    slash: binop("/"\x2C 10)\x2C\x0d\n    starstar: new TokenType("**"\x2C {beforeExpr: true})\x2C\x0d\n    coalesce: binop("??"\x2C 1)\x2C\x0d\n\x0d\n    // Keyword token types.\x0d\n    _break: kw("break")\x2C\x0d\n    _case: kw("case"\x2C beforeExpr)\x2C\x0d\n    _catch: kw("catch")\x2C\x0d\n    _continue: kw("continue")\x2C\x0d\n    _debugger: kw("debugger")\x2C\x0d\n    _default: kw("default"\x2C beforeExpr)\x2C\x0d\n    _do: kw("do"\x2C {isLoop: true\x2C beforeExpr: true})\x2C\x0d\n    _else: kw("else"\x2C beforeExpr)\x2C\x0d\n    _finally: kw("finally")\x2C\x0d\n    _for: kw("for"\x2C {isLoop: true})\x2C\x0d\n    _function: kw("function"\x2C startsExpr)\x2C\x0d\n    _if: kw("if")\x2C\x0d\n    _return: kw("return"\x2C beforeExpr)\x2C\x0d\n    _switch: kw("switch")\x2C\x0d\n    _throw: kw("throw"\x2C beforeExpr)\x2C\x0d\n    _try: kw("try")\x2C\x0d\n    _var: kw("var")\x2C\x0d\n    _const: kw("const")\x2C\x0d\n    _while: kw("while"\x2C {isLoop: true})\x2C\x0d\n    _with: kw("with")\x2C\x0d\n    _new: kw("new"\x2C {beforeExpr: true\x2C startsExpr: true})\x2C\x0d\n    _this: kw("this"\x2C startsExpr)\x2C\x0d\n    _super: kw("super"\x2C startsExpr)\x2C\x0d\n    _class: kw("class"\x2C startsExpr)\x2C\x0d\n    _extends: kw("extends"\x2C beforeExpr)\x2C\x0d\n    _export: kw("export")\x2C\x0d\n    _import: kw("import"\x2C startsExpr)\x2C\x0d\n    _null: kw("null"\x2C startsExpr)\x2C\x0d\n    _true: kw("true"\x2C startsExpr)\x2C\x0d\n    _false: kw("false"\x2C startsExpr)\x2C\x0d\n    _in: kw("in"\x2C {beforeExpr: true\x2C binop: 7})\x2C\x0d\n    _instanceof: kw("instanceof"\x2C {beforeExpr: true\x2C binop: 7})\x2C\x0d\n    _typeof: kw("typeof"\x2C {beforeExpr: true\x2C prefix: true\x2C startsExpr: true})\x2C\x0d\n    _void: kw("void"\x2C {beforeExpr: true\x2C prefix: true\x2C startsExpr: true})\x2C\x0d\n    _delete: kw("delete"\x2C {beforeExpr: true\x2C prefix: true\x2C startsExpr: true})\x0d\n  };\x0d\n\x0d\n  // Matches a whole line break (where CRLF is considered a single\x0d\n  // line break). Used to count lines.\x0d\n\x0d\n  var lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\x0d\n  var lineBreakG = new RegExp(lineBreak.source\x2C "g");\x0d\n\x0d\n  function isNewLine(code) {\x0d\n    return code === 10 || code === 13 || code === 0x2028 || code === 0x2029\x0d\n  }\x0d\n\x0d\n  function nextLineBreak(code\x2C from\x2C end) {\x0d\n    if ( end === void 0 ) end = code.length;\x0d\n\x0d\n    for (var i = from; i < end; i++) {\x0d\n      var next = code.charCodeAt(i);\x0d\n      if (isNewLine(next))\x0d\n        { return i < end - 1 && next === 13 && code.charCodeAt(i + 1) === 10 ? i + 2 : i + 1 }\x0d\n    }\x0d\n    return -1\x0d\n  }\x0d\n\x0d\n  var nonASCIIwhitespace = /[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\x0d\n\x0d\n  var skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\x0d\n\x0d\n  var ref = Object.prototype;\x0d\n  var hasOwnProperty = ref.hasOwnProperty;\x0d\n  var toString = ref.toString;\x0d\n\x0d\n  var hasOwn = Object.hasOwn || (function (obj\x2C propName) { return (\x0d\n    hasOwnProperty.call(obj\x2C propName)\x0d\n  ); });\x0d\n\x0d\n  var isArray = Array.isArray || (function (obj) { return (\x0d\n    toString.call(obj) === "[object Array]"\x0d\n  ); });\x0d\n\x0d\n  var regexpCache = Object.create(null);\x0d\n\x0d\n  function wordsRegexp(words) {\x0d\n    return regexpCache[words] || (regexpCache[words] = new RegExp("^(?:" + words.replace(/ /g\x2C "|") + ")$"))\x0d\n  }\x0d\n\x0d\n  function codePointToString(code) {\x0d\n    // UTF-16 Decoding\x0d\n    if (code <= 0xFFFF) { return String.fromCharCode(code) }\x0d\n    code -= 0x10000;\x0d\n    return String.fromCharCode((code >> 10) + 0xD800\x2C (code & 1023) + 0xDC00)\x0d\n  }\x0d\n\x0d\n  var loneSurrogate = /(?:[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/;\x0d\n\x0d\n  // These are used when `options.locations` is on\x2C for the\x0d\n  // `startLoc` and `endLoc` properties.\x0d\n\x0d\n  var Position = function Position(line\x2C col) {\x0d\n    this.line = line;\x0d\n    this.column = col;\x0d\n  };\x0d\n\x0d\n  Position.prototype.offset = function offset (n) {\x0d\n    return new Position(this.line\x2C this.column + n)\x0d\n  };\x0d\n\x0d\n  var SourceLocation = function SourceLocation(p\x2C start\x2C end) {\x0d\n    this.start = start;\x0d\n    this.end = end;\x0d\n    if (p.sourceFile !== null) { this.source = p.sourceFile; }\x0d\n  };\x0d\n\x0d\n  // The `getLineInfo` function is mostly useful when the\x0d\n  // `locations` option is off (for performance reasons) and you\x0d\n  // want to find the line/column position for a given character\x0d\n  // offset. `input` should be the code string that the offset refers\x0d\n  // into.\x0d\n\x0d\n  function getLineInfo(input\x2C offset) {\x0d\n    for (var line = 1\x2C cur = 0;;) {\x0d\n      var nextBreak = nextLineBreak(input\x2C cur\x2C offset);\x0d\n      if (nextBreak < 0) { return new Position(line\x2C offset - cur) }\x0d\n      ++line;\x0d\n      cur = nextBreak;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // A second argument must be given to configure the parser process.\x0d\n  // These options are recognized (only `ecmaVersion` is required):\x0d\n\x0d\n  var defaultOptions = {\x0d\n    // `ecmaVersion` indicates the ECMAScript version to parse. Must be\x0d\n    // either 3\x2C 5\x2C 6 (or 2015)\x2C 7 (2016)\x2C 8 (2017)\x2C 9 (2018)\x2C 10\x0d\n    // (2019)\x2C 11 (2020)\x2C 12 (2021)\x2C 13 (2022)\x2C 14 (2023)\x2C or `"latest"`\x0d\n    // (the latest version the library supports). This influences\x0d\n    // support for strict mode\x2C the set of reserved words\x2C and support\x0d\n    // for new syntax features.\x0d\n    ecmaVersion: null\x2C\x0d\n    // `sourceType` indicates the mode the code should be parsed in.\x0d\n    // Can be either `"script"` or `"module"`. This influences global\x0d\n    // strict mode and parsing of `import` and `export` declarations.\x0d\n    sourceType: "script"\x2C\x0d\n    // `onInsertedSemicolon` can be a callback that will be called when\x0d\n    // a semicolon is automatically inserted. It will be passed the\x0d\n    // position of the inserted semicolon as an offset\x2C and if\x0d\n    // `locations` is enabled\x2C it is given the location as a `{line\x2C\x0d\n    // column}` object as second argument.\x0d\n    onInsertedSemicolon: null\x2C\x0d\n    // `onTrailingComma` is similar to `onInsertedSemicolon`\x2C but for\x0d\n    // trailing commas.\x0d\n    onTrailingComma: null\x2C\x0d\n    // By default\x2C reserved words are only enforced if ecmaVersion >= 5.\x0d\n    // Set `allowReserved` to a boolean value to explicitly turn this on\x0d\n    // an off. When this option has the value "never"\x2C reserved words\x0d\n    // and keywords can also not be used as property names.\x0d\n    allowReserved: null\x2C\x0d\n    // When enabled\x2C a return at the top level is not considered an\x0d\n    // error.\x0d\n    allowReturnOutsideFunction: false\x2C\x0d\n    // When enabled\x2C import/export statements are not constrained to\x0d\n    // appearing at the top of the program\x2C and an import.meta expression\x0d\n    // in a script isn't considered an error.\x0d\n    allowImportExportEverywhere: false\x2C\x0d\n    // By default\x2C await identifiers are allowed to appear at the top-level scope only if ecmaVersion >= 2022.\x0d\n    // When enabled\x2C await identifiers are allowed to appear at the top-level scope\x2C\x0d\n    // but they are still not allowed in non-async functions.\x0d\n    allowAwaitOutsideFunction: null\x2C\x0d\n    // When enabled\x2C super identifiers are not constrained to\x0d\n    // appearing in methods and do not raise an error when they appear elsewhere.\x0d\n    allowSuperOutsideMethod: null\x2C\x0d\n    // When enabled\x2C hashbang directive in the beginning of file is\x0d\n    // allowed and treated as a line comment. Enabled by default when\x0d\n    // `ecmaVersion` >= 2023.\x0d\n    allowHashBang: false\x2C\x0d\n    // By default\x2C the parser will verify that private properties are\x0d\n    // only used in places where they are valid and have been declared.\x0d\n    // Set this to false to turn such checks off.\x0d\n    checkPrivateFields: true\x2C\x0d\n    // When `locations` is on\x2C `loc` properties holding objects with\x0d\n    // `start` and `end` properties in `{line\x2C column}` form (with\x0d\n    // line being 1-based and column 0-based) will be attached to the\x0d\n    // nodes.\x0d\n    locations: false\x2C\x0d\n    // A function can be passed as `onToken` option\x2C which will\x0d\n    // cause Acorn to call that function with object in the same\x0d\n    // format as tokens returned from `tokenizer().getToken()`. Note\x0d\n    // that you are not allowed to call the parser from the\x0d\n    // callback\u2014that will corrupt its internal state.\x0d\n    onToken: null\x2C\x0d\n    // A function can be passed as `onComment` option\x2C which will\x0d\n    // cause Acorn to call that function with `(block\x2C text\x2C start\x2C\x0d\n    // end)` parameters whenever a comment is skipped. `block` is a\x0d\n    // boolean indicating whether this is a block (`/* */`) comment\x2C\x0d\n    // `text` is the content of the comment\x2C and `start` and `end` are\x0d\n    // character offsets that denote the start and end of the comment.\x0d\n    // When the `locations` option is on\x2C two more parameters are\x0d\n    // passed\x2C the full `{line\x2C column}` locations of the start and\x0d\n    // end of the comments. Note that you are not allowed to call the\x0d\n    // parser from the callback\u2014that will corrupt its internal state.\x0d\n    // When this option has an array as value\x2C objects representing the\x0d\n    // comments are pushed to it.\x0d\n    onComment: null\x2C\x0d\n    // Nodes have their start and end characters offsets recorded in\x0d\n    // `start` and `end` properties (directly on the node\x2C rather than\x0d\n    // the `loc` object\x2C which holds line/column data. To also add a\x0d\n    // [semi-standardized][range] `range` property holding a `[start\x2C\x0d\n    // end]` array with the same numbers\x2C set the `ranges` option to\x0d\n    // `true`.\x0d\n    //\x0d\n    // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\x0d\n    ranges: false\x2C\x0d\n    // It is possible to parse multiple files into a single AST by\x0d\n    // passing the tree produced by parsing the first file as\x0d\n    // `program` option in subsequent parses. This will add the\x0d\n    // toplevel forms of the parsed file to the `Program` (top) node\x0d\n    // of an existing parse tree.\x0d\n    program: null\x2C\x0d\n    // When `locations` is on\x2C you can pass this to record the source\x0d\n    // file in every node's `loc` object.\x0d\n    sourceFile: null\x2C\x0d\n    // This value\x2C if given\x2C is stored in every node\x2C whether\x0d\n    // `locations` is on or off.\x0d\n    directSourceFile: null\x2C\x0d\n    // When enabled\x2C parenthesized expressions are represented by\x0d\n    // (non-standard) ParenthesizedExpression nodes\x0d\n    preserveParens: false\x0d\n  };\x0d\n\x0d\n  // Interpret and default an options object\x0d\n\x0d\n  var warnedAboutEcmaVersion = false;\x0d\n\x0d\n  function getOptions(opts) {\x0d\n    var options = {};\x0d\n\x0d\n    for (var opt in defaultOptions)\x0d\n      { options[opt] = opts && hasOwn(opts\x2C opt) ? opts[opt] : defaultOptions[opt]; }\x0d\n\x0d\n    if (options.ecmaVersion === "latest") {\x0d\n      options.ecmaVersion = 1e8;\x0d\n    } else if (options.ecmaVersion == null) {\x0d\n      if (!warnedAboutEcmaVersion && typeof console === "object" && console.warn) {\x0d\n        warnedAboutEcmaVersion = true;\x0d\n        console.warn("Since Acorn 8.0.0\x2C options.ecmaVersion is required.\\nDefaulting to 2020\x2C but this will stop working in the future.");\x0d\n      }\x0d\n      options.ecmaVersion = 11;\x0d\n    } else if (options.ecmaVersion >= 2015) {\x0d\n      options.ecmaVersion -= 2009;\x0d\n    }\x0d\n\x0d\n    if (options.allowReserved == null)\x0d\n      { options.allowReserved = options.ecmaVersion < 5; }\x0d\n\x0d\n    if (!opts || opts.allowHashBang == null)\x0d\n      { options.allowHashBang = options.ecmaVersion >= 14; }\x0d\n\x0d\n    if (isArray(options.onToken)) {\x0d\n      var tokens = options.onToken;\x0d\n      options.onToken = function (token) { return tokens.push(token); };\x0d\n    }\x0d\n    if (isArray(options.onComment))\x0d\n      { options.onComment = pushComment(options\x2C options.onComment); }\x0d\n\x0d\n    return options\x0d\n  }\x0d\n\x0d\n  function pushComment(options\x2C array) {\x0d\n    return function(block\x2C text\x2C start\x2C end\x2C startLoc\x2C endLoc) {\x0d\n      var comment = {\x0d\n        type: block ? "Block" : "Line"\x2C\x0d\n        value: text\x2C\x0d\n        start: start\x2C\x0d\n        end: end\x0d\n      };\x0d\n      if (options.locations)\x0d\n        { comment.loc = new SourceLocation(this\x2C startLoc\x2C endLoc); }\x0d\n      if (options.ranges)\x0d\n        { comment.range = [start\x2C end]; }\x0d\n      array.push(comment);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Each scope gets a bitset that may contain these flags\x0d\n  var\x0d\n      SCOPE_TOP = 1\x2C\x0d\n      SCOPE_FUNCTION = 2\x2C\x0d\n      SCOPE_ASYNC = 4\x2C\x0d\n      SCOPE_GENERATOR = 8\x2C\x0d\n      SCOPE_ARROW = 16\x2C\x0d\n      SCOPE_SIMPLE_CATCH = 32\x2C\x0d\n      SCOPE_SUPER = 64\x2C\x0d\n      SCOPE_DIRECT_SUPER = 128\x2C\x0d\n      SCOPE_CLASS_STATIC_BLOCK = 256\x2C\x0d\n      SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK;\x0d\n\x0d\n  function functionFlags(async\x2C generator) {\x0d\n    return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0)\x0d\n  }\x0d\n\x0d\n  // Used in checkLVal* and declareName to determine the type of a binding\x0d\n  var\x0d\n      BIND_NONE = 0\x2C // Not a binding\x0d\n      BIND_VAR = 1\x2C // Var-style binding\x0d\n      BIND_LEXICAL = 2\x2C // Let- or const-style binding\x0d\n      BIND_FUNCTION = 3\x2C // Function declaration\x0d\n      BIND_SIMPLE_CATCH = 4\x2C // Simple (identifier pattern) catch binding\x0d\n      BIND_OUTSIDE = 5; // Special case for function names as bound inside the function\x0d\n\x0d\n  var Parser = function Parser(options\x2C input\x2C startPos) {\x0d\n    this.options = options = getOptions(options);\x0d\n    this.sourceFile = options.sourceFile;\x0d\n    this.keywords = wordsRegexp(keywords$1[options.ecmaVersion >= 6 ? 6 : options.sourceType === "module" ? "5module" : 5]);\x0d\n    var reserved = "";\x0d\n    if (options.allowReserved !== true) {\x0d\n      reserved = reservedWords[options.ecmaVersion >= 6 ? 6 : options.ecmaVersion === 5 ? 5 : 3];\x0d\n      if (options.sourceType === "module") { reserved += " await"; }\x0d\n    }\x0d\n    this.reservedWords = wordsRegexp(reserved);\x0d\n    var reservedStrict = (reserved ? reserved + " " : "") + reservedWords.strict;\x0d\n    this.reservedWordsStrict = wordsRegexp(reservedStrict);\x0d\n    this.reservedWordsStrictBind = wordsRegexp(reservedStrict + " " + reservedWords.strictBind);\x0d\n    this.input = String(input);\x0d\n\x0d\n    // Used to signal to callers of `readWord1` whether the word\x0d\n    // contained any escape sequences. This is needed because words with\x0d\n    // escape sequences must not be interpreted as keywords.\x0d\n    this.containsEsc = false;\x0d\n\x0d\n    // Set up token state\x0d\n\x0d\n    // The current position of the tokenizer in the input.\x0d\n    if (startPos) {\x0d\n      this.pos = startPos;\x0d\n      this.lineStart = this.input.lastIndexOf("\\n"\x2C startPos - 1) + 1;\x0d\n      this.curLine = this.input.slice(0\x2C this.lineStart).split(lineBreak).length;\x0d\n    } else {\x0d\n      this.pos = this.lineStart = 0;\x0d\n      this.curLine = 1;\x0d\n    }\x0d\n\x0d\n    // Properties of the current token:\x0d\n    // Its type\x0d\n    this.type = types$1.eof;\x0d\n    // For tokens that include more information than their type\x2C the value\x0d\n    this.value = null;\x0d\n    // Its start and end offset\x0d\n    this.start = this.end = this.pos;\x0d\n    // And\x2C if locations are used\x2C the {line\x2C column} object\x0d\n    // corresponding to those offsets\x0d\n    this.startLoc = this.endLoc = this.curPosition();\x0d\n\x0d\n    // Position information for the previous token\x0d\n    this.lastTokEndLoc = this.lastTokStartLoc = null;\x0d\n    this.lastTokStart = this.lastTokEnd = this.pos;\x0d\n\x0d\n    // The context stack is used to superficially track syntactic\x0d\n    // context to predict whether a regular expression is allowed in a\x0d\n    // given position.\x0d\n    this.context = this.initialContext();\x0d\n    this.exprAllowed = true;\x0d\n\x0d\n    // Figure out if it's a module code.\x0d\n    this.inModule = options.sourceType === "module";\x0d\n    this.strict = this.inModule || this.strictDirective(this.pos);\x0d\n\x0d\n    // Used to signify the start of a potential arrow function\x0d\n    this.potentialArrowAt = -1;\x0d\n    this.potentialArrowInForAwait = false;\x0d\n\x0d\n    // Positions to delayed-check that yield/await does not exist in default parameters.\x0d\n    this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;\x0d\n    // Labels in scope.\x0d\n    this.labels = [];\x0d\n    // Thus-far undefined exports.\x0d\n    this.undefinedExports = Object.create(null);\x0d\n\x0d\n    // If enabled\x2C skip leading hashbang line.\x0d\n    if (this.pos === 0 && options.allowHashBang && this.input.slice(0\x2C 2) === "#!")\x0d\n      { this.skipLineComment(2); }\x0d\n\x0d\n    // Scope tracking for duplicate variable names (see scope.js)\x0d\n    this.scopeStack = [];\x0d\n    this.enterScope(SCOPE_TOP);\x0d\n\x0d\n    // For RegExp validation\x0d\n    this.regexpState = null;\x0d\n\x0d\n    // The stack of private names.\x0d\n    // Each element has two properties: 'declared' and 'used'.\x0d\n    // When it exited from the outermost class definition\x2C all used private names must be declared.\x0d\n    this.privateNameStack = [];\x0d\n  };\x0d\n\x0d\n  var prototypeAccessors = { inFunction: { configurable: true }\x2CinGenerator: { configurable: true }\x2CinAsync: { configurable: true }\x2CcanAwait: { configurable: true }\x2CallowSuper: { configurable: true }\x2CallowDirectSuper: { configurable: true }\x2CtreatFunctionsAsVar: { configurable: true }\x2CallowNewDotTarget: { configurable: true }\x2CinClassStaticBlock: { configurable: true } };\x0d\n\x0d\n  Parser.prototype.parse = function parse () {\x0d\n    var node = this.options.program || this.startNode();\x0d\n    this.nextToken();\x0d\n    return this.parseTopLevel(node)\x0d\n  };\x0d\n\x0d\n  prototypeAccessors.inFunction.get = function () { return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0 };\x0d\n\x0d\n  prototypeAccessors.inGenerator.get = function () { return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0 && !this.currentVarScope().inClassFieldInit };\x0d\n\x0d\n  prototypeAccessors.inAsync.get = function () { return (this.currentVarScope().flags & SCOPE_ASYNC) > 0 && !this.currentVarScope().inClassFieldInit };\x0d\n\x0d\n  prototypeAccessors.canAwait.get = function () {\x0d\n    for (var i = this.scopeStack.length - 1; i >= 0; i--) {\x0d\n      var scope = this.scopeStack[i];\x0d\n      if (scope.inClassFieldInit || scope.flags & SCOPE_CLASS_STATIC_BLOCK) { return false }\x0d\n      if (scope.flags & SCOPE_FUNCTION) { return (scope.flags & SCOPE_ASYNC) > 0 }\x0d\n    }\x0d\n    return (this.inModule && this.options.ecmaVersion >= 13) || this.options.allowAwaitOutsideFunction\x0d\n  };\x0d\n\x0d\n  prototypeAccessors.allowSuper.get = function () {\x0d\n    var ref = this.currentThisScope();\x0d\n      var flags = ref.flags;\x0d\n      var inClassFieldInit = ref.inClassFieldInit;\x0d\n    return (flags & SCOPE_SUPER) > 0 || inClassFieldInit || this.options.allowSuperOutsideMethod\x0d\n  };\x0d\n\x0d\n  prototypeAccessors.allowDirectSuper.get = function () { return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0 };\x0d\n\x0d\n  prototypeAccessors.treatFunctionsAsVar.get = function () { return this.treatFunctionsAsVarInScope(this.currentScope()) };\x0d\n\x0d\n  prototypeAccessors.allowNewDotTarget.get = function () {\x0d\n    var ref = this.currentThisScope();\x0d\n      var flags = ref.flags;\x0d\n      var inClassFieldInit = ref.inClassFieldInit;\x0d\n    return (flags & (SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK)) > 0 || inClassFieldInit\x0d\n  };\x0d\n\x0d\n  prototypeAccessors.inClassStaticBlock.get = function () {\x0d\n    return (this.currentVarScope().flags & SCOPE_CLASS_STATIC_BLOCK) > 0\x0d\n  };\x0d\n\x0d\n  Parser.extend = function extend () {\x0d\n      var plugins = []\x2C len = arguments.length;\x0d\n      while ( len-- ) plugins[ len ] = arguments[ len ];\x0d\n\x0d\n    var cls = this;\x0d\n    for (var i = 0; i < plugins.length; i++) { cls = plugins[i](cls); }\x0d\n    return cls\x0d\n  };\x0d\n\x0d\n  Parser.parse = function parse (input\x2C options) {\x0d\n    return new this(options\x2C input).parse()\x0d\n  };\x0d\n\x0d\n  Parser.parseExpressionAt = function parseExpressionAt (input\x2C pos\x2C options) {\x0d\n    var parser = new this(options\x2C input\x2C pos);\x0d\n    parser.nextToken();\x0d\n    return parser.parseExpression()\x0d\n  };\x0d\n\x0d\n  Parser.tokenizer = function tokenizer (input\x2C options) {\x0d\n    return new this(options\x2C input)\x0d\n  };\x0d\n\x0d\n  Object.defineProperties( Parser.prototype\x2C prototypeAccessors );\x0d\n\x0d\n  var pp$9 = Parser.prototype;\x0d\n\x0d\n  // ## Parser utilities\x0d\n\x0d\n  var literal = /^(?:'((?:\\\\.|[^'\\\\])*?)'|"((?:\\\\.|[^"\\\\])*?)")/;\x0d\n  pp$9.strictDirective = function(start) {\x0d\n    if (this.options.ecmaVersion < 5) { return false }\x0d\n    for (;;) {\x0d\n      // Try to find string literal.\x0d\n      skipWhiteSpace.lastIndex = start;\x0d\n      start += skipWhiteSpace.exec(this.input)[0].length;\x0d\n      var match = literal.exec(this.input.slice(start));\x0d\n      if (!match) { return false }\x0d\n      if ((match[1] || match[2]) === "use strict") {\x0d\n        skipWhiteSpace.lastIndex = start + match[0].length;\x0d\n        var spaceAfter = skipWhiteSpace.exec(this.input)\x2C end = spaceAfter.index + spaceAfter[0].length;\x0d\n        var next = this.input.charAt(end);\x0d\n        return next === ";" || next === "}" ||\x0d\n          (lineBreak.test(spaceAfter[0]) &&\x0d\n           !(/[(`.[+\\-/*%<>=\x2C?^&]/.test(next) || next === "!" && this.input.charAt(end + 1) === "="))\x0d\n      }\x0d\n      start += match[0].length;\x0d\n\x0d\n      // Skip semicolon\x2C if any.\x0d\n      skipWhiteSpace.lastIndex = start;\x0d\n      start += skipWhiteSpace.exec(this.input)[0].length;\x0d\n      if (this.input[start] === ";")\x0d\n        { start++; }\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Predicate that tests whether the next token is of the given\x0d\n  // type\x2C and if yes\x2C consumes it as a side effect.\x0d\n\x0d\n  pp$9.eat = function(type) {\x0d\n    if (this.type === type) {\x0d\n      this.next();\x0d\n      return true\x0d\n    } else {\x0d\n      return false\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Tests whether parsed token is a contextual keyword.\x0d\n\x0d\n  pp$9.isContextual = function(name) {\x0d\n    return this.type === types$1.name && this.value === name && !this.containsEsc\x0d\n  };\x0d\n\x0d\n  // Consumes contextual keyword if possible.\x0d\n\x0d\n  pp$9.eatContextual = function(name) {\x0d\n    if (!this.isContextual(name)) { return false }\x0d\n    this.next();\x0d\n    return true\x0d\n  };\x0d\n\x0d\n  // Asserts that following token is given contextual keyword.\x0d\n\x0d\n  pp$9.expectContextual = function(name) {\x0d\n    if (!this.eatContextual(name)) { this.unexpected(); }\x0d\n  };\x0d\n\x0d\n  // Test whether a semicolon can be inserted at the current position.\x0d\n\x0d\n  pp$9.canInsertSemicolon = function() {\x0d\n    return this.type === types$1.eof ||\x0d\n      this.type === types$1.braceR ||\x0d\n      lineBreak.test(this.input.slice(this.lastTokEnd\x2C this.start))\x0d\n  };\x0d\n\x0d\n  pp$9.insertSemicolon = function() {\x0d\n    if (this.canInsertSemicolon()) {\x0d\n      if (this.options.onInsertedSemicolon)\x0d\n        { this.options.onInsertedSemicolon(this.lastTokEnd\x2C this.lastTokEndLoc); }\x0d\n      return true\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Consume a semicolon\x2C or\x2C failing that\x2C see if we are allowed to\x0d\n  // pretend that there is a semicolon at this position.\x0d\n\x0d\n  pp$9.semicolon = function() {\x0d\n    if (!this.eat(types$1.semi) && !this.insertSemicolon()) { this.unexpected(); }\x0d\n  };\x0d\n\x0d\n  pp$9.afterTrailingComma = function(tokType\x2C notNext) {\x0d\n    if (this.type === tokType) {\x0d\n      if (this.options.onTrailingComma)\x0d\n        { this.options.onTrailingComma(this.lastTokStart\x2C this.lastTokStartLoc); }\x0d\n      if (!notNext)\x0d\n        { this.next(); }\x0d\n      return true\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Expect a token of a given type. If found\x2C consume it\x2C otherwise\x2C\x0d\n  // raise an unexpected token error.\x0d\n\x0d\n  pp$9.expect = function(type) {\x0d\n    this.eat(type) || this.unexpected();\x0d\n  };\x0d\n\x0d\n  // Raise an unexpected token error.\x0d\n\x0d\n  pp$9.unexpected = function(pos) {\x0d\n    this.raise(pos != null ? pos : this.start\x2C "Unexpected token");\x0d\n  };\x0d\n\x0d\n  var DestructuringErrors = function DestructuringErrors() {\x0d\n    this.shorthandAssign =\x0d\n    this.trailingComma =\x0d\n    this.parenthesizedAssign =\x0d\n    this.parenthesizedBind =\x0d\n    this.doubleProto =\x0d\n      -1;\x0d\n  };\x0d\n\x0d\n  pp$9.checkPatternErrors = function(refDestructuringErrors\x2C isAssign) {\x0d\n    if (!refDestructuringErrors) { return }\x0d\n    if (refDestructuringErrors.trailingComma > -1)\x0d\n      { this.raiseRecoverable(refDestructuringErrors.trailingComma\x2C "Comma is not permitted after the rest element"); }\x0d\n    var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\x0d\n    if (parens > -1) { this.raiseRecoverable(parens\x2C isAssign ? "Assigning to rvalue" : "Parenthesized pattern"); }\x0d\n  };\x0d\n\x0d\n  pp$9.checkExpressionErrors = function(refDestructuringErrors\x2C andThrow) {\x0d\n    if (!refDestructuringErrors) { return false }\x0d\n    var shorthandAssign = refDestructuringErrors.shorthandAssign;\x0d\n    var doubleProto = refDestructuringErrors.doubleProto;\x0d\n    if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }\x0d\n    if (shorthandAssign >= 0)\x0d\n      { this.raise(shorthandAssign\x2C "Shorthand property assignments are valid only in destructuring patterns"); }\x0d\n    if (doubleProto >= 0)\x0d\n      { this.raiseRecoverable(doubleProto\x2C "Redefinition of __proto__ property"); }\x0d\n  };\x0d\n\x0d\n  pp$9.checkYieldAwaitInDefaultParams = function() {\x0d\n    if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\x0d\n      { this.raise(this.yieldPos\x2C "Yield expression cannot be a default value"); }\x0d\n    if (this.awaitPos)\x0d\n      { this.raise(this.awaitPos\x2C "Await expression cannot be a default value"); }\x0d\n  };\x0d\n\x0d\n  pp$9.isSimpleAssignTarget = function(expr) {\x0d\n    if (expr.type === "ParenthesizedExpression")\x0d\n      { return this.isSimpleAssignTarget(expr.expression) }\x0d\n    return expr.type === "Identifier" || expr.type === "MemberExpression"\x0d\n  };\x0d\n\x0d\n  var pp$8 = Parser.prototype;\x0d\n\x0d\n  // ### Statement parsing\x0d\n\x0d\n  // Parse a program. Initializes the parser\x2C reads any number of\x0d\n  // statements\x2C and wraps them in a Program node.  Optionally takes a\x0d\n  // `program` argument.  If present\x2C the statements will be appended\x0d\n  // to its body instead of creating a new node.\x0d\n\x0d\n  pp$8.parseTopLevel = function(node) {\x0d\n    var exports = Object.create(null);\x0d\n    if (!node.body) { node.body = []; }\x0d\n    while (this.type !== types$1.eof) {\x0d\n      var stmt = this.parseStatement(null\x2C true\x2C exports);\x0d\n      node.body.push(stmt);\x0d\n    }\x0d\n    if (this.inModule)\x0d\n      { for (var i = 0\x2C list = Object.keys(this.undefinedExports); i < list.length; i += 1)\x0d\n        {\x0d\n          var name = list[i];\x0d\n\x0d\n          this.raiseRecoverable(this.undefinedExports[name].start\x2C ("Export '" + name + "' is not defined"));\x0d\n        } }\x0d\n    this.adaptDirectivePrologue(node.body);\x0d\n    this.next();\x0d\n    node.sourceType = this.options.sourceType;\x0d\n    return this.finishNode(node\x2C "Program")\x0d\n  };\x0d\n\x0d\n  var loopLabel = {kind: "loop"}\x2C switchLabel = {kind: "switch"};\x0d\n\x0d\n  pp$8.isLet = function(context) {\x0d\n    if (this.options.ecmaVersion < 6 || !this.isContextual("let")) { return false }\x0d\n    skipWhiteSpace.lastIndex = this.pos;\x0d\n    var skip = skipWhiteSpace.exec(this.input);\x0d\n    var next = this.pos + skip[0].length\x2C nextCh = this.input.charCodeAt(next);\x0d\n    // For ambiguous cases\x2C determine if a LexicalDeclaration (or only a\x0d\n    // Statement) is allowed here. If context is not empty then only a Statement\x0d\n    // is allowed. However\x2C `let [` is an explicit negative lookahead for\x0d\n    // ExpressionStatement\x2C so special-case it first.\x0d\n    if (nextCh === 91 || nextCh === 92) { return true } // '['\x2C '/'\x0d\n    if (context) { return false }\x0d\n\x0d\n    if (nextCh === 123 || nextCh > 0xd7ff && nextCh < 0xdc00) { return true } // '{'\x2C astral\x0d\n    if (isIdentifierStart(nextCh\x2C true)) {\x0d\n      var pos = next + 1;\x0d\n      while (isIdentifierChar(nextCh = this.input.charCodeAt(pos)\x2C true)) { ++pos; }\x0d\n      if (nextCh === 92 || nextCh > 0xd7ff && nextCh < 0xdc00) { return true }\x0d\n      var ident = this.input.slice(next\x2C pos);\x0d\n      if (!keywordRelationalOperator.test(ident)) { return true }\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  // check 'async [no LineTerminator here] function'\x0d\n  // - 'async /*foo*/ function' is OK.\x0d\n  // - 'async /*\\n*/ function' is invalid.\x0d\n  pp$8.isAsyncFunction = function() {\x0d\n    if (this.options.ecmaVersion < 8 || !this.isContextual("async"))\x0d\n      { return false }\x0d\n\x0d\n    skipWhiteSpace.lastIndex = this.pos;\x0d\n    var skip = skipWhiteSpace.exec(this.input);\x0d\n    var next = this.pos + skip[0].length\x2C after;\x0d\n    return !lineBreak.test(this.input.slice(this.pos\x2C next)) &&\x0d\n      this.input.slice(next\x2C next + 8) === "function" &&\x0d\n      (next + 8 === this.input.length ||\x0d\n       !(isIdentifierChar(after = this.input.charCodeAt(next + 8)) || after > 0xd7ff && after < 0xdc00))\x0d\n  };\x0d\n\x0d\n  // Parse a single statement.\x0d\n  //\x0d\n  // If expecting a statement and finding a slash operator\x2C parse a\x0d\n  // regular expression literal. This is to handle cases like\x0d\n  // `if (foo) /blah/.exec(foo)`\x2C where looking at the previous token\x0d\n  // does not help.\x0d\n\x0d\n  pp$8.parseStatement = function(context\x2C topLevel\x2C exports) {\x0d\n    var starttype = this.type\x2C node = this.startNode()\x2C kind;\x0d\n\x0d\n    if (this.isLet(context)) {\x0d\n      starttype = types$1._var;\x0d\n      kind = "let";\x0d\n    }\x0d\n\x0d\n    // Most types of statements are recognized by the keyword they\x0d\n    // start with. Many are trivial to parse\x2C some require a bit of\x0d\n    // complexity.\x0d\n\x0d\n    switch (starttype) {\x0d\n    case types$1._break: case types$1._continue: return this.parseBreakContinueStatement(node\x2C starttype.keyword)\x0d\n    case types$1._debugger: return this.parseDebuggerStatement(node)\x0d\n    case types$1._do: return this.parseDoStatement(node)\x0d\n    case types$1._for: return this.parseForStatement(node)\x0d\n    case types$1._function:\x0d\n      // Function as sole body of either an if statement or a labeled statement\x0d\n      // works\x2C but not when it is part of a labeled statement that is the sole\x0d\n      // body of an if statement.\x0d\n      if ((context && (this.strict || context !== "if" && context !== "label")) && this.options.ecmaVersion >= 6) { this.unexpected(); }\x0d\n      return this.parseFunctionStatement(node\x2C false\x2C !context)\x0d\n    case types$1._class:\x0d\n      if (context) { this.unexpected(); }\x0d\n      return this.parseClass(node\x2C true)\x0d\n    case types$1._if: return this.parseIfStatement(node)\x0d\n    case types$1._return: return this.parseReturnStatement(node)\x0d\n    case types$1._switch: return this.parseSwitchStatement(node)\x0d\n    case types$1._throw: return this.parseThrowStatement(node)\x0d\n    case types$1._try: return this.parseTryStatement(node)\x0d\n    case types$1._const: case types$1._var:\x0d\n      kind = kind || this.value;\x0d\n      if (context && kind !== "var") { this.unexpected(); }\x0d\n      return this.parseVarStatement(node\x2C kind)\x0d\n    case types$1._while: return this.parseWhileStatement(node)\x0d\n    case types$1._with: return this.parseWithStatement(node)\x0d\n    case types$1.braceL: return this.parseBlock(true\x2C node)\x0d\n    case types$1.semi: return this.parseEmptyStatement(node)\x0d\n    case types$1._export:\x0d\n    case types$1._import:\x0d\n      if (this.options.ecmaVersion > 10 && starttype === types$1._import) {\x0d\n        skipWhiteSpace.lastIndex = this.pos;\x0d\n        var skip = skipWhiteSpace.exec(this.input);\x0d\n        var next = this.pos + skip[0].length\x2C nextCh = this.input.charCodeAt(next);\x0d\n        if (nextCh === 40 || nextCh === 46) // '(' or '.'\x0d\n          { return this.parseExpressionStatement(node\x2C this.parseExpression()) }\x0d\n      }\x0d\n\x0d\n      if (!this.options.allowImportExportEverywhere) {\x0d\n        if (!topLevel)\x0d\n          { this.raise(this.start\x2C "'import' and 'export' may only appear at the top level"); }\x0d\n        if (!this.inModule)\x0d\n          { this.raise(this.start\x2C "'import' and 'export' may appear only with 'sourceType: module'"); }\x0d\n      }\x0d\n      return starttype === types$1._import ? this.parseImport(node) : this.parseExport(node\x2C exports)\x0d\n\x0d\n      // If the statement does not start with a statement keyword or a\x0d\n      // brace\x2C it's an ExpressionStatement or LabeledStatement. We\x0d\n      // simply start parsing an expression\x2C and afterwards\x2C if the\x0d\n      // next token is a colon and the expression was a simple\x0d\n      // Identifier node\x2C we switch to interpreting it as a label.\x0d\n    default:\x0d\n      if (this.isAsyncFunction()) {\x0d\n        if (context) { this.unexpected(); }\x0d\n        this.next();\x0d\n        return this.parseFunctionStatement(node\x2C true\x2C !context)\x0d\n      }\x0d\n\x0d\n      var maybeName = this.value\x2C expr = this.parseExpression();\x0d\n      if (starttype === types$1.name && expr.type === "Identifier" && this.eat(types$1.colon))\x0d\n        { return this.parseLabeledStatement(node\x2C maybeName\x2C expr\x2C context) }\x0d\n      else { return this.parseExpressionStatement(node\x2C expr) }\x0d\n    }\x0d\n  };\x0d\n\x0d\n  pp$8.parseBreakContinueStatement = function(node\x2C keyword) {\x0d\n    var isBreak = keyword === "break";\x0d\n    this.next();\x0d\n    if (this.eat(types$1.semi) || this.insertSemicolon()) { node.label = null; }\x0d\n    else if (this.type !== types$1.name) { this.unexpected(); }\x0d\n    else {\x0d\n      node.label = this.parseIdent();\x0d\n      this.semicolon();\x0d\n    }\x0d\n\x0d\n    // Verify that there is an actual destination to break or\x0d\n    // continue to.\x0d\n    var i = 0;\x0d\n    for (; i < this.labels.length; ++i) {\x0d\n      var lab = this.labels[i];\x0d\n      if (node.label == null || lab.name === node.label.name) {\x0d\n        if (lab.kind != null && (isBreak || lab.kind === "loop")) { break }\x0d\n        if (node.label && isBreak) { break }\x0d\n      }\x0d\n    }\x0d\n    if (i === this.labels.length) { this.raise(node.start\x2C "Unsyntactic " + keyword); }\x0d\n    return this.finishNode(node\x2C isBreak ? "BreakStatement" : "ContinueStatement")\x0d\n  };\x0d\n\x0d\n  pp$8.parseDebuggerStatement = function(node) {\x0d\n    this.next();\x0d\n    this.semicolon();\x0d\n    return this.finishNode(node\x2C "DebuggerStatement")\x0d\n  };\x0d\n\x0d\n  pp$8.parseDoStatement = function(node) {\x0d\n    this.next();\x0d\n    this.labels.push(loopLabel);\x0d\n    node.body = this.parseStatement("do");\x0d\n    this.labels.pop();\x0d\n    this.expect(types$1._while);\x0d\n    node.test = this.parseParenExpression();\x0d\n    if (this.options.ecmaVersion >= 6)\x0d\n      { this.eat(types$1.semi); }\x0d\n    else\x0d\n      { this.semicolon(); }\x0d\n    return this.finishNode(node\x2C "DoWhileStatement")\x0d\n  };\x0d\n\x0d\n  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\x0d\n  // loop is non-trivial. Basically\x2C we have to parse the init `var`\x0d\n  // statement or expression\x2C disallowing the `in` operator (see\x0d\n  // the second parameter to `parseExpression`)\x2C and then check\x0d\n  // whether the next token is `in` or `of`. When there is no init\x0d\n  // part (semicolon immediately after the opening parenthesis)\x2C it\x0d\n  // is a regular `for` loop.\x0d\n\x0d\n  pp$8.parseForStatement = function(node) {\x0d\n    this.next();\x0d\n    var awaitAt = (this.options.ecmaVersion >= 9 && this.canAwait && this.eatContextual("await")) ? this.lastTokStart : -1;\x0d\n    this.labels.push(loopLabel);\x0d\n    this.enterScope(0);\x0d\n    this.expect(types$1.parenL);\x0d\n    if (this.type === types$1.semi) {\x0d\n      if (awaitAt > -1) { this.unexpected(awaitAt); }\x0d\n      return this.parseFor(node\x2C null)\x0d\n    }\x0d\n    var isLet = this.isLet();\x0d\n    if (this.type === types$1._var || this.type === types$1._const || isLet) {\x0d\n      var init$1 = this.startNode()\x2C kind = isLet ? "let" : this.value;\x0d\n      this.next();\x0d\n      this.parseVar(init$1\x2C true\x2C kind);\x0d\n      this.finishNode(init$1\x2C "VariableDeclaration");\x0d\n      if ((this.type === types$1._in || (this.options.ecmaVersion >= 6 && this.isContextual("of"))) && init$1.declarations.length === 1) {\x0d\n        if (this.options.ecmaVersion >= 9) {\x0d\n          if (this.type === types$1._in) {\x0d\n            if (awaitAt > -1) { this.unexpected(awaitAt); }\x0d\n          } else { node.await = awaitAt > -1; }\x0d\n        }\x0d\n        return this.parseForIn(node\x2C init$1)\x0d\n      }\x0d\n      if (awaitAt > -1) { this.unexpected(awaitAt); }\x0d\n      return this.parseFor(node\x2C init$1)\x0d\n    }\x0d\n    var startsWithLet = this.isContextual("let")\x2C isForOf = false;\x0d\n    var refDestructuringErrors = new DestructuringErrors;\x0d\n    var init = this.parseExpression(awaitAt > -1 ? "await" : true\x2C refDestructuringErrors);\x0d\n    if (this.type === types$1._in || (isForOf = this.options.ecmaVersion >= 6 && this.isContextual("of"))) {\x0d\n      if (this.options.ecmaVersion >= 9) {\x0d\n        if (this.type === types$1._in) {\x0d\n          if (awaitAt > -1) { this.unexpected(awaitAt); }\x0d\n        } else { node.await = awaitAt > -1; }\x0d\n      }\x0d\n      if (startsWithLet && isForOf) { this.raise(init.start\x2C "The left-hand side of a for-of loop may not start with 'let'."); }\x0d\n      this.toAssignable(init\x2C false\x2C refDestructuringErrors);\x0d\n      this.checkLValPattern(init);\x0d\n      return this.parseForIn(node\x2C init)\x0d\n    } else {\x0d\n      this.checkExpressionErrors(refDestructuringErrors\x2C true);\x0d\n    }\x0d\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\x0d\n    return this.parseFor(node\x2C init)\x0d\n  };\x0d\n\x0d\n  pp$8.parseFunctionStatement = function(node\x2C isAsync\x2C declarationPosition) {\x0d\n    this.next();\x0d\n    return this.parseFunction(node\x2C FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT)\x2C false\x2C isAsync)\x0d\n  };\x0d\n\x0d\n  pp$8.parseIfStatement = function(node) {\x0d\n    this.next();\x0d\n    node.test = this.parseParenExpression();\x0d\n    // allow function declarations in branches\x2C but only in non-strict mode\x0d\n    node.consequent = this.parseStatement("if");\x0d\n    node.alternate = this.eat(types$1._else) ? this.parseStatement("if") : null;\x0d\n    return this.finishNode(node\x2C "IfStatement")\x0d\n  };\x0d\n\x0d\n  pp$8.parseReturnStatement = function(node) {\x0d\n    if (!this.inFunction && !this.options.allowReturnOutsideFunction)\x0d\n      { this.raise(this.start\x2C "'return' outside of function"); }\x0d\n    this.next();\x0d\n\x0d\n    // In `return` (and `break`/`continue`)\x2C the keywords with\x0d\n    // optional arguments\x2C we eagerly look for a semicolon or the\x0d\n    // possibility to insert one.\x0d\n\x0d\n    if (this.eat(types$1.semi) || this.insertSemicolon()) { node.argument = null; }\x0d\n    else { node.argument = this.parseExpression(); this.semicolon(); }\x0d\n    return this.finishNode(node\x2C "ReturnStatement")\x0d\n  };\x0d\n\x0d\n  pp$8.parseSwitchStatement = function(node) {\x0d\n    this.next();\x0d\n    node.discriminant = this.parseParenExpression();\x0d\n    node.cases = [];\x0d\n    this.expect(types$1.braceL);\x0d\n    this.labels.push(switchLabel);\x0d\n    this.enterScope(0);\x0d\n\x0d\n    // Statements under must be grouped (by label) in SwitchCase\x0d\n    // nodes. `cur` is used to keep the node that we are currently\x0d\n    // adding statements to.\x0d\n\x0d\n    var cur;\x0d\n    for (var sawDefault = false; this.type !== types$1.braceR;) {\x0d\n      if (this.type === types$1._case || this.type === types$1._default) {\x0d\n        var isCase = this.type === types$1._case;\x0d\n        if (cur) { this.finishNode(cur\x2C "SwitchCase"); }\x0d\n        node.cases.push(cur = this.startNode());\x0d\n        cur.consequent = [];\x0d\n        this.next();\x0d\n        if (isCase) {\x0d\n          cur.test = this.parseExpression();\x0d\n        } else {\x0d\n          if (sawDefault) { this.raiseRecoverable(this.lastTokStart\x2C "Multiple default clauses"); }\x0d\n          sawDefault = true;\x0d\n          cur.test = null;\x0d\n        }\x0d\n        this.expect(types$1.colon);\x0d\n      } else {\x0d\n        if (!cur) { this.unexpected(); }\x0d\n        cur.consequent.push(this.parseStatement(null));\x0d\n      }\x0d\n    }\x0d\n    this.exitScope();\x0d\n    if (cur) { this.finishNode(cur\x2C "SwitchCase"); }\x0d\n    this.next(); // Closing brace\x0d\n    this.labels.pop();\x0d\n    return this.finishNode(node\x2C "SwitchStatement")\x0d\n  };\x0d\n\x0d\n  pp$8.parseThrowStatement = function(node) {\x0d\n    this.next();\x0d\n    if (lineBreak.test(this.input.slice(this.lastTokEnd\x2C this.start)))\x0d\n      { this.raise(this.lastTokEnd\x2C "Illegal newline after throw"); }\x0d\n    node.argument = this.parseExpression();\x0d\n    this.semicolon();\x0d\n    return this.finishNode(node\x2C "ThrowStatement")\x0d\n  };\x0d\n\x0d\n  // Reused empty array added for node fields that are always empty.\x0d\n\x0d\n  var empty$1 = [];\x0d\n\x0d\n  pp$8.parseCatchClauseParam = function() {\x0d\n    var param = this.parseBindingAtom();\x0d\n    var simple = param.type === "Identifier";\x0d\n    this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);\x0d\n    this.checkLValPattern(param\x2C simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);\x0d\n    this.expect(types$1.parenR);\x0d\n\x0d\n    return param\x0d\n  };\x0d\n\x0d\n  pp$8.parseTryStatement = function(node) {\x0d\n    this.next();\x0d\n    node.block = this.parseBlock();\x0d\n    node.handler = null;\x0d\n    if (this.type === types$1._catch) {\x0d\n      var clause = this.startNode();\x0d\n      this.next();\x0d\n      if (this.eat(types$1.parenL)) {\x0d\n        clause.param = this.parseCatchClauseParam();\x0d\n      } else {\x0d\n        if (this.options.ecmaVersion < 10) { this.unexpected(); }\x0d\n        clause.param = null;\x0d\n        this.enterScope(0);\x0d\n      }\x0d\n      clause.body = this.parseBlock(false);\x0d\n      this.exitScope();\x0d\n      node.handler = this.finishNode(clause\x2C "CatchClause");\x0d\n    }\x0d\n    node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;\x0d\n    if (!node.handler && !node.finalizer)\x0d\n      { this.raise(node.start\x2C "Missing catch or finally clause"); }\x0d\n    return this.finishNode(node\x2C "TryStatement")\x0d\n  };\x0d\n\x0d\n  pp$8.parseVarStatement = function(node\x2C kind\x2C allowMissingInitializer) {\x0d\n    this.next();\x0d\n    this.parseVar(node\x2C false\x2C kind\x2C allowMissingInitializer);\x0d\n    this.semicolon();\x0d\n    return this.finishNode(node\x2C "VariableDeclaration")\x0d\n  };\x0d\n\x0d\n  pp$8.parseWhileStatement = function(node) {\x0d\n    this.next();\x0d\n    node.test = this.parseParenExpression();\x0d\n    this.labels.push(loopLabel);\x0d\n    node.body = this.parseStatement("while");\x0d\n    this.labels.pop();\x0d\n    return this.finishNode(node\x2C "WhileStatement")\x0d\n  };\x0d\n\x0d\n  pp$8.parseWithStatement = function(node) {\x0d\n    if (this.strict) { this.raise(this.start\x2C "'with' in strict mode"); }\x0d\n    this.next();\x0d\n    node.object = this.parseParenExpression();\x0d\n    node.body = this.parseStatement("with");\x0d\n    return this.finishNode(node\x2C "WithStatement")\x0d\n  };\x0d\n\x0d\n  pp$8.parseEmptyStatement = function(node) {\x0d\n    this.next();\x0d\n    return this.finishNode(node\x2C "EmptyStatement")\x0d\n  };\x0d\n\x0d\n  pp$8.parseLabeledStatement = function(node\x2C maybeName\x2C expr\x2C context) {\x0d\n    for (var i$1 = 0\x2C list = this.labels; i$1 < list.length; i$1 += 1)\x0d\n      {\x0d\n      var label = list[i$1];\x0d\n\x0d\n      if (label.name === maybeName)\x0d\n        { this.raise(expr.start\x2C "Label '" + maybeName + "' is already declared");\x0d\n    } }\x0d\n    var kind = this.type.isLoop ? "loop" : this.type === types$1._switch ? "switch" : null;\x0d\n    for (var i = this.labels.length - 1; i >= 0; i--) {\x0d\n      var label$1 = this.labels[i];\x0d\n      if (label$1.statementStart === node.start) {\x0d\n        // Update information about previous labels on this node\x0d\n        label$1.statementStart = this.start;\x0d\n        label$1.kind = kind;\x0d\n      } else { break }\x0d\n    }\x0d\n    this.labels.push({name: maybeName\x2C kind: kind\x2C statementStart: this.start});\x0d\n    node.body = this.parseStatement(context ? context.indexOf("label") === -1 ? context + "label" : context : "label");\x0d\n    this.labels.pop();\x0d\n    node.label = expr;\x0d\n    return this.finishNode(node\x2C "LabeledStatement")\x0d\n  };\x0d\n\x0d\n  pp$8.parseExpressionStatement = function(node\x2C expr) {\x0d\n    node.expression = expr;\x0d\n    this.semicolon();\x0d\n    return this.finishNode(node\x2C "ExpressionStatement")\x0d\n  };\x0d\n\x0d\n  // Parse a semicolon-enclosed block of statements\x2C handling `"use\x0d\n  // strict"` declarations when `allowStrict` is true (used for\x0d\n  // function bodies).\x0d\n\x0d\n  pp$8.parseBlock = function(createNewLexicalScope\x2C node\x2C exitStrict) {\x0d\n    if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\x0d\n    if ( node === void 0 ) node = this.startNode();\x0d\n\x0d\n    node.body = [];\x0d\n    this.expect(types$1.braceL);\x0d\n    if (createNewLexicalScope) { this.enterScope(0); }\x0d\n    while (this.type !== types$1.braceR) {\x0d\n      var stmt = this.parseStatement(null);\x0d\n      node.body.push(stmt);\x0d\n    }\x0d\n    if (exitStrict) { this.strict = false; }\x0d\n    this.next();\x0d\n    if (createNewLexicalScope) { this.exitScope(); }\x0d\n    return this.finishNode(node\x2C "BlockStatement")\x0d\n  };\x0d\n\x0d\n  // Parse a regular `for` loop. The disambiguation code in\x0d\n  // `parseStatement` will already have parsed the init statement or\x0d\n  // expression.\x0d\n\x0d\n  pp$8.parseFor = function(node\x2C init) {\x0d\n    node.init = init;\x0d\n    this.expect(types$1.semi);\x0d\n    node.test = this.type === types$1.semi ? null : this.parseExpression();\x0d\n    this.expect(types$1.semi);\x0d\n    node.update = this.type === types$1.parenR ? null : this.parseExpression();\x0d\n    this.expect(types$1.parenR);\x0d\n    node.body = this.parseStatement("for");\x0d\n    this.exitScope();\x0d\n    this.labels.pop();\x0d\n    return this.finishNode(node\x2C "ForStatement")\x0d\n  };\x0d\n\x0d\n  // Parse a `for`/`in` and `for`/`of` loop\x2C which are almost\x0d\n  // same from parser's perspective.\x0d\n\x0d\n  pp$8.parseForIn = function(node\x2C init) {\x0d\n    var isForIn = this.type === types$1._in;\x0d\n    this.next();\x0d\n\x0d\n    if (\x0d\n      init.type === "VariableDeclaration" &&\x0d\n      init.declarations[0].init != null &&\x0d\n      (\x0d\n        !isForIn ||\x0d\n        this.options.ecmaVersion < 8 ||\x0d\n        this.strict ||\x0d\n        init.kind !== "var" ||\x0d\n        init.declarations[0].id.type !== "Identifier"\x0d\n      )\x0d\n    ) {\x0d\n      this.raise(\x0d\n        init.start\x2C\x0d\n        ((isForIn ? "for-in" : "for-of") + " loop variable declaration may not have an initializer")\x0d\n      );\x0d\n    }\x0d\n    node.left = init;\x0d\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();\x0d\n    this.expect(types$1.parenR);\x0d\n    node.body = this.parseStatement("for");\x0d\n    this.exitScope();\x0d\n    this.labels.pop();\x0d\n    return this.finishNode(node\x2C isForIn ? "ForInStatement" : "ForOfStatement")\x0d\n  };\x0d\n\x0d\n  // Parse a list of variable declarations.\x0d\n\x0d\n  pp$8.parseVar = function(node\x2C isFor\x2C kind\x2C allowMissingInitializer) {\x0d\n    node.declarations = [];\x0d\n    node.kind = kind;\x0d\n    for (;;) {\x0d\n      var decl = this.startNode();\x0d\n      this.parseVarId(decl\x2C kind);\x0d\n      if (this.eat(types$1.eq)) {\x0d\n        decl.init = this.parseMaybeAssign(isFor);\x0d\n      } else if (!allowMissingInitializer && kind === "const" && !(this.type === types$1._in || (this.options.ecmaVersion >= 6 && this.isContextual("of")))) {\x0d\n        this.unexpected();\x0d\n      } else if (!allowMissingInitializer && decl.id.type !== "Identifier" && !(isFor && (this.type === types$1._in || this.isContextual("of")))) {\x0d\n        this.raise(this.lastTokEnd\x2C "Complex binding patterns require an initialization value");\x0d\n      } else {\x0d\n        decl.init = null;\x0d\n      }\x0d\n      node.declarations.push(this.finishNode(decl\x2C "VariableDeclarator"));\x0d\n      if (!this.eat(types$1.comma)) { break }\x0d\n    }\x0d\n    return node\x0d\n  };\x0d\n\x0d\n  pp$8.parseVarId = function(decl\x2C kind) {\x0d\n    decl.id = this.parseBindingAtom();\x0d\n    this.checkLValPattern(decl.id\x2C kind === "var" ? BIND_VAR : BIND_LEXICAL\x2C false);\x0d\n  };\x0d\n\x0d\n  var FUNC_STATEMENT = 1\x2C FUNC_HANGING_STATEMENT = 2\x2C FUNC_NULLABLE_ID = 4;\x0d\n\x0d\n  // Parse a function declaration or literal (depending on the\x0d\n  // `statement & FUNC_STATEMENT`).\x0d\n\x0d\n  // Remove `allowExpressionBody` for 7.0.0\x2C as it is only called with false\x0d\n  pp$8.parseFunction = function(node\x2C statement\x2C allowExpressionBody\x2C isAsync\x2C forInit) {\x0d\n    this.initFunction(node);\x0d\n    if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {\x0d\n      if (this.type === types$1.star && (statement & FUNC_HANGING_STATEMENT))\x0d\n        { this.unexpected(); }\x0d\n      node.generator = this.eat(types$1.star);\x0d\n    }\x0d\n    if (this.options.ecmaVersion >= 8)\x0d\n      { node.async = !!isAsync; }\x0d\n\x0d\n    if (statement & FUNC_STATEMENT) {\x0d\n      node.id = (statement & FUNC_NULLABLE_ID) && this.type !== types$1.name ? null : this.parseIdent();\x0d\n      if (node.id && !(statement & FUNC_HANGING_STATEMENT))\x0d\n        // If it is a regular function declaration in sloppy mode\x2C then it is\x0d\n        // subject to Annex B semantics (BIND_FUNCTION). Otherwise\x2C the binding\x0d\n        // mode depends on properties of the current scope (see\x0d\n        // treatFunctionsAsVar).\x0d\n        { this.checkLValSimple(node.id\x2C (this.strict || node.generator || node.async) ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION); }\x0d\n    }\x0d\n\x0d\n    var oldYieldPos = this.yieldPos\x2C oldAwaitPos = this.awaitPos\x2C oldAwaitIdentPos = this.awaitIdentPos;\x0d\n    this.yieldPos = 0;\x0d\n    this.awaitPos = 0;\x0d\n    this.awaitIdentPos = 0;\x0d\n    this.enterScope(functionFlags(node.async\x2C node.generator));\x0d\n\x0d\n    if (!(statement & FUNC_STATEMENT))\x0d\n      { node.id = this.type === types$1.name ? this.parseIdent() : null; }\x0d\n\x0d\n    this.parseFunctionParams(node);\x0d\n    this.parseFunctionBody(node\x2C allowExpressionBody\x2C false\x2C forInit);\x0d\n\x0d\n    this.yieldPos = oldYieldPos;\x0d\n    this.awaitPos = oldAwaitPos;\x0d\n    this.awaitIdentPos = oldAwaitIdentPos;\x0d\n    return this.finishNode(node\x2C (statement & FUNC_STATEMENT) ? "FunctionDeclaration" : "FunctionExpression")\x0d\n  };\x0d\n\x0d\n  pp$8.parseFunctionParams = function(node) {\x0d\n    this.expect(types$1.parenL);\x0d\n    node.params = this.parseBindingList(types$1.parenR\x2C false\x2C this.options.ecmaVersion >= 8);\x0d\n    this.checkYieldAwaitInDefaultParams();\x0d\n  };\x0d\n\x0d\n  // Parse a class declaration or literal (depending on the\x0d\n  // `isStatement` parameter).\x0d\n\x0d\n  pp$8.parseClass = function(node\x2C isStatement) {\x0d\n    this.next();\x0d\n\x0d\n    // ecma-262 14.6 Class Definitions\x0d\n    // A class definition is always strict mode code.\x0d\n    var oldStrict = this.strict;\x0d\n    this.strict = true;\x0d\n\x0d\n    this.parseClassId(node\x2C isStatement);\x0d\n    this.parseClassSuper(node);\x0d\n    var privateNameMap = this.enterClassBody();\x0d\n    var classBody = this.startNode();\x0d\n    var hadConstructor = false;\x0d\n    classBody.body = [];\x0d\n    this.expect(types$1.braceL);\x0d\n    while (this.type !== types$1.braceR) {\x0d\n      var element = this.parseClassElement(node.superClass !== null);\x0d\n      if (element) {\x0d\n        classBody.body.push(element);\x0d\n        if (element.type === "MethodDefinition" && element.kind === "constructor") {\x0d\n          if (hadConstructor) { this.raiseRecoverable(element.start\x2C "Duplicate constructor in the same class"); }\x0d\n          hadConstructor = true;\x0d\n        } else if (element.key && element.key.type === "PrivateIdentifier" && isPrivateNameConflicted(privateNameMap\x2C element)) {\x0d\n          this.raiseRecoverable(element.key.start\x2C ("Identifier '#" + (element.key.name) + "' has already been declared"));\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    this.strict = oldStrict;\x0d\n    this.next();\x0d\n    node.body = this.finishNode(classBody\x2C "ClassBody");\x0d\n    this.exitClassBody();\x0d\n    return this.finishNode(node\x2C isStatement ? "ClassDeclaration" : "ClassExpression")\x0d\n  };\x0d\n\x0d\n  pp$8.parseClassElement = function(constructorAllowsSuper) {\x0d\n    if (this.eat(types$1.semi)) { return null }\x0d\n\x0d\n    var ecmaVersion = this.options.ecmaVersion;\x0d\n    var node = this.startNode();\x0d\n    var keyName = "";\x0d\n    var isGenerator = false;\x0d\n    var isAsync = false;\x0d\n    var kind = "method";\x0d\n    var isStatic = false;\x0d\n\x0d\n    if (this.eatContextual("static")) {\x0d\n      // Parse static init block\x0d\n      if (ecmaVersion >= 13 && this.eat(types$1.braceL)) {\x0d\n        this.parseClassStaticBlock(node);\x0d\n        return node\x0d\n      }\x0d\n      if (this.isClassElementNameStart() || this.type === types$1.star) {\x0d\n        isStatic = true;\x0d\n      } else {\x0d\n        keyName = "static";\x0d\n      }\x0d\n    }\x0d\n    node.static = isStatic;\x0d\n    if (!keyName && ecmaVersion >= 8 && this.eatContextual("async")) {\x0d\n      if ((this.isClassElementNameStart() || this.type === types$1.star) && !this.canInsertSemicolon()) {\x0d\n        isAsync = true;\x0d\n      } else {\x0d\n        keyName = "async";\x0d\n      }\x0d\n    }\x0d\n    if (!keyName && (ecmaVersion >= 9 || !isAsync) && this.eat(types$1.star)) {\x0d\n      isGenerator = true;\x0d\n    }\x0d\n    if (!keyName && !isAsync && !isGenerator) {\x0d\n      var lastValue = this.value;\x0d\n      if (this.eatContextual("get") || this.eatContextual("set")) {\x0d\n        if (this.isClassElementNameStart()) {\x0d\n          kind = lastValue;\x0d\n        } else {\x0d\n          keyName = lastValue;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Parse element name\x0d\n    if (keyName) {\x0d\n      // 'async'\x2C 'get'\x2C 'set'\x2C or 'static' were not a keyword contextually.\x0d\n      // The last token is any of those. Make it the element name.\x0d\n      node.computed = false;\x0d\n      node.key = this.startNodeAt(this.lastTokStart\x2C this.lastTokStartLoc);\x0d\n      node.key.name = keyName;\x0d\n      this.finishNode(node.key\x2C "Identifier");\x0d\n    } else {\x0d\n      this.parseClassElementName(node);\x0d\n    }\x0d\n\x0d\n    // Parse element value\x0d\n    if (ecmaVersion < 13 || this.type === types$1.parenL || kind !== "method" || isGenerator || isAsync) {\x0d\n      var isConstructor = !node.static && checkKeyName(node\x2C "constructor");\x0d\n      var allowsDirectSuper = isConstructor && constructorAllowsSuper;\x0d\n      // Couldn't move this check into the 'parseClassMethod' method for backward compatibility.\x0d\n      if (isConstructor && kind !== "method") { this.raise(node.key.start\x2C "Constructor can't have get/set modifier"); }\x0d\n      node.kind = isConstructor ? "constructor" : kind;\x0d\n      this.parseClassMethod(node\x2C isGenerator\x2C isAsync\x2C allowsDirectSuper);\x0d\n    } else {\x0d\n      this.parseClassField(node);\x0d\n    }\x0d\n\x0d\n    return node\x0d\n  };\x0d\n\x0d\n  pp$8.isClassElementNameStart = function() {\x0d\n    return (\x0d\n      this.type === types$1.name ||\x0d\n      this.type === types$1.privateId ||\x0d\n      this.type === types$1.num ||\x0d\n      this.type === types$1.string ||\x0d\n      this.type === types$1.bracketL ||\x0d\n      this.type.keyword\x0d\n    )\x0d\n  };\x0d\n\x0d\n  pp$8.parseClassElementName = function(element) {\x0d\n    if (this.type === types$1.privateId) {\x0d\n      if (this.value === "constructor") {\x0d\n        this.raise(this.start\x2C "Classes can't have an element named '#constructor'");\x0d\n      }\x0d\n      element.computed = false;\x0d\n      element.key = this.parsePrivateIdent();\x0d\n    } else {\x0d\n      this.parsePropertyName(element);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  pp$8.parseClassMethod = function(method\x2C isGenerator\x2C isAsync\x2C allowsDirectSuper) {\x0d\n    // Check key and flags\x0d\n    var key = method.key;\x0d\n    if (method.kind === "constructor") {\x0d\n      if (isGenerator) { this.raise(key.start\x2C "Constructor can't be a generator"); }\x0d\n      if (isAsync) { this.raise(key.start\x2C "Constructor can't be an async method"); }\x0d\n    } else if (method.static && checkKeyName(method\x2C "prototype")) {\x0d\n      this.raise(key.start\x2C "Classes may not have a static property named prototype");\x0d\n    }\x0d\n\x0d\n    // Parse value\x0d\n    var value = method.value = this.parseMethod(isGenerator\x2C isAsync\x2C allowsDirectSuper);\x0d\n\x0d\n    // Check value\x0d\n    if (method.kind === "get" && value.params.length !== 0)\x0d\n      { this.raiseRecoverable(value.start\x2C "getter should have no params"); }\x0d\n    if (method.kind === "set" && value.params.length !== 1)\x0d\n      { this.raiseRecoverable(value.start\x2C "setter should have exactly one param"); }\x0d\n    if (method.kind === "set" && value.params[0].type === "RestElement")\x0d\n      { this.raiseRecoverable(value.params[0].start\x2C "Setter cannot use rest params"); }\x0d\n\x0d\n    return this.finishNode(method\x2C "MethodDefinition")\x0d\n  };\x0d\n\x0d\n  pp$8.parseClassField = function(field) {\x0d\n    if (checkKeyName(field\x2C "constructor")) {\x0d\n      this.raise(field.key.start\x2C "Classes can't have a field named 'constructor'");\x0d\n    } else if (field.static && checkKeyName(field\x2C "prototype")) {\x0d\n      this.raise(field.key.start\x2C "Classes can't have a static field named 'prototype'");\x0d\n    }\x0d\n\x0d\n    if (this.eat(types$1.eq)) {\x0d\n      // To raise SyntaxError if 'arguments' exists in the initializer.\x0d\n      var scope = this.currentThisScope();\x0d\n      var inClassFieldInit = scope.inClassFieldInit;\x0d\n      scope.inClassFieldInit = true;\x0d\n      field.value = this.parseMaybeAssign();\x0d\n      scope.inClassFieldInit = inClassFieldInit;\x0d\n    } else {\x0d\n      field.value = null;\x0d\n    }\x0d\n    this.semicolon();\x0d\n\x0d\n    return this.finishNode(field\x2C "PropertyDefinition")\x0d\n  };\x0d\n\x0d\n  pp$8.parseClassStaticBlock = function(node) {\x0d\n    node.body = [];\x0d\n\x0d\n    var oldLabels = this.labels;\x0d\n    this.labels = [];\x0d\n    this.enterScope(SCOPE_CLASS_STATIC_BLOCK | SCOPE_SUPER);\x0d\n    while (this.type !== types$1.braceR) {\x0d\n      var stmt = this.parseStatement(null);\x0d\n      node.body.push(stmt);\x0d\n    }\x0d\n    this.next();\x0d\n    this.exitScope();\x0d\n    this.labels = oldLabels;\x0d\n\x0d\n    return this.finishNode(node\x2C "StaticBlock")\x0d\n  };\x0d\n\x0d\n  pp$8.parseClassId = function(node\x2C isStatement) {\x0d\n    if (this.type === types$1.name) {\x0d\n      node.id = this.parseIdent();\x0d\n      if (isStatement)\x0d\n        { this.checkLValSimple(node.id\x2C BIND_LEXICAL\x2C false); }\x0d\n    } else {\x0d\n      if (isStatement === true)\x0d\n        { this.unexpected(); }\x0d\n      node.id = null;\x0d\n    }\x0d\n  };\x0d\n\x0d\n  pp$8.parseClassSuper = function(node) {\x0d\n    node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts(null\x2C false) : null;\x0d\n  };\x0d\n\x0d\n  pp$8.enterClassBody = function() {\x0d\n    var element = {declared: Object.create(null)\x2C used: []};\x0d\n    this.privateNameStack.push(element);\x0d\n    return element.declared\x0d\n  };\x0d\n\x0d\n  pp$8.exitClassBody = function() {\x0d\n    var ref = this.privateNameStack.pop();\x0d\n    var declared = ref.declared;\x0d\n    var used = ref.used;\x0d\n    if (!this.options.checkPrivateFields) { return }\x0d\n    var len = this.privateNameStack.length;\x0d\n    var parent = len === 0 ? null : this.privateNameStack[len - 1];\x0d\n    for (var i = 0; i < used.length; ++i) {\x0d\n      var id = used[i];\x0d\n      if (!hasOwn(declared\x2C id.name)) {\x0d\n        if (parent) {\x0d\n          parent.used.push(id);\x0d\n        } else {\x0d\n          this.raiseRecoverable(id.start\x2C ("Private field '#" + (id.name) + "' must be declared in an enclosing class"));\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\n  function isPrivateNameConflicted(privateNameMap\x2C element) {\x0d\n    var name = element.key.name;\x0d\n    var curr = privateNameMap[name];\x0d\n\x0d\n    var next = "true";\x0d\n    if (element.type === "MethodDefinition" && (element.kind === "get" || element.kind === "set")) {\x0d\n      next = (element.static ? "s" : "i") + element.kind;\x0d\n    }\x0d\n\x0d\n    // `class { get #a(){}; static set #a(_){} }` is also conflict.\x0d\n    if (\x0d\n      curr === "iget" && next === "iset" ||\x0d\n      curr === "iset" && next === "iget" ||\x0d\n      curr === "sget" && next === "sset" ||\x0d\n      curr === "sset" && next === "sget"\x0d\n    ) {\x0d\n      privateNameMap[name] = "true";\x0d\n      return false\x0d\n    } else if (!curr) {\x0d\n      privateNameMap[name] = next;\x0d\n      return false\x0d\n    } else {\x0d\n      return true\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function checkKeyName(node\x2C name) {\x0d\n    var computed = node.computed;\x0d\n    var key = node.key;\x0d\n    return !computed && (\x0d\n      key.type === "Identifier" && key.name === name ||\x0d\n      key.type === "Literal" && key.value === name\x0d\n    )\x0d\n  }\x0d\n\x0d\n  // Parses module export declaration.\x0d\n\x0d\n  pp$8.parseExportAllDeclaration = function(node\x2C exports) {\x0d\n    if (this.options.ecmaVersion >= 11) {\x0d\n      if (this.eatContextual("as")) {\x0d\n        node.exported = this.parseModuleExportName();\x0d\n        this.checkExport(exports\x2C node.exported\x2C this.lastTokStart);\x0d\n      } else {\x0d\n        node.exported = null;\x0d\n      }\x0d\n    }\x0d\n    this.expectContextual("from");\x0d\n    if (this.type !== types$1.string) { this.unexpected(); }\x0d\n    node.source = this.parseExprAtom();\x0d\n    this.semicolon();\x0d\n    return this.finishNode(node\x2C "ExportAllDeclaration")\x0d\n  };\x0d\n\x0d\n  pp$8.parseExport = function(node\x2C exports) {\x0d\n    this.next();\x0d\n    // export * from '...'\x0d\n    if (this.eat(types$1.star)) {\x0d\n      return this.parseExportAllDeclaration(node\x2C exports)\x0d\n    }\x0d\n    if (this.eat(types$1._default)) { // export default ...\x0d\n      this.checkExport(exports\x2C "default"\x2C this.lastTokStart);\x0d\n      node.declaration = this.parseExportDefaultDeclaration();\x0d\n      return this.finishNode(node\x2C "ExportDefaultDeclaration")\x0d\n    }\x0d\n    // export var|const|let|function|class ...\x0d\n    if (this.shouldParseExportStatement()) {\x0d\n      node.declaration = this.parseExportDeclaration(node);\x0d\n      if (node.declaration.type === "VariableDeclaration")\x0d\n        { this.checkVariableExport(exports\x2C node.declaration.declarations); }\x0d\n      else\x0d\n        { this.checkExport(exports\x2C node.declaration.id\x2C node.declaration.id.start); }\x0d\n      node.specifiers = [];\x0d\n      node.source = null;\x0d\n    } else { // export { x\x2C y as z } [from '...']\x0d\n      node.declaration = null;\x0d\n      node.specifiers = this.parseExportSpecifiers(exports);\x0d\n      if (this.eatContextual("from")) {\x0d\n        if (this.type !== types$1.string) { this.unexpected(); }\x0d\n        node.source = this.parseExprAtom();\x0d\n      } else {\x0d\n        for (var i = 0\x2C list = node.specifiers; i < list.length; i += 1) {\x0d\n          // check for keywords used as local names\x0d\n          var spec = list[i];\x0d\n\x0d\n          this.checkUnreserved(spec.local);\x0d\n          // check if export is defined\x0d\n          this.checkLocalExport(spec.local);\x0d\n\x0d\n          if (spec.local.type === "Literal") {\x0d\n            this.raise(spec.local.start\x2C "A string literal cannot be used as an exported binding without `from`.");\x0d\n          }\x0d\n        }\x0d\n\x0d\n        node.source = null;\x0d\n      }\x0d\n      this.semicolon();\x0d\n    }\x0d\n    return this.finishNode(node\x2C "ExportNamedDeclaration")\x0d\n  };\x0d\n\x0d\n  pp$8.parseExportDeclaration = function(node) {\x0d\n    return this.parseStatement(null)\x0d\n  };\x0d\n\x0d\n  pp$8.parseExportDefaultDeclaration = function() {\x0d\n    var isAsync;\x0d\n    if (this.type === types$1._function || (isAsync = this.isAsyncFunction())) {\x0d\n      var fNode = this.startNode();\x0d\n      this.next();\x0d\n      if (isAsync) { this.next(); }\x0d\n      return this.parseFunction(fNode\x2C FUNC_STATEMENT | FUNC_NULLABLE_ID\x2C false\x2C isAsync)\x0d\n    } else if (this.type === types$1._class) {\x0d\n      var cNode = this.startNode();\x0d\n      return this.parseClass(cNode\x2C "nullableID")\x0d\n    } else {\x0d\n      var declaration = this.parseMaybeAssign();\x0d\n      this.semicolon();\x0d\n      return declaration\x0d\n    }\x0d\n  };\x0d\n\x0d\n  pp$8.checkExport = function(exports\x2C name\x2C pos) {\x0d\n    if (!exports) { return }\x0d\n    if (typeof name !== "string")\x0d\n      { name = name.type === "Identifier" ? name.name : name.value; }\x0d\n    if (hasOwn(exports\x2C name))\x0d\n      { this.raiseRecoverable(pos\x2C "Duplicate export '" + name + "'"); }\x0d\n    exports[name] = true;\x0d\n  };\x0d\n\x0d\n  pp$8.checkPatternExport = function(exports\x2C pat) {\x0d\n    var type = pat.type;\x0d\n    if (type === "Identifier")\x0d\n      { this.checkExport(exports\x2C pat\x2C pat.start); }\x0d\n    else if (type === "ObjectPattern")\x0d\n      { for (var i = 0\x2C list = pat.properties; i < list.length; i += 1)\x0d\n        {\x0d\n          var prop = list[i];\x0d\n\x0d\n          this.checkPatternExport(exports\x2C prop);\x0d\n        } }\x0d\n    else if (type === "ArrayPattern")\x0d\n      { for (var i$1 = 0\x2C list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\x0d\n        var elt = list$1[i$1];\x0d\n\x0d\n          if (elt) { this.checkPatternExport(exports\x2C elt); }\x0d\n      } }\x0d\n    else if (type === "Property")\x0d\n      { this.checkPatternExport(exports\x2C pat.value); }\x0d\n    else if (type === "AssignmentPattern")\x0d\n      { this.checkPatternExport(exports\x2C pat.left); }\x0d\n    else if (type === "RestElement")\x0d\n      { this.checkPatternExport(exports\x2C pat.argument); }\x0d\n  };\x0d\n\x0d\n  pp$8.checkVariableExport = function(exports\x2C decls) {\x0d\n    if (!exports) { return }\x0d\n    for (var i = 0\x2C list = decls; i < list.length; i += 1)\x0d\n      {\x0d\n      var decl = list[i];\x0d\n\x0d\n      this.checkPatternExport(exports\x2C decl.id);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  pp$8.shouldParseExportStatement = function() {\x0d\n    return this.type.keyword === "var" ||\x0d\n      this.type.keyword === "const" ||\x0d\n      this.type.keyword === "class" ||\x0d\n      this.type.keyword === "function" ||\x0d\n      this.isLet() ||\x0d\n      this.isAsyncFunction()\x0d\n  };\x0d\n\x0d\n  // Parses a comma-separated list of module exports.\x0d\n\x0d\n  pp$8.parseExportSpecifier = function(exports) {\x0d\n    var node = this.startNode();\x0d\n    node.local = this.parseModuleExportName();\x0d\n\x0d\n    node.exported = this.eatContextual("as") ? this.parseModuleExportName() : node.local;\x0d\n    this.checkExport(\x0d\n      exports\x2C\x0d\n      node.exported\x2C\x0d\n      node.exported.start\x0d\n    );\x0d\n\x0d\n    return this.finishNode(node\x2C "ExportSpecifier")\x0d\n  };\x0d\n\x0d\n  pp$8.parseExportSpecifiers = function(exports) {\x0d\n    var nodes = []\x2C first = true;\x0d\n    // export { x\x2C y as z } [from '...']\x0d\n    this.expect(types$1.braceL);\x0d\n    while (!this.eat(types$1.braceR)) {\x0d\n      if (!first) {\x0d\n        this.expect(types$1.comma);\x0d\n        if (this.afterTrailingComma(types$1.braceR)) { break }\x0d\n      } else { first = false; }\x0d\n\x0d\n      nodes.push(this.parseExportSpecifier(exports));\x0d\n    }\x0d\n    return nodes\x0d\n  };\x0d\n\x0d\n  // Parses import declaration.\x0d\n\x0d\n  pp$8.parseImport = function(node) {\x0d\n    this.next();\x0d\n\x0d\n    // import '...'\x0d\n    if (this.type === types$1.string) {\x0d\n      node.specifiers = empty$1;\x0d\n      node.source = this.parseExprAtom();\x0d\n    } else {\x0d\n      node.specifiers = this.parseImportSpecifiers();\x0d\n      this.expectContextual("from");\x0d\n      node.source = this.type === types$1.string ? this.parseExprAtom() : this.unexpected();\x0d\n    }\x0d\n    this.semicolon();\x0d\n    return this.finishNode(node\x2C "ImportDeclaration")\x0d\n  };\x0d\n\x0d\n  // Parses a comma-separated list of module imports.\x0d\n\x0d\n  pp$8.parseImportSpecifier = function() {\x0d\n    var node = this.startNode();\x0d\n    node.imported = this.parseModuleExportName();\x0d\n\x0d\n    if (this.eatContextual("as")) {\x0d\n      node.local = this.parseIdent();\x0d\n    } else {\x0d\n      this.checkUnreserved(node.imported);\x0d\n      node.local = node.imported;\x0d\n    }\x0d\n    this.checkLValSimple(node.local\x2C BIND_LEXICAL);\x0d\n\x0d\n    return this.finishNode(node\x2C "ImportSpecifier")\x0d\n  };\x0d\n\x0d\n  pp$8.parseImportDefaultSpecifier = function() {\x0d\n    // import defaultObj\x2C { x\x2C y as z } from '...'\x0d\n    var node = this.startNode();\x0d\n    node.local = this.parseIdent();\x0d\n    this.checkLValSimple(node.local\x2C BIND_LEXICAL);\x0d\n    return this.finishNode(node\x2C "ImportDefaultSpecifier")\x0d\n  };\x0d\n\x0d\n  pp$8.parseImportNamespaceSpecifier = function() {\x0d\n    var node = this.startNode();\x0d\n    this.next();\x0d\n    this.expectContextual("as");\x0d\n    node.local = this.parseIdent();\x0d\n    this.checkLValSimple(node.local\x2C BIND_LEXICAL);\x0d\n    return this.finishNode(node\x2C "ImportNamespaceSpecifier")\x0d\n  };\x0d\n\x0d\n  pp$8.parseImportSpecifiers = function() {\x0d\n    var nodes = []\x2C first = true;\x0d\n    if (this.type === types$1.name) {\x0d\n      nodes.push(this.parseImportDefaultSpecifier());\x0d\n      if (!this.eat(types$1.comma)) { return nodes }\x0d\n    }\x0d\n    if (this.type === types$1.star) {\x0d\n      nodes.push(this.parseImportNamespaceSpecifier());\x0d\n      return nodes\x0d\n    }\x0d\n    this.expect(types$1.braceL);\x0d\n    while (!this.eat(types$1.braceR)) {\x0d\n      if (!first) {\x0d\n        this.expect(types$1.comma);\x0d\n        if (this.afterTrailingComma(types$1.braceR)) { break }\x0d\n      } else { first = false; }\x0d\n\x0d\n      nodes.push(this.parseImportSpecifier());\x0d\n    }\x0d\n    return nodes\x0d\n  };\x0d\n\x0d\n  pp$8.parseModuleExportName = function() {\x0d\n    if (this.options.ecmaVersion >= 13 && this.type === types$1.string) {\x0d\n      var stringLiteral = this.parseLiteral(this.value);\x0d\n      if (loneSurrogate.test(stringLiteral.value)) {\x0d\n        this.raise(stringLiteral.start\x2C "An export name cannot include a lone surrogate.");\x0d\n      }\x0d\n      return stringLiteral\x0d\n    }\x0d\n    return this.parseIdent(true)\x0d\n  };\x0d\n\x0d\n  // Set `ExpressionStatement#directive` property for directive prologues.\x0d\n  pp$8.adaptDirectivePrologue = function(statements) {\x0d\n    for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\x0d\n      statements[i].directive = statements[i].expression.raw.slice(1\x2C -1);\x0d\n    }\x0d\n  };\x0d\n  pp$8.isDirectiveCandidate = function(statement) {\x0d\n    return (\x0d\n      this.options.ecmaVersion >= 5 &&\x0d\n      statement.type === "ExpressionStatement" &&\x0d\n      statement.expression.type === "Literal" &&\x0d\n      typeof statement.expression.value === "string" &&\x0d\n      // Reject parenthesized strings.\x0d\n      (this.input[statement.start] === "\\"" || this.input[statement.start] === "'")\x0d\n    )\x0d\n  };\x0d\n\x0d\n  var pp$7 = Parser.prototype;\x0d\n\x0d\n  // Convert existing expression atom to assignable pattern\x0d\n  // if possible.\x0d\n\x0d\n  pp$7.toAssignable = function(node\x2C isBinding\x2C refDestructuringErrors) {\x0d\n    if (this.options.ecmaVersion >= 6 && node) {\x0d\n      switch (node.type) {\x0d\n      case "Identifier":\x0d\n        if (this.inAsync && node.name === "await")\x0d\n          { this.raise(node.start\x2C "Cannot use 'await' as identifier inside an async function"); }\x0d\n        break\x0d\n\x0d\n      case "ObjectPattern":\x0d\n      case "ArrayPattern":\x0d\n      case "AssignmentPattern":\x0d\n      case "RestElement":\x0d\n        break\x0d\n\x0d\n      case "ObjectExpression":\x0d\n        node.type = "ObjectPattern";\x0d\n        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors\x2C true); }\x0d\n        for (var i = 0\x2C list = node.properties; i < list.length; i += 1) {\x0d\n          var prop = list[i];\x0d\n\x0d\n        this.toAssignable(prop\x2C isBinding);\x0d\n          // Early error:\x0d\n          //   AssignmentRestProperty[Yield\x2C Await] :\x0d\n          //     `...` DestructuringAssignmentTarget[Yield\x2C Await]\x0d\n          //\x0d\n          //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|.\x0d\n          if (\x0d\n            prop.type === "RestElement" &&\x0d\n            (prop.argument.type === "ArrayPattern" || prop.argument.type === "ObjectPattern")\x0d\n          ) {\x0d\n            this.raise(prop.argument.start\x2C "Unexpected token");\x0d\n          }\x0d\n        }\x0d\n        break\x0d\n\x0d\n      case "Property":\x0d\n        // AssignmentProperty has type === "Property"\x0d\n        if (node.kind !== "init") { this.raise(node.key.start\x2C "Object pattern can't contain getter or setter"); }\x0d\n        this.toAssignable(node.value\x2C isBinding);\x0d\n        break\x0d\n\x0d\n      case "ArrayExpression":\x0d\n        node.type = "ArrayPattern";\x0d\n        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors\x2C true); }\x0d\n        this.toAssignableList(node.elements\x2C isBinding);\x0d\n        break\x0d\n\x0d\n      case "SpreadElement":\x0d\n        node.type = "RestElement";\x0d\n        this.toAssignable(node.argument\x2C isBinding);\x0d\n        if (node.argument.type === "AssignmentPattern")\x0d\n          { this.raise(node.argument.start\x2C "Rest elements cannot have a default value"); }\x0d\n        break\x0d\n\x0d\n      case "AssignmentExpression":\x0d\n        if (node.operator !== "=") { this.raise(node.left.end\x2C "Only '=' operator can be used for specifying default value."); }\x0d\n        node.type = "AssignmentPattern";\x0d\n        delete node.operator;\x0d\n        this.toAssignable(node.left\x2C isBinding);\x0d\n        break\x0d\n\x0d\n      case "ParenthesizedExpression":\x0d\n        this.toAssignable(node.expression\x2C isBinding\x2C refDestructuringErrors);\x0d\n        break\x0d\n\x0d\n      case "ChainExpression":\x0d\n        this.raiseRecoverable(node.start\x2C "Optional chaining cannot appear in left-hand side");\x0d\n        break\x0d\n\x0d\n      case "MemberExpression":\x0d\n        if (!isBinding) { break }\x0d\n\x0d\n      default:\x0d\n        this.raise(node.start\x2C "Assigning to rvalue");\x0d\n      }\x0d\n    } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors\x2C true); }\x0d\n    return node\x0d\n  };\x0d\n\x0d\n  // Convert list of expression atoms to binding list.\x0d\n\x0d\n  pp$7.toAssignableList = function(exprList\x2C isBinding) {\x0d\n    var end = exprList.length;\x0d\n    for (var i = 0; i < end; i++) {\x0d\n      var elt = exprList[i];\x0d\n      if (elt) { this.toAssignable(elt\x2C isBinding); }\x0d\n    }\x0d\n    if (end) {\x0d\n      var last = exprList[end - 1];\x0d\n      if (this.options.ecmaVersion === 6 && isBinding && last && last.type === "RestElement" && last.argument.type !== "Identifier")\x0d\n        { this.unexpected(last.argument.start); }\x0d\n    }\x0d\n    return exprList\x0d\n  };\x0d\n\x0d\n  // Parses spread element.\x0d\n\x0d\n  pp$7.parseSpread = function(refDestructuringErrors) {\x0d\n    var node = this.startNode();\x0d\n    this.next();\x0d\n    node.argument = this.parseMaybeAssign(false\x2C refDestructuringErrors);\x0d\n    return this.finishNode(node\x2C "SpreadElement")\x0d\n  };\x0d\n\x0d\n  pp$7.parseRestBinding = function() {\x0d\n    var node = this.startNode();\x0d\n    this.next();\x0d\n\x0d\n    // RestElement inside of a function parameter must be an identifier\x0d\n    if (this.options.ecmaVersion === 6 && this.type !== types$1.name)\x0d\n      { this.unexpected(); }\x0d\n\x0d\n    node.argument = this.parseBindingAtom();\x0d\n\x0d\n    return this.finishNode(node\x2C "RestElement")\x0d\n  };\x0d\n\x0d\n  // Parses lvalue (assignable) atom.\x0d\n\x0d\n  pp$7.parseBindingAtom = function() {\x0d\n    if (this.options.ecmaVersion >= 6) {\x0d\n      switch (this.type) {\x0d\n      case types$1.bracketL:\x0d\n        var node = this.startNode();\x0d\n        this.next();\x0d\n        node.elements = this.parseBindingList(types$1.bracketR\x2C true\x2C true);\x0d\n        return this.finishNode(node\x2C "ArrayPattern")\x0d\n\x0d\n      case types$1.braceL:\x0d\n        return this.parseObj(true)\x0d\n      }\x0d\n    }\x0d\n    return this.parseIdent()\x0d\n  };\x0d\n\x0d\n  pp$7.parseBindingList = function(close\x2C allowEmpty\x2C allowTrailingComma\x2C allowModifiers) {\x0d\n    var elts = []\x2C first = true;\x0d\n    while (!this.eat(close)) {\x0d\n      if (first) { first = false; }\x0d\n      else { this.expect(types$1.comma); }\x0d\n      if (allowEmpty && this.type === types$1.comma) {\x0d\n        elts.push(null);\x0d\n      } else if (allowTrailingComma && this.afterTrailingComma(close)) {\x0d\n        break\x0d\n      } else if (this.type === types$1.ellipsis) {\x0d\n        var rest = this.parseRestBinding();\x0d\n        this.parseBindingListItem(rest);\x0d\n        elts.push(rest);\x0d\n        if (this.type === types$1.comma) { this.raiseRecoverable(this.start\x2C "Comma is not permitted after the rest element"); }\x0d\n        this.expect(close);\x0d\n        break\x0d\n      } else {\x0d\n        elts.push(this.parseAssignableListItem(allowModifiers));\x0d\n      }\x0d\n    }\x0d\n    return elts\x0d\n  };\x0d\n\x0d\n  pp$7.parseAssignableListItem = function(allowModifiers) {\x0d\n    var elem = this.parseMaybeDefault(this.start\x2C this.startLoc);\x0d\n    this.parseBindingListItem(elem);\x0d\n    return elem\x0d\n  };\x0d\n\x0d\n  pp$7.parseBindingListItem = function(param) {\x0d\n    return param\x0d\n  };\x0d\n\x0d\n  // Parses assignment pattern around given atom if possible.\x0d\n\x0d\n  pp$7.parseMaybeDefault = function(startPos\x2C startLoc\x2C left) {\x0d\n    left = left || this.parseBindingAtom();\x0d\n    if (this.options.ecmaVersion < 6 || !this.eat(types$1.eq)) { return left }\x0d\n    var node = this.startNodeAt(startPos\x2C startLoc);\x0d\n    node.left = left;\x0d\n    node.right = this.parseMaybeAssign();\x0d\n    return this.finishNode(node\x2C "AssignmentPattern")\x0d\n  };\x0d\n\x0d\n  // The following three functions all verify that a node is an lvalue \u2014\x0d\n  // something that can be bound\x2C or assigned to. In order to do so\x2C they perform\x0d\n  // a variety of checks:\x0d\n  //\x0d\n  // - Check that none of the bound/assigned-to identifiers are reserved words.\x0d\n  // - Record name declarations for bindings in the appropriate scope.\x0d\n  // - Check duplicate argument names\x2C if checkClashes is set.\x0d\n  //\x0d\n  // If a complex binding pattern is encountered (e.g.\x2C object and array\x0d\n  // destructuring)\x2C the entire pattern is recursively checked.\x0d\n  //\x0d\n  // There are three versions of checkLVal*() appropriate for different\x0d\n  // circumstances:\x0d\n  //\x0d\n  // - checkLValSimple() shall be used if the syntactic construct supports\x0d\n  //   nothing other than identifiers and member expressions. Parenthesized\x0d\n  //   expressions are also correctly handled. This is generally appropriate for\x0d\n  //   constructs for which the spec says\x0d\n  //\x0d\n  //   > It is a Syntax Error if AssignmentTargetType of [the production] is not\x0d\n  //   > simple.\x0d\n  //\x0d\n  //   It is also appropriate for checking if an identifier is valid and not\x0d\n  //   defined elsewhere\x2C like import declarations or function/class identifiers.\x0d\n  //\x0d\n  //   Examples where this is used include:\x0d\n  //     a += \u2026;\x0d\n  //     import a from '\u2026';\x0d\n  //   where a is the node to be checked.\x0d\n  //\x0d\n  // - checkLValPattern() shall be used if the syntactic construct supports\x0d\n  //   anything checkLValSimple() supports\x2C as well as object and array\x0d\n  //   destructuring patterns. This is generally appropriate for constructs for\x0d\n  //   which the spec says\x0d\n  //\x0d\n  //   > It is a Syntax Error if [the production] is neither an ObjectLiteral nor\x0d\n  //   > an ArrayLiteral and AssignmentTargetType of [the production] is not\x0d\n  //   > simple.\x0d\n  //\x0d\n  //   Examples where this is used include:\x0d\n  //     (a = \u2026);\x0d\n  //     const a = \u2026;\x0d\n  //     try { \u2026 } catch (a) { \u2026 }\x0d\n  //   where a is the node to be checked.\x0d\n  //\x0d\n  // - checkLValInnerPattern() shall be used if the syntactic construct supports\x0d\n  //   anything checkLValPattern() supports\x2C as well as default assignment\x0d\n  //   patterns\x2C rest elements\x2C and other constructs that may appear within an\x0d\n  //   object or array destructuring pattern.\x0d\n  //\x0d\n  //   As a special case\x2C function parameters also use checkLValInnerPattern()\x2C\x0d\n  //   as they also support defaults and rest constructs.\x0d\n  //\x0d\n  // These functions deliberately support both assignment and binding constructs\x2C\x0d\n  // as the logic for both is exceedingly similar. If the node is the target of\x0d\n  // an assignment\x2C then bindingType should be set to BIND_NONE. Otherwise\x2C it\x0d\n  // should be set to the appropriate BIND_* constant\x2C like BIND_VAR or\x0d\n  // BIND_LEXICAL.\x0d\n  //\x0d\n  // If the function is called with a non-BIND_NONE bindingType\x2C then\x0d\n  // additionally a checkClashes object may be specified to allow checking for\x0d\n  // duplicate argument names. checkClashes is ignored if the provided construct\x0d\n  // is an assignment (i.e.\x2C bindingType is BIND_NONE).\x0d\n\x0d\n  pp$7.checkLValSimple = function(expr\x2C bindingType\x2C checkClashes) {\x0d\n    if ( bindingType === void 0 ) bindingType = BIND_NONE;\x0d\n\x0d\n    var isBind = bindingType !== BIND_NONE;\x0d\n\x0d\n    switch (expr.type) {\x0d\n    case "Identifier":\x0d\n      if (this.strict && this.reservedWordsStrictBind.test(expr.name))\x0d\n        { this.raiseRecoverable(expr.start\x2C (isBind ? "Binding " : "Assigning to ") + expr.name + " in strict mode"); }\x0d\n      if (isBind) {\x0d\n        if (bindingType === BIND_LEXICAL && expr.name === "let")\x0d\n          { this.raiseRecoverable(expr.start\x2C "let is disallowed as a lexically bound name"); }\x0d\n        if (checkClashes) {\x0d\n          if (hasOwn(checkClashes\x2C expr.name))\x0d\n            { this.raiseRecoverable(expr.start\x2C "Argument name clash"); }\x0d\n          checkClashes[expr.name] = true;\x0d\n        }\x0d\n        if (bindingType !== BIND_OUTSIDE) { this.declareName(expr.name\x2C bindingType\x2C expr.start); }\x0d\n      }\x0d\n      break\x0d\n\x0d\n    case "ChainExpression":\x0d\n      this.raiseRecoverable(expr.start\x2C "Optional chaining cannot appear in left-hand side");\x0d\n      break\x0d\n\x0d\n    case "MemberExpression":\x0d\n      if (isBind) { this.raiseRecoverable(expr.start\x2C "Binding member expression"); }\x0d\n      break\x0d\n\x0d\n    case "ParenthesizedExpression":\x0d\n      if (isBind) { this.raiseRecoverable(expr.start\x2C "Binding parenthesized expression"); }\x0d\n      return this.checkLValSimple(expr.expression\x2C bindingType\x2C checkClashes)\x0d\n\x0d\n    default:\x0d\n      this.raise(expr.start\x2C (isBind ? "Binding" : "Assigning to") + " rvalue");\x0d\n    }\x0d\n  };\x0d\n\x0d\n  pp$7.checkLValPattern = function(expr\x2C bindingType\x2C checkClashes) {\x0d\n    if ( bindingType === void 0 ) bindingType = BIND_NONE;\x0d\n\x0d\n    switch (expr.type) {\x0d\n    case "ObjectPattern":\x0d\n      for (var i = 0\x2C list = expr.properties; i < list.length; i += 1) {\x0d\n        var prop = list[i];\x0d\n\x0d\n      this.checkLValInnerPattern(prop\x2C bindingType\x2C checkClashes);\x0d\n      }\x0d\n      break\x0d\n\x0d\n    case "ArrayPattern":\x0d\n      for (var i$1 = 0\x2C list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\x0d\n        var elem = list$1[i$1];\x0d\n\x0d\n      if (elem) { this.checkLValInnerPattern(elem\x2C bindingType\x2C checkClashes); }\x0d\n      }\x0d\n      break\x0d\n\x0d\n    default:\x0d\n      this.checkLValSimple(expr\x2C bindingType\x2C checkClashes);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  pp$7.checkLValInnerPattern = function(expr\x2C bindingType\x2C checkClashes) {\x0d\n    if ( bindingType === void 0 ) bindingType = BIND_NONE;\x0d\n\x0d\n    switch (expr.type) {\x0d\n    case "Property":\x0d\n      // AssignmentProperty has type === "Property"\x0d\n      this.checkLValInnerPattern(expr.value\x2C bindingType\x2C checkClashes);\x0d\n      break\x0d\n\x0d\n    case "AssignmentPattern":\x0d\n      this.checkLValPattern(expr.left\x2C bindingType\x2C checkClashes);\x0d\n      break\x0d\n\x0d\n    case "RestElement":\x0d\n      this.checkLValPattern(expr.argument\x2C bindingType\x2C checkClashes);\x0d\n      break\x0d\n\x0d\n    default:\x0d\n      this.checkLValPattern(expr\x2C bindingType\x2C checkClashes);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // The algorithm used to determine whether a regexp can appear at a\x0d\n  // given point in the program is loosely based on sweet.js' approach.\x0d\n  // See https://github.com/mozilla/sweet.js/wiki/design\x0d\n\x0d\n\x0d\n  var TokContext = function TokContext(token\x2C isExpr\x2C preserveSpace\x2C override\x2C generator) {\x0d\n    this.token = token;\x0d\n    this.isExpr = !!isExpr;\x0d\n    this.preserveSpace = !!preserveSpace;\x0d\n    this.override = override;\x0d\n    this.generator = !!generator;\x0d\n  };\x0d\n\x0d\n  var types = {\x0d\n    b_stat: new TokContext("{"\x2C false)\x2C\x0d\n    b_expr: new TokContext("{"\x2C true)\x2C\x0d\n    b_tmpl: new TokContext("${"\x2C false)\x2C\x0d\n    p_stat: new TokContext("("\x2C false)\x2C\x0d\n    p_expr: new TokContext("("\x2C true)\x2C\x0d\n    q_tmpl: new TokContext("`"\x2C true\x2C true\x2C function (p) { return p.tryReadTemplateToken(); })\x2C\x0d\n    f_stat: new TokContext("function"\x2C false)\x2C\x0d\n    f_expr: new TokContext("function"\x2C true)\x2C\x0d\n    f_expr_gen: new TokContext("function"\x2C true\x2C false\x2C null\x2C true)\x2C\x0d\n    f_gen: new TokContext("function"\x2C false\x2C false\x2C null\x2C true)\x0d\n  };\x0d\n\x0d\n  var pp$6 = Parser.prototype;\x0d\n\x0d\n  pp$6.initialContext = function() {\x0d\n    return [types.b_stat]\x0d\n  };\x0d\n\x0d\n  pp$6.curContext = function() {\x0d\n    return this.context[this.context.length - 1]\x0d\n  };\x0d\n\x0d\n  pp$6.braceIsBlock = function(prevType) {\x0d\n    var parent = this.curContext();\x0d\n    if (parent === types.f_expr || parent === types.f_stat)\x0d\n      { return true }\x0d\n    if (prevType === types$1.colon && (parent === types.b_stat || parent === types.b_expr))\x0d\n      { return !parent.isExpr }\x0d\n\x0d\n    // The check for `tt.name && exprAllowed` detects whether we are\x0d\n    // after a `yield` or `of` construct. See the `updateContext` for\x0d\n    // `tt.name`.\x0d\n    if (prevType === types$1._return || prevType === types$1.name && this.exprAllowed)\x0d\n      { return lineBreak.test(this.input.slice(this.lastTokEnd\x2C this.start)) }\x0d\n    if (prevType === types$1._else || prevType === types$1.semi || prevType === types$1.eof || prevType === types$1.parenR || prevType === types$1.arrow)\x0d\n      { return true }\x0d\n    if (prevType === types$1.braceL)\x0d\n      { return parent === types.b_stat }\x0d\n    if (prevType === types$1._var || prevType === types$1._const || prevType === types$1.name)\x0d\n      { return false }\x0d\n    return !this.exprAllowed\x0d\n  };\x0d\n\x0d\n  pp$6.inGeneratorContext = function() {\x0d\n    for (var i = this.context.length - 1; i >= 1; i--) {\x0d\n      var context = this.context[i];\x0d\n      if (context.token === "function")\x0d\n        { return context.generator }\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  pp$6.updateContext = function(prevType) {\x0d\n    var update\x2C type = this.type;\x0d\n    if (type.keyword && prevType === types$1.dot)\x0d\n      { this.exprAllowed = false; }\x0d\n    else if (update = type.updateContext)\x0d\n      { update.call(this\x2C prevType); }\x0d\n    else\x0d\n      { this.exprAllowed = type.beforeExpr; }\x0d\n  };\x0d\n\x0d\n  // Used to handle edge cases when token context could not be inferred correctly during tokenization phase\x0d\n\x0d\n  pp$6.overrideContext = function(tokenCtx) {\x0d\n    if (this.curContext() !== tokenCtx) {\x0d\n      this.context[this.context.length - 1] = tokenCtx;\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Token-specific context update code\x0d\n\x0d\n  types$1.parenR.updateContext = types$1.braceR.updateContext = function() {\x0d\n    if (this.context.length === 1) {\x0d\n      this.exprAllowed = true;\x0d\n      return\x0d\n    }\x0d\n    var out = this.context.pop();\x0d\n    if (out === types.b_stat && this.curContext().token === "function") {\x0d\n      out = this.context.pop();\x0d\n    }\x0d\n    this.exprAllowed = !out.isExpr;\x0d\n  };\x0d\n\x0d\n  types$1.braceL.updateContext = function(prevType) {\x0d\n    this.context.push(this.braceIsBlock(prevType) ? types.b_stat : types.b_expr);\x0d\n    this.exprAllowed = true;\x0d\n  };\x0d\n\x0d\n  types$1.dollarBraceL.updateContext = function() {\x0d\n    this.context.push(types.b_tmpl);\x0d\n    this.exprAllowed = true;\x0d\n  };\x0d\n\x0d\n  types$1.parenL.updateContext = function(prevType) {\x0d\n    var statementParens = prevType === types$1._if || prevType === types$1._for || prevType === types$1._with || prevType === types$1._while;\x0d\n    this.context.push(statementParens ? types.p_stat : types.p_expr);\x0d\n    this.exprAllowed = true;\x0d\n  };\x0d\n\x0d\n  types$1.incDec.updateContext = function() {\x0d\n    // tokExprAllowed stays unchanged\x0d\n  };\x0d\n\x0d\n  types$1._function.updateContext = types$1._class.updateContext = function(prevType) {\x0d\n    if (prevType.beforeExpr && prevType !== types$1._else &&\x0d\n        !(prevType === types$1.semi && this.curContext() !== types.p_stat) &&\x0d\n        !(prevType === types$1._return && lineBreak.test(this.input.slice(this.lastTokEnd\x2C this.start))) &&\x0d\n        !((prevType === types$1.colon || prevType === types$1.braceL) && this.curContext() === types.b_stat))\x0d\n      { this.context.push(types.f_expr); }\x0d\n    else\x0d\n      { this.context.push(types.f_stat); }\x0d\n    this.exprAllowed = false;\x0d\n  };\x0d\n\x0d\n  types$1.colon.updateContext = function() {\x0d\n    if (this.curContext().token === "function") { this.context.pop(); }\x0d\n    this.exprAllowed = true;\x0d\n  };\x0d\n\x0d\n  types$1.backQuote.updateContext = function() {\x0d\n    if (this.curContext() === types.q_tmpl)\x0d\n      { this.context.pop(); }\x0d\n    else\x0d\n      { this.context.push(types.q_tmpl); }\x0d\n    this.exprAllowed = false;\x0d\n  };\x0d\n\x0d\n  types$1.star.updateContext = function(prevType) {\x0d\n    if (prevType === types$1._function) {\x0d\n      var index = this.context.length - 1;\x0d\n      if (this.context[index] === types.f_expr)\x0d\n        { this.context[index] = types.f_expr_gen; }\x0d\n      else\x0d\n        { this.context[index] = types.f_gen; }\x0d\n    }\x0d\n    this.exprAllowed = true;\x0d\n  };\x0d\n\x0d\n  types$1.name.updateContext = function(prevType) {\x0d\n    var allowed = false;\x0d\n    if (this.options.ecmaVersion >= 6 && prevType !== types$1.dot) {\x0d\n      if (this.value === "of" && !this.exprAllowed ||\x0d\n          this.value === "yield" && this.inGeneratorContext())\x0d\n        { allowed = true; }\x0d\n    }\x0d\n    this.exprAllowed = allowed;\x0d\n  };\x0d\n\x0d\n  // A recursive descent parser operates by defining functions for all\x0d\n  // syntactic elements\x2C and recursively calling those\x2C each function\x0d\n  // advancing the input stream and returning an AST node. Precedence\x0d\n  // of constructs (for example\x2C the fact that `!x[1]` means `!(x[1])`\x0d\n  // instead of `(!x)[1]` is handled by the fact that the parser\x0d\n  // function that parses unary prefix operators is called first\x2C and\x0d\n  // in turn calls the function that parses `[]` subscripts \u2014 that\x0d\n  // way\x2C it'll receive the node for `x[1]` already parsed\x2C and wraps\x0d\n  // *that* in the unary operator node.\x0d\n  //\x0d\n  // Acorn uses an [operator precedence parser][opp] to handle binary\x0d\n  // operator precedence\x2C because it is much more compact than using\x0d\n  // the technique outlined above\x2C which uses different\x2C nesting\x0d\n  // functions to specify precedence\x2C for all of the ten binary\x0d\n  // precedence levels that JavaScript defines.\x0d\n  //\x0d\n  // [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\x0d\n\x0d\n\x0d\n  var pp$5 = Parser.prototype;\x0d\n\x0d\n  // Check if property name clashes with already added.\x0d\n  // Object/class getters and setters are not allowed to clash \u2014\x0d\n  // either with each other or with an init property \u2014 and in\x0d\n  // strict mode\x2C init properties are also not allowed to be repeated.\x0d\n\x0d\n  pp$5.checkPropClash = function(prop\x2C propHash\x2C refDestructuringErrors) {\x0d\n    if (this.options.ecmaVersion >= 9 && prop.type === "SpreadElement")\x0d\n      { return }\x0d\n    if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\x0d\n      { return }\x0d\n    var key = prop.key;\x0d\n    var name;\x0d\n    switch (key.type) {\x0d\n    case "Identifier": name = key.name; break\x0d\n    case "Literal": name = String(key.value); break\x0d\n    default: return\x0d\n    }\x0d\n    var kind = prop.kind;\x0d\n    if (this.options.ecmaVersion >= 6) {\x0d\n      if (name === "__proto__" && kind === "init") {\x0d\n        if (propHash.proto) {\x0d\n          if (refDestructuringErrors) {\x0d\n            if (refDestructuringErrors.doubleProto < 0) {\x0d\n              refDestructuringErrors.doubleProto = key.start;\x0d\n            }\x0d\n          } else {\x0d\n            this.raiseRecoverable(key.start\x2C "Redefinition of __proto__ property");\x0d\n          }\x0d\n        }\x0d\n        propHash.proto = true;\x0d\n      }\x0d\n      return\x0d\n    }\x0d\n    name = "$" + name;\x0d\n    var other = propHash[name];\x0d\n    if (other) {\x0d\n      var redefinition;\x0d\n      if (kind === "init") {\x0d\n        redefinition = this.strict && other.init || other.get || other.set;\x0d\n      } else {\x0d\n        redefinition = other.init || other[kind];\x0d\n      }\x0d\n      if (redefinition)\x0d\n        { this.raiseRecoverable(key.start\x2C "Redefinition of property"); }\x0d\n    } else {\x0d\n      other = propHash[name] = {\x0d\n        init: false\x2C\x0d\n        get: false\x2C\x0d\n        set: false\x0d\n      };\x0d\n    }\x0d\n    other[kind] = true;\x0d\n  };\x0d\n\x0d\n  // ### Expression parsing\x0d\n\x0d\n  // These nest\x2C from the most general expression type at the top to\x0d\n  // 'atomic'\x2C nondivisible expression types at the bottom. Most of\x0d\n  // the functions will simply let the function(s) below them parse\x2C\x0d\n  // and\x2C *if* the syntactic construct they handle is present\x2C wrap\x0d\n  // the AST node that the inner parser gave them in another node.\x0d\n\x0d\n  // Parse a full expression. The optional arguments are used to\x0d\n  // forbid the `in` operator (in for loops initalization expressions)\x0d\n  // and provide reference for storing '=' operator inside shorthand\x0d\n  // property assignment in contexts where both object expression\x0d\n  // and object pattern might appear (so it's possible to raise\x0d\n  // delayed syntax error at correct position).\x0d\n\x0d\n  pp$5.parseExpression = function(forInit\x2C refDestructuringErrors) {\x0d\n    var startPos = this.start\x2C startLoc = this.startLoc;\x0d\n    var expr = this.parseMaybeAssign(forInit\x2C refDestructuringErrors);\x0d\n    if (this.type === types$1.comma) {\x0d\n      var node = this.startNodeAt(startPos\x2C startLoc);\x0d\n      node.expressions = [expr];\x0d\n      while (this.eat(types$1.comma)) { node.expressions.push(this.parseMaybeAssign(forInit\x2C refDestructuringErrors)); }\x0d\n      return this.finishNode(node\x2C "SequenceExpression")\x0d\n    }\x0d\n    return expr\x0d\n  };\x0d\n\x0d\n  // Parse an assignment expression. This includes applications of\x0d\n  // operators like `+=`.\x0d\n\x0d\n  pp$5.parseMaybeAssign = function(forInit\x2C refDestructuringErrors\x2C afterLeftParse) {\x0d\n    if (this.isContextual("yield")) {\x0d\n      if (this.inGenerator) { return this.parseYield(forInit) }\x0d\n      // The tokenizer will assume an expression is allowed after\x0d\n      // `yield`\x2C but this isn't that kind of yield\x0d\n      else { this.exprAllowed = false; }\x0d\n    }\x0d\n\x0d\n    var ownDestructuringErrors = false\x2C oldParenAssign = -1\x2C oldTrailingComma = -1\x2C oldDoubleProto = -1;\x0d\n    if (refDestructuringErrors) {\x0d\n      oldParenAssign = refDestructuringErrors.parenthesizedAssign;\x0d\n      oldTrailingComma = refDestructuringErrors.trailingComma;\x0d\n      oldDoubleProto = refDestructuringErrors.doubleProto;\x0d\n      refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\x0d\n    } else {\x0d\n      refDestructuringErrors = new DestructuringErrors;\x0d\n      ownDestructuringErrors = true;\x0d\n    }\x0d\n\x0d\n    var startPos = this.start\x2C startLoc = this.startLoc;\x0d\n    if (this.type === types$1.parenL || this.type === types$1.name) {\x0d\n      this.potentialArrowAt = this.start;\x0d\n      this.potentialArrowInForAwait = forInit === "await";\x0d\n    }\x0d\n    var left = this.parseMaybeConditional(forInit\x2C refDestructuringErrors);\x0d\n    if (afterLeftParse) { left = afterLeftParse.call(this\x2C left\x2C startPos\x2C startLoc); }\x0d\n    if (this.type.isAssign) {\x0d\n      var node = this.startNodeAt(startPos\x2C startLoc);\x0d\n      node.operator = this.value;\x0d\n      if (this.type === types$1.eq)\x0d\n        { left = this.toAssignable(left\x2C false\x2C refDestructuringErrors); }\x0d\n      if (!ownDestructuringErrors) {\x0d\n        refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.doubleProto = -1;\x0d\n      }\x0d\n      if (refDestructuringErrors.shorthandAssign >= left.start)\x0d\n        { refDestructuringErrors.shorthandAssign = -1; } // reset because shorthand default was used correctly\x0d\n      if (this.type === types$1.eq)\x0d\n        { this.checkLValPattern(left); }\x0d\n      else\x0d\n        { this.checkLValSimple(left); }\x0d\n      node.left = left;\x0d\n      this.next();\x0d\n      node.right = this.parseMaybeAssign(forInit);\x0d\n      if (oldDoubleProto > -1) { refDestructuringErrors.doubleProto = oldDoubleProto; }\x0d\n      return this.finishNode(node\x2C "AssignmentExpression")\x0d\n    } else {\x0d\n      if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors\x2C true); }\x0d\n    }\x0d\n    if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\x0d\n    if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\x0d\n    return left\x0d\n  };\x0d\n\x0d\n  // Parse a ternary conditional (`?:`) operator.\x0d\n\x0d\n  pp$5.parseMaybeConditional = function(forInit\x2C refDestructuringErrors) {\x0d\n    var startPos = this.start\x2C startLoc = this.startLoc;\x0d\n    var expr = this.parseExprOps(forInit\x2C refDestructuringErrors);\x0d\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\x0d\n    if (this.eat(types$1.question)) {\x0d\n      var node = this.startNodeAt(startPos\x2C startLoc);\x0d\n      node.test = expr;\x0d\n      node.consequent = this.parseMaybeAssign();\x0d\n      this.expect(types$1.colon);\x0d\n      node.alternate = this.parseMaybeAssign(forInit);\x0d\n      return this.finishNode(node\x2C "ConditionalExpression")\x0d\n    }\x0d\n    return expr\x0d\n  };\x0d\n\x0d\n  // Start the precedence parser.\x0d\n\x0d\n  pp$5.parseExprOps = function(forInit\x2C refDestructuringErrors) {\x0d\n    var startPos = this.start\x2C startLoc = this.startLoc;\x0d\n    var expr = this.parseMaybeUnary(refDestructuringErrors\x2C false\x2C false\x2C forInit);\x0d\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\x0d\n    return expr.start === startPos && expr.type === "ArrowFunctionExpression" ? expr : this.parseExprOp(expr\x2C startPos\x2C startLoc\x2C -1\x2C forInit)\x0d\n  };\x0d\n\x0d\n  // Parse binary operators with the operator precedence parsing\x0d\n  // algorithm. `left` is the left-hand side of the operator.\x0d\n  // `minPrec` provides context that allows the function to stop and\x0d\n  // defer further parser to one of its callers when it encounters an\x0d\n  // operator that has a lower precedence than the set it is parsing.\x0d\n\x0d\n  pp$5.parseExprOp = function(left\x2C leftStartPos\x2C leftStartLoc\x2C minPrec\x2C forInit) {\x0d\n    var prec = this.type.binop;\x0d\n    if (prec != null && (!forInit || this.type !== types$1._in)) {\x0d\n      if (prec > minPrec) {\x0d\n        var logical = this.type === types$1.logicalOR || this.type === types$1.logicalAND;\x0d\n        var coalesce = this.type === types$1.coalesce;\x0d\n        if (coalesce) {\x0d\n          // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\x0d\n          // In other words\x2C `node.right` shouldn't contain logical expressions in order to check the mixed error.\x0d\n          prec = types$1.logicalAND.binop;\x0d\n        }\x0d\n        var op = this.value;\x0d\n        this.next();\x0d\n        var startPos = this.start\x2C startLoc = this.startLoc;\x0d\n        var right = this.parseExprOp(this.parseMaybeUnary(null\x2C false\x2C false\x2C forInit)\x2C startPos\x2C startLoc\x2C prec\x2C forInit);\x0d\n        var node = this.buildBinary(leftStartPos\x2C leftStartLoc\x2C left\x2C right\x2C op\x2C logical || coalesce);\x0d\n        if ((logical && this.type === types$1.coalesce) || (coalesce && (this.type === types$1.logicalOR || this.type === types$1.logicalAND))) {\x0d\n          this.raiseRecoverable(this.start\x2C "Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses");\x0d\n        }\x0d\n        return this.parseExprOp(node\x2C leftStartPos\x2C leftStartLoc\x2C minPrec\x2C forInit)\x0d\n      }\x0d\n    }\x0d\n    return left\x0d\n  };\x0d\n\x0d\n  pp$5.buildBinary = function(startPos\x2C startLoc\x2C left\x2C right\x2C op\x2C logical) {\x0d\n    if (right.type === "PrivateIdentifier") { this.raise(right.start\x2C "Private identifier can only be left side of binary expression"); }\x0d\n    var node = this.startNodeAt(startPos\x2C startLoc);\x0d\n    node.left = left;\x0d\n    node.operator = op;\x0d\n    node.right = right;\x0d\n    return this.finishNode(node\x2C logical ? "LogicalExpression" : "BinaryExpression")\x0d\n  };\x0d\n\x0d\n  // Parse unary operators\x2C both prefix and postfix.\x0d\n\x0d\n  pp$5.parseMaybeUnary = function(refDestructuringErrors\x2C sawUnary\x2C incDec\x2C forInit) {\x0d\n    var startPos = this.start\x2C startLoc = this.startLoc\x2C expr;\x0d\n    if (this.isContextual("await") && this.canAwait) {\x0d\n      expr = this.parseAwait(forInit);\x0d\n      sawUnary = true;\x0d\n    } else if (this.type.prefix) {\x0d\n      var node = this.startNode()\x2C update = this.type === types$1.incDec;\x0d\n      node.operator = this.value;\x0d\n      node.prefix = true;\x0d\n      this.next();\x0d\n      node.argument = this.parseMaybeUnary(null\x2C true\x2C update\x2C forInit);\x0d\n      this.checkExpressionErrors(refDestructuringErrors\x2C true);\x0d\n      if (update) { this.checkLValSimple(node.argument); }\x0d\n      else if (this.strict && node.operator === "delete" &&\x0d\n               node.argument.type === "Identifier")\x0d\n        { this.raiseRecoverable(node.start\x2C "Deleting local variable in strict mode"); }\x0d\n      else if (node.operator === "delete" && isPrivateFieldAccess(node.argument))\x0d\n        { this.raiseRecoverable(node.start\x2C "Private fields can not be deleted"); }\x0d\n      else { sawUnary = true; }\x0d\n      expr = this.finishNode(node\x2C update ? "UpdateExpression" : "UnaryExpression");\x0d\n    } else if (!sawUnary && this.type === types$1.privateId) {\x0d\n      if ((forInit || this.privateNameStack.length === 0) && this.options.checkPrivateFields) { this.unexpected(); }\x0d\n      expr = this.parsePrivateIdent();\x0d\n      // only could be private fields in 'in'\x2C such as #x in obj\x0d\n      if (this.type !== types$1._in) { this.unexpected(); }\x0d\n    } else {\x0d\n      expr = this.parseExprSubscripts(refDestructuringErrors\x2C forInit);\x0d\n      if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\x0d\n      while (this.type.postfix && !this.canInsertSemicolon()) {\x0d\n        var node$1 = this.startNodeAt(startPos\x2C startLoc);\x0d\n        node$1.operator = this.value;\x0d\n        node$1.prefix = false;\x0d\n        node$1.argument = expr;\x0d\n        this.checkLValSimple(expr);\x0d\n        this.next();\x0d\n        expr = this.finishNode(node$1\x2C "UpdateExpression");\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (!incDec && this.eat(types$1.starstar)) {\x0d\n      if (sawUnary)\x0d\n        { this.unexpected(this.lastTokStart); }\x0d\n      else\x0d\n        { return this.buildBinary(startPos\x2C startLoc\x2C expr\x2C this.parseMaybeUnary(null\x2C false\x2C false\x2C forInit)\x2C "**"\x2C false) }\x0d\n    } else {\x0d\n      return expr\x0d\n    }\x0d\n  };\x0d\n\x0d\n  function isPrivateFieldAccess(node) {\x0d\n    return (\x0d\n      node.type === "MemberExpression" && node.property.type === "PrivateIdentifier" ||\x0d\n      node.type === "ChainExpression" && isPrivateFieldAccess(node.expression)\x0d\n    )\x0d\n  }\x0d\n\x0d\n  // Parse call\x2C dot\x2C and `[]`-subscript expressions.\x0d\n\x0d\n  pp$5.parseExprSubscripts = function(refDestructuringErrors\x2C forInit) {\x0d\n    var startPos = this.start\x2C startLoc = this.startLoc;\x0d\n    var expr = this.parseExprAtom(refDestructuringErrors\x2C forInit);\x0d\n    if (expr.type === "ArrowFunctionExpression" && this.input.slice(this.lastTokStart\x2C this.lastTokEnd) !== ")")\x0d\n      { return expr }\x0d\n    var result = this.parseSubscripts(expr\x2C startPos\x2C startLoc\x2C false\x2C forInit);\x0d\n    if (refDestructuringErrors && result.type === "MemberExpression") {\x0d\n      if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\x0d\n      if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\x0d\n      if (refDestructuringErrors.trailingComma >= result.start) { refDestructuringErrors.trailingComma = -1; }\x0d\n    }\x0d\n    return result\x0d\n  };\x0d\n\x0d\n  pp$5.parseSubscripts = function(base\x2C startPos\x2C startLoc\x2C noCalls\x2C forInit) {\x0d\n    var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === "Identifier" && base.name === "async" &&\x0d\n        this.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 &&\x0d\n        this.potentialArrowAt === base.start;\x0d\n    var optionalChained = false;\x0d\n\x0d\n    while (true) {\x0d\n      var element = this.parseSubscript(base\x2C startPos\x2C startLoc\x2C noCalls\x2C maybeAsyncArrow\x2C optionalChained\x2C forInit);\x0d\n\x0d\n      if (element.optional) { optionalChained = true; }\x0d\n      if (element === base || element.type === "ArrowFunctionExpression") {\x0d\n        if (optionalChained) {\x0d\n          var chainNode = this.startNodeAt(startPos\x2C startLoc);\x0d\n          chainNode.expression = element;\x0d\n          element = this.finishNode(chainNode\x2C "ChainExpression");\x0d\n        }\x0d\n        return element\x0d\n      }\x0d\n\x0d\n      base = element;\x0d\n    }\x0d\n  };\x0d\n\x0d\n  pp$5.shouldParseAsyncArrow = function() {\x0d\n    return !this.canInsertSemicolon() && this.eat(types$1.arrow)\x0d\n  };\x0d\n\x0d\n  pp$5.parseSubscriptAsyncArrow = function(startPos\x2C startLoc\x2C exprList\x2C forInit) {\x0d\n    return this.parseArrowExpression(this.startNodeAt(startPos\x2C startLoc)\x2C exprList\x2C true\x2C forInit)\x0d\n  };\x0d\n\x0d\n  pp$5.parseSubscript = function(base\x2C startPos\x2C startLoc\x2C noCalls\x2C maybeAsyncArrow\x2C optionalChained\x2C forInit) {\x0d\n    var optionalSupported = this.options.ecmaVersion >= 11;\x0d\n    var optional = optionalSupported && this.eat(types$1.questionDot);\x0d\n    if (noCalls && optional) { this.raise(this.lastTokStart\x2C "Optional chaining cannot appear in the callee of new expressions"); }\x0d\n\x0d\n    var computed = this.eat(types$1.bracketL);\x0d\n    if (computed || (optional && this.type !== types$1.parenL && this.type !== types$1.backQuote) || this.eat(types$1.dot)) {\x0d\n      var node = this.startNodeAt(startPos\x2C startLoc);\x0d\n      node.object = base;\x0d\n      if (computed) {\x0d\n        node.property = this.parseExpression();\x0d\n        this.expect(types$1.bracketR);\x0d\n      } else if (this.type === types$1.privateId && base.type !== "Super") {\x0d\n        node.property = this.parsePrivateIdent();\x0d\n      } else {\x0d\n        node.property = this.parseIdent(this.options.allowReserved !== "never");\x0d\n      }\x0d\n      node.computed = !!computed;\x0d\n      if (optionalSupported) {\x0d\n        node.optional = optional;\x0d\n      }\x0d\n      base = this.finishNode(node\x2C "MemberExpression");\x0d\n    } else if (!noCalls && this.eat(types$1.parenL)) {\x0d\n      var refDestructuringErrors = new DestructuringErrors\x2C oldYieldPos = this.yieldPos\x2C oldAwaitPos = this.awaitPos\x2C oldAwaitIdentPos = this.awaitIdentPos;\x0d\n      this.yieldPos = 0;\x0d\n      this.awaitPos = 0;\x0d\n      this.awaitIdentPos = 0;\x0d\n      var exprList = this.parseExprList(types$1.parenR\x2C this.options.ecmaVersion >= 8\x2C false\x2C refDestructuringErrors);\x0d\n      if (maybeAsyncArrow && !optional && this.shouldParseAsyncArrow()) {\x0d\n        this.checkPatternErrors(refDestructuringErrors\x2C false);\x0d\n        this.checkYieldAwaitInDefaultParams();\x0d\n        if (this.awaitIdentPos > 0)\x0d\n          { this.raise(this.awaitIdentPos\x2C "Cannot use 'await' as identifier inside an async function"); }\x0d\n        this.yieldPos = oldYieldPos;\x0d\n        this.awaitPos = oldAwaitPos;\x0d\n        this.awaitIdentPos = oldAwaitIdentPos;\x0d\n        return this.parseSubscriptAsyncArrow(startPos\x2C startLoc\x2C exprList\x2C forInit)\x0d\n      }\x0d\n      this.checkExpressionErrors(refDestructuringErrors\x2C true);\x0d\n      this.yieldPos = oldYieldPos || this.yieldPos;\x0d\n      this.awaitPos = oldAwaitPos || this.awaitPos;\x0d\n      this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;\x0d\n      var node$1 = this.startNodeAt(startPos\x2C startLoc);\x0d\n      node$1.callee = base;\x0d\n      node$1.arguments = exprList;\x0d\n      if (optionalSupported) {\x0d\n        node$1.optional = optional;\x0d\n      }\x0d\n      base = this.finishNode(node$1\x2C "CallExpression");\x0d\n    } else if (this.type === types$1.backQuote) {\x0d\n      if (optional || optionalChained) {\x0d\n        this.raise(this.start\x2C "Optional chaining cannot appear in the tag of tagged template expressions");\x0d\n      }\x0d\n      var node$2 = this.startNodeAt(startPos\x2C startLoc);\x0d\n      node$2.tag = base;\x0d\n      node$2.quasi = this.parseTemplate({isTagged: true});\x0d\n      base = this.finishNode(node$2\x2C "TaggedTemplateExpression");\x0d\n    }\x0d\n    return base\x0d\n  };\x0d\n\x0d\n  // Parse an atomic expression \u2014 either a single token that is an\x0d\n  // expression\x2C an expression started by a keyword like `function` or\x0d\n  // `new`\x2C or an expression wrapped in punctuation like `()`\x2C `[]`\x2C\x0d\n  // or `{}`.\x0d\n\x0d\n  pp$5.parseExprAtom = function(refDestructuringErrors\x2C forInit\x2C forNew) {\x0d\n    // If a division operator appears in an expression position\x2C the\x0d\n    // tokenizer got confused\x2C and we force it to read a regexp instead.\x0d\n    if (this.type === types$1.slash) { this.readRegexp(); }\x0d\n\x0d\n    var node\x2C canBeArrow = this.potentialArrowAt === this.start;\x0d\n    switch (this.type) {\x0d\n    case types$1._super:\x0d\n      if (!this.allowSuper)\x0d\n        { this.raise(this.start\x2C "'super' keyword outside a method"); }\x0d\n      node = this.startNode();\x0d\n      this.next();\x0d\n      if (this.type === types$1.parenL && !this.allowDirectSuper)\x0d\n        { this.raise(node.start\x2C "super() call outside constructor of a subclass"); }\x0d\n      // The `super` keyword can appear at below:\x0d\n      // SuperProperty:\x0d\n      //     super [ Expression ]\x0d\n      //     super . IdentifierName\x0d\n      // SuperCall:\x0d\n      //     super ( Arguments )\x0d\n      if (this.type !== types$1.dot && this.type !== types$1.bracketL && this.type !== types$1.parenL)\x0d\n        { this.unexpected(); }\x0d\n      return this.finishNode(node\x2C "Super")\x0d\n\x0d\n    case types$1._this:\x0d\n      node = this.startNode();\x0d\n      this.next();\x0d\n      return this.finishNode(node\x2C "ThisExpression")\x0d\n\x0d\n    case types$1.name:\x0d\n      var startPos = this.start\x2C startLoc = this.startLoc\x2C containsEsc = this.containsEsc;\x0d\n      var id = this.parseIdent(false);\x0d\n      if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === "async" && !this.canInsertSemicolon() && this.eat(types$1._function)) {\x0d\n        this.overrideContext(types.f_expr);\x0d\n        return this.parseFunction(this.startNodeAt(startPos\x2C startLoc)\x2C 0\x2C false\x2C true\x2C forInit)\x0d\n      }\x0d\n      if (canBeArrow && !this.canInsertSemicolon()) {\x0d\n        if (this.eat(types$1.arrow))\x0d\n          { return this.parseArrowExpression(this.startNodeAt(startPos\x2C startLoc)\x2C [id]\x2C false\x2C forInit) }\x0d\n        if (this.options.ecmaVersion >= 8 && id.name === "async" && this.type === types$1.name && !containsEsc &&\x0d\n            (!this.potentialArrowInForAwait || this.value !== "of" || this.containsEsc)) {\x0d\n          id = this.parseIdent(false);\x0d\n          if (this.canInsertSemicolon() || !this.eat(types$1.arrow))\x0d\n            { this.unexpected(); }\x0d\n          return this.parseArrowExpression(this.startNodeAt(startPos\x2C startLoc)\x2C [id]\x2C true\x2C forInit)\x0d\n        }\x0d\n      }\x0d\n      return id\x0d\n\x0d\n    case types$1.regexp:\x0d\n      var value = this.value;\x0d\n      node = this.parseLiteral(value.value);\x0d\n      node.regex = {pattern: value.pattern\x2C flags: value.flags};\x0d\n      return node\x0d\n\x0d\n    case types$1.num: case types$1.string:\x0d\n      return this.parseLiteral(this.value)\x0d\n\x0d\n    case types$1._null: case types$1._true: case types$1._false:\x0d\n      node = this.startNode();\x0d\n      node.value = this.type === types$1._null ? null : this.type === types$1._true;\x0d\n      node.raw = this.type.keyword;\x0d\n      this.next();\x0d\n      return this.finishNode(node\x2C "Literal")\x0d\n\x0d\n    case types$1.parenL:\x0d\n      var start = this.start\x2C expr = this.parseParenAndDistinguishExpression(canBeArrow\x2C forInit);\x0d\n      if (refDestructuringErrors) {\x0d\n        if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\x0d\n          { refDestructuringErrors.parenthesizedAssign = start; }\x0d\n        if (refDestructuringErrors.parenthesizedBind < 0)\x0d\n          { refDestructuringErrors.parenthesizedBind = start; }\x0d\n      }\x0d\n      return expr\x0d\n\x0d\n    case types$1.bracketL:\x0d\n      node = this.startNode();\x0d\n      this.next();\x0d\n      node.elements = this.parseExprList(types$1.bracketR\x2C true\x2C true\x2C refDestructuringErrors);\x0d\n      return this.finishNode(node\x2C "ArrayExpression")\x0d\n\x0d\n    case types$1.braceL:\x0d\n      this.overrideContext(types.b_expr);\x0d\n      return this.parseObj(false\x2C refDestructuringErrors)\x0d\n\x0d\n    case types$1._function:\x0d\n      node = this.startNode();\x0d\n      this.next();\x0d\n      return this.parseFunction(node\x2C 0)\x0d\n\x0d\n    case types$1._class:\x0d\n      return this.parseClass(this.startNode()\x2C false)\x0d\n\x0d\n    case types$1._new:\x0d\n      return this.parseNew()\x0d\n\x0d\n    case types$1.backQuote:\x0d\n      return this.parseTemplate()\x0d\n\x0d\n    case types$1._import:\x0d\n      if (this.options.ecmaVersion >= 11) {\x0d\n        return this.parseExprImport(forNew)\x0d\n      } else {\x0d\n        return this.unexpected()\x0d\n      }\x0d\n\x0d\n    default:\x0d\n      return this.parseExprAtomDefault()\x0d\n    }\x0d\n  };\x0d\n\x0d\n  pp$5.parseExprAtomDefault = function() {\x0d\n    this.unexpected();\x0d\n  };\x0d\n\x0d\n  pp$5.parseExprImport = function(forNew) {\x0d\n    var node = this.startNode();\x0d\n\x0d\n    // Consume `import` as an identifier for `import.meta`.\x0d\n    // Because `this.parseIdent(true)` doesn't check escape sequences\x2C it needs the check of `this.containsEsc`.\x0d\n    if (this.containsEsc) { this.raiseRecoverable(this.start\x2C "Escape sequence in keyword import"); }\x0d\n    this.next();\x0d\n\x0d\n    if (this.type === types$1.parenL && !forNew) {\x0d\n      return this.parseDynamicImport(node)\x0d\n    } else if (this.type === types$1.dot) {\x0d\n      var meta = this.startNodeAt(node.start\x2C node.loc && node.loc.start);\x0d\n      meta.name = "import";\x0d\n      node.meta = this.finishNode(meta\x2C "Identifier");\x0d\n      return this.parseImportMeta(node)\x0d\n    } else {\x0d\n      this.unexpected();\x0d\n    }\x0d\n  };\x0d\n\x0d\n  pp$5.parseDynamicImport = function(node) {\x0d\n    this.next(); // skip `(`\x0d\n\x0d\n    // Parse node.source.\x0d\n    node.source = this.parseMaybeAssign();\x0d\n\x0d\n    // Verify ending.\x0d\n    if (!this.eat(types$1.parenR)) {\x0d\n      var errorPos = this.start;\x0d\n      if (this.eat(types$1.comma) && this.eat(types$1.parenR)) {\x0d\n        this.raiseRecoverable(errorPos\x2C "Trailing comma is not allowed in import()");\x0d\n      } else {\x0d\n        this.unexpected(errorPos);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return this.finishNode(node\x2C "ImportExpression")\x0d\n  };\x0d\n\x0d\n  pp$5.parseImportMeta = function(node) {\x0d\n    this.next(); // skip `.`\x0d\n\x0d\n    var containsEsc = this.containsEsc;\x0d\n    node.property = this.parseIdent(true);\x0d\n\x0d\n    if (node.property.name !== "meta")\x0d\n      { this.raiseRecoverable(node.property.start\x2C "The only valid meta property for import is 'import.meta'"); }\x0d\n    if (containsEsc)\x0d\n      { this.raiseRecoverable(node.start\x2C "'import.meta' must not contain escaped characters"); }\x0d\n    if (this.options.sourceType !== "module" && !this.options.allowImportExportEverywhere)\x0d\n      { this.raiseRecoverable(node.start\x2C "Cannot use 'import.meta' outside a module"); }\x0d\n\x0d\n    return this.finishNode(node\x2C "MetaProperty")\x0d\n  };\x0d\n\x0d\n  pp$5.parseLiteral = function(value) {\x0d\n    var node = this.startNode();\x0d\n    node.value = value;\x0d\n    node.raw = this.input.slice(this.start\x2C this.end);\x0d\n    if (node.raw.charCodeAt(node.raw.length - 1) === 110) { node.bigint = node.raw.slice(0\x2C -1).replace(/_/g\x2C ""); }\x0d\n    this.next();\x0d\n    return this.finishNode(node\x2C "Literal")\x0d\n  };\x0d\n\x0d\n  pp$5.parseParenExpression = function() {\x0d\n    this.expect(types$1.parenL);\x0d\n    var val = this.parseExpression();\x0d\n    this.expect(types$1.parenR);\x0d\n    return val\x0d\n  };\x0d\n\x0d\n  pp$5.shouldParseArrow = function(exprList) {\x0d\n    return !this.canInsertSemicolon()\x0d\n  };\x0d\n\x0d\n  pp$5.parseParenAndDistinguishExpression = function(canBeArrow\x2C forInit) {\x0d\n    var startPos = this.start\x2C startLoc = this.startLoc\x2C val\x2C allowTrailingComma = this.options.ecmaVersion >= 8;\x0d\n    if (this.options.ecmaVersion >= 6) {\x0d\n      this.next();\x0d\n\x0d\n      var innerStartPos = this.start\x2C innerStartLoc = this.startLoc;\x0d\n      var exprList = []\x2C first = true\x2C lastIsComma = false;\x0d\n      var refDestructuringErrors = new DestructuringErrors\x2C oldYieldPos = this.yieldPos\x2C oldAwaitPos = this.awaitPos\x2C spreadStart;\x0d\n      this.yieldPos = 0;\x0d\n      this.awaitPos = 0;\x0d\n      // Do not save awaitIdentPos to allow checking awaits nested in parameters\x0d\n      while (this.type !== types$1.parenR) {\x0d\n        first ? first = false : this.expect(types$1.comma);\x0d\n        if (allowTrailingComma && this.afterTrailingComma(types$1.parenR\x2C true)) {\x0d\n          lastIsComma = true;\x0d\n          break\x0d\n        } else if (this.type === types$1.ellipsis) {\x0d\n          spreadStart = this.start;\x0d\n          exprList.push(this.parseParenItem(this.parseRestBinding()));\x0d\n          if (this.type === types$1.comma) {\x0d\n            this.raiseRecoverable(\x0d\n              this.start\x2C\x0d\n              "Comma is not permitted after the rest element"\x0d\n            );\x0d\n          }\x0d\n          break\x0d\n        } else {\x0d\n          exprList.push(this.parseMaybeAssign(false\x2C refDestructuringErrors\x2C this.parseParenItem));\x0d\n        }\x0d\n      }\x0d\n      var innerEndPos = this.lastTokEnd\x2C innerEndLoc = this.lastTokEndLoc;\x0d\n      this.expect(types$1.parenR);\x0d\n\x0d\n      if (canBeArrow && this.shouldParseArrow(exprList) && this.eat(types$1.arrow)) {\x0d\n        this.checkPatternErrors(refDestructuringErrors\x2C false);\x0d\n        this.checkYieldAwaitInDefaultParams();\x0d\n        this.yieldPos = oldYieldPos;\x0d\n        this.awaitPos = oldAwaitPos;\x0d\n        return this.parseParenArrowList(startPos\x2C startLoc\x2C exprList\x2C forInit)\x0d\n      }\x0d\n\x0d\n      if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\x0d\n      if (spreadStart) { this.unexpected(spreadStart); }\x0d\n      this.checkExpressionErrors(refDestructuringErrors\x2C true);\x0d\n      this.yieldPos = oldYieldPos || this.yieldPos;\x0d\n      this.awaitPos = oldAwaitPos || this.awaitPos;\x0d\n\x0d\n      if (exprList.length > 1) {\x0d\n        val = this.startNodeAt(innerStartPos\x2C innerStartLoc);\x0d\n        val.expressions = exprList;\x0d\n        this.finishNodeAt(val\x2C "SequenceExpression"\x2C innerEndPos\x2C innerEndLoc);\x0d\n      } else {\x0d\n        val = exprList[0];\x0d\n      }\x0d\n    } else {\x0d\n      val = this.parseParenExpression();\x0d\n    }\x0d\n\x0d\n    if (this.options.preserveParens) {\x0d\n      var par = this.startNodeAt(startPos\x2C startLoc);\x0d\n      par.expression = val;\x0d\n      return this.finishNode(par\x2C "ParenthesizedExpression")\x0d\n    } else {\x0d\n      return val\x0d\n    }\x0d\n  };\x0d\n\x0d\n  pp$5.parseParenItem = function(item) {\x0d\n    return item\x0d\n  };\x0d\n\x0d\n  pp$5.parseParenArrowList = function(startPos\x2C startLoc\x2C exprList\x2C forInit) {\x0d\n    return this.parseArrowExpression(this.startNodeAt(startPos\x2C startLoc)\x2C exprList\x2C false\x2C forInit)\x0d\n  };\x0d\n\x0d\n  // New's precedence is slightly tricky. It must allow its argument to\x0d\n  // be a `[]` or dot subscript expression\x2C but not a call \u2014 at least\x2C\x0d\n  // not without wrapping it in parentheses. Thus\x2C it uses the noCalls\x0d\n  // argument to parseSubscripts to prevent it from consuming the\x0d\n  // argument list.\x0d\n\x0d\n  var empty = [];\x0d\n\x0d\n  pp$5.parseNew = function() {\x0d\n    if (this.containsEsc) { this.raiseRecoverable(this.start\x2C "Escape sequence in keyword new"); }\x0d\n    var node = this.startNode();\x0d\n    this.next();\x0d\n    if (this.options.ecmaVersion >= 6 && this.type === types$1.dot) {\x0d\n      var meta = this.startNodeAt(node.start\x2C node.loc && node.loc.start);\x0d\n      meta.name = "new";\x0d\n      node.meta = this.finishNode(meta\x2C "Identifier");\x0d\n      this.next();\x0d\n      var containsEsc = this.containsEsc;\x0d\n      node.property = this.parseIdent(true);\x0d\n      if (node.property.name !== "target")\x0d\n        { this.raiseRecoverable(node.property.start\x2C "The only valid meta property for new is 'new.target'"); }\x0d\n      if (containsEsc)\x0d\n        { this.raiseRecoverable(node.start\x2C "'new.target' must not contain escaped characters"); }\x0d\n      if (!this.allowNewDotTarget)\x0d\n        { this.raiseRecoverable(node.start\x2C "'new.target' can only be used in functions and class static block"); }\x0d\n      return this.finishNode(node\x2C "MetaProperty")\x0d\n    }\x0d\n    var startPos = this.start\x2C startLoc = this.startLoc;\x0d\n    node.callee = this.parseSubscripts(this.parseExprAtom(null\x2C false\x2C true)\x2C startPos\x2C startLoc\x2C true\x2C false);\x0d\n    if (this.eat(types$1.parenL)) { node.arguments = this.parseExprList(types$1.parenR\x2C this.options.ecmaVersion >= 8\x2C false); }\x0d\n    else { node.arguments = empty; }\x0d\n    return this.finishNode(node\x2C "NewExpression")\x0d\n  };\x0d\n\x0d\n  // Parse template expression.\x0d\n\x0d\n  pp$5.parseTemplateElement = function(ref) {\x0d\n    var isTagged = ref.isTagged;\x0d\n\x0d\n    var elem = this.startNode();\x0d\n    if (this.type === types$1.invalidTemplate) {\x0d\n      if (!isTagged) {\x0d\n        this.raiseRecoverable(this.start\x2C "Bad escape sequence in untagged template literal");\x0d\n      }\x0d\n      elem.value = {\x0d\n        raw: this.value\x2C\x0d\n        cooked: null\x0d\n      };\x0d\n    } else {\x0d\n      elem.value = {\x0d\n        raw: this.input.slice(this.start\x2C this.end).replace(/\\r\\n?/g\x2C "\\n")\x2C\x0d\n        cooked: this.value\x0d\n      };\x0d\n    }\x0d\n    this.next();\x0d\n    elem.tail = this.type === types$1.backQuote;\x0d\n    return this.finishNode(elem\x2C "TemplateElement")\x0d\n  };\x0d\n\x0d\n  pp$5.parseTemplate = function(ref) {\x0d\n    if ( ref === void 0 ) ref = {};\x0d\n    var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\x0d\n\x0d\n    var node = this.startNode();\x0d\n    this.next();\x0d\n    node.expressions = [];\x0d\n    var curElt = this.parseTemplateElement({isTagged: isTagged});\x0d\n    node.quasis = [curElt];\x0d\n    while (!curElt.tail) {\x0d\n      if (this.type === types$1.eof) { this.raise(this.pos\x2C "Unterminated template literal"); }\x0d\n      this.expect(types$1.dollarBraceL);\x0d\n      node.expressions.push(this.parseExpression());\x0d\n      this.expect(types$1.braceR);\x0d\n      node.quasis.push(curElt = this.parseTemplateElement({isTagged: isTagged}));\x0d\n    }\x0d\n    this.next();\x0d\n    return this.finishNode(node\x2C "TemplateLiteral")\x0d\n  };\x0d\n\x0d\n  pp$5.isAsyncProp = function(prop) {\x0d\n    return !prop.computed && prop.key.type === "Identifier" && prop.key.name === "async" &&\x0d\n      (this.type === types$1.name || this.type === types$1.num || this.type === types$1.string || this.type === types$1.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types$1.star)) &&\x0d\n      !lineBreak.test(this.input.slice(this.lastTokEnd\x2C this.start))\x0d\n  };\x0d\n\x0d\n  // Parse an object literal or binding pattern.\x0d\n\x0d\n  pp$5.parseObj = function(isPattern\x2C refDestructuringErrors) {\x0d\n    var node = this.startNode()\x2C first = true\x2C propHash = {};\x0d\n    node.properties = [];\x0d\n    this.next();\x0d\n    while (!this.eat(types$1.braceR)) {\x0d\n      if (!first) {\x0d\n        this.expect(types$1.comma);\x0d\n        if (this.options.ecmaVersion >= 5 && this.afterTrailingComma(types$1.braceR)) { break }\x0d\n      } else { first = false; }\x0d\n\x0d\n      var prop = this.parseProperty(isPattern\x2C refDestructuringErrors);\x0d\n      if (!isPattern) { this.checkPropClash(prop\x2C propHash\x2C refDestructuringErrors); }\x0d\n      node.properties.push(prop);\x0d\n    }\x0d\n    return this.finishNode(node\x2C isPattern ? "ObjectPattern" : "ObjectExpression")\x0d\n  };\x0d\n\x0d\n  pp$5.parseProperty = function(isPattern\x2C refDestructuringErrors) {\x0d\n    var prop = this.startNode()\x2C isGenerator\x2C isAsync\x2C startPos\x2C startLoc;\x0d\n    if (this.options.ecmaVersion >= 9 && this.eat(types$1.ellipsis)) {\x0d\n      if (isPattern) {\x0d\n        prop.argument = this.parseIdent(false);\x0d\n        if (this.type === types$1.comma) {\x0d\n          this.raiseRecoverable(this.start\x2C "Comma is not permitted after the rest element");\x0d\n        }\x0d\n        return this.finishNode(prop\x2C "RestElement")\x0d\n      }\x0d\n      // Parse argument.\x0d\n      prop.argument = this.parseMaybeAssign(false\x2C refDestructuringErrors);\x0d\n      // To disallow trailing comma via `this.toAssignable()`.\x0d\n      if (this.type === types$1.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\x0d\n        refDestructuringErrors.trailingComma = this.start;\x0d\n      }\x0d\n      // Finish\x0d\n      return this.finishNode(prop\x2C "SpreadElement")\x0d\n    }\x0d\n    if (this.options.ecmaVersion >= 6) {\x0d\n      prop.method = false;\x0d\n      prop.shorthand = false;\x0d\n      if (isPattern || refDestructuringErrors) {\x0d\n        startPos = this.start;\x0d\n        startLoc = this.startLoc;\x0d\n      }\x0d\n      if (!isPattern)\x0d\n        { isGenerator = this.eat(types$1.star); }\x0d\n    }\x0d\n    var containsEsc = this.containsEsc;\x0d\n    this.parsePropertyName(prop);\x0d\n    if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\x0d\n      isAsync = true;\x0d\n      isGenerator = this.options.ecmaVersion >= 9 && this.eat(types$1.star);\x0d\n      this.parsePropertyName(prop);\x0d\n    } else {\x0d\n      isAsync = false;\x0d\n    }\x0d\n    this.parsePropertyValue(prop\x2C isPattern\x2C isGenerator\x2C isAsync\x2C startPos\x2C startLoc\x2C refDestructuringErrors\x2C containsEsc);\x0d\n    return this.finishNode(prop\x2C "Property")\x0d\n  };\x0d\n\x0d\n  pp$5.parseGetterSetter = function(prop) {\x0d\n    prop.kind = prop.key.name;\x0d\n    this.parsePropertyName(prop);\x0d\n    prop.value = this.parseMethod(false);\x0d\n    var paramCount = prop.kind === "get" ? 0 : 1;\x0d\n    if (prop.value.params.length !== paramCount) {\x0d\n      var start = prop.value.start;\x0d\n      if (prop.kind === "get")\x0d\n        { this.raiseRecoverable(start\x2C "getter should have no params"); }\x0d\n      else\x0d\n        { this.raiseRecoverable(start\x2C "setter should have exactly one param"); }\x0d\n    } else {\x0d\n      if (prop.kind === "set" && prop.value.params[0].type === "RestElement")\x0d\n        { this.raiseRecoverable(prop.value.params[0].start\x2C "Setter cannot use rest params"); }\x0d\n    }\x0d\n  };\x0d\n\x0d\n  pp$5.parsePropertyValue = function(prop\x2C isPattern\x2C isGenerator\x2C isAsync\x2C startPos\x2C startLoc\x2C refDestructuringErrors\x2C containsEsc) {\x0d\n    if ((isGenerator || isAsync) && this.type === types$1.colon)\x0d\n      { this.unexpected(); }\x0d\n\x0d\n    if (this.eat(types$1.colon)) {\x0d\n      prop.value = isPattern ? this.parseMaybeDefault(this.start\x2C this.startLoc) : this.parseMaybeAssign(false\x2C refDestructuringErrors);\x0d\n      prop.kind = "init";\x0d\n    } else if (this.options.ecmaVersion >= 6 && this.type === types$1.parenL) {\x0d\n      if (isPattern) { this.unexpected(); }\x0d\n      prop.kind = "init";\x0d\n      prop.method = true;\x0d\n      prop.value = this.parseMethod(isGenerator\x2C isAsync);\x0d\n    } else if (!isPattern && !containsEsc &&\x0d\n               this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === "Identifier" &&\x0d\n               (prop.key.name === "get" || prop.key.name === "set") &&\x0d\n               (this.type !== types$1.comma && this.type !== types$1.braceR && this.type !== types$1.eq)) {\x0d\n      if (isGenerator || isAsync) { this.unexpected(); }\x0d\n      this.parseGetterSetter(prop);\x0d\n    } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === "Identifier") {\x0d\n      if (isGenerator || isAsync) { this.unexpected(); }\x0d\n      this.checkUnreserved(prop.key);\x0d\n      if (prop.key.name === "await" && !this.awaitIdentPos)\x0d\n        { this.awaitIdentPos = startPos; }\x0d\n      prop.kind = "init";\x0d\n      if (isPattern) {\x0d\n        prop.value = this.parseMaybeDefault(startPos\x2C startLoc\x2C this.copyNode(prop.key));\x0d\n      } else if (this.type === types$1.eq && refDestructuringErrors) {\x0d\n        if (refDestructuringErrors.shorthandAssign < 0)\x0d\n          { refDestructuringErrors.shorthandAssign = this.start; }\x0d\n        prop.value = this.parseMaybeDefault(startPos\x2C startLoc\x2C this.copyNode(prop.key));\x0d\n      } else {\x0d\n        prop.value = this.copyNode(prop.key);\x0d\n      }\x0d\n      prop.shorthand = true;\x0d\n    } else { this.unexpected(); }\x0d\n  };\x0d\n\x0d\n  pp$5.parsePropertyName = function(prop) {\x0d\n    if (this.options.ecmaVersion >= 6) {\x0d\n      if (this.eat(types$1.bracketL)) {\x0d\n        prop.computed = true;\x0d\n        prop.key = this.parseMaybeAssign();\x0d\n        this.expect(types$1.bracketR);\x0d\n        return prop.key\x0d\n      } else {\x0d\n        prop.computed = false;\x0d\n      }\x0d\n    }\x0d\n    return prop.key = this.type === types$1.num || this.type === types$1.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== "never")\x0d\n  };\x0d\n\x0d\n  // Initialize empty function node.\x0d\n\x0d\n  pp$5.initFunction = function(node) {\x0d\n    node.id = null;\x0d\n    if (this.options.ecmaVersion >= 6) { node.generator = node.expression = false; }\x0d\n    if (this.options.ecmaVersion >= 8) { node.async = false; }\x0d\n  };\x0d\n\x0d\n  // Parse object or class method.\x0d\n\x0d\n  pp$5.parseMethod = function(isGenerator\x2C isAsync\x2C allowDirectSuper) {\x0d\n    var node = this.startNode()\x2C oldYieldPos = this.yieldPos\x2C oldAwaitPos = this.awaitPos\x2C oldAwaitIdentPos = this.awaitIdentPos;\x0d\n\x0d\n    this.initFunction(node);\x0d\n    if (this.options.ecmaVersion >= 6)\x0d\n      { node.generator = isGenerator; }\x0d\n    if (this.options.ecmaVersion >= 8)\x0d\n      { node.async = !!isAsync; }\x0d\n\x0d\n    this.yieldPos = 0;\x0d\n    this.awaitPos = 0;\x0d\n    this.awaitIdentPos = 0;\x0d\n    this.enterScope(functionFlags(isAsync\x2C node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\x0d\n\x0d\n    this.expect(types$1.parenL);\x0d\n    node.params = this.parseBindingList(types$1.parenR\x2C false\x2C this.options.ecmaVersion >= 8);\x0d\n    this.checkYieldAwaitInDefaultParams();\x0d\n    this.parseFunctionBody(node\x2C false\x2C true\x2C false);\x0d\n\x0d\n    this.yieldPos = oldYieldPos;\x0d\n    this.awaitPos = oldAwaitPos;\x0d\n    this.awaitIdentPos = oldAwaitIdentPos;\x0d\n    return this.finishNode(node\x2C "FunctionExpression")\x0d\n  };\x0d\n\x0d\n  // Parse arrow function expression with given parameters.\x0d\n\x0d\n  pp$5.parseArrowExpression = function(node\x2C params\x2C isAsync\x2C forInit) {\x0d\n    var oldYieldPos = this.yieldPos\x2C oldAwaitPos = this.awaitPos\x2C oldAwaitIdentPos = this.awaitIdentPos;\x0d\n\x0d\n    this.enterScope(functionFlags(isAsync\x2C false) | SCOPE_ARROW);\x0d\n    this.initFunction(node);\x0d\n    if (this.options.ecmaVersion >= 8) { node.async = !!isAsync; }\x0d\n\x0d\n    this.yieldPos = 0;\x0d\n    this.awaitPos = 0;\x0d\n    this.awaitIdentPos = 0;\x0d\n\x0d\n    node.params = this.toAssignableList(params\x2C true);\x0d\n    this.parseFunctionBody(node\x2C true\x2C false\x2C forInit);\x0d\n\x0d\n    this.yieldPos = oldYieldPos;\x0d\n    this.awaitPos = oldAwaitPos;\x0d\n    this.awaitIdentPos = oldAwaitIdentPos;\x0d\n    return this.finishNode(node\x2C "ArrowFunctionExpression")\x0d\n  };\x0d\n\x0d\n  // Parse function body and check parameters.\x0d\n\x0d\n  pp$5.parseFunctionBody = function(node\x2C isArrowFunction\x2C isMethod\x2C forInit) {\x0d\n    var isExpression = isArrowFunction && this.type !== types$1.braceL;\x0d\n    var oldStrict = this.strict\x2C useStrict = false;\x0d\n\x0d\n    if (isExpression) {\x0d\n      node.body = this.parseMaybeAssign(forInit);\x0d\n      node.expression = true;\x0d\n      this.checkParams(node\x2C false);\x0d\n    } else {\x0d\n      var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\x0d\n      if (!oldStrict || nonSimple) {\x0d\n        useStrict = this.strictDirective(this.end);\x0d\n        // If this is a strict mode function\x2C verify that argument names\x0d\n        // are not repeated\x2C and it does not try to bind the words `eval`\x0d\n        // or `arguments`.\x0d\n        if (useStrict && nonSimple)\x0d\n          { this.raiseRecoverable(node.start\x2C "Illegal 'use strict' directive in function with non-simple parameter list"); }\x0d\n      }\x0d\n      // Start a new scope with regard to labels and the `inFunction`\x0d\n      // flag (restore them to their old value afterwards).\x0d\n      var oldLabels = this.labels;\x0d\n      this.labels = [];\x0d\n      if (useStrict) { this.strict = true; }\x0d\n\x0d\n      // Add the params to varDeclaredNames to ensure that an error is thrown\x0d\n      // if a let/const declaration in the function clashes with one of the params.\x0d\n      this.checkParams(node\x2C !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));\x0d\n      // Ensure the function name isn't a forbidden identifier in strict mode\x2C e.g. 'eval'\x0d\n      if (this.strict && node.id) { this.checkLValSimple(node.id\x2C BIND_OUTSIDE); }\x0d\n      node.body = this.parseBlock(false\x2C undefined\x2C useStrict && !oldStrict);\x0d\n      node.expression = false;\x0d\n      this.adaptDirectivePrologue(node.body.body);\x0d\n      this.labels = oldLabels;\x0d\n    }\x0d\n    this.exitScope();\x0d\n  };\x0d\n\x0d\n  pp$5.isSimpleParamList = function(params) {\x0d\n    for (var i = 0\x2C list = params; i < list.length; i += 1)\x0d\n      {\x0d\n      var param = list[i];\x0d\n\x0d\n      if (param.type !== "Identifier") { return false\x0d\n    } }\x0d\n    return true\x0d\n  };\x0d\n\x0d\n  // Checks function params for various disallowed patterns such as using "eval"\x0d\n  // or "arguments" and duplicate parameters.\x0d\n\x0d\n  pp$5.checkParams = function(node\x2C allowDuplicates) {\x0d\n    var nameHash = Object.create(null);\x0d\n    for (var i = 0\x2C list = node.params; i < list.length; i += 1)\x0d\n      {\x0d\n      var param = list[i];\x0d\n\x0d\n      this.checkLValInnerPattern(param\x2C BIND_VAR\x2C allowDuplicates ? null : nameHash);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Parses a comma-separated list of expressions\x2C and returns them as\x0d\n  // an array. `close` is the token type that ends the list\x2C and\x0d\n  // `allowEmpty` can be turned on to allow subsequent commas with\x0d\n  // nothing in between them to be parsed as `null` (which is needed\x0d\n  // for array literals).\x0d\n\x0d\n  pp$5.parseExprList = function(close\x2C allowTrailingComma\x2C allowEmpty\x2C refDestructuringErrors) {\x0d\n    var elts = []\x2C first = true;\x0d\n    while (!this.eat(close)) {\x0d\n      if (!first) {\x0d\n        this.expect(types$1.comma);\x0d\n        if (allowTrailingComma && this.afterTrailingComma(close)) { break }\x0d\n      } else { first = false; }\x0d\n\x0d\n      var elt = (void 0);\x0d\n      if (allowEmpty && this.type === types$1.comma)\x0d\n        { elt = null; }\x0d\n      else if (this.type === types$1.ellipsis) {\x0d\n        elt = this.parseSpread(refDestructuringErrors);\x0d\n        if (refDestructuringErrors && this.type === types$1.comma && refDestructuringErrors.trailingComma < 0)\x0d\n          { refDestructuringErrors.trailingComma = this.start; }\x0d\n      } else {\x0d\n        elt = this.parseMaybeAssign(false\x2C refDestructuringErrors);\x0d\n      }\x0d\n      elts.push(elt);\x0d\n    }\x0d\n    return elts\x0d\n  };\x0d\n\x0d\n  pp$5.checkUnreserved = function(ref) {\x0d\n    var start = ref.start;\x0d\n    var end = ref.end;\x0d\n    var name = ref.name;\x0d\n\x0d\n    if (this.inGenerator && name === "yield")\x0d\n      { this.raiseRecoverable(start\x2C "Cannot use 'yield' as identifier inside a generator"); }\x0d\n    if (this.inAsync && name === "await")\x0d\n      { this.raiseRecoverable(start\x2C "Cannot use 'await' as identifier inside an async function"); }\x0d\n    if (this.currentThisScope().inClassFieldInit && name === "arguments")\x0d\n      { this.raiseRecoverable(start\x2C "Cannot use 'arguments' in class field initializer"); }\x0d\n    if (this.inClassStaticBlock && (name === "arguments" || name === "await"))\x0d\n      { this.raise(start\x2C ("Cannot use " + name + " in class static initialization block")); }\x0d\n    if (this.keywords.test(name))\x0d\n      { this.raise(start\x2C ("Unexpected keyword '" + name + "'")); }\x0d\n    if (this.options.ecmaVersion < 6 &&\x0d\n      this.input.slice(start\x2C end).indexOf("\\\\") !== -1) { return }\x0d\n    var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\x0d\n    if (re.test(name)) {\x0d\n      if (!this.inAsync && name === "await")\x0d\n        { this.raiseRecoverable(start\x2C "Cannot use keyword 'await' outside an async function"); }\x0d\n      this.raiseRecoverable(start\x2C ("The keyword '" + name + "' is reserved"));\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Parse the next token as an identifier. If `liberal` is true (used\x0d\n  // when parsing properties)\x2C it will also convert keywords into\x0d\n  // identifiers.\x0d\n\x0d\n  pp$5.parseIdent = function(liberal) {\x0d\n    var node = this.parseIdentNode();\x0d\n    this.next(!!liberal);\x0d\n    this.finishNode(node\x2C "Identifier");\x0d\n    if (!liberal) {\x0d\n      this.checkUnreserved(node);\x0d\n      if (node.name === "await" && !this.awaitIdentPos)\x0d\n        { this.awaitIdentPos = node.start; }\x0d\n    }\x0d\n    return node\x0d\n  };\x0d\n\x0d\n  pp$5.parseIdentNode = function() {\x0d\n    var node = this.startNode();\x0d\n    if (this.type === types$1.name) {\x0d\n      node.name = this.value;\x0d\n    } else if (this.type.keyword) {\x0d\n      node.name = this.type.keyword;\x0d\n\x0d\n      // To fix https://github.com/acornjs/acorn/issues/575\x0d\n      // `class` and `function` keywords push new context into this.context.\x0d\n      // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.\x0d\n      // If the previous token is a dot\x2C this does not apply because the context-managing code already ignored the keyword\x0d\n      if ((node.name === "class" || node.name === "function") &&\x0d\n        (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\x0d\n        this.context.pop();\x0d\n      }\x0d\n      this.type = types$1.name;\x0d\n    } else {\x0d\n      this.unexpected();\x0d\n    }\x0d\n    return node\x0d\n  };\x0d\n\x0d\n  pp$5.parsePrivateIdent = function() {\x0d\n    var node = this.startNode();\x0d\n    if (this.type === types$1.privateId) {\x0d\n      node.name = this.value;\x0d\n    } else {\x0d\n      this.unexpected();\x0d\n    }\x0d\n    this.next();\x0d\n    this.finishNode(node\x2C "PrivateIdentifier");\x0d\n\x0d\n    // For validating existence\x0d\n    if (this.options.checkPrivateFields) {\x0d\n      if (this.privateNameStack.length === 0) {\x0d\n        this.raise(node.start\x2C ("Private field '#" + (node.name) + "' must be declared in an enclosing class"));\x0d\n      } else {\x0d\n        this.privateNameStack[this.privateNameStack.length - 1].used.push(node);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return node\x0d\n  };\x0d\n\x0d\n  // Parses yield expression inside generator.\x0d\n\x0d\n  pp$5.parseYield = function(forInit) {\x0d\n    if (!this.yieldPos) { this.yieldPos = this.start; }\x0d\n\x0d\n    var node = this.startNode();\x0d\n    this.next();\x0d\n    if (this.type === types$1.semi || this.canInsertSemicolon() || (this.type !== types$1.star && !this.type.startsExpr)) {\x0d\n      node.delegate = false;\x0d\n      node.argument = null;\x0d\n    } else {\x0d\n      node.delegate = this.eat(types$1.star);\x0d\n      node.argument = this.parseMaybeAssign(forInit);\x0d\n    }\x0d\n    return this.finishNode(node\x2C "YieldExpression")\x0d\n  };\x0d\n\x0d\n  pp$5.parseAwait = function(forInit) {\x0d\n    if (!this.awaitPos) { this.awaitPos = this.start; }\x0d\n\x0d\n    var node = this.startNode();\x0d\n    this.next();\x0d\n    node.argument = this.parseMaybeUnary(null\x2C true\x2C false\x2C forInit);\x0d\n    return this.finishNode(node\x2C "AwaitExpression")\x0d\n  };\x0d\n\x0d\n  var pp$4 = Parser.prototype;\x0d\n\x0d\n  // This function is used to raise exceptions on parse errors. It\x0d\n  // takes an offset integer (into the current `input`) to indicate\x0d\n  // the location of the error\x2C attaches the position to the end\x0d\n  // of the error message\x2C and then raises a `SyntaxError` with that\x0d\n  // message.\x0d\n\x0d\n  pp$4.raise = function(pos\x2C message) {\x0d\n    var loc = getLineInfo(this.input\x2C pos);\x0d\n    message += " (" + loc.line + ":" + loc.column + ")";\x0d\n    var err = new SyntaxError(message);\x0d\n    err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\x0d\n    throw err\x0d\n  };\x0d\n\x0d\n  pp$4.raiseRecoverable = pp$4.raise;\x0d\n\x0d\n  pp$4.curPosition = function() {\x0d\n    if (this.options.locations) {\x0d\n      return new Position(this.curLine\x2C this.pos - this.lineStart)\x0d\n    }\x0d\n  };\x0d\n\x0d\n  var pp$3 = Parser.prototype;\x0d\n\x0d\n  var Scope = function Scope(flags) {\x0d\n    this.flags = flags;\x0d\n    // A list of var-declared names in the current lexical scope\x0d\n    this.var = [];\x0d\n    // A list of lexically-declared names in the current lexical scope\x0d\n    this.lexical = [];\x0d\n    // A list of lexically-declared FunctionDeclaration names in the current lexical scope\x0d\n    this.functions = [];\x0d\n    // A switch to disallow the identifier reference 'arguments'\x0d\n    this.inClassFieldInit = false;\x0d\n  };\x0d\n\x0d\n  // The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.\x0d\n\x0d\n  pp$3.enterScope = function(flags) {\x0d\n    this.scopeStack.push(new Scope(flags));\x0d\n  };\x0d\n\x0d\n  pp$3.exitScope = function() {\x0d\n    this.scopeStack.pop();\x0d\n  };\x0d\n\x0d\n  // The spec says:\x0d\n  // > At the top level of a function\x2C or script\x2C function declarations are\x0d\n  // > treated like var declarations rather than like lexical declarations.\x0d\n  pp$3.treatFunctionsAsVarInScope = function(scope) {\x0d\n    return (scope.flags & SCOPE_FUNCTION) || !this.inModule && (scope.flags & SCOPE_TOP)\x0d\n  };\x0d\n\x0d\n  pp$3.declareName = function(name\x2C bindingType\x2C pos) {\x0d\n    var redeclared = false;\x0d\n    if (bindingType === BIND_LEXICAL) {\x0d\n      var scope = this.currentScope();\x0d\n      redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\x0d\n      scope.lexical.push(name);\x0d\n      if (this.inModule && (scope.flags & SCOPE_TOP))\x0d\n        { delete this.undefinedExports[name]; }\x0d\n    } else if (bindingType === BIND_SIMPLE_CATCH) {\x0d\n      var scope$1 = this.currentScope();\x0d\n      scope$1.lexical.push(name);\x0d\n    } else if (bindingType === BIND_FUNCTION) {\x0d\n      var scope$2 = this.currentScope();\x0d\n      if (this.treatFunctionsAsVar)\x0d\n        { redeclared = scope$2.lexical.indexOf(name) > -1; }\x0d\n      else\x0d\n        { redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1; }\x0d\n      scope$2.functions.push(name);\x0d\n    } else {\x0d\n      for (var i = this.scopeStack.length - 1; i >= 0; --i) {\x0d\n        var scope$3 = this.scopeStack[i];\x0d\n        if (scope$3.lexical.indexOf(name) > -1 && !((scope$3.flags & SCOPE_SIMPLE_CATCH) && scope$3.lexical[0] === name) ||\x0d\n            !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {\x0d\n          redeclared = true;\x0d\n          break\x0d\n        }\x0d\n        scope$3.var.push(name);\x0d\n        if (this.inModule && (scope$3.flags & SCOPE_TOP))\x0d\n          { delete this.undefinedExports[name]; }\x0d\n        if (scope$3.flags & SCOPE_VAR) { break }\x0d\n      }\x0d\n    }\x0d\n    if (redeclared) { this.raiseRecoverable(pos\x2C ("Identifier '" + name + "' has already been declared")); }\x0d\n  };\x0d\n\x0d\n  pp$3.checkLocalExport = function(id) {\x0d\n    // scope.functions must be empty as Module code is always strict.\x0d\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\x0d\n        this.scopeStack[0].var.indexOf(id.name) === -1) {\x0d\n      this.undefinedExports[id.name] = id;\x0d\n    }\x0d\n  };\x0d\n\x0d\n  pp$3.currentScope = function() {\x0d\n    return this.scopeStack[this.scopeStack.length - 1]\x0d\n  };\x0d\n\x0d\n  pp$3.currentVarScope = function() {\x0d\n    for (var i = this.scopeStack.length - 1;; i--) {\x0d\n      var scope = this.scopeStack[i];\x0d\n      if (scope.flags & SCOPE_VAR) { return scope }\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Could be useful for `this`\x2C `new.target`\x2C `super()`\x2C `super.property`\x2C and `super[property]`.\x0d\n  pp$3.currentThisScope = function() {\x0d\n    for (var i = this.scopeStack.length - 1;; i--) {\x0d\n      var scope = this.scopeStack[i];\x0d\n      if (scope.flags & SCOPE_VAR && !(scope.flags & SCOPE_ARROW)) { return scope }\x0d\n    }\x0d\n  };\x0d\n\x0d\n  var Node = function Node(parser\x2C pos\x2C loc) {\x0d\n    this.type = "";\x0d\n    this.start = pos;\x0d\n    this.end = 0;\x0d\n    if (parser.options.locations)\x0d\n      { this.loc = new SourceLocation(parser\x2C loc); }\x0d\n    if (parser.options.directSourceFile)\x0d\n      { this.sourceFile = parser.options.directSourceFile; }\x0d\n    if (parser.options.ranges)\x0d\n      { this.range = [pos\x2C 0]; }\x0d\n  };\x0d\n\x0d\n  // Start an AST node\x2C attaching a start offset.\x0d\n\x0d\n  var pp$2 = Parser.prototype;\x0d\n\x0d\n  pp$2.startNode = function() {\x0d\n    return new Node(this\x2C this.start\x2C this.startLoc)\x0d\n  };\x0d\n\x0d\n  pp$2.startNodeAt = function(pos\x2C loc) {\x0d\n    return new Node(this\x2C pos\x2C loc)\x0d\n  };\x0d\n\x0d\n  // Finish an AST node\x2C adding `type` and `end` properties.\x0d\n\x0d\n  function finishNodeAt(node\x2C type\x2C pos\x2C loc) {\x0d\n    node.type = type;\x0d\n    node.end = pos;\x0d\n    if (this.options.locations)\x0d\n      { node.loc.end = loc; }\x0d\n    if (this.options.ranges)\x0d\n      { node.range[1] = pos; }\x0d\n    return node\x0d\n  }\x0d\n\x0d\n  pp$2.finishNode = function(node\x2C type) {\x0d\n    return finishNodeAt.call(this\x2C node\x2C type\x2C this.lastTokEnd\x2C this.lastTokEndLoc)\x0d\n  };\x0d\n\x0d\n  // Finish node at given position\x0d\n\x0d\n  pp$2.finishNodeAt = function(node\x2C type\x2C pos\x2C loc) {\x0d\n    return finishNodeAt.call(this\x2C node\x2C type\x2C pos\x2C loc)\x0d\n  };\x0d\n\x0d\n  pp$2.copyNode = function(node) {\x0d\n    var newNode = new Node(this\x2C node.start\x2C this.startLoc);\x0d\n    for (var prop in node) { newNode[prop] = node[prop]; }\x0d\n    return newNode\x0d\n  };\x0d\n\x0d\n  // This file contains Unicode properties extracted from the ECMAScript specification.\x0d\n  // The lists are extracted like so:\x0d\n  // $$('#table-binary-unicode-properties > figure > table > tbody > tr > td:nth-child(1) code').map(el => el.innerText)\x0d\n\x0d\n  // #table-binary-unicode-properties\x0d\n  var ecma9BinaryProperties = "ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS";\x0d\n  var ecma10BinaryProperties = ecma9BinaryProperties + " Extended_Pictographic";\x0d\n  var ecma11BinaryProperties = ecma10BinaryProperties;\x0d\n  var ecma12BinaryProperties = ecma11BinaryProperties + " EBase EComp EMod EPres ExtPict";\x0d\n  var ecma13BinaryProperties = ecma12BinaryProperties;\x0d\n  var ecma14BinaryProperties = ecma13BinaryProperties;\x0d\n\x0d\n  var unicodeBinaryProperties = {\x0d\n    9: ecma9BinaryProperties\x2C\x0d\n    10: ecma10BinaryProperties\x2C\x0d\n    11: ecma11BinaryProperties\x2C\x0d\n    12: ecma12BinaryProperties\x2C\x0d\n    13: ecma13BinaryProperties\x2C\x0d\n    14: ecma14BinaryProperties\x0d\n  };\x0d\n\x0d\n  // #table-binary-unicode-properties-of-strings\x0d\n  var ecma14BinaryPropertiesOfStrings = "Basic_Emoji Emoji_Keycap_Sequence RGI_Emoji_Modifier_Sequence RGI_Emoji_Flag_Sequence RGI_Emoji_Tag_Sequence RGI_Emoji_ZWJ_Sequence RGI_Emoji";\x0d\n\x0d\n  var unicodeBinaryPropertiesOfStrings = {\x0d\n    9: ""\x2C\x0d\n    10: ""\x2C\x0d\n    11: ""\x2C\x0d\n    12: ""\x2C\x0d\n    13: ""\x2C\x0d\n    14: ecma14BinaryPropertiesOfStrings\x0d\n  };\x0d\n\x0d\n  // #table-unicode-general-category-values\x0d\n  var unicodeGeneralCategoryValues = "Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu";\x0d\n\x0d\n  // #table-unicode-script-values\x0d\n  var ecma9ScriptValues = "Adlam Adlm Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb";\x0d\n  var ecma10ScriptValues = ecma9ScriptValues + " Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd";\x0d\n  var ecma11ScriptValues = ecma10ScriptValues + " Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho";\x0d\n  var ecma12ScriptValues = ecma11ScriptValues + " Chorasmian Chrs Diak Dives_Akuru Khitan_Small_Script Kits Yezi Yezidi";\x0d\n  var ecma13ScriptValues = ecma12ScriptValues + " Cypro_Minoan Cpmn Old_Uyghur Ougr Tangsa Tnsa Toto Vithkuqi Vith";\x0d\n  var ecma14ScriptValues = ecma13ScriptValues + " Hrkt Katakana_Or_Hiragana Kawi Nag_Mundari Nagm Unknown Zzzz";\x0d\n\x0d\n  var unicodeScriptValues = {\x0d\n    9: ecma9ScriptValues\x2C\x0d\n    10: ecma10ScriptValues\x2C\x0d\n    11: ecma11ScriptValues\x2C\x0d\n    12: ecma12ScriptValues\x2C\x0d\n    13: ecma13ScriptValues\x2C\x0d\n    14: ecma14ScriptValues\x0d\n  };\x0d\n\x0d\n  var data = {};\x0d\n  function buildUnicodeData(ecmaVersion) {\x0d\n    var d = data[ecmaVersion] = {\x0d\n      binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + " " + unicodeGeneralCategoryValues)\x2C\x0d\n      binaryOfStrings: wordsRegexp(unicodeBinaryPropertiesOfStrings[ecmaVersion])\x2C\x0d\n      nonBinary: {\x0d\n        General_Category: wordsRegexp(unicodeGeneralCategoryValues)\x2C\x0d\n        Script: wordsRegexp(unicodeScriptValues[ecmaVersion])\x0d\n      }\x0d\n    };\x0d\n    d.nonBinary.Script_Extensions = d.nonBinary.Script;\x0d\n\x0d\n    d.nonBinary.gc = d.nonBinary.General_Category;\x0d\n    d.nonBinary.sc = d.nonBinary.Script;\x0d\n    d.nonBinary.scx = d.nonBinary.Script_Extensions;\x0d\n  }\x0d\n\x0d\n  for (var i = 0\x2C list = [9\x2C 10\x2C 11\x2C 12\x2C 13\x2C 14]; i < list.length; i += 1) {\x0d\n    var ecmaVersion = list[i];\x0d\n\x0d\n    buildUnicodeData(ecmaVersion);\x0d\n  }\x0d\n\x0d\n  var pp$1 = Parser.prototype;\x0d\n\x0d\n  var RegExpValidationState = function RegExpValidationState(parser) {\x0d\n    this.parser = parser;\x0d\n    this.validFlags = "gim" + (parser.options.ecmaVersion >= 6 ? "uy" : "") + (parser.options.ecmaVersion >= 9 ? "s" : "") + (parser.options.ecmaVersion >= 13 ? "d" : "") + (parser.options.ecmaVersion >= 15 ? "v" : "");\x0d\n    this.unicodeProperties = data[parser.options.ecmaVersion >= 14 ? 14 : parser.options.ecmaVersion];\x0d\n    this.source = "";\x0d\n    this.flags = "";\x0d\n    this.start = 0;\x0d\n    this.switchU = false;\x0d\n    this.switchV = false;\x0d\n    this.switchN = false;\x0d\n    this.pos = 0;\x0d\n    this.lastIntValue = 0;\x0d\n    this.lastStringValue = "";\x0d\n    this.lastAssertionIsQuantifiable = false;\x0d\n    this.numCapturingParens = 0;\x0d\n    this.maxBackReference = 0;\x0d\n    this.groupNames = [];\x0d\n    this.backReferenceNames = [];\x0d\n  };\x0d\n\x0d\n  RegExpValidationState.prototype.reset = function reset (start\x2C pattern\x2C flags) {\x0d\n    var unicodeSets = flags.indexOf("v") !== -1;\x0d\n    var unicode = flags.indexOf("u") !== -1;\x0d\n    this.start = start | 0;\x0d\n    this.source = pattern + "";\x0d\n    this.flags = flags;\x0d\n    if (unicodeSets && this.parser.options.ecmaVersion >= 15) {\x0d\n      this.switchU = true;\x0d\n      this.switchV = true;\x0d\n      this.switchN = true;\x0d\n    } else {\x0d\n      this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\x0d\n      this.switchV = false;\x0d\n      this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\x0d\n    }\x0d\n  };\x0d\n\x0d\n  RegExpValidationState.prototype.raise = function raise (message) {\x0d\n    this.parser.raiseRecoverable(this.start\x2C ("Invalid regular expression: /" + (this.source) + "/: " + message));\x0d\n  };\x0d\n\x0d\n  // If u flag is given\x2C this returns the code point at the index (it combines a surrogate pair).\x0d\n  // Otherwise\x2C this returns the code unit of the index (can be a part of a surrogate pair).\x0d\n  RegExpValidationState.prototype.at = function at (i\x2C forceU) {\x0d\n      if ( forceU === void 0 ) forceU = false;\x0d\n\x0d\n    var s = this.source;\x0d\n    var l = s.length;\x0d\n    if (i >= l) {\x0d\n      return -1\x0d\n    }\x0d\n    var c = s.charCodeAt(i);\x0d\n    if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\x0d\n      return c\x0d\n    }\x0d\n    var next = s.charCodeAt(i + 1);\x0d\n    return next >= 0xDC00 && next <= 0xDFFF ? (c << 10) + next - 0x35FDC00 : c\x0d\n  };\x0d\n\x0d\n  RegExpValidationState.prototype.nextIndex = function nextIndex (i\x2C forceU) {\x0d\n      if ( forceU === void 0 ) forceU = false;\x0d\n\x0d\n    var s = this.source;\x0d\n    var l = s.length;\x0d\n    if (i >= l) {\x0d\n      return l\x0d\n    }\x0d\n    var c = s.charCodeAt(i)\x2C next;\x0d\n    if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l ||\x0d\n        (next = s.charCodeAt(i + 1)) < 0xDC00 || next > 0xDFFF) {\x0d\n      return i + 1\x0d\n    }\x0d\n    return i + 2\x0d\n  };\x0d\n\x0d\n  RegExpValidationState.prototype.current = function current (forceU) {\x0d\n      if ( forceU === void 0 ) forceU = false;\x0d\n\x0d\n    return this.at(this.pos\x2C forceU)\x0d\n  };\x0d\n\x0d\n  RegExpValidationState.prototype.lookahead = function lookahead (forceU) {\x0d\n      if ( forceU === void 0 ) forceU = false;\x0d\n\x0d\n    return this.at(this.nextIndex(this.pos\x2C forceU)\x2C forceU)\x0d\n  };\x0d\n\x0d\n  RegExpValidationState.prototype.advance = function advance (forceU) {\x0d\n      if ( forceU === void 0 ) forceU = false;\x0d\n\x0d\n    this.pos = this.nextIndex(this.pos\x2C forceU);\x0d\n  };\x0d\n\x0d\n  RegExpValidationState.prototype.eat = function eat (ch\x2C forceU) {\x0d\n      if ( forceU === void 0 ) forceU = false;\x0d\n\x0d\n    if (this.current(forceU) === ch) {\x0d\n      this.advance(forceU);\x0d\n      return true\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  RegExpValidationState.prototype.eatChars = function eatChars (chs\x2C forceU) {\x0d\n      if ( forceU === void 0 ) forceU = false;\x0d\n\x0d\n    var pos = this.pos;\x0d\n    for (var i = 0\x2C list = chs; i < list.length; i += 1) {\x0d\n      var ch = list[i];\x0d\n\x0d\n        var current = this.at(pos\x2C forceU);\x0d\n      if (current === -1 || current !== ch) {\x0d\n        return false\x0d\n      }\x0d\n      pos = this.nextIndex(pos\x2C forceU);\x0d\n    }\x0d\n    this.pos = pos;\x0d\n    return true\x0d\n  };\x0d\n\x0d\n  /**\x0d\n   * Validate the flags part of a given RegExpLiteral.\x0d\n   *\x0d\n   * @param {RegExpValidationState} state The state to validate RegExp.\x0d\n   * @returns {void}\x0d\n   */\x0d\n  pp$1.validateRegExpFlags = function(state) {\x0d\n    var validFlags = state.validFlags;\x0d\n    var flags = state.flags;\x0d\n\x0d\n    var u = false;\x0d\n    var v = false;\x0d\n\x0d\n    for (var i = 0; i < flags.length; i++) {\x0d\n      var flag = flags.charAt(i);\x0d\n      if (validFlags.indexOf(flag) === -1) {\x0d\n        this.raise(state.start\x2C "Invalid regular expression flag");\x0d\n      }\x0d\n      if (flags.indexOf(flag\x2C i + 1) > -1) {\x0d\n        this.raise(state.start\x2C "Duplicate regular expression flag");\x0d\n      }\x0d\n      if (flag === "u") { u = true; }\x0d\n      if (flag === "v") { v = true; }\x0d\n    }\x0d\n    if (this.options.ecmaVersion >= 15 && u && v) {\x0d\n      this.raise(state.start\x2C "Invalid regular expression flag");\x0d\n    }\x0d\n  };\x0d\n\x0d\n  /**\x0d\n   * Validate the pattern part of a given RegExpLiteral.\x0d\n   *\x0d\n   * @param {RegExpValidationState} state The state to validate RegExp.\x0d\n   * @returns {void}\x0d\n   */\x0d\n  pp$1.validateRegExpPattern = function(state) {\x0d\n    this.regexp_pattern(state);\x0d\n\x0d\n    // The goal symbol for the parse is |Pattern[~U\x2C ~N]|. If the result of\x0d\n    // parsing contains a |GroupName|\x2C reparse with the goal symbol\x0d\n    // |Pattern[~U\x2C +N]| and use this result instead. Throw a *SyntaxError*\x0d\n    // exception if _P_ did not conform to the grammar\x2C if any elements of _P_\x0d\n    // were not matched by the parse\x2C or if any Early Error conditions exist.\x0d\n    if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {\x0d\n      state.switchN = true;\x0d\n      this.regexp_pattern(state);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern\x0d\n  pp$1.regexp_pattern = function(state) {\x0d\n    state.pos = 0;\x0d\n    state.lastIntValue = 0;\x0d\n    state.lastStringValue = "";\x0d\n    state.lastAssertionIsQuantifiable = false;\x0d\n    state.numCapturingParens = 0;\x0d\n    state.maxBackReference = 0;\x0d\n    state.groupNames.length = 0;\x0d\n    state.backReferenceNames.length = 0;\x0d\n\x0d\n    this.regexp_disjunction(state);\x0d\n\x0d\n    if (state.pos !== state.source.length) {\x0d\n      // Make the same messages as V8.\x0d\n      if (state.eat(0x29 /* ) */)) {\x0d\n        state.raise("Unmatched ')'");\x0d\n      }\x0d\n      if (state.eat(0x5D /* ] */) || state.eat(0x7D /* } */)) {\x0d\n        state.raise("Lone quantifier brackets");\x0d\n      }\x0d\n    }\x0d\n    if (state.maxBackReference > state.numCapturingParens) {\x0d\n      state.raise("Invalid escape");\x0d\n    }\x0d\n    for (var i = 0\x2C list = state.backReferenceNames; i < list.length; i += 1) {\x0d\n      var name = list[i];\x0d\n\x0d\n      if (state.groupNames.indexOf(name) === -1) {\x0d\n        state.raise("Invalid named capture referenced");\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction\x0d\n  pp$1.regexp_disjunction = function(state) {\x0d\n    this.regexp_alternative(state);\x0d\n    while (state.eat(0x7C /* | */)) {\x0d\n      this.regexp_alternative(state);\x0d\n    }\x0d\n\x0d\n    // Make the same message as V8.\x0d\n    if (this.regexp_eatQuantifier(state\x2C true)) {\x0d\n      state.raise("Nothing to repeat");\x0d\n    }\x0d\n    if (state.eat(0x7B /* { */)) {\x0d\n      state.raise("Lone quantifier brackets");\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative\x0d\n  pp$1.regexp_alternative = function(state) {\x0d\n    while (state.pos < state.source.length && this.regexp_eatTerm(state))\x0d\n      { }\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term\x0d\n  pp$1.regexp_eatTerm = function(state) {\x0d\n    if (this.regexp_eatAssertion(state)) {\x0d\n      // Handle `QuantifiableAssertion Quantifier` alternative.\x0d\n      // `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion\x0d\n      // is a QuantifiableAssertion.\x0d\n      if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\x0d\n        // Make the same message as V8.\x0d\n        if (state.switchU) {\x0d\n          state.raise("Invalid quantifier");\x0d\n        }\x0d\n      }\x0d\n      return true\x0d\n    }\x0d\n\x0d\n    if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\x0d\n      this.regexp_eatQuantifier(state);\x0d\n      return true\x0d\n    }\x0d\n\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion\x0d\n  pp$1.regexp_eatAssertion = function(state) {\x0d\n    var start = state.pos;\x0d\n    state.lastAssertionIsQuantifiable = false;\x0d\n\x0d\n    // ^\x2C $\x0d\n    if (state.eat(0x5E /* ^ */) || state.eat(0x24 /* $ */)) {\x0d\n      return true\x0d\n    }\x0d\n\x0d\n    // \\b \\B\x0d\n    if (state.eat(0x5C /* \\ */)) {\x0d\n      if (state.eat(0x42 /* B */) || state.eat(0x62 /* b */)) {\x0d\n        return true\x0d\n      }\x0d\n      state.pos = start;\x0d\n    }\x0d\n\x0d\n    // Lookahead / Lookbehind\x0d\n    if (state.eat(0x28 /* ( */) && state.eat(0x3F /* ? */)) {\x0d\n      var lookbehind = false;\x0d\n      if (this.options.ecmaVersion >= 9) {\x0d\n        lookbehind = state.eat(0x3C /* < */);\x0d\n      }\x0d\n      if (state.eat(0x3D /* = */) || state.eat(0x21 /* ! */)) {\x0d\n        this.regexp_disjunction(state);\x0d\n        if (!state.eat(0x29 /* ) */)) {\x0d\n          state.raise("Unterminated group");\x0d\n        }\x0d\n        state.lastAssertionIsQuantifiable = !lookbehind;\x0d\n        return true\x0d\n      }\x0d\n    }\x0d\n\x0d\n    state.pos = start;\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier\x0d\n  pp$1.regexp_eatQuantifier = function(state\x2C noError) {\x0d\n    if ( noError === void 0 ) noError = false;\x0d\n\x0d\n    if (this.regexp_eatQuantifierPrefix(state\x2C noError)) {\x0d\n      state.eat(0x3F /* ? */);\x0d\n      return true\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix\x0d\n  pp$1.regexp_eatQuantifierPrefix = function(state\x2C noError) {\x0d\n    return (\x0d\n      state.eat(0x2A /* * */) ||\x0d\n      state.eat(0x2B /* + */) ||\x0d\n      state.eat(0x3F /* ? */) ||\x0d\n      this.regexp_eatBracedQuantifier(state\x2C noError)\x0d\n    )\x0d\n  };\x0d\n  pp$1.regexp_eatBracedQuantifier = function(state\x2C noError) {\x0d\n    var start = state.pos;\x0d\n    if (state.eat(0x7B /* { */)) {\x0d\n      var min = 0\x2C max = -1;\x0d\n      if (this.regexp_eatDecimalDigits(state)) {\x0d\n        min = state.lastIntValue;\x0d\n        if (state.eat(0x2C /* \x2C */) && this.regexp_eatDecimalDigits(state)) {\x0d\n          max = state.lastIntValue;\x0d\n        }\x0d\n        if (state.eat(0x7D /* } */)) {\x0d\n          // SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term\x0d\n          if (max !== -1 && max < min && !noError) {\x0d\n            state.raise("numbers out of order in {} quantifier");\x0d\n          }\x0d\n          return true\x0d\n        }\x0d\n      }\x0d\n      if (state.switchU && !noError) {\x0d\n        state.raise("Incomplete quantifier");\x0d\n      }\x0d\n      state.pos = start;\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Atom\x0d\n  pp$1.regexp_eatAtom = function(state) {\x0d\n    return (\x0d\n      this.regexp_eatPatternCharacters(state) ||\x0d\n      state.eat(0x2E /* . */) ||\x0d\n      this.regexp_eatReverseSolidusAtomEscape(state) ||\x0d\n      this.regexp_eatCharacterClass(state) ||\x0d\n      this.regexp_eatUncapturingGroup(state) ||\x0d\n      this.regexp_eatCapturingGroup(state)\x0d\n    )\x0d\n  };\x0d\n  pp$1.regexp_eatReverseSolidusAtomEscape = function(state) {\x0d\n    var start = state.pos;\x0d\n    if (state.eat(0x5C /* \\ */)) {\x0d\n      if (this.regexp_eatAtomEscape(state)) {\x0d\n        return true\x0d\n      }\x0d\n      state.pos = start;\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n  pp$1.regexp_eatUncapturingGroup = function(state) {\x0d\n    var start = state.pos;\x0d\n    if (state.eat(0x28 /* ( */)) {\x0d\n      if (state.eat(0x3F /* ? */) && state.eat(0x3A /* : */)) {\x0d\n        this.regexp_disjunction(state);\x0d\n        if (state.eat(0x29 /* ) */)) {\x0d\n          return true\x0d\n        }\x0d\n        state.raise("Unterminated group");\x0d\n      }\x0d\n      state.pos = start;\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n  pp$1.regexp_eatCapturingGroup = function(state) {\x0d\n    if (state.eat(0x28 /* ( */)) {\x0d\n      if (this.options.ecmaVersion >= 9) {\x0d\n        this.regexp_groupSpecifier(state);\x0d\n      } else if (state.current() === 0x3F /* ? */) {\x0d\n        state.raise("Invalid group");\x0d\n      }\x0d\n      this.regexp_disjunction(state);\x0d\n      if (state.eat(0x29 /* ) */)) {\x0d\n        state.numCapturingParens += 1;\x0d\n        return true\x0d\n      }\x0d\n      state.raise("Unterminated group");\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom\x0d\n  pp$1.regexp_eatExtendedAtom = function(state) {\x0d\n    return (\x0d\n      state.eat(0x2E /* . */) ||\x0d\n      this.regexp_eatReverseSolidusAtomEscape(state) ||\x0d\n      this.regexp_eatCharacterClass(state) ||\x0d\n      this.regexp_eatUncapturingGroup(state) ||\x0d\n      this.regexp_eatCapturingGroup(state) ||\x0d\n      this.regexp_eatInvalidBracedQuantifier(state) ||\x0d\n      this.regexp_eatExtendedPatternCharacter(state)\x0d\n    )\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier\x0d\n  pp$1.regexp_eatInvalidBracedQuantifier = function(state) {\x0d\n    if (this.regexp_eatBracedQuantifier(state\x2C true)) {\x0d\n      state.raise("Nothing to repeat");\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter\x0d\n  pp$1.regexp_eatSyntaxCharacter = function(state) {\x0d\n    var ch = state.current();\x0d\n    if (isSyntaxCharacter(ch)) {\x0d\n      state.lastIntValue = ch;\x0d\n      state.advance();\x0d\n      return true\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n  function isSyntaxCharacter(ch) {\x0d\n    return (\x0d\n      ch === 0x24 /* $ */ ||\x0d\n      ch >= 0x28 /* ( */ && ch <= 0x2B /* + */ ||\x0d\n      ch === 0x2E /* . */ ||\x0d\n      ch === 0x3F /* ? */ ||\x0d\n      ch >= 0x5B /* [ */ && ch <= 0x5E /* ^ */ ||\x0d\n      ch >= 0x7B /* { */ && ch <= 0x7D /* } */\x0d\n    )\x0d\n  }\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter\x0d\n  // But eat eager.\x0d\n  pp$1.regexp_eatPatternCharacters = function(state) {\x0d\n    var start = state.pos;\x0d\n    var ch = 0;\x0d\n    while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\x0d\n      state.advance();\x0d\n    }\x0d\n    return state.pos !== start\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter\x0d\n  pp$1.regexp_eatExtendedPatternCharacter = function(state) {\x0d\n    var ch = state.current();\x0d\n    if (\x0d\n      ch !== -1 &&\x0d\n      ch !== 0x24 /* $ */ &&\x0d\n      !(ch >= 0x28 /* ( */ && ch <= 0x2B /* + */) &&\x0d\n      ch !== 0x2E /* . */ &&\x0d\n      ch !== 0x3F /* ? */ &&\x0d\n      ch !== 0x5B /* [ */ &&\x0d\n      ch !== 0x5E /* ^ */ &&\x0d\n      ch !== 0x7C /* | */\x0d\n    ) {\x0d\n      state.advance();\x0d\n      return true\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  // GroupSpecifier ::\x0d\n  //   [empty]\x0d\n  //   `?` GroupName\x0d\n  pp$1.regexp_groupSpecifier = function(state) {\x0d\n    if (state.eat(0x3F /* ? */)) {\x0d\n      if (this.regexp_eatGroupName(state)) {\x0d\n        if (state.groupNames.indexOf(state.lastStringValue) !== -1) {\x0d\n          state.raise("Duplicate capture group name");\x0d\n        }\x0d\n        state.groupNames.push(state.lastStringValue);\x0d\n        return\x0d\n      }\x0d\n      state.raise("Invalid group");\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // GroupName ::\x0d\n  //   `<` RegExpIdentifierName `>`\x0d\n  // Note: this updates `state.lastStringValue` property with the eaten name.\x0d\n  pp$1.regexp_eatGroupName = function(state) {\x0d\n    state.lastStringValue = "";\x0d\n    if (state.eat(0x3C /* < */)) {\x0d\n      if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E /* > */)) {\x0d\n        return true\x0d\n      }\x0d\n      state.raise("Invalid capture group name");\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  // RegExpIdentifierName ::\x0d\n  //   RegExpIdentifierStart\x0d\n  //   RegExpIdentifierName RegExpIdentifierPart\x0d\n  // Note: this updates `state.lastStringValue` property with the eaten name.\x0d\n  pp$1.regexp_eatRegExpIdentifierName = function(state) {\x0d\n    state.lastStringValue = "";\x0d\n    if (this.regexp_eatRegExpIdentifierStart(state)) {\x0d\n      state.lastStringValue += codePointToString(state.lastIntValue);\x0d\n      while (this.regexp_eatRegExpIdentifierPart(state)) {\x0d\n        state.lastStringValue += codePointToString(state.lastIntValue);\x0d\n      }\x0d\n      return true\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  // RegExpIdentifierStart ::\x0d\n  //   UnicodeIDStart\x0d\n  //   `$`\x0d\n  //   `_`\x0d\n  //   `\\` RegExpUnicodeEscapeSequence[+U]\x0d\n  pp$1.regexp_eatRegExpIdentifierStart = function(state) {\x0d\n    var start = state.pos;\x0d\n    var forceU = this.options.ecmaVersion >= 11;\x0d\n    var ch = state.current(forceU);\x0d\n    state.advance(forceU);\x0d\n\x0d\n    if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state\x2C forceU)) {\x0d\n      ch = state.lastIntValue;\x0d\n    }\x0d\n    if (isRegExpIdentifierStart(ch)) {\x0d\n      state.lastIntValue = ch;\x0d\n      return true\x0d\n    }\x0d\n\x0d\n    state.pos = start;\x0d\n    return false\x0d\n  };\x0d\n  function isRegExpIdentifierStart(ch) {\x0d\n    return isIdentifierStart(ch\x2C true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */\x0d\n  }\x0d\n\x0d\n  // RegExpIdentifierPart ::\x0d\n  //   UnicodeIDContinue\x0d\n  //   `$`\x0d\n  //   `_`\x0d\n  //   `\\` RegExpUnicodeEscapeSequence[+U]\x0d\n  //   <ZWNJ>\x0d\n  //   <ZWJ>\x0d\n  pp$1.regexp_eatRegExpIdentifierPart = function(state) {\x0d\n    var start = state.pos;\x0d\n    var forceU = this.options.ecmaVersion >= 11;\x0d\n    var ch = state.current(forceU);\x0d\n    state.advance(forceU);\x0d\n\x0d\n    if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state\x2C forceU)) {\x0d\n      ch = state.lastIntValue;\x0d\n    }\x0d\n    if (isRegExpIdentifierPart(ch)) {\x0d\n      state.lastIntValue = ch;\x0d\n      return true\x0d\n    }\x0d\n\x0d\n    state.pos = start;\x0d\n    return false\x0d\n  };\x0d\n  function isRegExpIdentifierPart(ch) {\x0d\n    return isIdentifierChar(ch\x2C true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */ || ch === 0x200C /* <ZWNJ> */ || ch === 0x200D /* <ZWJ> */\x0d\n  }\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape\x0d\n  pp$1.regexp_eatAtomEscape = function(state) {\x0d\n    if (\x0d\n      this.regexp_eatBackReference(state) ||\x0d\n      this.regexp_eatCharacterClassEscape(state) ||\x0d\n      this.regexp_eatCharacterEscape(state) ||\x0d\n      (state.switchN && this.regexp_eatKGroupName(state))\x0d\n    ) {\x0d\n      return true\x0d\n    }\x0d\n    if (state.switchU) {\x0d\n      // Make the same message as V8.\x0d\n      if (state.current() === 0x63 /* c */) {\x0d\n        state.raise("Invalid unicode escape");\x0d\n      }\x0d\n      state.raise("Invalid escape");\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n  pp$1.regexp_eatBackReference = function(state) {\x0d\n    var start = state.pos;\x0d\n    if (this.regexp_eatDecimalEscape(state)) {\x0d\n      var n = state.lastIntValue;\x0d\n      if (state.switchU) {\x0d\n        // For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape\x0d\n        if (n > state.maxBackReference) {\x0d\n          state.maxBackReference = n;\x0d\n        }\x0d\n        return true\x0d\n      }\x0d\n      if (n <= state.numCapturingParens) {\x0d\n        return true\x0d\n      }\x0d\n      state.pos = start;\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n  pp$1.regexp_eatKGroupName = function(state) {\x0d\n    if (state.eat(0x6B /* k */)) {\x0d\n      if (this.regexp_eatGroupName(state)) {\x0d\n        state.backReferenceNames.push(state.lastStringValue);\x0d\n        return true\x0d\n      }\x0d\n      state.raise("Invalid named reference");\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape\x0d\n  pp$1.regexp_eatCharacterEscape = function(state) {\x0d\n    return (\x0d\n      this.regexp_eatControlEscape(state) ||\x0d\n      this.regexp_eatCControlLetter(state) ||\x0d\n      this.regexp_eatZero(state) ||\x0d\n      this.regexp_eatHexEscapeSequence(state) ||\x0d\n      this.regexp_eatRegExpUnicodeEscapeSequence(state\x2C false) ||\x0d\n      (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||\x0d\n      this.regexp_eatIdentityEscape(state)\x0d\n    )\x0d\n  };\x0d\n  pp$1.regexp_eatCControlLetter = function(state) {\x0d\n    var start = state.pos;\x0d\n    if (state.eat(0x63 /* c */)) {\x0d\n      if (this.regexp_eatControlLetter(state)) {\x0d\n        return true\x0d\n      }\x0d\n      state.pos = start;\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n  pp$1.regexp_eatZero = function(state) {\x0d\n    if (state.current() === 0x30 /* 0 */ && !isDecimalDigit(state.lookahead())) {\x0d\n      state.lastIntValue = 0;\x0d\n      state.advance();\x0d\n      return true\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape\x0d\n  pp$1.regexp_eatControlEscape = function(state) {\x0d\n    var ch = state.current();\x0d\n    if (ch === 0x74 /* t */) {\x0d\n      state.lastIntValue = 0x09; /* \\t */\x0d\n      state.advance();\x0d\n      return true\x0d\n    }\x0d\n    if (ch === 0x6E /* n */) {\x0d\n      state.lastIntValue = 0x0A; /* \\n */\x0d\n      state.advance();\x0d\n      return true\x0d\n    }\x0d\n    if (ch === 0x76 /* v */) {\x0d\n      state.lastIntValue = 0x0B; /* \\v */\x0d\n      state.advance();\x0d\n      return true\x0d\n    }\x0d\n    if (ch === 0x66 /* f */) {\x0d\n      state.lastIntValue = 0x0C; /* \\f */\x0d\n      state.advance();\x0d\n      return true\x0d\n    }\x0d\n    if (ch === 0x72 /* r */) {\x0d\n      state.lastIntValue = 0x0D; /* \\r */\x0d\n      state.advance();\x0d\n      return true\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter\x0d\n  pp$1.regexp_eatControlLetter = function(state) {\x0d\n    var ch = state.current();\x0d\n    if (isControlLetter(ch)) {\x0d\n      state.lastIntValue = ch % 0x20;\x0d\n      state.advance();\x0d\n      return true\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n  function isControlLetter(ch) {\x0d\n    return (\x0d\n      (ch >= 0x41 /* A */ && ch <= 0x5A /* Z */) ||\x0d\n      (ch >= 0x61 /* a */ && ch <= 0x7A /* z */)\x0d\n    )\x0d\n  }\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence\x0d\n  pp$1.regexp_eatRegExpUnicodeEscapeSequence = function(state\x2C forceU) {\x0d\n    if ( forceU === void 0 ) forceU = false;\x0d\n\x0d\n    var start = state.pos;\x0d\n    var switchU = forceU || state.switchU;\x0d\n\x0d\n    if (state.eat(0x75 /* u */)) {\x0d\n      if (this.regexp_eatFixedHexDigits(state\x2C 4)) {\x0d\n        var lead = state.lastIntValue;\x0d\n        if (switchU && lead >= 0xD800 && lead <= 0xDBFF) {\x0d\n          var leadSurrogateEnd = state.pos;\x0d\n          if (state.eat(0x5C /* \\ */) && state.eat(0x75 /* u */) && this.regexp_eatFixedHexDigits(state\x2C 4)) {\x0d\n            var trail = state.lastIntValue;\x0d\n            if (trail >= 0xDC00 && trail <= 0xDFFF) {\x0d\n              state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\x0d\n              return true\x0d\n            }\x0d\n          }\x0d\n          state.pos = leadSurrogateEnd;\x0d\n          state.lastIntValue = lead;\x0d\n        }\x0d\n        return true\x0d\n      }\x0d\n      if (\x0d\n        switchU &&\x0d\n        state.eat(0x7B /* { */) &&\x0d\n        this.regexp_eatHexDigits(state) &&\x0d\n        state.eat(0x7D /* } */) &&\x0d\n        isValidUnicode(state.lastIntValue)\x0d\n      ) {\x0d\n        return true\x0d\n      }\x0d\n      if (switchU) {\x0d\n        state.raise("Invalid unicode escape");\x0d\n      }\x0d\n      state.pos = start;\x0d\n    }\x0d\n\x0d\n    return false\x0d\n  };\x0d\n  function isValidUnicode(ch) {\x0d\n    return ch >= 0 && ch <= 0x10FFFF\x0d\n  }\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape\x0d\n  pp$1.regexp_eatIdentityEscape = function(state) {\x0d\n    if (state.switchU) {\x0d\n      if (this.regexp_eatSyntaxCharacter(state)) {\x0d\n        return true\x0d\n      }\x0d\n      if (state.eat(0x2F /* / */)) {\x0d\n        state.lastIntValue = 0x2F; /* / */\x0d\n        return true\x0d\n      }\x0d\n      return false\x0d\n    }\x0d\n\x0d\n    var ch = state.current();\x0d\n    if (ch !== 0x63 /* c */ && (!state.switchN || ch !== 0x6B /* k */)) {\x0d\n      state.lastIntValue = ch;\x0d\n      state.advance();\x0d\n      return true\x0d\n    }\x0d\n\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape\x0d\n  pp$1.regexp_eatDecimalEscape = function(state) {\x0d\n    state.lastIntValue = 0;\x0d\n    var ch = state.current();\x0d\n    if (ch >= 0x31 /* 1 */ && ch <= 0x39 /* 9 */) {\x0d\n      do {\x0d\n        state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\x0d\n        state.advance();\x0d\n      } while ((ch = state.current()) >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */)\x0d\n      return true\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  // Return values used by character set parsing methods\x2C needed to\x0d\n  // forbid negation of sets that can match strings.\x0d\n  var CharSetNone = 0; // Nothing parsed\x0d\n  var CharSetOk = 1; // Construct parsed\x2C cannot contain strings\x0d\n  var CharSetString = 2; // Construct parsed\x2C can contain strings\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape\x0d\n  pp$1.regexp_eatCharacterClassEscape = function(state) {\x0d\n    var ch = state.current();\x0d\n\x0d\n    if (isCharacterClassEscape(ch)) {\x0d\n      state.lastIntValue = -1;\x0d\n      state.advance();\x0d\n      return CharSetOk\x0d\n    }\x0d\n\x0d\n    var negate = false;\x0d\n    if (\x0d\n      state.switchU &&\x0d\n      this.options.ecmaVersion >= 9 &&\x0d\n      ((negate = ch === 0x50 /* P */) || ch === 0x70 /* p */)\x0d\n    ) {\x0d\n      state.lastIntValue = -1;\x0d\n      state.advance();\x0d\n      var result;\x0d\n      if (\x0d\n        state.eat(0x7B /* { */) &&\x0d\n        (result = this.regexp_eatUnicodePropertyValueExpression(state)) &&\x0d\n        state.eat(0x7D /* } */)\x0d\n      ) {\x0d\n        if (negate && result === CharSetString) { state.raise("Invalid property name"); }\x0d\n        return result\x0d\n      }\x0d\n      state.raise("Invalid property name");\x0d\n    }\x0d\n\x0d\n    return CharSetNone\x0d\n  };\x0d\n\x0d\n  function isCharacterClassEscape(ch) {\x0d\n    return (\x0d\n      ch === 0x64 /* d */ ||\x0d\n      ch === 0x44 /* D */ ||\x0d\n      ch === 0x73 /* s */ ||\x0d\n      ch === 0x53 /* S */ ||\x0d\n      ch === 0x77 /* w */ ||\x0d\n      ch === 0x57 /* W */\x0d\n    )\x0d\n  }\x0d\n\x0d\n  // UnicodePropertyValueExpression ::\x0d\n  //   UnicodePropertyName `=` UnicodePropertyValue\x0d\n  //   LoneUnicodePropertyNameOrValue\x0d\n  pp$1.regexp_eatUnicodePropertyValueExpression = function(state) {\x0d\n    var start = state.pos;\x0d\n\x0d\n    // UnicodePropertyName `=` UnicodePropertyValue\x0d\n    if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D /* = */)) {\x0d\n      var name = state.lastStringValue;\x0d\n      if (this.regexp_eatUnicodePropertyValue(state)) {\x0d\n        var value = state.lastStringValue;\x0d\n        this.regexp_validateUnicodePropertyNameAndValue(state\x2C name\x2C value);\x0d\n        return CharSetOk\x0d\n      }\x0d\n    }\x0d\n    state.pos = start;\x0d\n\x0d\n    // LoneUnicodePropertyNameOrValue\x0d\n    if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\x0d\n      var nameOrValue = state.lastStringValue;\x0d\n      return this.regexp_validateUnicodePropertyNameOrValue(state\x2C nameOrValue)\x0d\n    }\x0d\n    return CharSetNone\x0d\n  };\x0d\n\x0d\n  pp$1.regexp_validateUnicodePropertyNameAndValue = function(state\x2C name\x2C value) {\x0d\n    if (!hasOwn(state.unicodeProperties.nonBinary\x2C name))\x0d\n      { state.raise("Invalid property name"); }\x0d\n    if (!state.unicodeProperties.nonBinary[name].test(value))\x0d\n      { state.raise("Invalid property value"); }\x0d\n  };\x0d\n\x0d\n  pp$1.regexp_validateUnicodePropertyNameOrValue = function(state\x2C nameOrValue) {\x0d\n    if (state.unicodeProperties.binary.test(nameOrValue)) { return CharSetOk }\x0d\n    if (state.switchV && state.unicodeProperties.binaryOfStrings.test(nameOrValue)) { return CharSetString }\x0d\n    state.raise("Invalid property name");\x0d\n  };\x0d\n\x0d\n  // UnicodePropertyName ::\x0d\n  //   UnicodePropertyNameCharacters\x0d\n  pp$1.regexp_eatUnicodePropertyName = function(state) {\x0d\n    var ch = 0;\x0d\n    state.lastStringValue = "";\x0d\n    while (isUnicodePropertyNameCharacter(ch = state.current())) {\x0d\n      state.lastStringValue += codePointToString(ch);\x0d\n      state.advance();\x0d\n    }\x0d\n    return state.lastStringValue !== ""\x0d\n  };\x0d\n\x0d\n  function isUnicodePropertyNameCharacter(ch) {\x0d\n    return isControlLetter(ch) || ch === 0x5F /* _ */\x0d\n  }\x0d\n\x0d\n  // UnicodePropertyValue ::\x0d\n  //   UnicodePropertyValueCharacters\x0d\n  pp$1.regexp_eatUnicodePropertyValue = function(state) {\x0d\n    var ch = 0;\x0d\n    state.lastStringValue = "";\x0d\n    while (isUnicodePropertyValueCharacter(ch = state.current())) {\x0d\n      state.lastStringValue += codePointToString(ch);\x0d\n      state.advance();\x0d\n    }\x0d\n    return state.lastStringValue !== ""\x0d\n  };\x0d\n  function isUnicodePropertyValueCharacter(ch) {\x0d\n    return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)\x0d\n  }\x0d\n\x0d\n  // LoneUnicodePropertyNameOrValue ::\x0d\n  //   UnicodePropertyValueCharacters\x0d\n  pp$1.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {\x0d\n    return this.regexp_eatUnicodePropertyValue(state)\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass\x0d\n  pp$1.regexp_eatCharacterClass = function(state) {\x0d\n    if (state.eat(0x5B /* [ */)) {\x0d\n      var negate = state.eat(0x5E /* ^ */);\x0d\n      var result = this.regexp_classContents(state);\x0d\n      if (!state.eat(0x5D /* ] */))\x0d\n        { state.raise("Unterminated character class"); }\x0d\n      if (negate && result === CharSetString)\x0d\n        { state.raise("Negated character class may contain strings"); }\x0d\n      return true\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  // https://tc39.es/ecma262/#prod-ClassContents\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges\x0d\n  pp$1.regexp_classContents = function(state) {\x0d\n    if (state.current() === 0x5D /* ] */) { return CharSetOk }\x0d\n    if (state.switchV) { return this.regexp_classSetExpression(state) }\x0d\n    this.regexp_nonEmptyClassRanges(state);\x0d\n    return CharSetOk\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash\x0d\n  pp$1.regexp_nonEmptyClassRanges = function(state) {\x0d\n    while (this.regexp_eatClassAtom(state)) {\x0d\n      var left = state.lastIntValue;\x0d\n      if (state.eat(0x2D /* - */) && this.regexp_eatClassAtom(state)) {\x0d\n        var right = state.lastIntValue;\x0d\n        if (state.switchU && (left === -1 || right === -1)) {\x0d\n          state.raise("Invalid character class");\x0d\n        }\x0d\n        if (left !== -1 && right !== -1 && left > right) {\x0d\n          state.raise("Range out of order in character class");\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash\x0d\n  pp$1.regexp_eatClassAtom = function(state) {\x0d\n    var start = state.pos;\x0d\n\x0d\n    if (state.eat(0x5C /* \\ */)) {\x0d\n      if (this.regexp_eatClassEscape(state)) {\x0d\n        return true\x0d\n      }\x0d\n      if (state.switchU) {\x0d\n        // Make the same message as V8.\x0d\n        var ch$1 = state.current();\x0d\n        if (ch$1 === 0x63 /* c */ || isOctalDigit(ch$1)) {\x0d\n          state.raise("Invalid class escape");\x0d\n        }\x0d\n        state.raise("Invalid escape");\x0d\n      }\x0d\n      state.pos = start;\x0d\n    }\x0d\n\x0d\n    var ch = state.current();\x0d\n    if (ch !== 0x5D /* ] */) {\x0d\n      state.lastIntValue = ch;\x0d\n      state.advance();\x0d\n      return true\x0d\n    }\x0d\n\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape\x0d\n  pp$1.regexp_eatClassEscape = function(state) {\x0d\n    var start = state.pos;\x0d\n\x0d\n    if (state.eat(0x62 /* b */)) {\x0d\n      state.lastIntValue = 0x08; /* <BS> */\x0d\n      return true\x0d\n    }\x0d\n\x0d\n    if (state.switchU && state.eat(0x2D /* - */)) {\x0d\n      state.lastIntValue = 0x2D; /* - */\x0d\n      return true\x0d\n    }\x0d\n\x0d\n    if (!state.switchU && state.eat(0x63 /* c */)) {\x0d\n      if (this.regexp_eatClassControlLetter(state)) {\x0d\n        return true\x0d\n      }\x0d\n      state.pos = start;\x0d\n    }\x0d\n\x0d\n    return (\x0d\n      this.regexp_eatCharacterClassEscape(state) ||\x0d\n      this.regexp_eatCharacterEscape(state)\x0d\n    )\x0d\n  };\x0d\n\x0d\n  // https://tc39.es/ecma262/#prod-ClassSetExpression\x0d\n  // https://tc39.es/ecma262/#prod-ClassUnion\x0d\n  // https://tc39.es/ecma262/#prod-ClassIntersection\x0d\n  // https://tc39.es/ecma262/#prod-ClassSubtraction\x0d\n  pp$1.regexp_classSetExpression = function(state) {\x0d\n    var result = CharSetOk\x2C subResult;\x0d\n    if (this.regexp_eatClassSetRange(state)) ; else if (subResult = this.regexp_eatClassSetOperand(state)) {\x0d\n      if (subResult === CharSetString) { result = CharSetString; }\x0d\n      // https://tc39.es/ecma262/#prod-ClassIntersection\x0d\n      var start = state.pos;\x0d\n      while (state.eatChars([0x26\x2C 0x26] /* && */)) {\x0d\n        if (\x0d\n          state.current() !== 0x26 /* & */ &&\x0d\n          (subResult = this.regexp_eatClassSetOperand(state))\x0d\n        ) {\x0d\n          if (subResult !== CharSetString) { result = CharSetOk; }\x0d\n          continue\x0d\n        }\x0d\n        state.raise("Invalid character in character class");\x0d\n      }\x0d\n      if (start !== state.pos) { return result }\x0d\n      // https://tc39.es/ecma262/#prod-ClassSubtraction\x0d\n      while (state.eatChars([0x2D\x2C 0x2D] /* -- */)) {\x0d\n        if (this.regexp_eatClassSetOperand(state)) { continue }\x0d\n        state.raise("Invalid character in character class");\x0d\n      }\x0d\n      if (start !== state.pos) { return result }\x0d\n    } else {\x0d\n      state.raise("Invalid character in character class");\x0d\n    }\x0d\n    // https://tc39.es/ecma262/#prod-ClassUnion\x0d\n    for (;;) {\x0d\n      if (this.regexp_eatClassSetRange(state)) { continue }\x0d\n      subResult = this.regexp_eatClassSetOperand(state);\x0d\n      if (!subResult) { return result }\x0d\n      if (subResult === CharSetString) { result = CharSetString; }\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // https://tc39.es/ecma262/#prod-ClassSetRange\x0d\n  pp$1.regexp_eatClassSetRange = function(state) {\x0d\n    var start = state.pos;\x0d\n    if (this.regexp_eatClassSetCharacter(state)) {\x0d\n      var left = state.lastIntValue;\x0d\n      if (state.eat(0x2D /* - */) && this.regexp_eatClassSetCharacter(state)) {\x0d\n        var right = state.lastIntValue;\x0d\n        if (left !== -1 && right !== -1 && left > right) {\x0d\n          state.raise("Range out of order in character class");\x0d\n        }\x0d\n        return true\x0d\n      }\x0d\n      state.pos = start;\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  // https://tc39.es/ecma262/#prod-ClassSetOperand\x0d\n  pp$1.regexp_eatClassSetOperand = function(state) {\x0d\n    if (this.regexp_eatClassSetCharacter(state)) { return CharSetOk }\x0d\n    return this.regexp_eatClassStringDisjunction(state) || this.regexp_eatNestedClass(state)\x0d\n  };\x0d\n\x0d\n  // https://tc39.es/ecma262/#prod-NestedClass\x0d\n  pp$1.regexp_eatNestedClass = function(state) {\x0d\n    var start = state.pos;\x0d\n    if (state.eat(0x5B /* [ */)) {\x0d\n      var negate = state.eat(0x5E /* ^ */);\x0d\n      var result = this.regexp_classContents(state);\x0d\n      if (state.eat(0x5D /* ] */)) {\x0d\n        if (negate && result === CharSetString) {\x0d\n          state.raise("Negated character class may contain strings");\x0d\n        }\x0d\n        return result\x0d\n      }\x0d\n      state.pos = start;\x0d\n    }\x0d\n    if (state.eat(0x5C /* \\ */)) {\x0d\n      var result$1 = this.regexp_eatCharacterClassEscape(state);\x0d\n      if (result$1) {\x0d\n        return result$1\x0d\n      }\x0d\n      state.pos = start;\x0d\n    }\x0d\n    return null\x0d\n  };\x0d\n\x0d\n  // https://tc39.es/ecma262/#prod-ClassStringDisjunction\x0d\n  pp$1.regexp_eatClassStringDisjunction = function(state) {\x0d\n    var start = state.pos;\x0d\n    if (state.eatChars([0x5C\x2C 0x71] /* \\q */)) {\x0d\n      if (state.eat(0x7B /* { */)) {\x0d\n        var result = this.regexp_classStringDisjunctionContents(state);\x0d\n        if (state.eat(0x7D /* } */)) {\x0d\n          return result\x0d\n        }\x0d\n      } else {\x0d\n        // Make the same message as V8.\x0d\n        state.raise("Invalid escape");\x0d\n      }\x0d\n      state.pos = start;\x0d\n    }\x0d\n    return null\x0d\n  };\x0d\n\x0d\n  // https://tc39.es/ecma262/#prod-ClassStringDisjunctionContents\x0d\n  pp$1.regexp_classStringDisjunctionContents = function(state) {\x0d\n    var result = this.regexp_classString(state);\x0d\n    while (state.eat(0x7C /* | */)) {\x0d\n      if (this.regexp_classString(state) === CharSetString) { result = CharSetString; }\x0d\n    }\x0d\n    return result\x0d\n  };\x0d\n\x0d\n  // https://tc39.es/ecma262/#prod-ClassString\x0d\n  // https://tc39.es/ecma262/#prod-NonEmptyClassString\x0d\n  pp$1.regexp_classString = function(state) {\x0d\n    var count = 0;\x0d\n    while (this.regexp_eatClassSetCharacter(state)) { count++; }\x0d\n    return count === 1 ? CharSetOk : CharSetString\x0d\n  };\x0d\n\x0d\n  // https://tc39.es/ecma262/#prod-ClassSetCharacter\x0d\n  pp$1.regexp_eatClassSetCharacter = function(state) {\x0d\n    var start = state.pos;\x0d\n    if (state.eat(0x5C /* \\ */)) {\x0d\n      if (\x0d\n        this.regexp_eatCharacterEscape(state) ||\x0d\n        this.regexp_eatClassSetReservedPunctuator(state)\x0d\n      ) {\x0d\n        return true\x0d\n      }\x0d\n      if (state.eat(0x62 /* b */)) {\x0d\n        state.lastIntValue = 0x08; /* <BS> */\x0d\n        return true\x0d\n      }\x0d\n      state.pos = start;\x0d\n      return false\x0d\n    }\x0d\n    var ch = state.current();\x0d\n    if (ch < 0 || ch === state.lookahead() && isClassSetReservedDoublePunctuatorCharacter(ch)) { return false }\x0d\n    if (isClassSetSyntaxCharacter(ch)) { return false }\x0d\n    state.advance();\x0d\n    state.lastIntValue = ch;\x0d\n    return true\x0d\n  };\x0d\n\x0d\n  // https://tc39.es/ecma262/#prod-ClassSetReservedDoublePunctuator\x0d\n  function isClassSetReservedDoublePunctuatorCharacter(ch) {\x0d\n    return (\x0d\n      ch === 0x21 /* ! */ ||\x0d\n      ch >= 0x23 /* # */ && ch <= 0x26 /* & */ ||\x0d\n      ch >= 0x2A /* * */ && ch <= 0x2C /* \x2C */ ||\x0d\n      ch === 0x2E /* . */ ||\x0d\n      ch >= 0x3A /* : */ && ch <= 0x40 /* @ */ ||\x0d\n      ch === 0x5E /* ^ */ ||\x0d\n      ch === 0x60 /* ` */ ||\x0d\n      ch === 0x7E /* ~ */\x0d\n    )\x0d\n  }\x0d\n\x0d\n  // https://tc39.es/ecma262/#prod-ClassSetSyntaxCharacter\x0d\n  function isClassSetSyntaxCharacter(ch) {\x0d\n    return (\x0d\n      ch === 0x28 /* ( */ ||\x0d\n      ch === 0x29 /* ) */ ||\x0d\n      ch === 0x2D /* - */ ||\x0d\n      ch === 0x2F /* / */ ||\x0d\n      ch >= 0x5B /* [ */ && ch <= 0x5D /* ] */ ||\x0d\n      ch >= 0x7B /* { */ && ch <= 0x7D /* } */\x0d\n    )\x0d\n  }\x0d\n\x0d\n  // https://tc39.es/ecma262/#prod-ClassSetReservedPunctuator\x0d\n  pp$1.regexp_eatClassSetReservedPunctuator = function(state) {\x0d\n    var ch = state.current();\x0d\n    if (isClassSetReservedPunctuator(ch)) {\x0d\n      state.lastIntValue = ch;\x0d\n      state.advance();\x0d\n      return true\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  // https://tc39.es/ecma262/#prod-ClassSetReservedPunctuator\x0d\n  function isClassSetReservedPunctuator(ch) {\x0d\n    return (\x0d\n      ch === 0x21 /* ! */ ||\x0d\n      ch === 0x23 /* # */ ||\x0d\n      ch === 0x25 /* % */ ||\x0d\n      ch === 0x26 /* & */ ||\x0d\n      ch === 0x2C /* \x2C */ ||\x0d\n      ch === 0x2D /* - */ ||\x0d\n      ch >= 0x3A /* : */ && ch <= 0x3E /* > */ ||\x0d\n      ch === 0x40 /* @ */ ||\x0d\n      ch === 0x60 /* ` */ ||\x0d\n      ch === 0x7E /* ~ */\x0d\n    )\x0d\n  }\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter\x0d\n  pp$1.regexp_eatClassControlLetter = function(state) {\x0d\n    var ch = state.current();\x0d\n    if (isDecimalDigit(ch) || ch === 0x5F /* _ */) {\x0d\n      state.lastIntValue = ch % 0x20;\x0d\n      state.advance();\x0d\n      return true\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\x0d\n  pp$1.regexp_eatHexEscapeSequence = function(state) {\x0d\n    var start = state.pos;\x0d\n    if (state.eat(0x78 /* x */)) {\x0d\n      if (this.regexp_eatFixedHexDigits(state\x2C 2)) {\x0d\n        return true\x0d\n      }\x0d\n      if (state.switchU) {\x0d\n        state.raise("Invalid escape");\x0d\n      }\x0d\n      state.pos = start;\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits\x0d\n  pp$1.regexp_eatDecimalDigits = function(state) {\x0d\n    var start = state.pos;\x0d\n    var ch = 0;\x0d\n    state.lastIntValue = 0;\x0d\n    while (isDecimalDigit(ch = state.current())) {\x0d\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\x0d\n      state.advance();\x0d\n    }\x0d\n    return state.pos !== start\x0d\n  };\x0d\n  function isDecimalDigit(ch) {\x0d\n    return ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */\x0d\n  }\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits\x0d\n  pp$1.regexp_eatHexDigits = function(state) {\x0d\n    var start = state.pos;\x0d\n    var ch = 0;\x0d\n    state.lastIntValue = 0;\x0d\n    while (isHexDigit(ch = state.current())) {\x0d\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\x0d\n      state.advance();\x0d\n    }\x0d\n    return state.pos !== start\x0d\n  };\x0d\n  function isHexDigit(ch) {\x0d\n    return (\x0d\n      (ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */) ||\x0d\n      (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) ||\x0d\n      (ch >= 0x61 /* a */ && ch <= 0x66 /* f */)\x0d\n    )\x0d\n  }\x0d\n  function hexToInt(ch) {\x0d\n    if (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) {\x0d\n      return 10 + (ch - 0x41 /* A */)\x0d\n    }\x0d\n    if (ch >= 0x61 /* a */ && ch <= 0x66 /* f */) {\x0d\n      return 10 + (ch - 0x61 /* a */)\x0d\n    }\x0d\n    return ch - 0x30 /* 0 */\x0d\n  }\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence\x0d\n  // Allows only 0-377(octal) i.e. 0-255(decimal).\x0d\n  pp$1.regexp_eatLegacyOctalEscapeSequence = function(state) {\x0d\n    if (this.regexp_eatOctalDigit(state)) {\x0d\n      var n1 = state.lastIntValue;\x0d\n      if (this.regexp_eatOctalDigit(state)) {\x0d\n        var n2 = state.lastIntValue;\x0d\n        if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\x0d\n          state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\x0d\n        } else {\x0d\n          state.lastIntValue = n1 * 8 + n2;\x0d\n        }\x0d\n      } else {\x0d\n        state.lastIntValue = n1;\x0d\n      }\x0d\n      return true\x0d\n    }\x0d\n    return false\x0d\n  };\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit\x0d\n  pp$1.regexp_eatOctalDigit = function(state) {\x0d\n    var ch = state.current();\x0d\n    if (isOctalDigit(ch)) {\x0d\n      state.lastIntValue = ch - 0x30; /* 0 */\x0d\n      state.advance();\x0d\n      return true\x0d\n    }\x0d\n    state.lastIntValue = 0;\x0d\n    return false\x0d\n  };\x0d\n  function isOctalDigit(ch) {\x0d\n    return ch >= 0x30 /* 0 */ && ch <= 0x37 /* 7 */\x0d\n  }\x0d\n\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits\x0d\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit\x0d\n  // And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\x0d\n  pp$1.regexp_eatFixedHexDigits = function(state\x2C length) {\x0d\n    var start = state.pos;\x0d\n    state.lastIntValue = 0;\x0d\n    for (var i = 0; i < length; ++i) {\x0d\n      var ch = state.current();\x0d\n      if (!isHexDigit(ch)) {\x0d\n        state.pos = start;\x0d\n        return false\x0d\n      }\x0d\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\x0d\n      state.advance();\x0d\n    }\x0d\n    return true\x0d\n  };\x0d\n\x0d\n  // Object type used to represent tokens. Note that normally\x2C tokens\x0d\n  // simply exist as properties on the parser object. This is only\x0d\n  // used for the onToken callback and the external tokenizer.\x0d\n\x0d\n  var Token = function Token(p) {\x0d\n    this.type = p.type;\x0d\n    this.value = p.value;\x0d\n    this.start = p.start;\x0d\n    this.end = p.end;\x0d\n    if (p.options.locations)\x0d\n      { this.loc = new SourceLocation(p\x2C p.startLoc\x2C p.endLoc); }\x0d\n    if (p.options.ranges)\x0d\n      { this.range = [p.start\x2C p.end]; }\x0d\n  };\x0d\n\x0d\n  // ## Tokenizer\x0d\n\x0d\n  var pp = Parser.prototype;\x0d\n\x0d\n  // Move to the next token\x0d\n\x0d\n  pp.next = function(ignoreEscapeSequenceInKeyword) {\x0d\n    if (!ignoreEscapeSequenceInKeyword && this.type.keyword && this.containsEsc)\x0d\n      { this.raiseRecoverable(this.start\x2C "Escape sequence in keyword " + this.type.keyword); }\x0d\n    if (this.options.onToken)\x0d\n      { this.options.onToken(new Token(this)); }\x0d\n\x0d\n    this.lastTokEnd = this.end;\x0d\n    this.lastTokStart = this.start;\x0d\n    this.lastTokEndLoc = this.endLoc;\x0d\n    this.lastTokStartLoc = this.startLoc;\x0d\n    this.nextToken();\x0d\n  };\x0d\n\x0d\n  pp.getToken = function() {\x0d\n    this.next();\x0d\n    return new Token(this)\x0d\n  };\x0d\n\x0d\n  // If we're in an ES6 environment\x2C make parsers iterable\x0d\n  if (typeof Symbol !== "undefined")\x0d\n    { pp[Symbol.iterator] = function() {\x0d\n      var this$1$1 = this;\x0d\n\x0d\n      return {\x0d\n        next: function () {\x0d\n          var token = this$1$1.getToken();\x0d\n          return {\x0d\n            done: token.type === types$1.eof\x2C\x0d\n            value: token\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }; }\x0d\n\x0d\n  // Toggle strict mode. Re-reads the next number or string to please\x0d\n  // pedantic tests (`"use strict"; 010;` should fail).\x0d\n\x0d\n  // Read a single token\x2C updating the parser object's token-related\x0d\n  // properties.\x0d\n\x0d\n  pp.nextToken = function() {\x0d\n    var curContext = this.curContext();\x0d\n    if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\x0d\n\x0d\n    this.start = this.pos;\x0d\n    if (this.options.locations) { this.startLoc = this.curPosition(); }\x0d\n    if (this.pos >= this.input.length) { return this.finishToken(types$1.eof) }\x0d\n\x0d\n    if (curContext.override) { return curContext.override(this) }\x0d\n    else { this.readToken(this.fullCharCodeAtPos()); }\x0d\n  };\x0d\n\x0d\n  pp.readToken = function(code) {\x0d\n    // Identifier or keyword. '\\uXXXX' sequences are allowed in\x0d\n    // identifiers\x2C so '\\' also dispatches to that.\x0d\n    if (isIdentifierStart(code\x2C this.options.ecmaVersion >= 6) || code === 92 /* '\\' */)\x0d\n      { return this.readWord() }\x0d\n\x0d\n    return this.getTokenFromCode(code)\x0d\n  };\x0d\n\x0d\n  pp.fullCharCodeAtPos = function() {\x0d\n    var code = this.input.charCodeAt(this.pos);\x0d\n    if (code <= 0xd7ff || code >= 0xdc00) { return code }\x0d\n    var next = this.input.charCodeAt(this.pos + 1);\x0d\n    return next <= 0xdbff || next >= 0xe000 ? code : (code << 10) + next - 0x35fdc00\x0d\n  };\x0d\n\x0d\n  pp.skipBlockComment = function() {\x0d\n    var startLoc = this.options.onComment && this.curPosition();\x0d\n    var start = this.pos\x2C end = this.input.indexOf("*/"\x2C this.pos += 2);\x0d\n    if (end === -1) { this.raise(this.pos - 2\x2C "Unterminated comment"); }\x0d\n    this.pos = end + 2;\x0d\n    if (this.options.locations) {\x0d\n      for (var nextBreak = (void 0)\x2C pos = start; (nextBreak = nextLineBreak(this.input\x2C pos\x2C this.pos)) > -1;) {\x0d\n        ++this.curLine;\x0d\n        pos = this.lineStart = nextBreak;\x0d\n      }\x0d\n    }\x0d\n    if (this.options.onComment)\x0d\n      { this.options.onComment(true\x2C this.input.slice(start + 2\x2C end)\x2C start\x2C this.pos\x2C\x0d\n                             startLoc\x2C this.curPosition()); }\x0d\n  };\x0d\n\x0d\n  pp.skipLineComment = function(startSkip) {\x0d\n    var start = this.pos;\x0d\n    var startLoc = this.options.onComment && this.curPosition();\x0d\n    var ch = this.input.charCodeAt(this.pos += startSkip);\x0d\n    while (this.pos < this.input.length && !isNewLine(ch)) {\x0d\n      ch = this.input.charCodeAt(++this.pos);\x0d\n    }\x0d\n    if (this.options.onComment)\x0d\n      { this.options.onComment(false\x2C this.input.slice(start + startSkip\x2C this.pos)\x2C start\x2C this.pos\x2C\x0d\n                             startLoc\x2C this.curPosition()); }\x0d\n  };\x0d\n\x0d\n  // Called at the start of the parse and after every token. Skips\x0d\n  // whitespace and comments\x2C and.\x0d\n\x0d\n  pp.skipSpace = function() {\x0d\n    loop: while (this.pos < this.input.length) {\x0d\n      var ch = this.input.charCodeAt(this.pos);\x0d\n      switch (ch) {\x0d\n      case 32: case 160: // ' '\x0d\n        ++this.pos;\x0d\n        break\x0d\n      case 13:\x0d\n        if (this.input.charCodeAt(this.pos + 1) === 10) {\x0d\n          ++this.pos;\x0d\n        }\x0d\n      case 10: case 8232: case 8233:\x0d\n        ++this.pos;\x0d\n        if (this.options.locations) {\x0d\n          ++this.curLine;\x0d\n          this.lineStart = this.pos;\x0d\n        }\x0d\n        break\x0d\n      case 47: // '/'\x0d\n        switch (this.input.charCodeAt(this.pos + 1)) {\x0d\n        case 42: // '*'\x0d\n          this.skipBlockComment();\x0d\n          break\x0d\n        case 47:\x0d\n          this.skipLineComment(2);\x0d\n          break\x0d\n        default:\x0d\n          break loop\x0d\n        }\x0d\n        break\x0d\n      default:\x0d\n        if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\x0d\n          ++this.pos;\x0d\n        } else {\x0d\n          break loop\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Called at the end of every token. Sets `end`\x2C `val`\x2C and\x0d\n  // maintains `context` and `exprAllowed`\x2C and skips the space after\x0d\n  // the token\x2C so that the next one's `start` will point at the\x0d\n  // right position.\x0d\n\x0d\n  pp.finishToken = function(type\x2C val) {\x0d\n    this.end = this.pos;\x0d\n    if (this.options.locations) { this.endLoc = this.curPosition(); }\x0d\n    var prevType = this.type;\x0d\n    this.type = type;\x0d\n    this.value = val;\x0d\n\x0d\n    this.updateContext(prevType);\x0d\n  };\x0d\n\x0d\n  // ### Token reading\x0d\n\x0d\n  // This is the function that is called to fetch the next token. It\x0d\n  // is somewhat obscure\x2C because it works in character codes rather\x0d\n  // than characters\x2C and because operator parsing has been inlined\x0d\n  // into it.\x0d\n  //\x0d\n  // All in the name of speed.\x0d\n  //\x0d\n  pp.readToken_dot = function() {\x0d\n    var next = this.input.charCodeAt(this.pos + 1);\x0d\n    if (next >= 48 && next <= 57) { return this.readNumber(true) }\x0d\n    var next2 = this.input.charCodeAt(this.pos + 2);\x0d\n    if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'\x0d\n      this.pos += 3;\x0d\n      return this.finishToken(types$1.ellipsis)\x0d\n    } else {\x0d\n      ++this.pos;\x0d\n      return this.finishToken(types$1.dot)\x0d\n    }\x0d\n  };\x0d\n\x0d\n  pp.readToken_slash = function() { // '/'\x0d\n    var next = this.input.charCodeAt(this.pos + 1);\x0d\n    if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\x0d\n    if (next === 61) { return this.finishOp(types$1.assign\x2C 2) }\x0d\n    return this.finishOp(types$1.slash\x2C 1)\x0d\n  };\x0d\n\x0d\n  pp.readToken_mult_modulo_exp = function(code) { // '%*'\x0d\n    var next = this.input.charCodeAt(this.pos + 1);\x0d\n    var size = 1;\x0d\n    var tokentype = code === 42 ? types$1.star : types$1.modulo;\x0d\n\x0d\n    // exponentiation operator ** and **=\x0d\n    if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\x0d\n      ++size;\x0d\n      tokentype = types$1.starstar;\x0d\n      next = this.input.charCodeAt(this.pos + 2);\x0d\n    }\x0d\n\x0d\n    if (next === 61) { return this.finishOp(types$1.assign\x2C size + 1) }\x0d\n    return this.finishOp(tokentype\x2C size)\x0d\n  };\x0d\n\x0d\n  pp.readToken_pipe_amp = function(code) { // '|&'\x0d\n    var next = this.input.charCodeAt(this.pos + 1);\x0d\n    if (next === code) {\x0d\n      if (this.options.ecmaVersion >= 12) {\x0d\n        var next2 = this.input.charCodeAt(this.pos + 2);\x0d\n        if (next2 === 61) { return this.finishOp(types$1.assign\x2C 3) }\x0d\n      }\x0d\n      return this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND\x2C 2)\x0d\n    }\x0d\n    if (next === 61) { return this.finishOp(types$1.assign\x2C 2) }\x0d\n    return this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND\x2C 1)\x0d\n  };\x0d\n\x0d\n  pp.readToken_caret = function() { // '^'\x0d\n    var next = this.input.charCodeAt(this.pos + 1);\x0d\n    if (next === 61) { return this.finishOp(types$1.assign\x2C 2) }\x0d\n    return this.finishOp(types$1.bitwiseXOR\x2C 1)\x0d\n  };\x0d\n\x0d\n  pp.readToken_plus_min = function(code) { // '+-'\x0d\n    var next = this.input.charCodeAt(this.pos + 1);\x0d\n    if (next === code) {\x0d\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&\x0d\n          (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd\x2C this.pos)))) {\x0d\n        // A `-->` line comment\x0d\n        this.skipLineComment(3);\x0d\n        this.skipSpace();\x0d\n        return this.nextToken()\x0d\n      }\x0d\n      return this.finishOp(types$1.incDec\x2C 2)\x0d\n    }\x0d\n    if (next === 61) { return this.finishOp(types$1.assign\x2C 2) }\x0d\n    return this.finishOp(types$1.plusMin\x2C 1)\x0d\n  };\x0d\n\x0d\n  pp.readToken_lt_gt = function(code) { // '<>'\x0d\n    var next = this.input.charCodeAt(this.pos + 1);\x0d\n    var size = 1;\x0d\n    if (next === code) {\x0d\n      size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\x0d\n      if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types$1.assign\x2C size + 1) }\x0d\n      return this.finishOp(types$1.bitShift\x2C size)\x0d\n    }\x0d\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&\x0d\n        this.input.charCodeAt(this.pos + 3) === 45) {\x0d\n      // `<!--`\x2C an XML-style comment that should be interpreted as a line comment\x0d\n      this.skipLineComment(4);\x0d\n      this.skipSpace();\x0d\n      return this.nextToken()\x0d\n    }\x0d\n    if (next === 61) { size = 2; }\x0d\n    return this.finishOp(types$1.relational\x2C size)\x0d\n  };\x0d\n\x0d\n  pp.readToken_eq_excl = function(code) { // '=!'\x0d\n    var next = this.input.charCodeAt(this.pos + 1);\x0d\n    if (next === 61) { return this.finishOp(types$1.equality\x2C this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\x0d\n    if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'\x0d\n      this.pos += 2;\x0d\n      return this.finishToken(types$1.arrow)\x0d\n    }\x0d\n    return this.finishOp(code === 61 ? types$1.eq : types$1.prefix\x2C 1)\x0d\n  };\x0d\n\x0d\n  pp.readToken_question = function() { // '?'\x0d\n    var ecmaVersion = this.options.ecmaVersion;\x0d\n    if (ecmaVersion >= 11) {\x0d\n      var next = this.input.charCodeAt(this.pos + 1);\x0d\n      if (next === 46) {\x0d\n        var next2 = this.input.charCodeAt(this.pos + 2);\x0d\n        if (next2 < 48 || next2 > 57) { return this.finishOp(types$1.questionDot\x2C 2) }\x0d\n      }\x0d\n      if (next === 63) {\x0d\n        if (ecmaVersion >= 12) {\x0d\n          var next2$1 = this.input.charCodeAt(this.pos + 2);\x0d\n          if (next2$1 === 61) { return this.finishOp(types$1.assign\x2C 3) }\x0d\n        }\x0d\n        return this.finishOp(types$1.coalesce\x2C 2)\x0d\n      }\x0d\n    }\x0d\n    return this.finishOp(types$1.question\x2C 1)\x0d\n  };\x0d\n\x0d\n  pp.readToken_numberSign = function() { // '#'\x0d\n    var ecmaVersion = this.options.ecmaVersion;\x0d\n    var code = 35; // '#'\x0d\n    if (ecmaVersion >= 13) {\x0d\n      ++this.pos;\x0d\n      code = this.fullCharCodeAtPos();\x0d\n      if (isIdentifierStart(code\x2C true) || code === 92 /* '\\' */) {\x0d\n        return this.finishToken(types$1.privateId\x2C this.readWord1())\x0d\n      }\x0d\n    }\x0d\n\x0d\n    this.raise(this.pos\x2C "Unexpected character '" + codePointToString(code) + "'");\x0d\n  };\x0d\n\x0d\n  pp.getTokenFromCode = function(code) {\x0d\n    switch (code) {\x0d\n    // The interpretation of a dot depends on whether it is followed\x0d\n    // by a digit or another two dots.\x0d\n    case 46: // '.'\x0d\n      return this.readToken_dot()\x0d\n\x0d\n    // Punctuation tokens.\x0d\n    case 40: ++this.pos; return this.finishToken(types$1.parenL)\x0d\n    case 41: ++this.pos; return this.finishToken(types$1.parenR)\x0d\n    case 59: ++this.pos; return this.finishToken(types$1.semi)\x0d\n    case 44: ++this.pos; return this.finishToken(types$1.comma)\x0d\n    case 91: ++this.pos; return this.finishToken(types$1.bracketL)\x0d\n    case 93: ++this.pos; return this.finishToken(types$1.bracketR)\x0d\n    case 123: ++this.pos; return this.finishToken(types$1.braceL)\x0d\n    case 125: ++this.pos; return this.finishToken(types$1.braceR)\x0d\n    case 58: ++this.pos; return this.finishToken(types$1.colon)\x0d\n\x0d\n    case 96: // '`'\x0d\n      if (this.options.ecmaVersion < 6) { break }\x0d\n      ++this.pos;\x0d\n      return this.finishToken(types$1.backQuote)\x0d\n\x0d\n    case 48: // '0'\x0d\n      var next = this.input.charCodeAt(this.pos + 1);\x0d\n      if (next === 120 || next === 88) { return this.readRadixNumber(16) } // '0x'\x2C '0X' - hex number\x0d\n      if (this.options.ecmaVersion >= 6) {\x0d\n        if (next === 111 || next === 79) { return this.readRadixNumber(8) } // '0o'\x2C '0O' - octal number\x0d\n        if (next === 98 || next === 66) { return this.readRadixNumber(2) } // '0b'\x2C '0B' - binary number\x0d\n      }\x0d\n\x0d\n    // Anything else beginning with a digit is an integer\x2C octal\x0d\n    // number\x2C or float.\x0d\n    case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\x0d\n      return this.readNumber(false)\x0d\n\x0d\n    // Quotes produce strings.\x0d\n    case 34: case 39: // '"'\x2C "'"\x0d\n      return this.readString(code)\x0d\n\x0d\n    // Operators are parsed inline in tiny state machines. '=' (61) is\x0d\n    // often referred to. `finishOp` simply skips the amount of\x0d\n    // characters it is given as second argument\x2C and returns a token\x0d\n    // of the type given by its first argument.\x0d\n    case 47: // '/'\x0d\n      return this.readToken_slash()\x0d\n\x0d\n    case 37: case 42: // '%*'\x0d\n      return this.readToken_mult_modulo_exp(code)\x0d\n\x0d\n    case 124: case 38: // '|&'\x0d\n      return this.readToken_pipe_amp(code)\x0d\n\x0d\n    case 94: // '^'\x0d\n      return this.readToken_caret()\x0d\n\x0d\n    case 43: case 45: // '+-'\x0d\n      return this.readToken_plus_min(code)\x0d\n\x0d\n    case 60: case 62: // '<>'\x0d\n      return this.readToken_lt_gt(code)\x0d\n\x0d\n    case 61: case 33: // '=!'\x0d\n      return this.readToken_eq_excl(code)\x0d\n\x0d\n    case 63: // '?'\x0d\n      return this.readToken_question()\x0d\n\x0d\n    case 126: // '~'\x0d\n      return this.finishOp(types$1.prefix\x2C 1)\x0d\n\x0d\n    case 35: // '#'\x0d\n      return this.readToken_numberSign()\x0d\n    }\x0d\n\x0d\n    this.raise(this.pos\x2C "Unexpected character '" + codePointToString(code) + "'");\x0d\n  };\x0d\n\x0d\n  pp.finishOp = function(type\x2C size) {\x0d\n    var str = this.input.slice(this.pos\x2C this.pos + size);\x0d\n    this.pos += size;\x0d\n    return this.finishToken(type\x2C str)\x0d\n  };\x0d\n\x0d\n  pp.readRegexp = function() {\x0d\n    var escaped\x2C inClass\x2C start = this.pos;\x0d\n    for (;;) {\x0d\n      if (this.pos >= this.input.length) { this.raise(start\x2C "Unterminated regular expression"); }\x0d\n      var ch = this.input.charAt(this.pos);\x0d\n      if (lineBreak.test(ch)) { this.raise(start\x2C "Unterminated regular expression"); }\x0d\n      if (!escaped) {\x0d\n        if (ch === "[") { inClass = true; }\x0d\n        else if (ch === "]" && inClass) { inClass = false; }\x0d\n        else if (ch === "/" && !inClass) { break }\x0d\n        escaped = ch === "\\\\";\x0d\n      } else { escaped = false; }\x0d\n      ++this.pos;\x0d\n    }\x0d\n    var pattern = this.input.slice(start\x2C this.pos);\x0d\n    ++this.pos;\x0d\n    var flagsStart = this.pos;\x0d\n    var flags = this.readWord1();\x0d\n    if (this.containsEsc) { this.unexpected(flagsStart); }\x0d\n\x0d\n    // Validate pattern\x0d\n    var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\x0d\n    state.reset(start\x2C pattern\x2C flags);\x0d\n    this.validateRegExpFlags(state);\x0d\n    this.validateRegExpPattern(state);\x0d\n\x0d\n    // Create Literal#value property value.\x0d\n    var value = null;\x0d\n    try {\x0d\n      value = new RegExp(pattern\x2C flags);\x0d\n    } catch (e) {\x0d\n      // ESTree requires null if it failed to instantiate RegExp object.\x0d\n      // https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral\x0d\n    }\x0d\n\x0d\n    return this.finishToken(types$1.regexp\x2C {pattern: pattern\x2C flags: flags\x2C value: value})\x0d\n  };\x0d\n\x0d\n  // Read an integer in the given radix. Return null if zero digits\x0d\n  // were read\x2C the integer value otherwise. When `len` is given\x2C this\x0d\n  // will return `null` unless the integer has exactly `len` digits.\x0d\n\x0d\n  pp.readInt = function(radix\x2C len\x2C maybeLegacyOctalNumericLiteral) {\x0d\n    // `len` is used for character escape sequences. In that case\x2C disallow separators.\x0d\n    var allowSeparators = this.options.ecmaVersion >= 12 && len === undefined;\x0d\n\x0d\n    // `maybeLegacyOctalNumericLiteral` is true if it doesn't have prefix (0x\x2C0o\x2C0b)\x0d\n    // and isn't fraction part nor exponent part. In that case\x2C if the first digit\x0d\n    // is zero then disallow separators.\x0d\n    var isLegacyOctalNumericLiteral = maybeLegacyOctalNumericLiteral && this.input.charCodeAt(this.pos) === 48;\x0d\n\x0d\n    var start = this.pos\x2C total = 0\x2C lastCode = 0;\x0d\n    for (var i = 0\x2C e = len == null ? Infinity : len; i < e; ++i\x2C ++this.pos) {\x0d\n      var code = this.input.charCodeAt(this.pos)\x2C val = (void 0);\x0d\n\x0d\n      if (allowSeparators && code === 95) {\x0d\n        if (isLegacyOctalNumericLiteral) { this.raiseRecoverable(this.pos\x2C "Numeric separator is not allowed in legacy octal numeric literals"); }\x0d\n        if (lastCode === 95) { this.raiseRecoverable(this.pos\x2C "Numeric separator must be exactly one underscore"); }\x0d\n        if (i === 0) { this.raiseRecoverable(this.pos\x2C "Numeric separator is not allowed at the first of digits"); }\x0d\n        lastCode = code;\x0d\n        continue\x0d\n      }\x0d\n\x0d\n      if (code >= 97) { val = code - 97 + 10; } // a\x0d\n      else if (code >= 65) { val = code - 65 + 10; } // A\x0d\n      else if (code >= 48 && code <= 57) { val = code - 48; } // 0-9\x0d\n      else { val = Infinity; }\x0d\n      if (val >= radix) { break }\x0d\n      lastCode = code;\x0d\n      total = total * radix + val;\x0d\n    }\x0d\n\x0d\n    if (allowSeparators && lastCode === 95) { this.raiseRecoverable(this.pos - 1\x2C "Numeric separator is not allowed at the last of digits"); }\x0d\n    if (this.pos === start || len != null && this.pos - start !== len) { return null }\x0d\n\x0d\n    return total\x0d\n  };\x0d\n\x0d\n  function stringToNumber(str\x2C isLegacyOctalNumericLiteral) {\x0d\n    if (isLegacyOctalNumericLiteral) {\x0d\n      return parseInt(str\x2C 8)\x0d\n    }\x0d\n\x0d\n    // `parseFloat(value)` stops parsing at the first numeric separator then returns a wrong value.\x0d\n    return parseFloat(str.replace(/_/g\x2C ""))\x0d\n  }\x0d\n\x0d\n  function stringToBigInt(str) {\x0d\n    if (typeof BigInt !== "function") {\x0d\n      return null\x0d\n    }\x0d\n\x0d\n    // `BigInt(value)` throws syntax error if the string contains numeric separators.\x0d\n    return BigInt(str.replace(/_/g\x2C ""))\x0d\n  }\x0d\n\x0d\n  pp.readRadixNumber = function(radix) {\x0d\n    var start = this.pos;\x0d\n    this.pos += 2; // 0x\x0d\n    var val = this.readInt(radix);\x0d\n    if (val == null) { this.raise(this.start + 2\x2C "Expected number in radix " + radix); }\x0d\n    if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {\x0d\n      val = stringToBigInt(this.input.slice(start\x2C this.pos));\x0d\n      ++this.pos;\x0d\n    } else if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos\x2C "Identifier directly after number"); }\x0d\n    return this.finishToken(types$1.num\x2C val)\x0d\n  };\x0d\n\x0d\n  // Read an integer\x2C octal integer\x2C or floating-point number.\x0d\n\x0d\n  pp.readNumber = function(startsWithDot) {\x0d\n    var start = this.pos;\x0d\n    if (!startsWithDot && this.readInt(10\x2C undefined\x2C true) === null) { this.raise(start\x2C "Invalid number"); }\x0d\n    var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\x0d\n    if (octal && this.strict) { this.raise(start\x2C "Invalid number"); }\x0d\n    var next = this.input.charCodeAt(this.pos);\x0d\n    if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {\x0d\n      var val$1 = stringToBigInt(this.input.slice(start\x2C this.pos));\x0d\n      ++this.pos;\x0d\n      if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos\x2C "Identifier directly after number"); }\x0d\n      return this.finishToken(types$1.num\x2C val$1)\x0d\n    }\x0d\n    if (octal && /[89]/.test(this.input.slice(start\x2C this.pos))) { octal = false; }\x0d\n    if (next === 46 && !octal) { // '.'\x0d\n      ++this.pos;\x0d\n      this.readInt(10);\x0d\n      next = this.input.charCodeAt(this.pos);\x0d\n    }\x0d\n    if ((next === 69 || next === 101) && !octal) { // 'eE'\x0d\n      next = this.input.charCodeAt(++this.pos);\x0d\n      if (next === 43 || next === 45) { ++this.pos; } // '+-'\x0d\n      if (this.readInt(10) === null) { this.raise(start\x2C "Invalid number"); }\x0d\n    }\x0d\n    if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos\x2C "Identifier directly after number"); }\x0d\n\x0d\n    var val = stringToNumber(this.input.slice(start\x2C this.pos)\x2C octal);\x0d\n    return this.finishToken(types$1.num\x2C val)\x0d\n  };\x0d\n\x0d\n  // Read a string value\x2C interpreting backslash-escapes.\x0d\n\x0d\n  pp.readCodePoint = function() {\x0d\n    var ch = this.input.charCodeAt(this.pos)\x2C code;\x0d\n\x0d\n    if (ch === 123) { // '{'\x0d\n      if (this.options.ecmaVersion < 6) { this.unexpected(); }\x0d\n      var codePos = ++this.pos;\x0d\n      code = this.readHexChar(this.input.indexOf("}"\x2C this.pos) - this.pos);\x0d\n      ++this.pos;\x0d\n      if (code > 0x10FFFF) { this.invalidStringToken(codePos\x2C "Code point out of bounds"); }\x0d\n    } else {\x0d\n      code = this.readHexChar(4);\x0d\n    }\x0d\n    return code\x0d\n  };\x0d\n\x0d\n  pp.readString = function(quote) {\x0d\n    var out = ""\x2C chunkStart = ++this.pos;\x0d\n    for (;;) {\x0d\n      if (this.pos >= this.input.length) { this.raise(this.start\x2C "Unterminated string constant"); }\x0d\n      var ch = this.input.charCodeAt(this.pos);\x0d\n      if (ch === quote) { break }\x0d\n      if (ch === 92) { // '\\'\x0d\n        out += this.input.slice(chunkStart\x2C this.pos);\x0d\n        out += this.readEscapedChar(false);\x0d\n        chunkStart = this.pos;\x0d\n      } else if (ch === 0x2028 || ch === 0x2029) {\x0d\n        if (this.options.ecmaVersion < 10) { this.raise(this.start\x2C "Unterminated string constant"); }\x0d\n        ++this.pos;\x0d\n        if (this.options.locations) {\x0d\n          this.curLine++;\x0d\n          this.lineStart = this.pos;\x0d\n        }\x0d\n      } else {\x0d\n        if (isNewLine(ch)) { this.raise(this.start\x2C "Unterminated string constant"); }\x0d\n        ++this.pos;\x0d\n      }\x0d\n    }\x0d\n    out += this.input.slice(chunkStart\x2C this.pos++);\x0d\n    return this.finishToken(types$1.string\x2C out)\x0d\n  };\x0d\n\x0d\n  // Reads template string tokens.\x0d\n\x0d\n  var INVALID_TEMPLATE_ESCAPE_ERROR = {};\x0d\n\x0d\n  pp.tryReadTemplateToken = function() {\x0d\n    this.inTemplateElement = true;\x0d\n    try {\x0d\n      this.readTmplToken();\x0d\n    } catch (err) {\x0d\n      if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\x0d\n        this.readInvalidTemplateToken();\x0d\n      } else {\x0d\n        throw err\x0d\n      }\x0d\n    }\x0d\n\x0d\n    this.inTemplateElement = false;\x0d\n  };\x0d\n\x0d\n  pp.invalidStringToken = function(position\x2C message) {\x0d\n    if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\x0d\n      throw INVALID_TEMPLATE_ESCAPE_ERROR\x0d\n    } else {\x0d\n      this.raise(position\x2C message);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  pp.readTmplToken = function() {\x0d\n    var out = ""\x2C chunkStart = this.pos;\x0d\n    for (;;) {\x0d\n      if (this.pos >= this.input.length) { this.raise(this.start\x2C "Unterminated template"); }\x0d\n      var ch = this.input.charCodeAt(this.pos);\x0d\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) { // '`'\x2C '${'\x0d\n        if (this.pos === this.start && (this.type === types$1.template || this.type === types$1.invalidTemplate)) {\x0d\n          if (ch === 36) {\x0d\n            this.pos += 2;\x0d\n            return this.finishToken(types$1.dollarBraceL)\x0d\n          } else {\x0d\n            ++this.pos;\x0d\n            return this.finishToken(types$1.backQuote)\x0d\n          }\x0d\n        }\x0d\n        out += this.input.slice(chunkStart\x2C this.pos);\x0d\n        return this.finishToken(types$1.template\x2C out)\x0d\n      }\x0d\n      if (ch === 92) { // '\\'\x0d\n        out += this.input.slice(chunkStart\x2C this.pos);\x0d\n        out += this.readEscapedChar(true);\x0d\n        chunkStart = this.pos;\x0d\n      } else if (isNewLine(ch)) {\x0d\n        out += this.input.slice(chunkStart\x2C this.pos);\x0d\n        ++this.pos;\x0d\n        switch (ch) {\x0d\n        case 13:\x0d\n          if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; }\x0d\n        case 10:\x0d\n          out += "\\n";\x0d\n          break\x0d\n        default:\x0d\n          out += String.fromCharCode(ch);\x0d\n          break\x0d\n        }\x0d\n        if (this.options.locations) {\x0d\n          ++this.curLine;\x0d\n          this.lineStart = this.pos;\x0d\n        }\x0d\n        chunkStart = this.pos;\x0d\n      } else {\x0d\n        ++this.pos;\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Reads a template token to search for the end\x2C without validating any escape sequences\x0d\n  pp.readInvalidTemplateToken = function() {\x0d\n    for (; this.pos < this.input.length; this.pos++) {\x0d\n      switch (this.input[this.pos]) {\x0d\n      case "\\\\":\x0d\n        ++this.pos;\x0d\n        break\x0d\n\x0d\n      case "$":\x0d\n        if (this.input[this.pos + 1] !== "{") {\x0d\n          break\x0d\n        }\x0d\n\x0d\n      // falls through\x0d\n      case "`":\x0d\n        return this.finishToken(types$1.invalidTemplate\x2C this.input.slice(this.start\x2C this.pos))\x0d\n\x0d\n      // no default\x0d\n      }\x0d\n    }\x0d\n    this.raise(this.start\x2C "Unterminated template");\x0d\n  };\x0d\n\x0d\n  // Used to read escaped characters\x0d\n\x0d\n  pp.readEscapedChar = function(inTemplate) {\x0d\n    var ch = this.input.charCodeAt(++this.pos);\x0d\n    ++this.pos;\x0d\n    switch (ch) {\x0d\n    case 110: return "\\n" // 'n' -> '\\n'\x0d\n    case 114: return "\\r" // 'r' -> '\\r'\x0d\n    case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'\x0d\n    case 117: return codePointToString(this.readCodePoint()) // 'u'\x0d\n    case 116: return "\\t" // 't' -> '\\t'\x0d\n    case 98: return "\\b" // 'b' -> '\\b'\x0d\n    case 118: return "\\u000b" // 'v' -> '\\u000b'\x0d\n    case 102: return "\\f" // 'f' -> '\\f'\x0d\n    case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } // '\\r\\n'\x0d\n    case 10: // ' \\n'\x0d\n      if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\x0d\n      return ""\x0d\n    case 56:\x0d\n    case 57:\x0d\n      if (this.strict) {\x0d\n        this.invalidStringToken(\x0d\n          this.pos - 1\x2C\x0d\n          "Invalid escape sequence"\x0d\n        );\x0d\n      }\x0d\n      if (inTemplate) {\x0d\n        var codePos = this.pos - 1;\x0d\n\x0d\n        this.invalidStringToken(\x0d\n          codePos\x2C\x0d\n          "Invalid escape sequence in template string"\x0d\n        );\x0d\n      }\x0d\n    default:\x0d\n      if (ch >= 48 && ch <= 55) {\x0d\n        var octalStr = this.input.substr(this.pos - 1\x2C 3).match(/^[0-7]+/)[0];\x0d\n        var octal = parseInt(octalStr\x2C 8);\x0d\n        if (octal > 255) {\x0d\n          octalStr = octalStr.slice(0\x2C -1);\x0d\n          octal = parseInt(octalStr\x2C 8);\x0d\n        }\x0d\n        this.pos += octalStr.length - 1;\x0d\n        ch = this.input.charCodeAt(this.pos);\x0d\n        if ((octalStr !== "0" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\x0d\n          this.invalidStringToken(\x0d\n            this.pos - 1 - octalStr.length\x2C\x0d\n            inTemplate\x0d\n              ? "Octal literal in template string"\x0d\n              : "Octal literal in strict mode"\x0d\n          );\x0d\n        }\x0d\n        return String.fromCharCode(octal)\x0d\n      }\x0d\n      if (isNewLine(ch)) {\x0d\n        // Unicode new line characters after \\ get removed from output in both\x0d\n        // template literals and strings\x0d\n        return ""\x0d\n      }\x0d\n      return String.fromCharCode(ch)\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Used to read character escape sequences ('\\x'\x2C '\\u'\x2C '\\U').\x0d\n\x0d\n  pp.readHexChar = function(len) {\x0d\n    var codePos = this.pos;\x0d\n    var n = this.readInt(16\x2C len);\x0d\n    if (n === null) { this.invalidStringToken(codePos\x2C "Bad character escape sequence"); }\x0d\n    return n\x0d\n  };\x0d\n\x0d\n  // Read an identifier\x2C and return it as a string. Sets `this.containsEsc`\x0d\n  // to whether the word contained a '\\u' escape.\x0d\n  //\x0d\n  // Incrementally adds only escaped chars\x2C adding other chunks as-is\x0d\n  // as a micro-optimization.\x0d\n\x0d\n  pp.readWord1 = function() {\x0d\n    this.containsEsc = false;\x0d\n    var word = ""\x2C first = true\x2C chunkStart = this.pos;\x0d\n    var astral = this.options.ecmaVersion >= 6;\x0d\n    while (this.pos < this.input.length) {\x0d\n      var ch = this.fullCharCodeAtPos();\x0d\n      if (isIdentifierChar(ch\x2C astral)) {\x0d\n        this.pos += ch <= 0xffff ? 1 : 2;\x0d\n      } else if (ch === 92) { // "\\"\x0d\n        this.containsEsc = true;\x0d\n        word += this.input.slice(chunkStart\x2C this.pos);\x0d\n        var escStart = this.pos;\x0d\n        if (this.input.charCodeAt(++this.pos) !== 117) // "u"\x0d\n          { this.invalidStringToken(this.pos\x2C "Expecting Unicode escape sequence \\\\uXXXX"); }\x0d\n        ++this.pos;\x0d\n        var esc = this.readCodePoint();\x0d\n        if (!(first ? isIdentifierStart : isIdentifierChar)(esc\x2C astral))\x0d\n          { this.invalidStringToken(escStart\x2C "Invalid Unicode escape"); }\x0d\n        word += codePointToString(esc);\x0d\n        chunkStart = this.pos;\x0d\n      } else {\x0d\n        break\x0d\n      }\x0d\n      first = false;\x0d\n    }\x0d\n    return word + this.input.slice(chunkStart\x2C this.pos)\x0d\n  };\x0d\n\x0d\n  // Read an identifier or keyword token. Will check for reserved\x0d\n  // words when necessary.\x0d\n\x0d\n  pp.readWord = function() {\x0d\n    var word = this.readWord1();\x0d\n    var type = types$1.name;\x0d\n    if (this.keywords.test(word)) {\x0d\n      type = keywords[word];\x0d\n    }\x0d\n    return this.finishToken(type\x2C word)\x0d\n  };\x0d\n\x0d\n  // Acorn is a tiny\x2C fast JavaScript parser written in JavaScript.\x0d\n  //\x0d\n  // Acorn was written by Marijn Haverbeke\x2C Ingvar Stepanyan\x2C and\x0d\n  // various contributors and released under an MIT license.\x0d\n  //\x0d\n  // Git repositories for Acorn are available at\x0d\n  //\x0d\n  //     http://marijnhaverbeke.nl/git/acorn\x0d\n  //     https://github.com/acornjs/acorn.git\x0d\n  //\x0d\n  // Please use the [github bug tracker][ghbt] to report issues.\x0d\n  //\x0d\n  // [ghbt]: https://github.com/acornjs/acorn/issues\x0d\n  //\x0d\n  // [walk]: util/walk.js\x0d\n\x0d\n\x0d\n  var version = "8.11.3";\x0d\n\x0d\n  Parser.acorn = {\x0d\n    Parser: Parser\x2C\x0d\n    version: version\x2C\x0d\n    defaultOptions: defaultOptions\x2C\x0d\n    Position: Position\x2C\x0d\n    SourceLocation: SourceLocation\x2C\x0d\n    getLineInfo: getLineInfo\x2C\x0d\n    Node: Node\x2C\x0d\n    TokenType: TokenType\x2C\x0d\n    tokTypes: types$1\x2C\x0d\n    keywordTypes: keywords\x2C\x0d\n    TokContext: TokContext\x2C\x0d\n    tokContexts: types\x2C\x0d\n    isIdentifierChar: isIdentifierChar\x2C\x0d\n    isIdentifierStart: isIdentifierStart\x2C\x0d\n    Token: Token\x2C\x0d\n    isNewLine: isNewLine\x2C\x0d\n    lineBreak: lineBreak\x2C\x0d\n    lineBreakG: lineBreakG\x2C\x0d\n    nonASCIIwhitespace: nonASCIIwhitespace\x0d\n  };\x0d\n\x0d\n  // The main exported interface (under `self.acorn` when in the\x0d\n  // browser) is a `parse` function that takes a code string and returns\x0d\n  // an abstract syntax tree as specified by the [ESTree spec][estree].\x0d\n  //\x0d\n  // [estree]: https://github.com/estree/estree\x0d\n\x0d\n  function parse(input\x2C options) {\x0d\n    return Parser.parse(input\x2C options)\x0d\n  }\x0d\n\x0d\n  // This function tries to parse a single expression at a given\x0d\n  // offset in a string. Useful for parsing mixed-language formats\x0d\n  // that embed JavaScript expressions.\x0d\n\x0d\n  function parseExpressionAt(input\x2C pos\x2C options) {\x0d\n    return Parser.parseExpressionAt(input\x2C pos\x2C options)\x0d\n  }\x0d\n\x0d\n  // Acorn is organized as a tokenizer and a recursive-descent parser.\x0d\n  // The `tokenizer` export provides an interface to the tokenizer.\x0d\n\x0d\n  function tokenizer(input\x2C options) {\x0d\n    return Parser.tokenizer(input\x2C options)\x0d\n  }\x0d\n\x0d\n  exports.Node = Node;\x0d\n  exports.Parser = Parser;\x0d\n  exports.Position = Position;\x0d\n  exports.SourceLocation = SourceLocation;\x0d\n  exports.TokContext = TokContext;\x0d\n  exports.Token = Token;\x0d\n  exports.TokenType = TokenType;\x0d\n  exports.defaultOptions = defaultOptions;\x0d\n  exports.getLineInfo = getLineInfo;\x0d\n  exports.isIdentifierChar = isIdentifierChar;\x0d\n  exports.isIdentifierStart = isIdentifierStart;\x0d\n  exports.isNewLine = isNewLine;\x0d\n  exports.keywordTypes = keywords;\x0d\n  exports.lineBreak = lineBreak;\x0d\n  exports.lineBreakG = lineBreakG;\x0d\n  exports.nonASCIIwhitespace = nonASCIIwhitespace;\x0d\n  exports.parse = parse;\x0d\n  exports.parseExpressionAt = parseExpressionAt;\x0d\n  exports.tokContexts = types;\x0d\n  exports.tokTypes = types$1;\x0d\n  exports.tokenizer = tokenizer;\x0d\n  exports.version = version;\x0d\n\x0d\n}));\x0d\n
code-source-info,0x21de9b6d31c,115,0,237203,C0O0C4O237203,,
code-creation,JS,10,195969,0x21de9b6d42c,30, node:internal/deps/acorn/acorn/dist/acorn:1:1,0x21de9b6d290,~
code-source-info,0x21de9b6d42c,115,0,237203,C0O0C13O0C23O304C29O237202,,
code-creation,JS,10,196007,0x21de9b7d904,8518, node:internal/deps/acorn/acorn/dist/acorn:5:20,0x21de9b6d390,~
code-source-info,0x21de9b7d
code-creation,JS,10,197266,0x10fd41bcd4c,20, node:internal/deps/acorn/acorn/dist/acorn:278:44,0x21de9b6e280,~
code-source-info,0x10fd41bcd4c,115,20842,20911,C0O20850C3O20873C8O20873C16O20883C19O20909,,
code-creation,JS,10,197298,0x10fd41bcde4,15, node:internal/deps/acorn/acorn/dist/acorn:274:43,0x21de9b6e240,~
code-source-info,0x10fd41bcde4,115,20719,20793,C0O20737C3O20766C8O20766C14O20791,,
code-creation,JS,10,197323,0x10fd41bced4,87, node:internal/deps/acorn/acorn/dist/acorn:1:11,0x21de9b6d350,~
code-source-info,0x10fd41bced4,115,10,303,C0O33C15O96C28O150C32O157C47O163C61O243C68O256C70O266C75O280C77O293C81O272C86O302,,
tick,0x7ffdb1fb16a3,197363,0,0x0,3,0x7ff734383eb2,0x7ff734383c87,0x21de9b56932,0x7ff734383f77,0x7ff734383c87,0x21de9b4dbde,0x7ff734383f77,0x7ff734383c87,0x125aa7b3c2c,0x125aa7ab020,0x3151437ffa6
new,MemoryChunk,0x66313c0000,262144
code-creation,JS,10,198864,0x66313c1e6c,96,TokenType node:internal/deps/acorn/acorn/dist/acorn:114:37,0x21de9b6e1e8,~
code-source-info,0x66313c1e6c,115,14767,15183,C0O14788C4O14811C7O14829C9O14840C13O14874C17O14867C21O14913C26O14904C30O14955C35O14946C39O14993C44O14984C48O15029C53O15020C57O15065C62O15056C66O15100C71O15091C75O15132C85O15125C89O15152C90O15171C95O15182,,
code-creation,JS,10,199159,0x66313cecbc,25,binop node:internal/deps/acorn/acorn/dist/acorn:129:17,0x21de9b6d590,~
code-source-info,0x66313cecbc,115,15204,15288,C0O15224C3O15245C10O15277C19O15231C24O15283,,
code-creation,JS,10,199291,0x66313cf174,40,kw node:internal/deps/acorn/acorn/dist/acorn:139:14,0x21de9b6d5e8,~
code-source-info,0x66313cf174,115,15494,15650,C0O15517C4O15543C7O15564C9O15580C13O15593C27O15617C33O15615C39O15645,,
code-creation,JS,10,199658,0x66313d2d7c,35,TokContext node:internal/deps/acorn/acorn/dist/acorn:2271:39,0x21de9b71f40,~
code-source-info,0x66313d2d7c,115,97357,97578,C0O97416C2O97427C6O97441C8O97457C9O97453C13O97470C15O97493C16O97489C20O97513C22O97527C26O97544C28O97563C29O97559C34O97577,,
code-creation,JS,10,199846,0x66313d466c,188,buildUnicodeData node:internal/deps/acorn/acorn/dist/acorn:3785:28,0x21de9b6dab0,~
code-source-info,0x66313d466c,115,162772,163391,C0O162801C3O162806C16O162873C22O162887C28O162893C32O162838C48O162994C52O162950C60O163028C71O163057C87O163148C91O163117C107O162819C114O163187C119O163219C124O163229C128O163215C132O163246C137O163263C142O163273C146O163259C150O163298C155O163315C160O163325C164O163311C168O163340C173O163358C178O163368C182O163354C187O163390,,
code-creation,JS,10,199943,0x66313d4984,65,wordsRegexp node:internal/deps/acorn/acorn/dist/acorn:284:23,0x21de9b6d6f0,~
code-source-info,0x66313d4984,115,20983,21107,C0O20998C5O21016C13O21053C20O21075C34O21075C40O21067C46O21094C52O21049C58O21047C64O21102,,
code-creation,Eval,10,201651,0x66313dd51c,5, node:internal/deps/acorn/acorn-walk/dist/walk:1:1,0x66313dd2c8,~
script-source,116,node:internal/deps/acorn/acorn-walk/dist/walk,(function (global\x2C factory) {\x0d\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\x0d\n  typeof define === 'function' && define.amd ? define(['exports']\x2C factory) :\x0d\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self\x2C factory((global.acorn = global.acorn || {}\x2C global.acorn.walk = {})));\x0d\n})(this\x2C (function (exports) { 'use strict';\x0d\n\x0d\n  // AST walker module for ESTree compatible trees\x0d\n\x0d\n  // A simple walk is one where you simply specify callbacks to be\x0d\n  // called on specific nodes. The last two arguments are optional. A\x0d\n  // simple use would be\x0d\n  //\x0d\n  //     walk.simple(myTree\x2C {\x0d\n  //         Expression: function(node) { ... }\x0d\n  //     });\x0d\n  //\x0d\n  // to do something with all expressions. All ESTree node types\x0d\n  // can be used to identify node types\x2C as well as Expression and\x0d\n  // Statement\x2C which denote categories of nodes.\x0d\n  //\x0d\n  // The base argument can be used to pass a custom (recursive)\x0d\n  // walker\x2C and state can be used to give this walked an initial\x0d\n  // state.\x0d\n\x0d\n  function simple(node\x2C visitors\x2C baseVisitor\x2C state\x2C override) {\x0d\n    if (!baseVisitor) { baseVisitor = base\x0d\n    ; }(function c(node\x2C st\x2C override) {\x0d\n      var type = override || node.type;\x0d\n      baseVisitor[type](node\x2C st\x2C c);\x0d\n      if (visitors[type]) { visitors[type](node\x2C st); }\x0d\n    })(node\x2C state\x2C override);\x0d\n  }\x0d\n\x0d\n  // An ancestor walk keeps an array of ancestor nodes (including the\x0d\n  // current node) and passes them to the callback as third parameter\x0d\n  // (and also as state parameter when no other state is present).\x0d\n  function ancestor(node\x2C visitors\x2C baseVisitor\x2C state\x2C override) {\x0d\n    var ancestors = [];\x0d\n    if (!baseVisitor) { baseVisitor = base\x0d\n    ; }(function c(node\x2C st\x2C override) {\x0d\n      var type = override || node.type;\x0d\n      var isNew = node !== ancestors[ancestors.length - 1];\x0d\n      if (isNew) { ancestors.push(node); }\x0d\n      baseVisitor[type](node\x2C st\x2C c);\x0d\n      if (visitors[type]) { visitors[type](node\x2C st || ancestors\x2C ancestors); }\x0d\n      if (isNew) { ancestors.pop(); }\x0d\n    })(node\x2C state\x2C override);\x0d\n  }\x0d\n\x0d\n  // A recursive walk is one where your functions override the default\x0d\n  // walkers. They can modify and replace the state parameter that's\x0d\n  // threaded through the walk\x2C and can opt how and whether to walk\x0d\n  // their child nodes (by calling their third argument on these\x0d\n  // nodes).\x0d\n  function recursive(node\x2C state\x2C funcs\x2C baseVisitor\x2C override) {\x0d\n    var visitor = funcs ? make(funcs\x2C baseVisitor || undefined) : baseVisitor\x0d\n    ;(function c(node\x2C st\x2C override) {\x0d\n      visitor[override || node.type](node\x2C st\x2C c);\x0d\n    })(node\x2C state\x2C override);\x0d\n  }\x0d\n\x0d\n  function makeTest(test) {\x0d\n    if (typeof test === "string")\x0d\n      { return function (type) { return type === test; } }\x0d\n    else if (!test)\x0d\n      { return function () { return true; } }\x0d\n    else\x0d\n      { return test }\x0d\n  }\x0d\n\x0d\n  var Found = function Found(node\x2C state) { this.node = node; this.state = state; };\x0d\n\x0d\n  // A full walk triggers the callback on each node\x0d\n  function full(node\x2C callback\x2C baseVisitor\x2C state\x2C override) {\x0d\n    if (!baseVisitor) { baseVisitor = base; }\x0d\n    var last\x0d\n    ;(function c(node\x2C st\x2C override) {\x0d\n      var type = override || node.type;\x0d\n      baseVisitor[type](node\x2C st\x2C c);\x0d\n      if (last !== node) {\x0d\n        callback(node\x2C st\x2C type);\x0d\n        last = node;\x0d\n      }\x0d\n    })(node\x2C state\x2C override);\x0d\n  }\x0d\n\x0d\n  // An fullAncestor walk is like an ancestor walk\x2C but triggers\x0d\n  // the callback on each node\x0d\n  function fullAncestor(node\x2C callback\x2C baseVisitor\x2C state) {\x0d\n    if (!baseVisitor) { baseVisitor = base; }\x0d\n    var ancestors = []\x2C last\x0d\n    ;(function c(node\x2C st\x2C override) {\x0d\n      var type = override || node.type;\x0d\n      var isNew = node !== ancestors[ancestors.length - 1];\x0d\n      if (isNew) { ancestors.push(node); }\x0d\n      baseVisitor[type](node\x2C st\x2C c);\x0d\n      if (last !== node) {\x0d\n        callback(node\x2C st || ancestors\x2C ancestors\x2C type);\x0d\n        last = node;\x0d\n      }\x0d\n      if (isNew) { ancestors.pop(); }\x0d\n    })(node\x2C state);\x0d\n  }\x0d\n\x0d\n  // Find a node with a given start\x2C end\x2C and type (all are optional\x2C\x0d\n  // null can be used as wildcard). Returns a {node\x2C state} object\x2C or\x0d\n  // undefined when it doesn't find a matching node.\x0d\n  function findNodeAt(node\x2C start\x2C end\x2C test\x2C baseVisitor\x2C state) {\x0d\n    if (!baseVisitor) { baseVisitor = base; }\x0d\n    test = makeTest(test);\x0d\n    try {\x0d\n      (function c(node\x2C st\x2C override) {\x0d\n        var type = override || node.type;\x0d\n        if ((start == null || node.start <= start) &&\x0d\n            (end == null || node.end >= end))\x0d\n          { baseVisitor[type](node\x2C st\x2C c); }\x0d\n        if ((start == null || node.start === start) &&\x0d\n            (end == null || node.end === end) &&\x0d\n            test(type\x2C node))\x0d\n          { throw new Found(node\x2C st) }\x0d\n      })(node\x2C state);\x0d\n    } catch (e) {\x0d\n      if (e instanceof Found) { return e }\x0d\n      throw e\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Find the innermost node of a given type that contains the given\x0d\n  // position. Interface similar to findNodeAt.\x0d\n  function findNodeAround(node\x2C pos\x2C test\x2C baseVisitor\x2C state) {\x0d\n    test = makeTest(test);\x0d\n    if (!baseVisitor) { baseVisitor = base; }\x0d\n    try {\x0d\n      (function c(node\x2C st\x2C override) {\x0d\n        var type = override || node.type;\x0d\n        if (node.start > pos || node.end < pos) { return }\x0d\n        baseVisitor[type](node\x2C st\x2C c);\x0d\n        if (test(type\x2C node)) { throw new Found(node\x2C st) }\x0d\n      })(node\x2C state);\x0d\n    } catch (e) {\x0d\n      if (e instanceof Found) { return e }\x0d\n      throw e\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Find the outermost matching node after a given position.\x0d\n  function findNodeAfter(node\x2C pos\x2C test\x2C baseVisitor\x2C state) {\x0d\n    test = makeTest(test);\x0d\n    if (!baseVisitor) { baseVisitor = base; }\x0d\n    try {\x0d\n      (function c(node\x2C st\x2C override) {\x0d\n        if (node.end < pos) { return }\x0d\n        var type = override || node.type;\x0d\n        if (node.start >= pos && test(type\x2C node)) { throw new Found(node\x2C st) }\x0d\n        baseVisitor[type](node\x2C st\x2C c);\x0d\n      })(node\x2C state);\x0d\n    } catch (e) {\x0d\n      if (e instanceof Found) { return e }\x0d\n      throw e\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Find the outermost matching node before a given position.\x0d\n  function findNodeBefore(node\x2C pos\x2C test\x2C baseVisitor\x2C state) {\x0d\n    test = makeTest(test);\x0d\n    if (!baseVisitor) { baseVisitor = base; }\x0d\n    var max\x0d\n    ;(function c(node\x2C st\x2C override) {\x0d\n      if (node.start > pos) { return }\x0d\n      var type = override || node.type;\x0d\n      if (node.end <= pos && (!max || max.node.end < node.end) && test(type\x2C node))\x0d\n        { max = new Found(node\x2C st); }\x0d\n      baseVisitor[type](node\x2C st\x2C c);\x0d\n    })(node\x2C state);\x0d\n    return max\x0d\n  }\x0d\n\x0d\n  // Used to create a custom walker. Will fill in all missing node\x0d\n  // type properties with the defaults.\x0d\n  function make(funcs\x2C baseVisitor) {\x0d\n    var visitor = Object.create(baseVisitor || base);\x0d\n    for (var type in funcs) { visitor[type] = funcs[type]; }\x0d\n    return visitor\x0d\n  }\x0d\n\x0d\n  function skipThrough(node\x2C st\x2C c) { c(node\x2C st); }\x0d\n  function ignore(_node\x2C _st\x2C _c) {}\x0d\n\x0d\n  // Node walkers.\x0d\n\x0d\n  var base = {};\x0d\n\x0d\n  base.Program = base.BlockStatement = base.StaticBlock = function (node\x2C st\x2C c) {\x0d\n    for (var i = 0\x2C list = node.body; i < list.length; i += 1)\x0d\n      {\x0d\n      var stmt = list[i];\x0d\n\x0d\n      c(stmt\x2C st\x2C "Statement");\x0d\n    }\x0d\n  };\x0d\n  base.Statement = skipThrough;\x0d\n  base.EmptyStatement = ignore;\x0d\n  base.ExpressionStatement = base.ParenthesizedExpression = base.ChainExpression =\x0d\n    function (node\x2C st\x2C c) { return c(node.expression\x2C st\x2C "Expression"); };\x0d\n  base.IfStatement = function (node\x2C st\x2C c) {\x0d\n    c(node.test\x2C st\x2C "Expression");\x0d\n    c(node.consequent\x2C st\x2C "Statement");\x0d\n    if (node.alternate) { c(node.alternate\x2C st\x2C "Statement"); }\x0d\n  };\x0d\n  base.LabeledStatement = function (node\x2C st\x2C c) { return c(node.body\x2C st\x2C "Statement"); };\x0d\n  base.BreakStatement = base.ContinueStatement = ignore;\x0d\n  base.WithStatement = function (node\x2C st\x2C c) {\x0d\n    c(node.object\x2C st\x2C "Expression");\x0d\n    c(node.body\x2C st\x2C "Statement");\x0d\n  };\x0d\n  base.SwitchStatement = function (node\x2C st\x2C c) {\x0d\n    c(node.discriminant\x2C st\x2C "Expression");\x0d\n    for (var i$1 = 0\x2C list$1 = node.cases; i$1 < list$1.length; i$1 += 1) {\x0d\n      var cs = list$1[i$1];\x0d\n\x0d\n      if (cs.test) { c(cs.test\x2C st\x2C "Expression"); }\x0d\n      for (var i = 0\x2C list = cs.consequent; i < list.length; i += 1)\x0d\n        {\x0d\n        var cons = list[i];\x0d\n\x0d\n        c(cons\x2C st\x2C "Statement");\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n  base.SwitchCase = function (node\x2C st\x2C c) {\x0d\n    if (node.test) { c(node.test\x2C st\x2C "Expression"); }\x0d\n    for (var i = 0\x2C list = node.consequent; i < list.length; i += 1)\x0d\n      {\x0d\n      var cons = list[i];\x0d\n\x0d\n      c(cons\x2C st\x2C "Statement");\x0d\n    }\x0d\n  };\x0d\n  base.ReturnStatement = base.YieldExpression = base.AwaitExpression = function (node\x2C st\x2C c) {\x0d\n    if (node.argument) { c(node.argument\x2C st\x2C "Expression"); }\x0d\n  };\x0d\n  base.ThrowStatement = base.SpreadElement =\x0d\n    function (node\x2C st\x2C c) { return c(node.argument\x2C st\x2C "Expression"); };\x0d\n  base.TryStatement = function (node\x2C st\x2C c) {\x0d\n    c(node.block\x2C st\x2C "Statement");\x0d\n    if (node.handler) { c(node.handler\x2C st); }\x0d\n    if (node.finalizer) { c(node.finalizer\x2C st\x2C "Statement"); }\x0d\n  };\x0d\n  base.CatchClause = function (node\x2C st\x2C c) {\x0d\n    if (node.param) { c(node.param\x2C st\x2C "Pattern"); }\x0d\n    c(node.body\x2C st\x2C "Statement");\x0d\n  };\x0d\n  base.WhileStatement = base.DoWhileStatement = function (node\x2C st\x2C c) {\x0d\n    c(node.test\x2C st\x2C "Expression");\x0d\n    c(node.body\x2C st\x2C "Statement");\x0d\n  };\x0d\n  base.ForStatement = function (node\x2C st\x2C c) {\x0d\n    if (node.init) { c(node.init\x2C st\x2C "ForInit"); }\x0d\n    if (node.test) { c(node.test\x2C st\x2C "Expression"); }\x0d\n    if (node.update) { c(node.update\x2C st\x2C "Expression"); }\x0d\n    c(node.body\x2C st\x2C "Statement");\x0d\n  };\x0d\n  base.ForInStatement = base.ForOfStatement = function (node\x2C st\x2C c) {\x0d\n    c(node.left\x2C st\x2C "ForInit");\x0d\n    c(node.right\x2C st\x2C "Expression");\x0d\n    c(node.body\x2C st\x2C "Statement");\x0d\n  };\x0d\n  base.ForInit = function (node\x2C st\x2C c) {\x0d\n    if (node.type === "VariableDeclaration") { c(node\x2C st); }\x0d\n    else { c(node\x2C st\x2C "Expression"); }\x0d\n  };\x0d\n  base.DebuggerStatement = ignore;\x0d\n\x0d\n  base.FunctionDeclaration = function (node\x2C st\x2C c) { return c(node\x2C st\x2C "Function"); };\x0d\n  base.VariableDeclaration = function (node\x2C st\x2C c) {\x0d\n    for (var i = 0\x2C list = node.declarations; i < list.length; i += 1)\x0d\n      {\x0d\n      var decl = list[i];\x0d\n\x0d\n      c(decl\x2C st);\x0d\n    }\x0d\n  };\x0d\n  base.VariableDeclarator = function (node\x2C st\x2C c) {\x0d\n    c(node.id\x2C st\x2C "Pattern");\x0d\n    if (node.init) { c(node.init\x2C st\x2C "Expression"); }\x0d\n  };\x0d\n\x0d\n  base.Function = function (node\x2C st\x2C c) {\x0d\n    if (node.id) { c(node.id\x2C st\x2C "Pattern"); }\x0d\n    for (var i = 0\x2C list = node.params; i < list.length; i += 1)\x0d\n      {\x0d\n      var param = list[i];\x0d\n\x0d\n      c(param\x2C st\x2C "Pattern");\x0d\n    }\x0d\n    c(node.body\x2C st\x2C node.expression ? "Expression" : "Statement");\x0d\n  };\x0d\n\x0d\n  base.Pattern = function (node\x2C st\x2C c) {\x0d\n    if (node.type === "Identifier")\x0d\n      { c(node\x2C st\x2C "VariablePattern"); }\x0d\n    else if (node.type === "MemberExpression")\x0d\n      { c(node\x2C st\x2C "MemberPattern"); }\x0d\n    else\x0d\n      { c(node\x2C st); }\x0d\n  };\x0d\n  base.VariablePattern = ignore;\x0d\n  base.MemberPattern = skipThrough;\x0d\n  base.RestElement = function (node\x2C st\x2C c) { return c(node.argument\x2C st\x2C "Pattern"); };\x0d\n  base.ArrayPattern = function (node\x2C st\x2C c) {\x0d\n    for (var i = 0\x2C list = node.elements; i < list.length; i += 1) {\x0d\n      var elt = list[i];\x0d\n\x0d\n      if (elt) { c(elt\x2C st\x2C "Pattern"); }\x0d\n    }\x0d\n  };\x0d\n  base.ObjectPattern = function (node\x2C st\x2C c) {\x0d\n    for (var i = 0\x2C list = node.properties; i < list.length; i += 1) {\x0d\n      var prop = list[i];\x0d\n\x0d\n      if (prop.type === "Property") {\x0d\n        if (prop.computed) { c(prop.key\x2C st\x2C "Expression"); }\x0d\n        c(prop.value\x2C st\x2C "Pattern");\x0d\n      } else if (prop.type === "RestElement") {\x0d\n        c(prop.argument\x2C st\x2C "Pattern");\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\n  base.Expression = skipThrough;\x0d\n  base.ThisExpression = base.Super = base.MetaProperty = ignore;\x0d\n  base.ArrayExpression = function (node\x2C st\x2C c) {\x0d\n    for (var i = 0\x2C list = node.elements; i < list.length; i += 1) {\x0d\n      var elt = list[i];\x0d\n\x0d\n      if (elt) { c(elt\x2C st\x2C "Expression"); }\x0d\n    }\x0d\n  };\x0d\n  base.ObjectExpression = function (node\x2C st\x2C c) {\x0d\n    for (var i = 0\x2C list = node.properties; i < list.length; i += 1)\x0d\n      {\x0d\n      var prop = list[i];\x0d\n\x0d\n      c(prop\x2C st);\x0d\n    }\x0d\n  };\x0d\n  base.FunctionExpression = base.ArrowFunctionExpression = base.FunctionDeclaration;\x0d\n  base.SequenceExpression = function (node\x2C st\x2C c) {\x0d\n    for (var i = 0\x2C list = node.expressions; i < list.length; i += 1)\x0d\n      {\x0d\n      var expr = list[i];\x0d\n\x0d\n      c(expr\x2C st\x2C "Expression");\x0d\n    }\x0d\n  };\x0d\n  base.TemplateLiteral = function (node\x2C st\x2C c) {\x0d\n    for (var i = 0\x2C list = node.quasis; i < list.length; i += 1)\x0d\n      {\x0d\n      var quasi = list[i];\x0d\n\x0d\n      c(quasi\x2C st);\x0d\n    }\x0d\n\x0d\n    for (var i$1 = 0\x2C list$1 = node.expressions; i$1 < list$1.length; i$1 += 1)\x0d\n      {\x0d\n      var expr = list$1[i$1];\x0d\n\x0d\n      c(expr\x2C st\x2C "Expression");\x0d\n    }\x0d\n  };\x0d\n  base.TemplateElement = ignore;\x0d\n  base.UnaryExpression = base.UpdateExpression = function (node\x2C st\x2C c) {\x0d\n    c(node.argument\x2C st\x2C "Expression");\x0d\n  };\x0d\n  base.BinaryExpression = base.LogicalExpression = function (node\x2C st\x2C c) {\x0d\n    c(node.left\x2C st\x2C "Expression");\x0d\n    c(node.right\x2C st\x2C "Expression");\x0d\n  };\x0d\n  base.AssignmentExpression = base.AssignmentPattern = function (node\x2C st\x2C c) {\x0d\n    c(node.left\x2C st\x2C "Pattern");\x0d\n    c(node.right\x2C st\x2C "Expression");\x0d\n  };\x0d\n  base.ConditionalExpression = function (node\x2C st\x2C c) {\x0d\n    c(node.test\x2C st\x2C "Expression");\x0d\n    c(node.consequent\x2C st\x2C "Expression");\x0d\n    c(node.alternate\x2C st\x2C "Expression");\x0d\n  };\x0d\n  base.NewExpression = base.CallExpression = function (node\x2C st\x2C c) {\x0d\n    c(node.callee\x2C st\x2C "Expression");\x0d\n    if (node.arguments)\x0d\n      { for (var i = 0\x2C list = node.arguments; i < list.length; i += 1)\x0d\n        {\x0d\n          var arg = list[i];\x0d\n\x0d\n          c(arg\x2C st\x2C "Expression");\x0d\n        } }\x0d\n  };\x0d\n  base.MemberExpression = function (node\x2C st\x2C c) {\x0d\n    c(node.object\x2C st\x2C "Expression");\x0d\n    if (node.computed) { c(node.property\x2C st\x2C "Expression"); }\x0d\n  };\x0d\n  base.ExportNamedDeclaration = base.ExportDefaultDeclaration = function (node\x2C st\x2C c) {\x0d\n    if (node.declaration)\x0d\n      { c(node.declaration\x2C st\x2C node.type === "ExportNamedDeclaration" || node.declaration.id ? "Statement" : "Expression"); }\x0d\n    if (node.source) { c(node.source\x2C st\x2C "Expression"); }\x0d\n  };\x0d\n  base.ExportAllDeclaration = function (node\x2C st\x2C c) {\x0d\n    if (node.exported)\x0d\n      { c(node.exported\x2C st); }\x0d\n    c(node.source\x2C st\x2C "Expression");\x0d\n  };\x0d\n  base.ImportDeclaration = function (node\x2C st\x2C c) {\x0d\n    for (var i = 0\x2C list = node.specifiers; i < list.length; i += 1)\x0d\n      {\x0d\n      var spec = list[i];\x0d\n\x0d\n      c(spec\x2C st);\x0d\n    }\x0d\n    c(node.source\x2C st\x2C "Expression");\x0d\n  };\x0d\n  base.ImportExpression = function (node\x2C st\x2C c) {\x0d\n    c(node.source\x2C st\x2C "Expression");\x0d\n  };\x0d\n  base.ImportSpecifier = base.ImportDefaultSpecifier = base.ImportNamespaceSpecifier = base.Identifier = base.PrivateIdentifier = base.Literal = ignore;\x0d\n\x0d\n  base.TaggedTemplateExpression = function (node\x2C st\x2C c) {\x0d\n    c(node.tag\x2C st\x2C "Expression");\x0d\n    c(node.quasi\x2C st\x2C "Expression");\x0d\n  };\x0d\n  base.ClassDeclaration = base.ClassExpression = function (node\x2C st\x2C c) { return c(node\x2C st\x2C "Class"); };\x0d\n  base.Class = function (node\x2C st\x2C c) {\x0d\n    if (node.id) { c(node.id\x2C st\x2C "Pattern"); }\x0d\n    if (node.superClass) { c(node.superClass\x2C st\x2C "Expression"); }\x0d\n    c(node.body\x2C st);\x0d\n  };\x0d\n  base.ClassBody = function (node\x2C st\x2C c) {\x0d\n    for (var i = 0\x2C list = node.body; i < list.length; i += 1)\x0d\n      {\x0d\n      var elt = list[i];\x0d\n\x0d\n      c(elt\x2C st);\x0d\n    }\x0d\n  };\x0d\n  base.MethodDefinition = base.PropertyDefinition = base.Property = function (node\x2C st\x2C c) {\x0d\n    if (node.computed) { c(node.key\x2C st\x2C "Expression"); }\x0d\n    if (node.value) { c(node.value\x2C st\x2C "Expression"); }\x0d\n  };\x0d\n\x0d\n  exports.ancestor = ancestor;\x0d\n  exports.base = base;\x0d\n  exports.findNodeAfter = findNodeAfter;\x0d\n  exports.findNodeAround = findNodeAround;\x0d\n  exports.findNodeAt = findNodeAt;\x0d\n  exports.findNodeBefore = findNodeBefore;\x0d\n  exports.full = full;\x0d\n  exports.fullAncestor = fullAncestor;\x0d\n  exports.make = make;\x0d\n  exports.recursive = recursive;\x0d\n  exports.simple = simple;\x0d\n\x0d\n}));\x0d\n
code-source-info,0x66313dd51c,116,0,16418,C0O0C4O16418,,
code-creation,JS,10,202979,0x66313dd62c,30, node:internal/deps/acorn/acorn-walk/dist/walk:1:1,0x66313dd490,~
code-source-info,0x66313dd62c,116,0,16418,C0O0C13O0C23O346C29O16417,,
code-creation,JS,10,203008,0x66313e01b4,882, node:internal/deps/acorn/acorn-walk/dist/walk:5:20,0x66313dd590,~
code-source-info,0x66313e01b4,116,363,16413,C0O363C72O2933C76O2933C78O7146C79O7146C81O7155C84O7192C89O7209C95O7190C101O7168C105O7387C110O7402C114O7420C119O7440C123O7453C126O7511C131O7532C137O7509C143O7478C147O7615C154O7632C158O7812C165O7834C169O7905C174O7950C180O7925C184O7963C191O7982C195O8093C202O8114C206O8520C213O8536C217O8776C220O8822C225O8843C231O8820C237O8797C241O8943C244O8965C249O8984C255O8963C259O9065C266O9083C270O9269C277O9286C281O9413C284O9435C289O9457C295O9433C299O9566C306O9584C310O9825C313O9847C318O9867C324O9845C328O10011C335O10024C339O10164C344O10187C348O10202C355O10227C359O10292C366O10317C370O10490C377O10514C381O10640C388O10654C392O10954C399O10967C403O11206C408O11227C412O11240C417O11259C421O11277C428O11294C432O11367C439O11385C443O11569C450O11588C454O11975C459O11991C463O12009C468O12062C474O12042C480O12029C484O12075C491O12096C495O12283C502O12305C506O12476C509O12538C514O12531C520O12500C524O12562C531O12586C535O12772C542O12793C546O13128C551O13149C555O13162C558O13185C563O13207C569O13183C573O13284C576O13308C581O13331C587O13306C591O13442C594O13470C599O13493C605O13468C609O13601C616O13628C620O13786C623O13807C628O13827C634O13805C638O14093C645O14115C649O14254C652O14284C657O14314C663O14282C667O14565C674O14591C678O14723C685O14746C689O14956C696O14978C700O15053C705O15194C711O15179C717O15154C723O15136C729O15104C735O15074C739O15209C746O15239C750O15349C753O15373C758O15394C764O15371C768O15456C775O15467C779O15643C786O15658C790O15821C793O15871C798O15885C804O15869C810O15843C814O16040C816O16057C820O16072C822O16085C826O16096C828O16118C832O16138C834O16161C838O16182C840O16201C844O16218C846O16241C850O16262C852O16275C856O16286C858O16307C862O16326C864O16339C868O16350C870O16368C874O16384C876O16399C881O16412,,
code-creation,JS,10,203249,0x66313e0814,109, node:internal/deps/acorn/acorn-walk/dist/walk:1:11,0x66313dd550,~
code-source-info,0x66313e0814,116,10,345,C0O33C15O96C28O150C32O157C47O163C61O243C68O256C70O266C75O303C88O294C92O323C99O334C103O272C108O344,,
code-creation,Eval,10,204026,0x66313e4b34,5, node:vm:1:1,0x66313e4728,~
script-source,117,node:vm,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  Symbol\x2C\x0d\n  PromiseReject\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ContextifyScript\x2C\x0d\n  makeContext\x2C\x0d\n  constants\x2C\x0d\n  measureMemory: _measureMemory\x2C\x0d\n} = internalBinding('contextify');\x0d\nconst {\x0d\n  ERR_CONTEXT_NOT_INITIALIZED\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateInt32\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n  validateStringArray\x2C\x0d\n  validateUint32\x2C\x0d\n  kValidateObjectAllowArray\x2C\x0d\n  kValidateObjectAllowNullable\x2C\x0d\n} = require('internal/validators');\x0d\nconst {\x0d\n  emitExperimentalWarning\x2C\x0d\n  kEmptyObject\x2C\x0d\n  kVmBreakFirstLineSymbol\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  getHostDefinedOptionId\x2C\x0d\n  internalCompileFunction\x2C\x0d\n  isContext: _isContext\x2C\x0d\n  registerImportModuleDynamically\x2C\x0d\n} = require('internal/vm');\x0d\nconst {\x0d\n  vm_dynamic_import_main_context_default\x2C\x0d\n} = internalBinding('symbols');\x0d\nconst kParsingContext = Symbol('script parsing context');\x0d\n\x0d\n/**\x0d\n * Check if object is a context object created by vm.createContext().\x0d\n * @throws {TypeError} If object is not an object in the first place\x2C throws TypeError.\x0d\n * @param {object} object Object to check.\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isContext(object) {\x0d\n  validateObject(object\x2C 'object'\x2C kValidateObjectAllowArray);\x0d\n\x0d\n  return _isContext(object);\x0d\n}\x0d\n\x0d\nclass Script extends ContextifyScript {\x0d\n  constructor(code\x2C options = kEmptyObject) {\x0d\n    code = `${code}`;\x0d\n    if (typeof options === 'string') {\x0d\n      options = { filename: options };\x0d\n    } else {\x0d\n      validateObject(options\x2C 'options');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      filename = 'evalmachine.<anonymous>'\x2C\x0d\n      lineOffset = 0\x2C\x0d\n      columnOffset = 0\x2C\x0d\n      cachedData\x2C\x0d\n      produceCachedData = false\x2C\x0d\n      importModuleDynamically\x2C\x0d\n      [kParsingContext]: parsingContext\x2C\x0d\n    } = options;\x0d\n\x0d\n    validateString(filename\x2C 'options.filename');\x0d\n    validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n    validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n    if (cachedData !== undefined) {\x0d\n      validateBuffer(cachedData\x2C 'options.cachedData');\x0d\n    }\x0d\n    validateBoolean(produceCachedData\x2C 'options.produceCachedData');\x0d\n\x0d\n    const hostDefinedOptionId =\x0d\n        getHostDefinedOptionId(importModuleDynamically\x2C filename);\x0d\n    // Calling `ReThrow()` on a native TryCatch does not generate a new\x0d\n    // abort-on-uncaught-exception check. A dummy try/catch in JS land\x0d\n    // protects against that.\x0d\n    try { // eslint-disable-line no-useless-catch\x0d\n      super(code\x2C\x0d\n            filename\x2C\x0d\n            lineOffset\x2C\x0d\n            columnOffset\x2C\x0d\n            cachedData\x2C\x0d\n            produceCachedData\x2C\x0d\n            parsingContext\x2C\x0d\n            hostDefinedOptionId);\x0d\n    } catch (e) {\x0d\n      throw e; /* node-do-not-add-exception-line */\x0d\n    }\x0d\n\x0d\n    registerImportModuleDynamically(this\x2C importModuleDynamically);\x0d\n  }\x0d\n\x0d\n  runInThisContext(options) {\x0d\n    const { breakOnSigint\x2C args } = getRunInContextArgs(null\x2C options);\x0d\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\x0d\n      return sigintHandlersWrap(super.runInContext\x2C this\x2C args);\x0d\n    }\x0d\n    return ReflectApply(super.runInContext\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  runInContext(contextifiedObject\x2C options) {\x0d\n    validateContext(contextifiedObject);\x0d\n    const { breakOnSigint\x2C args } = getRunInContextArgs(\x0d\n      contextifiedObject\x2C\x0d\n      options\x2C\x0d\n    );\x0d\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\x0d\n      return sigintHandlersWrap(super.runInContext\x2C this\x2C args);\x0d\n    }\x0d\n    return ReflectApply(super.runInContext\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  runInNewContext(contextObject\x2C options) {\x0d\n    const context = createContext(contextObject\x2C getContextOptions(options));\x0d\n    return this.runInContext(context\x2C options);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction validateContext(contextifiedObject) {\x0d\n  if (!isContext(contextifiedObject)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('contextifiedObject'\x2C 'vm.Context'\x2C\x0d\n                                   contextifiedObject);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getRunInContextArgs(contextifiedObject\x2C options = kEmptyObject) {\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  let timeout = options.timeout;\x0d\n  if (timeout === undefined) {\x0d\n    timeout = -1;\x0d\n  } else {\x0d\n    validateUint32(timeout\x2C 'options.timeout'\x2C true);\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    displayErrors = true\x2C\x0d\n    breakOnSigint = false\x2C\x0d\n    [kVmBreakFirstLineSymbol]: breakFirstLine = false\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateBoolean(displayErrors\x2C 'options.displayErrors');\x0d\n  validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\x0d\n\x0d\n  return {\x0d\n    breakOnSigint\x2C\x0d\n    args: [\x0d\n      contextifiedObject\x2C\x0d\n      timeout\x2C\x0d\n      displayErrors\x2C\x0d\n      breakOnSigint\x2C\x0d\n      breakFirstLine\x2C\x0d\n    ]\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction getContextOptions(options) {\x0d\n  if (!options)\x0d\n    return {};\x0d\n  const contextOptions = {\x0d\n    name: options.contextName\x2C\x0d\n    origin: options.contextOrigin\x2C\x0d\n    codeGeneration: undefined\x2C\x0d\n    microtaskMode: options.microtaskMode\x2C\x0d\n  };\x0d\n  if (contextOptions.name !== undefined)\x0d\n    validateString(contextOptions.name\x2C 'options.contextName');\x0d\n  if (contextOptions.origin !== undefined)\x0d\n    validateString(contextOptions.origin\x2C 'options.contextOrigin');\x0d\n  if (options.contextCodeGeneration !== undefined) {\x0d\n    validateObject(options.contextCodeGeneration\x2C\x0d\n                   'options.contextCodeGeneration');\x0d\n    const { strings\x2C wasm } = options.contextCodeGeneration;\x0d\n    if (strings !== undefined)\x0d\n      validateBoolean(strings\x2C 'options.contextCodeGeneration.strings');\x0d\n    if (wasm !== undefined)\x0d\n      validateBoolean(wasm\x2C 'options.contextCodeGeneration.wasm');\x0d\n    contextOptions.codeGeneration = { strings\x2C wasm };\x0d\n  }\x0d\n  if (options.microtaskMode !== undefined)\x0d\n    validateString(options.microtaskMode\x2C 'options.microtaskMode');\x0d\n  return contextOptions;\x0d\n}\x0d\n\x0d\nlet defaultContextNameIndex = 1;\x0d\nfunction createContext(contextObject = {}\x2C options = kEmptyObject) {\x0d\n  if (isContext(contextObject)) {\x0d\n    return contextObject;\x0d\n  }\x0d\n\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  const {\x0d\n    name = `VM Context ${defaultContextNameIndex++}`\x2C\x0d\n    origin\x2C\x0d\n    codeGeneration\x2C\x0d\n    microtaskMode\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateString(name\x2C 'options.name');\x0d\n  if (origin !== undefined)\x0d\n    validateString(origin\x2C 'options.origin');\x0d\n  if (codeGeneration !== undefined)\x0d\n    validateObject(codeGeneration\x2C 'options.codeGeneration');\x0d\n\x0d\n  let strings = true;\x0d\n  let wasm = true;\x0d\n  if (codeGeneration !== undefined) {\x0d\n    ({ strings = true\x2C wasm = true } = codeGeneration);\x0d\n    validateBoolean(strings\x2C 'options.codeGeneration.strings');\x0d\n    validateBoolean(wasm\x2C 'options.codeGeneration.wasm');\x0d\n  }\x0d\n\x0d\n  validateOneOf(microtaskMode\x2C\x0d\n                'options.microtaskMode'\x2C\x0d\n                ['afterEvaluate'\x2C undefined]);\x0d\n  const microtaskQueue = (microtaskMode === 'afterEvaluate');\x0d\n\x0d\n  const hostDefinedOptionId =\x0d\n    getHostDefinedOptionId(importModuleDynamically\x2C name);\x0d\n\x0d\n  makeContext(contextObject\x2C name\x2C origin\x2C strings\x2C wasm\x2C microtaskQueue\x2C hostDefinedOptionId);\x0d\n  // Register the context scope callback after the context was initialized.\x0d\n  registerImportModuleDynamically(contextObject\x2C importModuleDynamically);\x0d\n  return contextObject;\x0d\n}\x0d\n\x0d\nfunction createScript(code\x2C options) {\x0d\n  return new Script(code\x2C options);\x0d\n}\x0d\n\x0d\n// Remove all SIGINT listeners and re-attach them after the wrapped function\x0d\n// has executed\x2C so that caught SIGINT are handled by the listeners again.\x0d\nfunction sigintHandlersWrap(fn\x2C thisArg\x2C argsArray) {\x0d\n  const sigintListeners = process.rawListeners('SIGINT');\x0d\n\x0d\n  process.removeAllListeners('SIGINT');\x0d\n\x0d\n  try {\x0d\n    return ReflectApply(fn\x2C thisArg\x2C argsArray);\x0d\n  } finally {\x0d\n    // Add using the public methods so that the `newListener` handler of\x0d\n    // process can re-attach the listeners.\x0d\n    ArrayPrototypeForEach(sigintListeners\x2C (listener) => {\x0d\n      process.addListener('SIGINT'\x2C listener);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction runInContext(code\x2C contextifiedObject\x2C options) {\x0d\n  validateContext(contextifiedObject);\x0d\n  if (typeof options === 'string') {\x0d\n    options = {\x0d\n      filename: options\x2C\x0d\n      [kParsingContext]: contextifiedObject\x2C\x0d\n    };\x0d\n  } else {\x0d\n    options = { ...options\x2C [kParsingContext]: contextifiedObject };\x0d\n  }\x0d\n  return createScript(code\x2C options)\x0d\n    .runInContext(contextifiedObject\x2C options);\x0d\n}\x0d\n\x0d\nfunction runInNewContext(code\x2C contextObject\x2C options) {\x0d\n  if (typeof options === 'string') {\x0d\n    options = { filename: options };\x0d\n  }\x0d\n  contextObject = createContext(contextObject\x2C getContextOptions(options));\x0d\n  options = { ...options\x2C [kParsingContext]: contextObject };\x0d\n  return createScript(code\x2C options).runInNewContext(contextObject\x2C options);\x0d\n}\x0d\n\x0d\nfunction runInThisContext(code\x2C options) {\x0d\n  if (typeof options === 'string') {\x0d\n    options = { filename: options };\x0d\n  }\x0d\n  return createScript(code\x2C options).runInThisContext(options);\x0d\n}\x0d\n\x0d\nfunction compileFunction(code\x2C params\x2C options = kEmptyObject) {\x0d\n  validateString(code\x2C 'code');\x0d\n  if (params !== undefined) {\x0d\n    validateStringArray(params\x2C 'params');\x0d\n  }\x0d\n  const {\x0d\n    filename = ''\x2C\x0d\n    columnOffset = 0\x2C\x0d\n    lineOffset = 0\x2C\x0d\n    cachedData = undefined\x2C\x0d\n    produceCachedData = false\x2C\x0d\n    parsingContext = undefined\x2C\x0d\n    contextExtensions = []\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateString(filename\x2C 'options.filename');\x0d\n  validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n  validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n  if (cachedData !== undefined)\x0d\n    validateBuffer(cachedData\x2C 'options.cachedData');\x0d\n  validateBoolean(produceCachedData\x2C 'options.produceCachedData');\x0d\n  if (parsingContext !== undefined) {\x0d\n    if (\x0d\n      typeof parsingContext !== 'object' ||\x0d\n      parsingContext === null ||\x0d\n      !isContext(parsingContext)\x0d\n    ) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.parsingContext'\x2C\x0d\n        'Context'\x2C\x0d\n        parsingContext\x2C\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  validateArray(contextExtensions\x2C 'options.contextExtensions');\x0d\n  ArrayPrototypeForEach(contextExtensions\x2C (extension\x2C i) => {\x0d\n    const name = `options.contextExtensions[${i}]`;\x0d\n    validateObject(extension\x2C name\x2C kValidateObjectAllowNullable);\x0d\n  });\x0d\n\x0d\n  const hostDefinedOptionId =\x0d\n      getHostDefinedOptionId(importModuleDynamically\x2C filename);\x0d\n\x0d\n  return internalCompileFunction(\x0d\n    code\x2C filename\x2C lineOffset\x2C columnOffset\x2C\x0d\n    cachedData\x2C produceCachedData\x2C parsingContext\x2C contextExtensions\x2C\x0d\n    params\x2C hostDefinedOptionId\x2C importModuleDynamically\x2C\x0d\n  ).function;\x0d\n}\x0d\n\x0d\nconst measureMemoryModes = {\x0d\n  summary: constants.measureMemory.mode.SUMMARY\x2C\x0d\n  detailed: constants.measureMemory.mode.DETAILED\x2C\x0d\n};\x0d\n\x0d\nconst measureMemoryExecutions = {\x0d\n  default: constants.measureMemory.execution.DEFAULT\x2C\x0d\n  eager: constants.measureMemory.execution.EAGER\x2C\x0d\n};\x0d\n\x0d\nfunction measureMemory(options = kEmptyObject) {\x0d\n  emitExperimentalWarning('vm.measureMemory');\x0d\n  validateObject(options\x2C 'options');\x0d\n  const { mode = 'summary'\x2C execution = 'default' } = options;\x0d\n  validateOneOf(mode\x2C 'options.mode'\x2C ['summary'\x2C 'detailed']);\x0d\n  validateOneOf(execution\x2C 'options.execution'\x2C ['default'\x2C 'eager']);\x0d\n  const result = _measureMemory(measureMemoryModes[mode]\x2C\x0d\n                                measureMemoryExecutions[execution]);\x0d\n  if (result === undefined) {\x0d\n    return PromiseReject(new ERR_CONTEXT_NOT_INITIALIZED());\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nconst vmConstants = {\x0d\n  __proto__: null\x2C\x0d\n  USE_MAIN_CONTEXT_DEFAULT_LOADER: vm_dynamic_import_main_context_default\x2C\x0d\n};\x0d\n\x0d\nObjectFreeze(vmConstants);\x0d\n\x0d\nmodule.exports = {\x0d\n  Script\x2C\x0d\n  createContext\x2C\x0d\n  createScript\x2C\x0d\n  runInContext\x2C\x0d\n  runInNewContext\x2C\x0d\n  runInThisContext\x2C\x0d\n  isContext\x2C\x0d\n  compileFunction\x2C\x0d\n  measureMemory\x2C\x0d\n  constants: vmConstants\x2C\x0d\n};\x0d\n\x0d\n// The vm module is patched to include vm.Module\x2C vm.SourceTextModule\x0d\n// and vm.SyntheticModule in the pre-execution phase when\x0d\n// --experimental-vm-modules is on.\x0d\n
code-source-info,0x66313e4b34,117,0,13228,C0O0C4O13228,,
code-creation,JS,10,205034,0x66313e567c,639, node:vm:1:1,0x66313e4aa8,~
code-source-info,0x66313e567c
code-creation,Eval,10,205876,0x66313e826c,5, node:readline:1:1,0x66313e7f58,~
script-source,118,node:readline,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  DateNow\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromiseReject\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  SymbolDispose\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  clearLine\x2C\x0d\n  clearScreenDown\x2C\x0d\n  cursorTo\x2C\x0d\n  moveCursor\x2C\x0d\n} = require('internal/readline/callbacks');\x0d\nconst emitKeypressEvents = require('internal/readline/emitKeypressEvents');\x0d\nconst promises = require('readline/promises');\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  inspect\x2C\x0d\n} = require('internal/util/inspect');\x0d\nconst {\x0d\n  kEmptyObject\x2C\x0d\n  promisify\x2C\x0d\n} = require('internal/util');\x0d\nconst { validateAbortSignal } = require('internal/validators');\x0d\n\x0d\n/**\x0d\n * @typedef {import('./stream.js').Readable} Readable\x0d\n * @typedef {import('./stream.js').Writable} Writable\x0d\n */\x0d\n\x0d\nconst {\x0d\n  Interface: _Interface\x2C\x0d\n  InterfaceConstructor\x2C\x0d\n  kAddHistory\x2C\x0d\n  kDecoder\x2C\x0d\n  kDeleteLeft\x2C\x0d\n  kDeleteLineLeft\x2C\x0d\n  kDeleteLineRight\x2C\x0d\n  kDeleteRight\x2C\x0d\n  kDeleteWordLeft\x2C\x0d\n  kDeleteWordRight\x2C\x0d\n  kGetDisplayPos\x2C\x0d\n  kHistoryNext\x2C\x0d\n  kHistoryPrev\x2C\x0d\n  kInsertString\x2C\x0d\n  kLine\x2C\x0d\n  kLine_buffer\x2C\x0d\n  kMoveCursor\x2C\x0d\n  kNormalWrite\x2C\x0d\n  kOldPrompt\x2C\x0d\n  kOnLine\x2C\x0d\n  kPreviousKey\x2C\x0d\n  kPrompt\x2C\x0d\n  kQuestion\x2C\x0d\n  kQuestionCallback\x2C\x0d\n  kQuestionCancel\x2C\x0d\n  kRefreshLine\x2C\x0d\n  kSawKeyPress\x2C\x0d\n  kSawReturnAt\x2C\x0d\n  kSetRawMode\x2C\x0d\n  kTabComplete\x2C\x0d\n  kTabCompleter\x2C\x0d\n  kTtyWrite\x2C\x0d\n  kWordLeft\x2C\x0d\n  kWordRight\x2C\x0d\n  kWriteToOutput\x2C\x0d\n} = require('internal/readline/interface');\x0d\nlet addAbortListener;\x0d\n\x0d\nfunction Interface(input\x2C output\x2C completer\x2C terminal) {\x0d\n  if (!(this instanceof Interface)) {\x0d\n    return new Interface(input\x2C output\x2C completer\x2C terminal);\x0d\n  }\x0d\n\x0d\n  if (input?.input &&\x0d\n      typeof input.completer === 'function' && input.completer.length !== 2) {\x0d\n    const { completer } = input;\x0d\n    input.completer = (v\x2C cb) => cb(null\x2C completer(v));\x0d\n  } else if (typeof completer === 'function' && completer.length !== 2) {\x0d\n    const realCompleter = completer;\x0d\n    completer = (v\x2C cb) => cb(null\x2C realCompleter(v));\x0d\n  }\x0d\n\x0d\n  FunctionPrototypeCall(InterfaceConstructor\x2C this\x2C\x0d\n                        input\x2C output\x2C completer\x2C terminal);\x0d\n\x0d\n  if (process.env.TERM === 'dumb') {\x0d\n    this._ttyWrite = FunctionPrototypeBind(_ttyWriteDumb\x2C this);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Interface.prototype\x2C _Interface.prototype);\x0d\nObjectSetPrototypeOf(Interface\x2C _Interface);\x0d\n\x0d\n/**\x0d\n * Displays `query` by writing it to the `output`.\x0d\n * @param {string} query\x0d\n * @param {{ signal?: AbortSignal; }} [options]\x0d\n * @param {Function} cb\x0d\n * @returns {void}\x0d\n */\x0d\nInterface.prototype.question = function question(query\x2C options\x2C cb) {\x0d\n  cb = typeof options === 'function' ? options : cb;\x0d\n  if (options === null || typeof options !== 'object') {\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n\x0d\n  if (options.signal) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n    if (options.signal.aborted) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    const onAbort = () => {\x0d\n      this[kQuestionCancel]();\x0d\n    };\x0d\n    addAbortListener ??= require('events').addAbortListener;\x0d\n    const disposable = addAbortListener(options.signal\x2C onAbort);\x0d\n    const originalCb = cb;\x0d\n    cb = typeof cb === 'function' ? (answer) => {\x0d\n      disposable[SymbolDispose]();\x0d\n      return originalCb(answer);\x0d\n    } : disposable[SymbolDispose];\x0d\n  }\x0d\n\x0d\n  if (typeof cb === 'function') {\x0d\n    this[kQuestion](query\x2C cb);\x0d\n  }\x0d\n};\x0d\nInterface.prototype.question[promisify.custom] = function question(query\x2C options) {\x0d\n  if (options === null || typeof options !== 'object') {\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n\x0d\n  if (options.signal && options.signal.aborted) {\x0d\n    return PromiseReject(\x0d\n      new AbortError(undefined\x2C { cause: options.signal.reason }));\x0d\n  }\x0d\n\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    let cb = resolve;\x0d\n\x0d\n    if (options.signal) {\x0d\n      const onAbort = () => {\x0d\n        reject(new AbortError(undefined\x2C { cause: options.signal.reason }));\x0d\n      };\x0d\n      addAbortListener ??= require('events').addAbortListener;\x0d\n      const disposable = addAbortListener(options.signal\x2C onAbort);\x0d\n      cb = (answer) => {\x0d\n        disposable[SymbolDispose]();\x0d\n        resolve(answer);\x0d\n      };\x0d\n    }\x0d\n\x0d\n    this.question(query\x2C options\x2C cb);\x0d\n  });\x0d\n};\x0d\n\x0d\n/**\x0d\n * Creates a new `readline.Interface` instance.\x0d\n * @param {Readable | {\x0d\n *   input: Readable;\x0d\n *   output: Writable;\x0d\n *   completer?: Function;\x0d\n *   terminal?: boolean;\x0d\n *   history?: string[];\x0d\n *   historySize?: number;\x0d\n *   removeHistoryDuplicates?: boolean;\x0d\n *   prompt?: string;\x0d\n *   crlfDelay?: number;\x0d\n *   escapeCodeTimeout?: number;\x0d\n *   tabSize?: number;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} input\x0d\n * @param {Writable} [output]\x0d\n * @param {Function} [completer]\x0d\n * @param {boolean} [terminal]\x0d\n * @returns {Interface}\x0d\n */\x0d\nfunction createInterface(input\x2C output\x2C completer\x2C terminal) {\x0d\n  return new Interface(input\x2C output\x2C completer\x2C terminal);\x0d\n}\x0d\n\x0d\nObjectDefineProperties(Interface.prototype\x2C {\x0d\n  // Redirect internal prototype methods to the underscore notation for backward\x0d\n  // compatibility.\x0d\n  [kSetRawMode]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._setRawMode;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kOnLine]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._onLine;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kWriteToOutput]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._writeToOutput;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kAddHistory]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._addHistory;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kRefreshLine]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._refreshLine;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kNormalWrite]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._normalWrite;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kInsertString]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._insertString;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kTabComplete]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._tabComplete;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kWordLeft]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._wordLeft;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kWordRight]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._wordRight;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kDeleteLeft]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._deleteLeft;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kDeleteRight]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._deleteRight;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kDeleteWordLeft]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._deleteWordLeft;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kDeleteWordRight]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._deleteWordRight;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kDeleteLineLeft]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._deleteLineLeft;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kDeleteLineRight]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._deleteLineRight;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kLine]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._line;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kHistoryNext]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._historyNext;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kHistoryPrev]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._historyPrev;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kGetDisplayPos]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._getDisplayPos;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kMoveCursor]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._moveCursor;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kTtyWrite]: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._ttyWrite;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  // Defining proxies for the internal instance properties for backward\x0d\n  // compatibility.\x0d\n  _decoder: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this[kDecoder];\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      this[kDecoder] = value;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  _line_buffer: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this[kLine_buffer];\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      this[kLine_buffer] = value;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  _oldPrompt: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this[kOldPrompt];\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      this[kOldPrompt] = value;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  _previousKey: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this[kPreviousKey];\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      this[kPreviousKey] = value;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  _prompt: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this[kPrompt];\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      this[kPrompt] = value;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  _questionCallback: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this[kQuestionCallback];\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      this[kQuestionCallback] = value;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  _sawKeyPress: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this[kSawKeyPress];\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      this[kSawKeyPress] = value;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  _sawReturnAt: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this[kSawReturnAt];\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      this[kSawReturnAt] = value;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// Make internal methods public for backward compatibility.\x0d\nInterface.prototype._setRawMode = _Interface.prototype[kSetRawMode];\x0d\nInterface.prototype._onLine = _Interface.prototype[kOnLine];\x0d\nInterface.prototype._writeToOutput = _Interface.prototype[kWriteToOutput];\x0d\nInterface.prototype._addHistory = _Interface.prototype[kAddHistory];\x0d\nInterface.prototype._refreshLine = _Interface.prototype[kRefreshLine];\x0d\nInterface.prototype._normalWrite = _Interface.prototype[kNormalWrite];\x0d\nInterface.prototype._insertString = _Interface.prototype[kInsertString];\x0d\nInterface.prototype._tabComplete = function(lastKeypressWasTab) {\x0d\n  // Overriding parent method because `this.completer` in the legacy\x0d\n  // implementation takes a callback instead of being an async function.\x0d\n  this.pause();\x0d\n  const string = StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\x0d\n  this.completer(string\x2C (err\x2C value) => {\x0d\n    this.resume();\x0d\n\x0d\n    if (err) {\x0d\n      this._writeToOutput(`Tab completion error: ${inspect(err)}`);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    this[kTabCompleter](lastKeypressWasTab\x2C value);\x0d\n  });\x0d\n};\x0d\nInterface.prototype._wordLeft = _Interface.prototype[kWordLeft];\x0d\nInterface.prototype._wordRight = _Interface.prototype[kWordRight];\x0d\nInterface.prototype._deleteLeft = _Interface.prototype[kDeleteLeft];\x0d\nInterface.prototype._deleteRight = _Interface.prototype[kDeleteRight];\x0d\nInterface.prototype._deleteWordLeft = _Interface.prototype[kDeleteWordLeft];\x0d\nInterface.prototype._deleteWordRight = _Interface.prototype[kDeleteWordRight];\x0d\nInterface.prototype._deleteLineLeft = _Interface.prototype[kDeleteLineLeft];\x0d\nInterface.prototype._deleteLineRight = _Interface.prototype[kDeleteLineRight];\x0d\nInterface.prototype._line = _Interface.prototype[kLine];\x0d\nInterface.prototype._historyNext = _Interface.prototype[kHistoryNext];\x0d\nInterface.prototype._historyPrev = _Interface.prototype[kHistoryPrev];\x0d\nInterface.prototype._getDisplayPos = _Interface.prototype[kGetDisplayPos];\x0d\nInterface.prototype._getCursorPos = _Interface.prototype.getCursorPos;\x0d\nInterface.prototype._moveCursor = _Interface.prototype[kMoveCursor];\x0d\nInterface.prototype._ttyWrite = _Interface.prototype[kTtyWrite];\x0d\n\x0d\nfunction _ttyWriteDumb(s\x2C key) {\x0d\n  key = key || kEmptyObject;\x0d\n\x0d\n  if (key.name === 'escape') return;\x0d\n\x0d\n  if (this[kSawReturnAt] && key.name !== 'enter')\x0d\n    this[kSawReturnAt] = 0;\x0d\n\x0d\n  if (key.ctrl) {\x0d\n    if (key.name === 'c') {\x0d\n      if (this.listenerCount('SIGINT') > 0) {\x0d\n        this.emit('SIGINT');\x0d\n      } else {\x0d\n        // This readline instance is finished\x0d\n        this.close();\x0d\n      }\x0d\n\x0d\n      return;\x0d\n    } else if (key.name === 'd') {\x0d\n      this.close();\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  switch (key.name) {\x0d\n    case 'return':  // Carriage return\x2C i.e. \\r\x0d\n      this[kSawReturnAt] = DateNow();\x0d\n      this._line();\x0d\n      break;\x0d\n\x0d\n    case 'enter':\x0d\n      // When key interval > crlfDelay\x0d\n      if (this[kSawReturnAt] === 0 ||\x0d\n          DateNow() - this[kSawReturnAt] > this.crlfDelay) {\x0d\n        this._line();\x0d\n      }\x0d\n      this[kSawReturnAt] = 0;\x0d\n      break;\x0d\n\x0d\n    default:\x0d\n      if (typeof s === 'string' && s) {\x0d\n        this.line += s;\x0d\n        this.cursor += s.length;\x0d\n        this._writeToOutput(s);\x0d\n      }\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Interface\x2C\x0d\n  clearLine\x2C\x0d\n  clearScreenDown\x2C\x0d\n  createInterface\x2C\x0d\n  cursorTo\x2C\x0d\n  emitKeypressEvents\x2C\x0d\n  moveCursor\x2C\x0d\n  promises\x2C\x0d\n};\x0d\n
code-source-info,0x66313e826c,118,0,13300,C0O0C4O13300,,
code-creation,JS,10,206842,0x66313e9da4,2392, node:readline:1:1,0x66313e81e0,~
code-source-info,0x66313e9da
code-creation,Eval,10,207422,0x66313eb86c,5, node:internal/readline/callbacks:1:1,0x66313eb678,~
script-source,119,node:internal/readline/callbacks,'use strict';\x0d\n\x0d\nconst {\x0d\n  NumberIsNaN\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_CURSOR_POS\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\nconst {\x0d\n  CSI\x2C\x0d\n} = require('internal/readline/utils');\x0d\n\x0d\nconst {\x0d\n  kClearLine\x2C\x0d\n  kClearScreenDown\x2C\x0d\n  kClearToLineBeginning\x2C\x0d\n  kClearToLineEnd\x2C\x0d\n} = CSI;\x0d\n\x0d\n\x0d\n/**\x0d\n * moves the cursor to the x and y coordinate on the given stream\x0d\n */\x0d\n\x0d\nfunction cursorTo(stream\x2C x\x2C y\x2C callback) {\x0d\n  if (callback !== undefined) {\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n  }\x0d\n\x0d\n  if (typeof y === 'function') {\x0d\n    callback = y;\x0d\n    y = undefined;\x0d\n  }\x0d\n\x0d\n  if (NumberIsNaN(x)) throw new ERR_INVALID_ARG_VALUE('x'\x2C x);\x0d\n  if (NumberIsNaN(y)) throw new ERR_INVALID_ARG_VALUE('y'\x2C y);\x0d\n\x0d\n  if (stream == null || (typeof x !== 'number' && typeof y !== 'number')) {\x0d\n    if (typeof callback === 'function') process.nextTick(callback\x2C null);\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  if (typeof x !== 'number') throw new ERR_INVALID_CURSOR_POS();\x0d\n\x0d\n  const data = typeof y !== 'number' ? CSI`${x + 1}G` : CSI`${y + 1};${x + 1}H`;\x0d\n  return stream.write(data\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * moves the cursor relative to its current location\x0d\n */\x0d\n\x0d\nfunction moveCursor(stream\x2C dx\x2C dy\x2C callback) {\x0d\n  if (callback !== undefined) {\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n  }\x0d\n\x0d\n  if (stream == null || !(dx || dy)) {\x0d\n    if (typeof callback === 'function') process.nextTick(callback\x2C null);\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  let data = '';\x0d\n\x0d\n  if (dx < 0) {\x0d\n    data += CSI`${-dx}D`;\x0d\n  } else if (dx > 0) {\x0d\n    data += CSI`${dx}C`;\x0d\n  }\x0d\n\x0d\n  if (dy < 0) {\x0d\n    data += CSI`${-dy}A`;\x0d\n  } else if (dy > 0) {\x0d\n    data += CSI`${dy}B`;\x0d\n  }\x0d\n\x0d\n  return stream.write(data\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * clears the current line the cursor is on:\x0d\n *   -1 for left of the cursor\x0d\n *   +1 for right of the cursor\x0d\n *    0 for the entire line\x0d\n */\x0d\n\x0d\nfunction clearLine(stream\x2C dir\x2C callback) {\x0d\n  if (callback !== undefined) {\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n  }\x0d\n\x0d\n  if (stream === null || stream === undefined) {\x0d\n    if (typeof callback === 'function') process.nextTick(callback\x2C null);\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  const type =\x0d\n    dir < 0 ? kClearToLineBeginning : dir > 0 ? kClearToLineEnd : kClearLine;\x0d\n  return stream.write(type\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * clears the screen from the current position of the cursor down\x0d\n */\x0d\n\x0d\nfunction clearScreenDown(stream\x2C callback) {\x0d\n  if (callback !== undefined) {\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n  }\x0d\n\x0d\n  if (stream === null || stream === undefined) {\x0d\n    if (typeof callback === 'function') process.nextTick(callback\x2C null);\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  return stream.write(kClearScreenDown\x2C callback);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  clearLine\x2C\x0d\n  clearScreenDown\x2C\x0d\n  cursorTo\x2C\x0d\n  moveCursor\x2C\x0d\n};\x0d\n
code-source-info,0x66313eb86c,119,0,2886,C0O0C4O2886,,
code-creation,JS,10,207588,0x66313ebb5c,179, node:internal/readline/callbacks:1:1,0x66313eb7e0,~
code-source-info,0x66313ebb5c,119,0,2886,C0O0C56O28C62O150C65O150C70O80C75O87C81O115C87O215C90O215C95O192C101O269C104O269C109O259C115O403C118O319C124O334C130O355C136O381C142O2800C149O2822C155O2836C161O2856C167O2869C173O2815C178O2885,,
code-creation,Eval,10,207906,0x66313ecee4,5, node:internal/readline/utils:1:1,0x66313ecce0,~
script-source,120,node:internal/readline/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  StringFromCharCode\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeCodePointAt\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst kUTF16SurrogateThreshold = 0x10000; // 2 ** 16\x0d\nconst kEscape = '\\x1b';\x0d\nconst kSubstringSearch = Symbol('kSubstringSearch');\x0d\n\x0d\nfunction CSI(strings\x2C ...args) {\x0d\n  let ret = `${kEscape}[`;\x0d\n  for (let n = 0; n < strings.length; n++) {\x0d\n    ret += strings[n];\x0d\n    if (n < args.length)\x0d\n      ret += args[n];\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\nCSI.kEscape = kEscape;\x0d\nCSI.kClearToLineBeginning = CSI`1K`;\x0d\nCSI.kClearToLineEnd = CSI`0K`;\x0d\nCSI.kClearLine = CSI`2K`;\x0d\nCSI.kClearScreenDown = CSI`0J`;\x0d\n\x0d\n// TODO(BridgeAR): Treat combined characters as single character\x2C i.e\x2C\x0d\n// 'a\\u0301' and '\\u0301a' (both have the same visual output).\x0d\n// Check Canonical_Combining_Class in\x0d\n// http://userguide.icu-project.org/strings/properties\x0d\nfunction charLengthLeft(str\x2C i) {\x0d\n  if (i <= 0)\x0d\n    return 0;\x0d\n  if ((i > 1 &&\x0d\n      StringPrototypeCodePointAt(str\x2C i - 2) >= kUTF16SurrogateThreshold) ||\x0d\n      StringPrototypeCodePointAt(str\x2C i - 1) >= kUTF16SurrogateThreshold) {\x0d\n    return 2;\x0d\n  }\x0d\n  return 1;\x0d\n}\x0d\n\x0d\nfunction charLengthAt(str\x2C i) {\x0d\n  if (str.length <= i) {\x0d\n    // Pretend to move to the right. This is necessary to autocomplete while\x0d\n    // moving to the right.\x0d\n    return 1;\x0d\n  }\x0d\n  return StringPrototypeCodePointAt(str\x2C i) >= kUTF16SurrogateThreshold ? 2 : 1;\x0d\n}\x0d\n\x0d\n/*\x0d\n  Some patterns seen in terminal key escape codes\x2C derived from combos seen\x0d\n  at http://www.midnight-commander.org/browser/lib/tty/key.c\x0d\n\x0d\n  ESC letter\x0d\n  ESC [ letter\x0d\n  ESC [ modifier letter\x0d\n  ESC [ 1 ; modifier letter\x0d\n  ESC [ num char\x0d\n  ESC [ num ; modifier char\x0d\n  ESC O letter\x0d\n  ESC O modifier letter\x0d\n  ESC O 1 ; modifier letter\x0d\n  ESC N letter\x0d\n  ESC [ [ num ; modifier char\x0d\n  ESC [ [ 1 ; modifier letter\x0d\n  ESC ESC [ num char\x0d\n  ESC ESC O letter\x0d\n\x0d\n  - char is usually ~ but $ and ^ also happen with rxvt\x0d\n  - modifier is 1 +\x0d\n                (shift     * 1) +\x0d\n                (left_alt  * 2) +\x0d\n                (ctrl      * 4) +\x0d\n                (right_alt * 8)\x0d\n  - two leading ESCs apparently mean the same as one leading ESC\x0d\n*/\x0d\nfunction* emitKeys(stream) {\x0d\n  while (true) {\x0d\n    let ch = yield;\x0d\n    let s = ch;\x0d\n    let escaped = false;\x0d\n    const key = {\x0d\n      sequence: null\x2C\x0d\n      name: undefined\x2C\x0d\n      ctrl: false\x2C\x0d\n      meta: false\x2C\x0d\n      shift: false\x2C\x0d\n    };\x0d\n\x0d\n    if (ch === kEscape) {\x0d\n      escaped = true;\x0d\n      s += (ch = yield);\x0d\n\x0d\n      if (ch === kEscape) {\x0d\n        s += (ch = yield);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (escaped && (ch === 'O' || ch === '[')) {\x0d\n      // ANSI escape sequence\x0d\n      let code = ch;\x0d\n      let modifier = 0;\x0d\n\x0d\n      if (ch === 'O') {\x0d\n        // ESC O letter\x0d\n        // ESC O modifier letter\x0d\n        s += (ch = yield);\x0d\n\x0d\n        if (ch >= '0' && ch <= '9') {\x0d\n          modifier = (ch >> 0) - 1;\x0d\n          s += (ch = yield);\x0d\n        }\x0d\n\x0d\n        code += ch;\x0d\n      } else if (ch === '[') {\x0d\n        // ESC [ letter\x0d\n        // ESC [ modifier letter\x0d\n        // ESC [ [ modifier letter\x0d\n        // ESC [ [ num char\x0d\n        s += (ch = yield);\x0d\n\x0d\n        if (ch === '[') {\x0d\n          // \\x1b[[A\x0d\n          //      ^--- escape codes might have a second bracket\x0d\n          code += ch;\x0d\n          s += (ch = yield);\x0d\n        }\x0d\n\x0d\n        /*\x0d\n         * Here and later we try to buffer just enough data to get\x0d\n         * a complete ascii sequence.\x0d\n         *\x0d\n         * We have basically two classes of ascii characters to process:\x0d\n         *\x0d\n         *\x0d\n         * 1. `\\x1b[24;5~` should be parsed as { code: '[24~'\x2C modifier: 5 }\x0d\n         *\x0d\n         * This particular example is featuring Ctrl+F12 in xterm.\x0d\n         *\x0d\n         *  - `;5` part is optional\x2C e.g. it could be `\\x1b[24~`\x0d\n         *  - first part can contain one or two digits\x0d\n         *  - there is also special case when there can be 3 digits\x0d\n         *    but without modifier. They are the case of paste bracket mode\x0d\n         *\x0d\n         * So the generic regexp is like /^(?:\\d\\d?(;\\d)?[~^$]|\\d{3}~)$/\x0d\n         *\x0d\n         *\x0d\n         * 2. `\\x1b[1;5H` should be parsed as { code: '[H'\x2C modifier: 5 }\x0d\n         *\x0d\n         * This particular example is featuring Ctrl+Home in xterm.\x0d\n         *\x0d\n         *  - `1;5` part is optional\x2C e.g. it could be `\\x1b[H`\x0d\n         *  - `1;` part is optional\x2C e.g. it could be `\\x1b[5H`\x0d\n         *\x0d\n         * So the generic regexp is like /^((\\d;)?\\d)?[A-Za-z]$/\x0d\n         *\x0d\n         */\x0d\n        const cmdStart = s.length - 1;\x0d\n\x0d\n        // Skip one or two leading digits\x0d\n        if (ch >= '0' && ch <= '9') {\x0d\n          s += (ch = yield);\x0d\n\x0d\n          if (ch >= '0' && ch <= '9') {\x0d\n            s += (ch = yield);\x0d\n\x0d\n            if (ch >= '0' && ch <= '9') {\x0d\n              s += (ch = yield);\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n\x0d\n        // skip modifier\x0d\n        if (ch === ';') {\x0d\n          s += (ch = yield);\x0d\n\x0d\n          if (ch >= '0' && ch <= '9') {\x0d\n            s += yield;\x0d\n          }\x0d\n        }\x0d\n\x0d\n        /*\x0d\n         * We buffered enough data\x2C now trying to extract code\x0d\n         * and modifier from it\x0d\n         */\x0d\n        const cmd = StringPrototypeSlice(s\x2C cmdStart);\x0d\n        let match;\x0d\n\x0d\n        if ((match = RegExpPrototypeExec(/^(?:(\\d\\d?)(?:;(\\d))?([~^$])|(\\d{3}~))$/\x2C cmd))) {\x0d\n          if (match[4]) {\x0d\n            code += match[4];\x0d\n          } else {\x0d\n            code += match[1] + match[3];\x0d\n            modifier = (match[2] || 1) - 1;\x0d\n          }\x0d\n        } else if (\x0d\n          (match = RegExpPrototypeExec(/^((\\d;)?(\\d))?([A-Za-z])$/\x2C cmd))\x0d\n        ) {\x0d\n          code += match[4];\x0d\n          modifier = (match[3] || 1) - 1;\x0d\n        } else {\x0d\n          code += cmd;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      // Parse the key modifier\x0d\n      key.ctrl = !!(modifier & 4);\x0d\n      key.meta = !!(modifier & 10);\x0d\n      key.shift = !!(modifier & 1);\x0d\n      key.code = code;\x0d\n\x0d\n      // Parse the key itself\x0d\n      switch (code) {\x0d\n        /* xterm/gnome ESC [ letter (with modifier) */\x0d\n        case '[P': key.name = 'f1'; break;\x0d\n        case '[Q': key.name = 'f2'; break;\x0d\n        case '[R': key.name = 'f3'; break;\x0d\n        case '[S': key.name = 'f4'; break;\x0d\n\x0d\n        /* xterm/gnome ESC O letter (without modifier) */\x0d\n        case 'OP': key.name = 'f1'; break;\x0d\n        case 'OQ': key.name = 'f2'; break;\x0d\n        case 'OR': key.name = 'f3'; break;\x0d\n        case 'OS': key.name = 'f4'; break;\x0d\n\x0d\n        /* xterm/rxvt ESC [ number ~ */\x0d\n        case '[11~': key.name = 'f1'; break;\x0d\n        case '[12~': key.name = 'f2'; break;\x0d\n        case '[13~': key.name = 'f3'; break;\x0d\n        case '[14~': key.name = 'f4'; break;\x0d\n\x0d\n        /* paste bracket mode */\x0d\n        case '[200~': key.name = 'paste-start'; break;\x0d\n        case '[201~': key.name = 'paste-end'; break;\x0d\n\x0d\n        /* from Cygwin and used in libuv */\x0d\n        case '[[A': key.name = 'f1'; break;\x0d\n        case '[[B': key.name = 'f2'; break;\x0d\n        case '[[C': key.name = 'f3'; break;\x0d\n        case '[[D': key.name = 'f4'; break;\x0d\n        case '[[E': key.name = 'f5'; break;\x0d\n\x0d\n        /* common */\x0d\n        case '[15~': key.name = 'f5'; break;\x0d\n        case '[17~': key.name = 'f6'; break;\x0d\n        case '[18~': key.name = 'f7'; break;\x0d\n        case '[19~': key.name = 'f8'; break;\x0d\n        case '[20~': key.name = 'f9'; break;\x0d\n        case '[21~': key.name = 'f10'; break;\x0d\n        case '[23~': key.name = 'f11'; break;\x0d\n        case '[24~': key.name = 'f12'; break;\x0d\n\x0d\n        /* xterm ESC [ letter */\x0d\n        case '[A': key.name = 'up'; break;\x0d\n        case '[B': key.name = 'down'; break;\x0d\n        case '[C': key.name = 'right'; break;\x0d\n        case '[D': key.name = 'left'; break;\x0d\n        case '[E': key.name = 'clear'; break;\x0d\n        case '[F': key.name = 'end'; break;\x0d\n        case '[H': key.name = 'home'; break;\x0d\n\x0d\n        /* xterm/gnome ESC O letter */\x0d\n        case 'OA': key.name = 'up'; break;\x0d\n        case 'OB': key.name = 'down'; break;\x0d\n        case 'OC': key.name = 'right'; break;\x0d\n        case 'OD': key.name = 'left'; break;\x0d\n        case 'OE': key.name = 'clear'; break;\x0d\n        case 'OF': key.name = 'end'; break;\x0d\n        case 'OH': key.name = 'home'; break;\x0d\n\x0d\n        /* xterm/rxvt ESC [ number ~ */\x0d\n        case '[1~': key.name = 'home'; break;\x0d\n        case '[2~': key.name = 'insert'; break;\x0d\n        case '[3~': key.name = 'delete'; break;\x0d\n        case '[4~': key.name = 'end'; break;\x0d\n        case '[5~': key.name = 'pageup'; break;\x0d\n        case '[6~': key.name = 'pagedown'; break;\x0d\n\x0d\n        /* putty */\x0d\n        case '[[5~': key.name = 'pageup'; break;\x0d\n        case '[[6~': key.name = 'pagedown'; break;\x0d\n\x0d\n        /* rxvt */\x0d\n        case '[7~': key.name = 'home'; break;\x0d\n        case '[8~': key.name = 'end'; break;\x0d\n\x0d\n        /* rxvt keys with modifiers */\x0d\n        case '[a': key.name = 'up'; key.shift = true; break;\x0d\n        case '[b': key.name = 'down'; key.shift = true; break;\x0d\n        case '[c': key.name = 'right'; key.shift = true; break;\x0d\n        case '[d': key.name = 'left'; key.shift = true; break;\x0d\n        case '[e': key.name = 'clear'; key.shift = true; break;\x0d\n\x0d\n        case '[2$': key.name = 'insert'; key.shift = true; break;\x0d\n        case '[3$': key.name = 'delete'; key.shift = true; break;\x0d\n        case '[5$': key.name = 'pageup'; key.shift = true; break;\x0d\n        case '[6$': key.name = 'pagedown'; key.shift = true; break;\x0d\n        case '[7$': key.name = 'home'; key.shift = true; break;\x0d\n        case '[8$': key.name = 'end'; key.shift = true; break;\x0d\n\x0d\n        case 'Oa': key.name = 'up'; key.ctrl = true; break;\x0d\n        case 'Ob': key.name = 'down'; key.ctrl = true; break;\x0d\n        case 'Oc': key.name = 'right'; key.ctrl = true; break;\x0d\n        case 'Od': key.name = 'left'; key.ctrl = true; break;\x0d\n        case 'Oe': key.name = 'clear'; key.ctrl = true; break;\x0d\n\x0d\n        case '[2^': key.name = 'insert'; key.ctrl = true; break;\x0d\n        case '[3^': key.name = 'delete'; key.ctrl = true; break;\x0d\n        case '[5^': key.name = 'pageup'; key.ctrl = true; break;\x0d\n        case '[6^': key.name = 'pagedown'; key.ctrl = true; break;\x0d\n        case '[7^': key.name = 'home'; key.ctrl = true; break;\x0d\n        case '[8^': key.name = 'end'; key.ctrl = true; break;\x0d\n\x0d\n        /* misc. */\x0d\n        case '[Z': key.name = 'tab'; key.shift = true; break;\x0d\n        default: key.name = 'undefined'; break;\x0d\n      }\x0d\n    } else if (ch === '\\r') {\x0d\n      // carriage return\x0d\n      key.name = 'return';\x0d\n      key.meta = escaped;\x0d\n    } else if (ch === '\\n') {\x0d\n      // Enter\x2C should have been called linefeed\x0d\n      key.name = 'enter';\x0d\n      key.meta = escaped;\x0d\n    } else if (ch === '\\t') {\x0d\n      // tab\x0d\n      key.name = 'tab';\x0d\n      key.meta = escaped;\x0d\n    } else if (ch === '\\b' || ch === '\\x7f') {\x0d\n      // backspace or ctrl+h\x0d\n      key.name = 'backspace';\x0d\n      key.meta = escaped;\x0d\n    } else if (ch === kEscape) {\x0d\n      // escape key\x0d\n      key.name = 'escape';\x0d\n      key.meta = escaped;\x0d\n    } else if (ch === ' ') {\x0d\n      key.name = 'space';\x0d\n      key.meta = escaped;\x0d\n    } else if (!escaped && ch <= '\\x1a') {\x0d\n      // ctrl+letter\x0d\n      key.name = StringFromCharCode(\x0d\n        StringPrototypeCharCodeAt(ch) + StringPrototypeCharCodeAt('a') - 1\x2C\x0d\n      );\x0d\n      key.ctrl = true;\x0d\n    } else if (RegExpPrototypeExec(/^[0-9A-Za-z]$/\x2C ch) !== null) {\x0d\n      // Letter\x2C number\x2C shift+letter\x0d\n      key.name = StringPrototypeToLowerCase(ch);\x0d\n      key.shift = RegExpPrototypeExec(/^[A-Z]$/\x2C ch) !== null;\x0d\n      key.meta = escaped;\x0d\n    } else if (escaped) {\x0d\n      // Escape sequence timeout\x0d\n      key.name = ch.length ? undefined : 'escape';\x0d\n      key.meta = true;\x0d\n    }\x0d\n\x0d\n    key.sequence = s;\x0d\n\x0d\n    if (s.length !== 0 && (key.name !== undefined || escaped)) {\x0d\n      /* Named character or sequence */\x0d\n      stream.emit('keypress'\x2C escaped ? undefined : s\x2C key);\x0d\n    } else if (charLengthAt(s\x2C 0) === s.length) {\x0d\n      /* Single unnamed character\x2C e.g. "." */\x0d\n      stream.emit('keypress'\x2C s\x2C key);\x0d\n    }\x0d\n    /* Unrecognized or broken escape sequence\x2C don't emit anything */\x0d\n  }\x0d\n}\x0d\n\x0d\n// This runs in O(n log n).\x0d\nfunction commonPrefix(strings) {\x0d\n  if (strings.length === 0) {\x0d\n    return '';\x0d\n  }\x0d\n  if (strings.length === 1) {\x0d\n    return strings[0];\x0d\n  }\x0d\n  const sorted = ArrayPrototypeSort(ArrayPrototypeSlice(strings));\x0d\n  const min = sorted[0];\x0d\n  const max = sorted[sorted.length - 1];\x0d\n  for (let i = 0; i < min.length; i++) {\x0d\n    if (min[i] !== max[i]) {\x0d\n      return StringPrototypeSlice(min\x2C 0\x2C i);\x0d\n    }\x0d\n  }\x0d\n  return min;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  charLengthAt\x2C\x0d\n  charLengthLeft\x2C\x0d\n  commonPrefix\x2C\x0d\n  emitKeys\x2C\x0d\n  kSubstringSearch\x2C\x0d\n  CSI\x2C\x0d\n};\x0d\n
code-source-info,0x66313ecee4,120,0,12802,C0O0C4O12802,,
code-creation,JS,10,209023,0x66313ed354,237, node:internal/readline/utils:1:1,0x66313ece58,~
code-source-info,0x66313ed354,120,0,12802,C0O0C61O28C67O52C73O75C79O99C85O122C91O152C97O183C103O208C109O239C114O301C120O301C122O338C124O338C126O372C129O372C134O609C136O621C140O664C144O664C148O659C152O696C156O696C160O691C164O723C168O723C172O718C176O756C180O756C184O751C188O12683C195O12705C201O12722C207O12741C213O12758C219O12771C225O12792C231O12698C236O12801,,
code-creation,JS,10,209314,0x66313ed71c,76,CSI node:internal/readline/utils:19:13,0x66313ecf18,~
code-source-info,0x66313ed71c,120,415,605,C0O415C8O449C20O480C22O495C26O485C31O515C33O529C43O552C47O545C52O567C54O578C64O504C69O467C73O591C75O602,,
code-creation,Eval,10,209572,0x66313ef104,5, node:internal/readline/emitKeypressEvents:1:1,0x66313eef00,~
script-source,121,node:internal/readline/emitKeypressEvents,'use strict';\x0d\n\x0d\nconst {\x0d\n  SafeStringIterator\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  charLengthAt\x2C\x0d\n  CSI\x2C\x0d\n  emitKeys\x2C\x0d\n} = require('internal/readline/utils');\x0d\nconst {\x0d\n  kSawKeyPress\x2C\x0d\n} = require('internal/readline/interface');\x0d\n\x0d\nconst { clearTimeout\x2C setTimeout } = require('timers');\x0d\nconst {\x0d\n  kEscape\x2C\x0d\n} = CSI;\x0d\n\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\n\x0d\nconst KEYPRESS_DECODER = Symbol('keypress-decoder');\x0d\nconst ESCAPE_DECODER = Symbol('escape-decoder');\x0d\n\x0d\n// GNU readline library - keyseq-timeout is 500ms (default)\x0d\nconst ESCAPE_CODE_TIMEOUT = 500;\x0d\n\x0d\n/**\x0d\n * accepts a readable Stream instance and makes it emit "keypress" events\x0d\n */\x0d\n\x0d\nfunction emitKeypressEvents(stream\x2C iface = {}) {\x0d\n  if (stream[KEYPRESS_DECODER]) return;\x0d\n\x0d\n  stream[KEYPRESS_DECODER] = new StringDecoder('utf8');\x0d\n\x0d\n  stream[ESCAPE_DECODER] = emitKeys(stream);\x0d\n  stream[ESCAPE_DECODER].next();\x0d\n\x0d\n  const triggerEscape = () => stream[ESCAPE_DECODER].next('');\x0d\n  const { escapeCodeTimeout = ESCAPE_CODE_TIMEOUT } = iface;\x0d\n  let timeoutId;\x0d\n\x0d\n  function onData(input) {\x0d\n    if (stream.listenerCount('keypress') > 0) {\x0d\n      const string = stream[KEYPRESS_DECODER].write(input);\x0d\n      if (string) {\x0d\n        clearTimeout(timeoutId);\x0d\n\x0d\n        // This supports characters of length 2.\x0d\n        iface[kSawKeyPress] = charLengthAt(string\x2C 0) === string.length;\x0d\n        iface.isCompletionEnabled = false;\x0d\n\x0d\n        let length = 0;\x0d\n        for (const character of new SafeStringIterator(string)) {\x0d\n          length += character.length;\x0d\n          if (length === string.length) {\x0d\n            iface.isCompletionEnabled = true;\x0d\n          }\x0d\n\x0d\n          try {\x0d\n            stream[ESCAPE_DECODER].next(character);\x0d\n            // Escape letter at the tail position\x0d\n            if (length === string.length && character === kEscape) {\x0d\n              timeoutId = setTimeout(triggerEscape\x2C escapeCodeTimeout);\x0d\n            }\x0d\n          } catch (err) {\x0d\n            // If the generator throws (it could happen in the `keypress`\x0d\n            // event)\x2C we need to restart it.\x0d\n            stream[ESCAPE_DECODER] = emitKeys(stream);\x0d\n            stream[ESCAPE_DECODER].next();\x0d\n            throw err;\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      // Nobody's watching anyway\x0d\n      stream.removeListener('data'\x2C onData);\x0d\n      stream.on('newListener'\x2C onNewListener);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function onNewListener(event) {\x0d\n    if (event === 'keypress') {\x0d\n      stream.on('data'\x2C onData);\x0d\n      stream.removeListener('newListener'\x2C onNewListener);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (stream.listenerCount('keypress') > 0) {\x0d\n    stream.on('data'\x2C onData);\x0d\n  } else {\x0d\n    stream.on('newListener'\x2C onNewListener);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = emitKeypressEvents;\x0d\n
code-source-info,0x66313ef104,121,0,2762,C0O0C4O2762,,
code-creation,JS,10,209827,0x66313ef29c,165, node:internal/readline/emitKeypressEvents:1:1,0x66313ef078,~
code-source-info,0x66313ef29c,121,0,2762,C0O0C43O28C49O51C54O131C57O131C62O91C68O108C73O116C79O198C82O198C87O179C93O278C96O278C101O249C107O263C113O309C119O357C122O357C127O339C133O412C136O412C140O412C142O464C145O464C149O464C151O582C155O582C157O2724C159O2739C164O2761,,
code-creation,Eval,10,210639,0x66313f409c,5, node:internal/readline/interface:1:1,0x66313f2bf0,~
script-source,122,node:internal/readline/interface,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePop\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReverse\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  DateNow\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  MathCeil\x2C\x0d\n  MathFloor\x2C\x0d\n  MathMax\x2C\x0d\n  MathMaxApply\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  StringPrototypeCodePointAt\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolDispose\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n  SafeStringIterator\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { codes } = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_USE_AFTER_CLOSE\x2C\x0d\n} = codes;\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateArray\x2C\x0d\n  validateNumber\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst { kEmptyObject } = require('internal/util');\x0d\nconst {\x0d\n  inspect\x2C\x0d\n  getStringWidth\x2C\x0d\n  stripVTControlCharacters\x2C\x0d\n} = require('internal/util/inspect');\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  charLengthAt\x2C\x0d\n  charLengthLeft\x2C\x0d\n  commonPrefix\x2C\x0d\n  kSubstringSearch\x2C\x0d\n} = require('internal/readline/utils');\x0d\nlet emitKeypressEvents;\x0d\nlet kFirstEventParam;\x0d\nconst {\x0d\n  clearScreenDown\x2C\x0d\n  cursorTo\x2C\x0d\n  moveCursor\x2C\x0d\n} = require('internal/readline/callbacks');\x0d\n\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\n\x0d\nconst kHistorySize = 30;\x0d\nconst kMaxUndoRedoStackSize = 2048;\x0d\nconst kMincrlfDelay = 100;\x0d\n// \\r\\n\x2C \\n\x2C or \\r followed by something other than \\n\x0d\nconst lineEnding = /\\r?\\n|\\r(?!\\n)/g;\x0d\n\x0d\nconst kLineObjectStream = Symbol('line object stream');\x0d\nconst kQuestionCancel = Symbol('kQuestionCancel');\x0d\nconst kQuestion = Symbol('kQuestion');\x0d\n\x0d\n// GNU readline library - keyseq-timeout is 500ms (default)\x0d\nconst ESCAPE_CODE_TIMEOUT = 500;\x0d\n\x0d\n// Max length of the kill ring\x0d\nconst kMaxLengthOfKillRing = 32;\x0d\n\x0d\nconst kAddHistory = Symbol('_addHistory');\x0d\nconst kBeforeEdit = Symbol('_beforeEdit');\x0d\nconst kDecoder = Symbol('_decoder');\x0d\nconst kDeleteLeft = Symbol('_deleteLeft');\x0d\nconst kDeleteLineLeft = Symbol('_deleteLineLeft');\x0d\nconst kDeleteLineRight = Symbol('_deleteLineRight');\x0d\nconst kDeleteRight = Symbol('_deleteRight');\x0d\nconst kDeleteWordLeft = Symbol('_deleteWordLeft');\x0d\nconst kDeleteWordRight = Symbol('_deleteWordRight');\x0d\nconst kGetDisplayPos = Symbol('_getDisplayPos');\x0d\nconst kHistoryNext = Symbol('_historyNext');\x0d\nconst kHistoryPrev = Symbol('_historyPrev');\x0d\nconst kInsertString = Symbol('_insertString');\x0d\nconst kLine = Symbol('_line');\x0d\nconst kLine_buffer = Symbol('_line_buffer');\x0d\nconst kKillRing = Symbol('_killRing');\x0d\nconst kKillRingCursor = Symbol('_killRingCursor');\x0d\nconst kMoveCursor = Symbol('_moveCursor');\x0d\nconst kNormalWrite = Symbol('_normalWrite');\x0d\nconst kOldPrompt = Symbol('_oldPrompt');\x0d\nconst kOnLine = Symbol('_onLine');\x0d\nconst kPreviousKey = Symbol('_previousKey');\x0d\nconst kPrompt = Symbol('_prompt');\x0d\nconst kPushToKillRing = Symbol('_pushToKillRing');\x0d\nconst kPushToUndoStack = Symbol('_pushToUndoStack');\x0d\nconst kQuestionCallback = Symbol('_questionCallback');\x0d\nconst kRedo = Symbol('_redo');\x0d\nconst kRedoStack = Symbol('_redoStack');\x0d\nconst kRefreshLine = Symbol('_refreshLine');\x0d\nconst kSawKeyPress = Symbol('_sawKeyPress');\x0d\nconst kSawReturnAt = Symbol('_sawReturnAt');\x0d\nconst kSetRawMode = Symbol('_setRawMode');\x0d\nconst kTabComplete = Symbol('_tabComplete');\x0d\nconst kTabCompleter = Symbol('_tabCompleter');\x0d\nconst kTtyWrite = Symbol('_ttyWrite');\x0d\nconst kUndo = Symbol('_undo');\x0d\nconst kUndoStack = Symbol('_undoStack');\x0d\nconst kWordLeft = Symbol('_wordLeft');\x0d\nconst kWordRight = Symbol('_wordRight');\x0d\nconst kWriteToOutput = Symbol('_writeToOutput');\x0d\nconst kYank = Symbol('_yank');\x0d\nconst kYanking = Symbol('_yanking');\x0d\nconst kYankPop = Symbol('_yankPop');\x0d\n\x0d\nfunction InterfaceConstructor(input\x2C output\x2C completer\x2C terminal) {\x0d\n  this[kSawReturnAt] = 0;\x0d\n  // TODO(BridgeAR): Document this property. The name is not ideal\x2C so we\x0d\n  // might want to expose an alias and document that instead.\x0d\n  this.isCompletionEnabled = true;\x0d\n  this[kSawKeyPress] = false;\x0d\n  this[kPreviousKey] = null;\x0d\n  this.escapeCodeTimeout = ESCAPE_CODE_TIMEOUT;\x0d\n  this.tabSize = 8;\x0d\n\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n\x0d\n  let history;\x0d\n  let historySize;\x0d\n  let removeHistoryDuplicates = false;\x0d\n  let crlfDelay;\x0d\n  let prompt = '> ';\x0d\n  let signal;\x0d\n\x0d\n  if (input?.input) {\x0d\n    // An options object was given\x0d\n    output = input.output;\x0d\n    completer = input.completer;\x0d\n    terminal = input.terminal;\x0d\n    history = input.history;\x0d\n    historySize = input.historySize;\x0d\n    signal = input.signal;\x0d\n    if (input.tabSize !== undefined) {\x0d\n      validateUint32(input.tabSize\x2C 'tabSize'\x2C true);\x0d\n      this.tabSize = input.tabSize;\x0d\n    }\x0d\n    removeHistoryDuplicates = input.removeHistoryDuplicates;\x0d\n    if (input.prompt !== undefined) {\x0d\n      prompt = input.prompt;\x0d\n    }\x0d\n    if (input.escapeCodeTimeout !== undefined) {\x0d\n      if (NumberIsFinite(input.escapeCodeTimeout)) {\x0d\n        this.escapeCodeTimeout = input.escapeCodeTimeout;\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_VALUE(\x0d\n          'input.escapeCodeTimeout'\x2C\x0d\n          this.escapeCodeTimeout\x2C\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (signal) {\x0d\n      validateAbortSignal(signal\x2C 'options.signal');\x0d\n    }\x0d\n\x0d\n    crlfDelay = input.crlfDelay;\x0d\n    input = input.input;\x0d\n  }\x0d\n\x0d\n  if (completer !== undefined && typeof completer !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('completer'\x2C completer);\x0d\n  }\x0d\n\x0d\n  if (history === undefined) {\x0d\n    history = [];\x0d\n  } else {\x0d\n    validateArray(history\x2C 'history');\x0d\n  }\x0d\n\x0d\n  if (historySize === undefined) {\x0d\n    historySize = kHistorySize;\x0d\n  }\x0d\n\x0d\n  validateNumber(historySize\x2C 'historySize'\x2C 0);\x0d\n\x0d\n  // Backwards compat; check the isTTY prop of the output stream\x0d\n  //  when `terminal` was not specified\x0d\n  if (terminal === undefined && !(output === null || output === undefined)) {\x0d\n    terminal = !!output.isTTY;\x0d\n  }\x0d\n\x0d\n  const self = this;\x0d\n\x0d\n  this.line = '';\x0d\n  this[kSubstringSearch] = null;\x0d\n  this.output = output;\x0d\n  this.input = input;\x0d\n  this[kUndoStack] = [];\x0d\n  this[kRedoStack] = [];\x0d\n  this.history = history;\x0d\n  this.historySize = historySize;\x0d\n\x0d\n  // The kill ring is a global list of blocks of text that were previously\x0d\n  // killed (deleted). If its size exceeds kMaxLengthOfKillRing\x2C the oldest\x0d\n  // element will be removed to make room for the latest deletion. With kill\x0d\n  // ring\x2C users are able to recall (yank) or cycle (yank pop) among previously\x0d\n  // killed texts\x2C quite similar to the behavior of Emacs.\x0d\n  this[kKillRing] = [];\x0d\n  this[kKillRingCursor] = 0;\x0d\n\x0d\n  this.removeHistoryDuplicates = !!removeHistoryDuplicates;\x0d\n  this.crlfDelay = crlfDelay ?\x0d\n    MathMax(kMincrlfDelay\x2C crlfDelay) :\x0d\n    kMincrlfDelay;\x0d\n  this.completer = completer;\x0d\n\x0d\n  this.setPrompt(prompt);\x0d\n\x0d\n  this.terminal = !!terminal;\x0d\n\x0d\n\x0d\n  function onerror(err) {\x0d\n    self.emit('error'\x2C err);\x0d\n  }\x0d\n\x0d\n  function ondata(data) {\x0d\n    self[kNormalWrite](data);\x0d\n  }\x0d\n\x0d\n  function onend() {\x0d\n    if (\x0d\n      typeof self[kLine_buffer] === 'string' &&\x0d\n        self[kLine_buffer].length > 0\x0d\n    ) {\x0d\n      self.emit('line'\x2C self[kLine_buffer]);\x0d\n    }\x0d\n    self.close();\x0d\n  }\x0d\n\x0d\n  function ontermend() {\x0d\n    if (typeof self.line === 'string' && self.line.length > 0) {\x0d\n      self.emit('line'\x2C self.line);\x0d\n    }\x0d\n    self.close();\x0d\n  }\x0d\n\x0d\n  function onkeypress(s\x2C key) {\x0d\n    self[kTtyWrite](s\x2C key);\x0d\n    if (key && key.sequence) {\x0d\n      // If the key.sequence is half of a surrogate pair\x0d\n      // (>= 0xd800 and <= 0xdfff)\x2C refresh the line so\x0d\n      // the character is displayed appropriately.\x0d\n      const ch = StringPrototypeCodePointAt(key.sequence\x2C 0);\x0d\n      if (ch >= 0xd800 && ch <= 0xdfff) self[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function onresize() {\x0d\n    self[kRefreshLine]();\x0d\n  }\x0d\n\x0d\n  this[kLineObjectStream] = undefined;\x0d\n\x0d\n  input.on('error'\x2C onerror);\x0d\n\x0d\n  if (!this.terminal) {\x0d\n    function onSelfCloseWithoutTerminal() {\x0d\n      input.removeListener('data'\x2C ondata);\x0d\n      input.removeListener('error'\x2C onerror);\x0d\n      input.removeListener('end'\x2C onend);\x0d\n    }\x0d\n\x0d\n    input.on('data'\x2C ondata);\x0d\n    input.on('end'\x2C onend);\x0d\n    self.once('close'\x2C onSelfCloseWithoutTerminal);\x0d\n    this[kDecoder] = new StringDecoder('utf8');\x0d\n  } else {\x0d\n    function onSelfCloseWithTerminal() {\x0d\n      input.removeListener('keypress'\x2C onkeypress);\x0d\n      input.removeListener('error'\x2C onerror);\x0d\n      input.removeListener('end'\x2C ontermend);\x0d\n      if (output !== null && output !== undefined) {\x0d\n        output.removeListener('resize'\x2C onresize);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    emitKeypressEvents ??= require('internal/readline/emitKeypressEvents');\x0d\n    emitKeypressEvents(input\x2C this);\x0d\n\x0d\n    // `input` usually refers to stdin\x0d\n    input.on('keypress'\x2C onkeypress);\x0d\n    input.on('end'\x2C ontermend);\x0d\n\x0d\n    this[kSetRawMode](true);\x0d\n    this.terminal = true;\x0d\n\x0d\n    // Cursor position on the line.\x0d\n    this.cursor = 0;\x0d\n\x0d\n    this.historyIndex = -1;\x0d\n\x0d\n    if (output !== null && output !== undefined)\x0d\n      output.on('resize'\x2C onresize);\x0d\n\x0d\n    self.once('close'\x2C onSelfCloseWithTerminal);\x0d\n  }\x0d\n\x0d\n  if (signal) {\x0d\n    const onAborted = () => self.close();\x0d\n    if (signal.aborted) {\x0d\n      process.nextTick(onAborted);\x0d\n    } else {\x0d\n      const disposable = EventEmitter.addAbortListener(signal\x2C onAborted);\x0d\n      self.once('close'\x2C disposable[SymbolDispose]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Current line\x0d\n  this.line = '';\x0d\n\x0d\n  input.resume();\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(InterfaceConstructor.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(InterfaceConstructor\x2C EventEmitter);\x0d\n\x0d\nclass Interface extends InterfaceConstructor {\x0d\n  // eslint-disable-next-line no-useless-constructor\x0d\n  constructor(input\x2C output\x2C completer\x2C terminal) {\x0d\n    super(input\x2C output\x2C completer\x2C terminal);\x0d\n  }\x0d\n  get columns() {\x0d\n    if (this.output && this.output.columns) return this.output.columns;\x0d\n    return Infinity;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Sets the prompt written to the output.\x0d\n   * @param {string} prompt\x0d\n   * @returns {void}\x0d\n   */\x0d\n  setPrompt(prompt) {\x0d\n    this[kPrompt] = prompt;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Returns the current prompt used by `rl.prompt()`.\x0d\n   * @returns {string}\x0d\n   */\x0d\n  getPrompt() {\x0d\n    return this[kPrompt];\x0d\n  }\x0d\n\x0d\n  [kSetRawMode](mode) {\x0d\n    const wasInRawMode = this.input.isRaw;\x0d\n\x0d\n    if (typeof this.input.setRawMode === 'function') {\x0d\n      this.input.setRawMode(mode);\x0d\n    }\x0d\n\x0d\n    return wasInRawMode;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Writes the configured `prompt` to a new line in `output`.\x0d\n   * @param {boolean} [preserveCursor]\x0d\n   * @returns {void}\x0d\n   */\x0d\n  prompt(preserveCursor) {\x0d\n    if (this.paused) this.resume();\x0d\n    if (this.terminal && process.env.TERM !== 'dumb') {\x0d\n      if (!preserveCursor) this.cursor = 0;\x0d\n      this[kRefreshLine]();\x0d\n    } else {\x0d\n      this[kWriteToOutput](this[kPrompt]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kQuestion](query\x2C cb) {\x0d\n    if (this.closed) {\x0d\n      throw new ERR_USE_AFTER_CLOSE('readline');\x0d\n    }\x0d\n    if (this[kQuestionCallback]) {\x0d\n      this.prompt();\x0d\n    } else {\x0d\n      this[kOldPrompt] = this[kPrompt];\x0d\n      this.setPrompt(query);\x0d\n      this[kQuestionCallback] = cb;\x0d\n      this.prompt();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kOnLine](line) {\x0d\n    if (this[kQuestionCallback]) {\x0d\n      const cb = this[kQuestionCallback];\x0d\n      this[kQuestionCallback] = null;\x0d\n      this.setPrompt(this[kOldPrompt]);\x0d\n      cb(line);\x0d\n    } else {\x0d\n      this.emit('line'\x2C line);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kBeforeEdit](oldText\x2C oldCursor) {\x0d\n    this[kPushToUndoStack](oldText\x2C oldCursor);\x0d\n  }\x0d\n\x0d\n  [kQuestionCancel]() {\x0d\n    if (this[kQuestionCallback]) {\x0d\n      this[kQuestionCallback] = null;\x0d\n      this.setPrompt(this[kOldPrompt]);\x0d\n      this.clearLine();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kWriteToOutput](stringToWrite) {\x0d\n    validateString(stringToWrite\x2C 'stringToWrite');\x0d\n\x0d\n    if (this.output !== null && this.output !== undefined) {\x0d\n      this.output.write(stringToWrite);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kAddHistory]() {\x0d\n    if (this.line.length === 0) return '';\x0d\n\x0d\n    // If the history is disabled then return the line\x0d\n    if (this.historySize === 0) return this.line;\x0d\n\x0d\n    // If the trimmed line is empty then return the line\x0d\n    if (StringPrototypeTrim(this.line).length === 0) return this.line;\x0d\n\x0d\n    if (this.history.length === 0 || this.history[0] !== this.line) {\x0d\n      if (this.removeHistoryDuplicates) {\x0d\n        // Remove older history line if identical to new one\x0d\n        const dupIndex = ArrayPrototypeIndexOf(this.history\x2C this.line);\x0d\n        if (dupIndex !== -1) ArrayPrototypeSplice(this.history\x2C dupIndex\x2C 1);\x0d\n      }\x0d\n\x0d\n      ArrayPrototypeUnshift(this.history\x2C this.line);\x0d\n\x0d\n      // Only store so many\x0d\n      if (this.history.length > this.historySize)\x0d\n        ArrayPrototypePop(this.history);\x0d\n    }\x0d\n\x0d\n    this.historyIndex = -1;\x0d\n\x0d\n    // The listener could change the history object\x2C possibly\x0d\n    // to remove the last added entry if it is sensitive and should\x0d\n    // not be persisted in the history\x2C like a password\x0d\n    const line = this.history[0];\x0d\n\x0d\n    // Emit history event to notify listeners of update\x0d\n    this.emit('history'\x2C this.history);\x0d\n\x0d\n    return line;\x0d\n  }\x0d\n\x0d\n  [kRefreshLine]() {\x0d\n    // line length\x0d\n    const line = this[kPrompt] + this.line;\x0d\n    const dispPos = this[kGetDisplayPos](line);\x0d\n    const lineCols = dispPos.cols;\x0d\n    const lineRows = dispPos.rows;\x0d\n\x0d\n    // cursor position\x0d\n    const cursorPos = this.getCursorPos();\x0d\n\x0d\n    // First move to the bottom of the current line\x2C based on cursor pos\x0d\n    const prevRows = this.prevRows || 0;\x0d\n    if (prevRows > 0) {\x0d\n      moveCursor(this.output\x2C 0\x2C -prevRows);\x0d\n    }\x0d\n\x0d\n    // Cursor to left edge.\x0d\n    cursorTo(this.output\x2C 0);\x0d\n    // erase data\x0d\n    clearScreenDown(this.output);\x0d\n\x0d\n    // Write the prompt and the current buffer content.\x0d\n    this[kWriteToOutput](line);\x0d\n\x0d\n    // Force terminal to allocate a new line\x0d\n    if (lineCols === 0) {\x0d\n      this[kWriteToOutput](' ');\x0d\n    }\x0d\n\x0d\n    // Move cursor to original position.\x0d\n    cursorTo(this.output\x2C cursorPos.cols);\x0d\n\x0d\n    const diff = lineRows - cursorPos.rows;\x0d\n    if (diff > 0) {\x0d\n      moveCursor(this.output\x2C 0\x2C -diff);\x0d\n    }\x0d\n\x0d\n    this.prevRows = cursorPos.rows;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Closes the `readline.Interface` instance.\x0d\n   * @returns {void}\x0d\n   */\x0d\n  close() {\x0d\n    if (this.closed) return;\x0d\n    this.pause();\x0d\n    if (this.terminal) {\x0d\n      this[kSetRawMode](false);\x0d\n    }\x0d\n    this.closed = true;\x0d\n    this.emit('close');\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Pauses the `input` stream.\x0d\n   * @returns {void | Interface}\x0d\n   */\x0d\n  pause() {\x0d\n    if (this.paused) return;\x0d\n    this.input.pause();\x0d\n    this.paused = true;\x0d\n    this.emit('pause');\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Resumes the `input` stream if paused.\x0d\n   * @returns {void | Interface}\x0d\n   */\x0d\n  resume() {\x0d\n    if (!this.paused) return;\x0d\n    this.input.resume();\x0d\n    this.paused = false;\x0d\n    this.emit('resume');\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Writes either `data` or a `key` sequence identified by\x0d\n   * `key` to the `output`.\x0d\n   * @param {string} d\x0d\n   * @param {{\x0d\n   *   ctrl?: boolean;\x0d\n   *   meta?: boolean;\x0d\n   *   shift?: boolean;\x0d\n   *   name?: string;\x0d\n   *   }} [key]\x0d\n   * @returns {void}\x0d\n   */\x0d\n  write(d\x2C key) {\x0d\n    if (this.paused) this.resume();\x0d\n    if (this.terminal) {\x0d\n      this[kTtyWrite](d\x2C key);\x0d\n    } else {\x0d\n      this[kNormalWrite](d);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kNormalWrite](b) {\x0d\n    if (b === undefined) {\x0d\n      return;\x0d\n    }\x0d\n    let string = this[kDecoder].write(b);\x0d\n    if (\x0d\n      this[kSawReturnAt] &&\x0d\n      DateNow() - this[kSawReturnAt] <= this.crlfDelay\x0d\n    ) {\x0d\n      if (StringPrototypeCodePointAt(string) === 10) string = StringPrototypeSlice(string\x2C 1);\x0d\n      this[kSawReturnAt] = 0;\x0d\n    }\x0d\n\x0d\n    // Run test() on the new string chunk\x2C not on the entire line buffer.\x0d\n    let newPartContainsEnding = RegExpPrototypeExec(lineEnding\x2C string);\x0d\n    if (newPartContainsEnding !== null) {\x0d\n      if (this[kLine_buffer]) {\x0d\n        string = this[kLine_buffer] + string;\x0d\n        this[kLine_buffer] = null;\x0d\n        lineEnding.lastIndex = 0; // Start the search from the beginning of the string.\x0d\n        newPartContainsEnding = RegExpPrototypeExec(lineEnding\x2C string);\x0d\n      }\x0d\n      this[kSawReturnAt] = StringPrototypeEndsWith(string\x2C '\\r') ?\x0d\n        DateNow() :\x0d\n        0;\x0d\n\x0d\n      const indexes = [0\x2C newPartContainsEnding.index\x2C lineEnding.lastIndex];\x0d\n      let nextMatch;\x0d\n      while ((nextMatch = RegExpPrototypeExec(lineEnding\x2C string)) !== null) {\x0d\n        ArrayPrototypePush(indexes\x2C nextMatch.index\x2C lineEnding.lastIndex);\x0d\n      }\x0d\n      const lastIndex = indexes.length - 1;\x0d\n      // Either '' or (conceivably) the unfinished portion of the next line\x0d\n      this[kLine_buffer] = StringPrototypeSlice(string\x2C indexes[lastIndex]);\x0d\n      for (let i = 1; i < lastIndex; i += 2) {\x0d\n        this[kOnLine](StringPrototypeSlice(string\x2C indexes[i - 1]\x2C indexes[i]));\x0d\n      }\x0d\n    } else if (string) {\x0d\n      // No newlines this time\x2C save what we have for next time\x0d\n      if (this[kLine_buffer]) {\x0d\n        this[kLine_buffer] += string;\x0d\n      } else {\x0d\n        this[kLine_buffer] = string;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kInsertString](c) {\x0d\n    this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n    if (this.cursor < this.line.length) {\x0d\n      const beg = StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\x0d\n      const end = StringPrototypeSlice(\x0d\n        this.line\x2C\x0d\n        this.cursor\x2C\x0d\n        this.line.length\x2C\x0d\n      );\x0d\n      this.line = beg + c + end;\x0d\n      this.cursor += c.length;\x0d\n      this[kRefreshLine]();\x0d\n    } else {\x0d\n      const oldPos = this.getCursorPos();\x0d\n      this.line += c;\x0d\n      this.cursor += c.length;\x0d\n      const newPos = this.getCursorPos();\x0d\n\x0d\n      if (oldPos.rows < newPos.rows) {\x0d\n        this[kRefreshLine]();\x0d\n      } else {\x0d\n        this[kWriteToOutput](c);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  async [kTabComplete](lastKeypressWasTab) {\x0d\n    this.pause();\x0d\n    const string = StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\x0d\n    let value;\x0d\n    try {\x0d\n      value = await this.completer(string);\x0d\n    } catch (err) {\x0d\n      this[kWriteToOutput](`Tab completion error: ${inspect(err)}`);\x0d\n      return;\x0d\n    } finally {\x0d\n      this.resume();\x0d\n    }\x0d\n    this[kTabCompleter](lastKeypressWasTab\x2C value);\x0d\n  }\x0d\n\x0d\n  [kTabCompleter](lastKeypressWasTab\x2C { 0: completions\x2C 1: completeOn }) {\x0d\n    // Result and the text that was completed.\x0d\n\x0d\n    if (!completions || completions.length === 0) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    // If there is a common prefix to all matches\x2C then apply that portion.\x0d\n    const prefix = commonPrefix(\x0d\n      ArrayPrototypeFilter(completions\x2C (e) => e !== '')\x2C\x0d\n    );\x0d\n    if (StringPrototypeStartsWith(prefix\x2C completeOn) &&\x0d\n        prefix.length > completeOn.length) {\x0d\n      this[kInsertString](StringPrototypeSlice(prefix\x2C completeOn.length));\x0d\n      return;\x0d\n    } else if (!StringPrototypeStartsWith(completeOn\x2C prefix)) {\x0d\n      this.line = StringPrototypeSlice(this.line\x2C\x0d\n                                       0\x2C\x0d\n                                       this.cursor - completeOn.length) +\x0d\n                  prefix +\x0d\n                  StringPrototypeSlice(this.line\x2C\x0d\n                                       this.cursor\x2C\x0d\n                                       this.line.length);\x0d\n      this.cursor = this.cursor - completeOn.length + prefix.length;\x0d\n      this._refreshLine();\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (!lastKeypressWasTab) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n\x0d\n    // Apply/show completions.\x0d\n    const completionsWidth = ArrayPrototypeMap(completions\x2C (e) =>\x0d\n      getStringWidth(e)\x2C\x0d\n    );\x0d\n    const width = MathMaxApply(completionsWidth) + 2; // 2 space padding\x0d\n    let maxColumns = MathFloor(this.columns / width) || 1;\x0d\n    if (maxColumns === Infinity) {\x0d\n      maxColumns = 1;\x0d\n    }\x0d\n    let output = '\\r\\n';\x0d\n    let lineIndex = 0;\x0d\n    let whitespace = 0;\x0d\n    for (let i = 0; i < completions.length; i++) {\x0d\n      const completion = completions[i];\x0d\n      if (completion === '' || lineIndex === maxColumns) {\x0d\n        output += '\\r\\n';\x0d\n        lineIndex = 0;\x0d\n        whitespace = 0;\x0d\n      } else {\x0d\n        output += StringPrototypeRepeat(' '\x2C whitespace);\x0d\n      }\x0d\n      if (completion !== '') {\x0d\n        output += completion;\x0d\n        whitespace = width - completionsWidth[i];\x0d\n        lineIndex++;\x0d\n      } else {\x0d\n        output += '\\r\\n';\x0d\n      }\x0d\n    }\x0d\n    if (lineIndex !== 0) {\x0d\n      output += '\\r\\n\\r\\n';\x0d\n    }\x0d\n    this[kWriteToOutput](output);\x0d\n    this[kRefreshLine]();\x0d\n  }\x0d\n\x0d\n  [kWordLeft]() {\x0d\n    if (this.cursor > 0) {\x0d\n      // Reverse the string and match a word near beginning\x0d\n      // to avoid quadratic time complexity\x0d\n      const leading = StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\x0d\n      const reversed = ArrayPrototypeJoin(\x0d\n        ArrayPrototypeReverse(ArrayFrom(leading))\x2C\x0d\n        ''\x2C\x0d\n      );\x0d\n      const match = RegExpPrototypeExec(/^\\s*(?:[^\\w\\s]+|\\w+)?/\x2C reversed);\x0d\n      this[kMoveCursor](-match[0].length);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kWordRight]() {\x0d\n    if (this.cursor < this.line.length) {\x0d\n      const trailing = StringPrototypeSlice(this.line\x2C this.cursor);\x0d\n      const match = RegExpPrototypeExec(/^(?:\\s+|[^\\w\\s]+|\\w+)\\s*/\x2C trailing);\x0d\n      this[kMoveCursor](match[0].length);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kDeleteLeft]() {\x0d\n    if (this.cursor > 0 && this.line.length > 0) {\x0d\n      this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n      // The number of UTF-16 units comprising the character to the left\x0d\n      const charSize = charLengthLeft(this.line\x2C this.cursor);\x0d\n      this.line =\x0d\n        StringPrototypeSlice(this.line\x2C 0\x2C this.cursor - charSize) +\x0d\n        StringPrototypeSlice(this.line\x2C this.cursor\x2C this.line.length);\x0d\n\x0d\n      this.cursor -= charSize;\x0d\n      this[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kDeleteRight]() {\x0d\n    if (this.cursor < this.line.length) {\x0d\n      this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n      // The number of UTF-16 units comprising the character to the left\x0d\n      const charSize = charLengthAt(this.line\x2C this.cursor);\x0d\n      this.line =\x0d\n        StringPrototypeSlice(this.line\x2C 0\x2C this.cursor) +\x0d\n        StringPrototypeSlice(\x0d\n          this.line\x2C\x0d\n          this.cursor + charSize\x2C\x0d\n          this.line.length\x2C\x0d\n        );\x0d\n      this[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kDeleteWordLeft]() {\x0d\n    if (this.cursor > 0) {\x0d\n      this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n      // Reverse the string and match a word near beginning\x0d\n      // to avoid quadratic time complexity\x0d\n      let leading = StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\x0d\n      const reversed = ArrayPrototypeJoin(\x0d\n        ArrayPrototypeReverse(ArrayFrom(leading))\x2C\x0d\n        ''\x2C\x0d\n      );\x0d\n      const match = RegExpPrototypeExec(/^\\s*(?:[^\\w\\s]+|\\w+)?/\x2C reversed);\x0d\n      leading = StringPrototypeSlice(\x0d\n        leading\x2C\x0d\n        0\x2C\x0d\n        leading.length - match[0].length\x2C\x0d\n      );\x0d\n      this.line =\x0d\n        leading +\x0d\n        StringPrototypeSlice(this.line\x2C this.cursor\x2C this.line.length);\x0d\n      this.cursor = leading.length;\x0d\n      this[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kDeleteWordRight]() {\x0d\n    if (this.cursor < this.line.length) {\x0d\n      this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n      const trailing = StringPrototypeSlice(this.line\x2C this.cursor);\x0d\n      const match = RegExpPrototypeExec(/^(?:\\s+|\\W+|\\w+)\\s*/\x2C trailing);\x0d\n      this.line =\x0d\n        StringPrototypeSlice(this.line\x2C 0\x2C this.cursor) +\x0d\n        StringPrototypeSlice(trailing\x2C match[0].length);\x0d\n      this[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kDeleteLineLeft]() {\x0d\n    this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n    const del = StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\x0d\n    this.line = StringPrototypeSlice(this.line\x2C this.cursor);\x0d\n    this.cursor = 0;\x0d\n    this[kPushToKillRing](del);\x0d\n    this[kRefreshLine]();\x0d\n  }\x0d\n\x0d\n  [kDeleteLineRight]() {\x0d\n    this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n    const del = StringPrototypeSlice(this.line\x2C this.cursor);\x0d\n    this.line = StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\x0d\n    this[kPushToKillRing](del);\x0d\n    this[kRefreshLine]();\x0d\n  }\x0d\n\x0d\n  [kPushToKillRing](del) {\x0d\n    if (!del || del === this[kKillRing][0]) return;\x0d\n    ArrayPrototypeUnshift(this[kKillRing]\x2C del);\x0d\n    this[kKillRingCursor] = 0;\x0d\n    while (this[kKillRing].length > kMaxLengthOfKillRing)\x0d\n      ArrayPrototypePop(this[kKillRing]);\x0d\n  }\x0d\n\x0d\n  [kYank]() {\x0d\n    if (this[kKillRing].length > 0) {\x0d\n      this[kYanking] = true;\x0d\n      this[kInsertString](this[kKillRing][this[kKillRingCursor]]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kYankPop]() {\x0d\n    if (!this[kYanking]) {\x0d\n      return;\x0d\n    }\x0d\n    if (this[kKillRing].length > 1) {\x0d\n      const lastYank = this[kKillRing][this[kKillRingCursor]];\x0d\n      this[kKillRingCursor]++;\x0d\n      if (this[kKillRingCursor] >= this[kKillRing].length) {\x0d\n        this[kKillRingCursor] = 0;\x0d\n      }\x0d\n      const currentYank = this[kKillRing][this[kKillRingCursor]];\x0d\n      const head =\x0d\n            StringPrototypeSlice(this.line\x2C 0\x2C this.cursor - lastYank.length);\x0d\n      const tail =\x0d\n            StringPrototypeSlice(this.line\x2C this.cursor);\x0d\n      this.line = head + currentYank + tail;\x0d\n      this.cursor = head.length + currentYank.length;\x0d\n      this[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  clearLine() {\x0d\n    this[kMoveCursor](+Infinity);\x0d\n    this[kWriteToOutput]('\\r\\n');\x0d\n    this.line = '';\x0d\n    this.cursor = 0;\x0d\n    this.prevRows = 0;\x0d\n  }\x0d\n\x0d\n  [kLine]() {\x0d\n    const line = this[kAddHistory]();\x0d\n    this[kUndoStack] = [];\x0d\n    this[kRedoStack] = [];\x0d\n    this.clearLine();\x0d\n    this[kOnLine](line);\x0d\n  }\x0d\n\x0d\n  [kPushToUndoStack](text\x2C cursor) {\x0d\n    if (ArrayPrototypePush(this[kUndoStack]\x2C { text\x2C cursor }) >\x0d\n        kMaxUndoRedoStackSize) {\x0d\n      ArrayPrototypeShift(this[kUndoStack]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kUndo]() {\x0d\n    if (this[kUndoStack].length <= 0) return;\x0d\n\x0d\n    ArrayPrototypePush(\x0d\n      this[kRedoStack]\x2C\x0d\n      { text: this.line\x2C cursor: this.cursor }\x2C\x0d\n    );\x0d\n\x0d\n    const entry = ArrayPrototypePop(this[kUndoStack]);\x0d\n    this.line = entry.text;\x0d\n    this.cursor = entry.cursor;\x0d\n\x0d\n    this[kRefreshLine]();\x0d\n  }\x0d\n\x0d\n  [kRedo]() {\x0d\n    if (this[kRedoStack].length <= 0) return;\x0d\n\x0d\n    ArrayPrototypePush(\x0d\n      this[kUndoStack]\x2C\x0d\n      { text: this.line\x2C cursor: this.cursor }\x2C\x0d\n    );\x0d\n\x0d\n    const entry = ArrayPrototypePop(this[kRedoStack]);\x0d\n    this.line = entry.text;\x0d\n    this.cursor = entry.cursor;\x0d\n\x0d\n    this[kRefreshLine]();\x0d\n  }\x0d\n\x0d\n  // TODO(BridgeAR): Add underscores to the search part and a red background in\x0d\n  // case no match is found. This should only be the visual part and not the\x0d\n  // actual line content!\x0d\n  // TODO(BridgeAR): In case the substring based search is active and the end is\x0d\n  // reached\x2C show a comment how to search the history as before. E.g.\x2C using\x0d\n  // <ctrl> + N. Only show this after two/three UPs or DOWNs\x2C not on the first\x0d\n  // one.\x0d\n  [kHistoryNext]() {\x0d\n    if (this.historyIndex >= 0) {\x0d\n      this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n      const search = this[kSubstringSearch] || '';\x0d\n      let index = this.historyIndex - 1;\x0d\n      while (\x0d\n        index >= 0 &&\x0d\n        (!StringPrototypeStartsWith(this.history[index]\x2C search) ||\x0d\n          this.line === this.history[index])\x0d\n      ) {\x0d\n        index--;\x0d\n      }\x0d\n      if (index === -1) {\x0d\n        this.line = search;\x0d\n      } else {\x0d\n        this.line = this.history[index];\x0d\n      }\x0d\n      this.historyIndex = index;\x0d\n      this.cursor = this.line.length; // Set cursor to end of line.\x0d\n      this[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kHistoryPrev]() {\x0d\n    if (this.historyIndex < this.history.length && this.history.length) {\x0d\n      this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n      const search = this[kSubstringSearch] || '';\x0d\n      let index = this.historyIndex + 1;\x0d\n      while (\x0d\n        index < this.history.length &&\x0d\n        (!StringPrototypeStartsWith(this.history[index]\x2C search) ||\x0d\n          this.line === this.history[index])\x0d\n      ) {\x0d\n        index++;\x0d\n      }\x0d\n      if (index === this.history.length) {\x0d\n        this.line = search;\x0d\n      } else {\x0d\n        this.line = this.history[index];\x0d\n      }\x0d\n      this.historyIndex = index;\x0d\n      this.cursor = this.line.length; // Set cursor to end of line.\x0d\n      this[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Returns the last character's display position of the given string\x0d\n  [kGetDisplayPos](str) {\x0d\n    let offset = 0;\x0d\n    const col = this.columns;\x0d\n    let rows = 0;\x0d\n    str = stripVTControlCharacters(str);\x0d\n    for (const char of new SafeStringIterator(str)) {\x0d\n      if (char === '\\n') {\x0d\n        // Rows must be incremented by 1 even if offset = 0 or col = +Infinity.\x0d\n        rows += MathCeil(offset / col) || 1;\x0d\n        offset = 0;\x0d\n        continue;\x0d\n      }\x0d\n      // Tabs must be aligned by an offset of the tab size.\x0d\n      if (char === '\\t') {\x0d\n        offset += this.tabSize - (offset % this.tabSize);\x0d\n        continue;\x0d\n      }\x0d\n      const width = getStringWidth(char\x2C false /* stripVTControlCharacters */);\x0d\n      if (width === 0 || width === 1) {\x0d\n        offset += width;\x0d\n      } else {\x0d\n        // width === 2\x0d\n        if ((offset + 1) % col === 0) {\x0d\n          offset++;\x0d\n        }\x0d\n        offset += 2;\x0d\n      }\x0d\n    }\x0d\n    const cols = offset % col;\x0d\n    rows += (offset - cols) / col;\x0d\n    return { cols\x2C rows };\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Returns the real position of the cursor in relation\x0d\n   * to the input prompt + string.\x0d\n   * @returns {{\x0d\n   *   rows: number;\x0d\n   *   cols: number;\x0d\n   *   }}\x0d\n   */\x0d\n  getCursorPos() {\x0d\n    const strBeforeCursor =\x0d\n      this[kPrompt] + StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\x0d\n    return this[kGetDisplayPos](strBeforeCursor);\x0d\n  }\x0d\n\x0d\n  // This function moves cursor dx places to the right\x0d\n  // (-dx for left) and refreshes the line if it is needed.\x0d\n  [kMoveCursor](dx) {\x0d\n    if (dx === 0) {\x0d\n      return;\x0d\n    }\x0d\n    const oldPos = this.getCursorPos();\x0d\n    this.cursor += dx;\x0d\n\x0d\n    // Bounds check\x0d\n    if (this.cursor < 0) {\x0d\n      this.cursor = 0;\x0d\n    } else if (this.cursor > this.line.length) {\x0d\n      this.cursor = this.line.length;\x0d\n    }\x0d\n\x0d\n    const newPos = this.getCursorPos();\x0d\n\x0d\n    // Check if cursor stayed on the line.\x0d\n    if (oldPos.rows === newPos.rows) {\x0d\n      const diffWidth = newPos.cols - oldPos.cols;\x0d\n      moveCursor(this.output\x2C diffWidth\x2C 0);\x0d\n    } else {\x0d\n      this[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Handle a write from the tty\x0d\n  [kTtyWrite](s\x2C key) {\x0d\n    const previousKey = this[kPreviousKey];\x0d\n    key = key || kEmptyObject;\x0d\n    this[kPreviousKey] = key;\x0d\n\x0d\n    if (!key.meta || key.name !== 'y') {\x0d\n      // Reset yanking state unless we are doing yank pop.\x0d\n      this[kYanking] = false;\x0d\n    }\x0d\n\x0d\n    // Activate or deactivate substring search.\x0d\n    if (\x0d\n      (key.name === 'up' || key.name === 'down') &&\x0d\n      !key.ctrl &&\x0d\n      !key.meta &&\x0d\n      !key.shift\x0d\n    ) {\x0d\n      if (this[kSubstringSearch] === null) {\x0d\n        this[kSubstringSearch] = StringPrototypeSlice(\x0d\n          this.line\x2C\x0d\n          0\x2C\x0d\n          this.cursor\x2C\x0d\n        );\x0d\n      }\x0d\n    } else if (this[kSubstringSearch] !== null) {\x0d\n      this[kSubstringSearch] = null;\x0d\n      // Reset the index in case there's no match.\x0d\n      if (this.history.length === this.historyIndex) {\x0d\n        this.historyIndex = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Undo & Redo\x0d\n    if (typeof key.sequence === 'string') {\x0d\n      switch (StringPrototypeCodePointAt(key.sequence\x2C 0)) {\x0d\n        case 0x1f:\x0d\n          this[kUndo]();\x0d\n          return;\x0d\n        case 0x1e:\x0d\n          this[kRedo]();\x0d\n          return;\x0d\n        default:\x0d\n          break;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Ignore escape key\x2C fixes\x0d\n    // https://github.com/nodejs/node-v0.x-archive/issues/2876.\x0d\n    if (key.name === 'escape') return;\x0d\n\x0d\n    if (key.ctrl && key.shift) {\x0d\n      /* Control and shift pressed */\x0d\n      switch (key.name) {\x0d\n        // TODO(BridgeAR): The transmitted escape sequence is `\\b` and that is\x0d\n        // identical to <ctrl>-h. It should have a unique escape sequence.\x0d\n        case 'backspace':\x0d\n          this[kDeleteLineLeft]();\x0d\n          break;\x0d\n\x0d\n        case 'delete':\x0d\n          this[kDeleteLineRight]();\x0d\n          break;\x0d\n      }\x0d\n    } else if (key.ctrl) {\x0d\n      /* Control key pressed */\x0d\n\x0d\n      switch (key.name) {\x0d\n        case 'c':\x0d\n          if (this.listenerCount('SIGINT') > 0) {\x0d\n            this.emit('SIGINT');\x0d\n          } else {\x0d\n            // This readline instance is finished\x0d\n            this.close();\x0d\n          }\x0d\n          break;\x0d\n\x0d\n        case 'h': // delete left\x0d\n          this[kDeleteLeft]();\x0d\n          break;\x0d\n\x0d\n        case 'd': // delete right or EOF\x0d\n          if (this.cursor === 0 && this.line.length === 0) {\x0d\n            // This readline instance is finished\x0d\n            this.close();\x0d\n          } else if (this.cursor < this.line.length) {\x0d\n            this[kDeleteRight]();\x0d\n          }\x0d\n          break;\x0d\n\x0d\n        case 'u': // Delete from current to start of line\x0d\n          this[kDeleteLineLeft]();\x0d\n          break;\x0d\n\x0d\n        case 'k': // Delete from current to end of line\x0d\n          this[kDeleteLineRight]();\x0d\n          break;\x0d\n\x0d\n        case 'a': // Go to the start of the line\x0d\n          this[kMoveCursor](-Infinity);\x0d\n          break;\x0d\n\x0d\n        case 'e': // Go to the end of the line\x0d\n          this[kMoveCursor](+Infinity);\x0d\n          break;\x0d\n\x0d\n        case 'b': // back one character\x0d\n          this[kMoveCursor](-charLengthLeft(this.line\x2C this.cursor));\x0d\n          break;\x0d\n\x0d\n        case 'f': // Forward one character\x0d\n          this[kMoveCursor](+charLengthAt(this.line\x2C this.cursor));\x0d\n          break;\x0d\n\x0d\n        case 'l': // Clear the whole screen\x0d\n          cursorTo(this.output\x2C 0\x2C 0);\x0d\n          clearScreenDown(this.output);\x0d\n          this[kRefreshLine]();\x0d\n          break;\x0d\n\x0d\n        case 'n': // next history item\x0d\n          this[kHistoryNext]();\x0d\n          break;\x0d\n\x0d\n        case 'p': // Previous history item\x0d\n          this[kHistoryPrev]();\x0d\n          break;\x0d\n\x0d\n        case 'y': // Yank killed string\x0d\n          this[kYank]();\x0d\n          break;\x0d\n\x0d\n        case 'z':\x0d\n          if (process.platform === 'win32') break;\x0d\n          if (this.listenerCount('SIGTSTP') > 0) {\x0d\n            this.emit('SIGTSTP');\x0d\n          } else {\x0d\n            process.once('SIGCONT'\x2C () => {\x0d\n              // Don't raise events if stream has already been abandoned.\x0d\n              if (!this.paused) {\x0d\n                // Stream must be paused and resumed after SIGCONT to catch\x0d\n                // SIGINT\x2C SIGTSTP\x2C and EOF.\x0d\n                this.pause();\x0d\n                this.emit('SIGCONT');\x0d\n              }\x0d\n              // Explicitly re-enable "raw mode" and move the cursor to\x0d\n              // the correct position.\x0d\n              // See https://github.com/joyent/node/issues/3295.\x0d\n              this[kSetRawMode](true);\x0d\n              this[kRefreshLine]();\x0d\n            });\x0d\n            this[kSetRawMode](false);\x0d\n            process.kill(process.pid\x2C 'SIGTSTP');\x0d\n          }\x0d\n          break;\x0d\n\x0d\n        case 'w': // Delete backwards to a word boundary\x0d\n        // TODO(BridgeAR): The transmitted escape sequence is `\\b` and that is\x0d\n        // identical to <ctrl>-h. It should have a unique escape sequence.\x0d\n        // Falls through\x0d\n        case 'backspace':\x0d\n          this[kDeleteWordLeft]();\x0d\n          break;\x0d\n\x0d\n        case 'delete': // Delete forward to a word boundary\x0d\n          this[kDeleteWordRight]();\x0d\n          break;\x0d\n\x0d\n        case 'left':\x0d\n          this[kWordLeft]();\x0d\n          break;\x0d\n\x0d\n        case 'right':\x0d\n          this[kWordRight]();\x0d\n          break;\x0d\n      }\x0d\n    } else if (key.meta) {\x0d\n      /* Meta key pressed */\x0d\n\x0d\n      switch (key.name) {\x0d\n        case 'b': // backward word\x0d\n          this[kWordLeft]();\x0d\n          break;\x0d\n\x0d\n        case 'f': // forward word\x0d\n          this[kWordRight]();\x0d\n          break;\x0d\n\x0d\n        case 'd': // delete forward word\x0d\n        case 'delete':\x0d\n          this[kDeleteWordRight]();\x0d\n          break;\x0d\n\x0d\n        case 'backspace': // Delete backwards to a word boundary\x0d\n          this[kDeleteWordLeft]();\x0d\n          break;\x0d\n\x0d\n        case 'y': // Doing yank pop\x0d\n          this[kYankPop]();\x0d\n          break;\x0d\n      }\x0d\n    } else {\x0d\n      /* No modifier keys used */\x0d\n\x0d\n      // \\r bookkeeping is only relevant if a \\n comes right after.\x0d\n      if (this[kSawReturnAt] && key.name !== 'enter') this[kSawReturnAt] = 0;\x0d\n\x0d\n      switch (key.name) {\x0d\n        case 'return': // Carriage return\x2C i.e. \\r\x0d\n          this[kSawReturnAt] = DateNow();\x0d\n          this[kLine]();\x0d\n          break;\x0d\n\x0d\n        case 'enter':\x0d\n          // When key interval > crlfDelay\x0d\n          if (\x0d\n            this[kSawReturnAt] === 0 ||\x0d\n            DateNow() - this[kSawReturnAt] > this.crlfDelay\x0d\n          ) {\x0d\n            this[kLine]();\x0d\n          }\x0d\n          this[kSawReturnAt] = 0;\x0d\n          break;\x0d\n\x0d\n        case 'backspace':\x0d\n          this[kDeleteLeft]();\x0d\n          break;\x0d\n\x0d\n        case 'delete':\x0d\n          this[kDeleteRight]();\x0d\n          break;\x0d\n\x0d\n        case 'left':\x0d\n          // Obtain the code point to the left\x0d\n          this[kMoveCursor](-charLengthLeft(this.line\x2C this.cursor));\x0d\n          break;\x0d\n\x0d\n        case 'right':\x0d\n          this[kMoveCursor](+charLengthAt(this.line\x2C this.cursor));\x0d\n          break;\x0d\n\x0d\n        case 'home':\x0d\n          this[kMoveCursor](-Infinity);\x0d\n          break;\x0d\n\x0d\n        case 'end':\x0d\n          this[kMoveCursor](+Infinity);\x0d\n          break;\x0d\n\x0d\n        case 'up':\x0d\n          this[kHistoryPrev]();\x0d\n          break;\x0d\n\x0d\n        case 'down':\x0d\n          this[kHistoryNext]();\x0d\n          break;\x0d\n\x0d\n        case 'tab':\x0d\n          // If tab completion enabled\x2C do that...\x0d\n          if (\x0d\n            typeof this.completer === 'function' &&\x0d\n            this.isCompletionEnabled\x0d\n          ) {\x0d\n            const lastKeypressWasTab =\x0d\n              previousKey && previousKey.name === 'tab';\x0d\n            this[kTabComplete](lastKeypressWasTab);\x0d\n            break;\x0d\n          }\x0d\n        // falls through\x0d\n        default:\x0d\n          if (typeof s === 'string' && s) {\x0d\n            // Erase state of previous searches.\x0d\n            lineEnding.lastIndex = 0;\x0d\n            let nextMatch;\x0d\n            // Keep track of the end of the last match.\x0d\n            let lastIndex = 0;\x0d\n            while ((nextMatch = RegExpPrototypeExec(lineEnding\x2C s)) !== null) {\x0d\n              this[kInsertString](StringPrototypeSlice(s\x2C lastIndex\x2C nextMatch.index));\x0d\n              ({ lastIndex } = lineEnding);\x0d\n              this[kLine]();\x0d\n              // Restore lastIndex as the call to kLine could have mutated it.\x0d\n              lineEnding.lastIndex = lastIndex;\x0d\n            }\x0d\n            // This ensures that the last line is written if it doesn't end in a newline.\x0d\n            // Note that the last line may be the first line\x2C in which case this still works.\x0d\n            this[kInsertString](StringPrototypeSlice(s\x2C lastIndex));\x0d\n          }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Creates an `AsyncIterator` object that iterates through\x0d\n   * each line in the input stream as a string.\x0d\n   * @typedef {{\x0d\n   *   [Symbol.asyncIterator]: () => InterfaceAsyncIterator\x2C\x0d\n   *   next: () => Promise<string>\x0d\n   * }} InterfaceAsyncIterator\x0d\n   * @returns {InterfaceAsyncIterator}\x0d\n   */\x0d\n  [SymbolAsyncIterator]() {\x0d\n    if (this[kLineObjectStream] === undefined) {\x0d\n      kFirstEventParam ??= require('internal/events/symbols').kFirstEventParam;\x0d\n      this[kLineObjectStream] = EventEmitter.on(\x0d\n        this\x2C 'line'\x2C {\x0d\n          close: ['close']\x2C\x0d\n          highWatermark: 1024\x2C\x0d\n          [kFirstEventParam]: true\x2C\x0d\n        });\x0d\n    }\x0d\n    return this[kLineObjectStream];\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Interface\x2C\x0d\n  InterfaceConstructor\x2C\x0d\n  kAddHistory\x2C\x0d\n  kDecoder\x2C\x0d\n  kDeleteLeft\x2C\x0d\n  kDeleteLineLeft\x2C\x0d\n  kDeleteLineRight\x2C\x0d\n  kDeleteRight\x2C\x0d\n  kDeleteWordLeft\x2C\x0d\n  kDeleteWordRight\x2C\x0d\n  kGetDisplayPos\x2C\x0d\n  kHistoryNext\x2C\x0d\n  kHistoryPrev\x2C\x0d\n  kInsertString\x2C\x0d\n  kLine\x2C\x0d\n  kLine_buffer\x2C\x0d\n  kMoveCursor\x2C\x0d\n  kNormalWrite\x2C\x0d\n  kOldPrompt\x2C\x0d\n  kOnLine\x2C\x0d\n  kPreviousKey\x2C\x0d\n  kPrompt\x2C\x0d\n  kQuestion\x2C\x0d\n  kQuestionCallback\x2C\x0d\n  kQuestionCancel\x2C\x0d\n  kRefreshLine\x2C\x0d\n  kSawKeyPress\x2C\x0d\n  kSawReturnAt\x2C\x0d\n  kSetRawMode\x2C\x0d\n  kTabComplete\x2C\x0d\n  kTabCompleter\x2C\x0d\n  kTtyWrite\x2C\x0d\n  kWordLeft\x2C\x0d\n  kWordRight\x2C\x0d\n  kWriteToOutput\x2C\x0d\n};\x0d\n
code-source-info,0x66313f409c,122,0,40434,C0O0C4O40434,,
code-creation,JS,10,212734,0x66313f6ddc,1908, node:internal/readline/interface:1:1,0x66313f4010,~
code-source-info,0x66313f6ddc
tick,0x7ff7b354e23d,213023,0,0x0,3,0x7ff734383eb2,0x7ff734383c87,0x66313ef2ee,0x7ff734383f77,0x7ff734383c87,0x66313e9e69,0x7ff734383f77,0x7ff734383c87,0x21de9b569d2,0x7ff734383f77,0x7ff734383c87,0x21de9b4dbde,0x7ff734383f77,0x7ff734383c87,0x125aa7b3c2c,0x125aa7ab020,0x3151437ffa6
code-creation,Eval,10,213507,0x66313f94e4,5, node:readline/promises:1:1,0x66313f92f0,~
script-source,123,node:readline/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  Promise\x2C\x0d\n  SymbolDispose\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  Readline\x2C\x0d\n} = require('internal/readline/promises');\x0d\n\x0d\nconst {\x0d\n  Interface: _Interface\x2C\x0d\n  kQuestion\x2C\x0d\n  kQuestionCancel\x2C\x0d\n} = require('internal/readline/interface');\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n} = require('internal/errors');\x0d\nconst { validateAbortSignal } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  kEmptyObject\x2C\x0d\n} = require('internal/util');\x0d\nlet addAbortListener;\x0d\n\x0d\nclass Interface extends _Interface {\x0d\n  // eslint-disable-next-line no-useless-constructor\x0d\n  constructor(input\x2C output\x2C completer\x2C terminal) {\x0d\n    super(input\x2C output\x2C completer\x2C terminal);\x0d\n  }\x0d\n  question(query\x2C options = kEmptyObject) {\x0d\n    return new Promise((resolve\x2C reject) => {\x0d\n      let cb = resolve;\x0d\n\x0d\n      if (options?.signal) {\x0d\n        validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n        if (options.signal.aborted) {\x0d\n          return reject(\x0d\n            new AbortError(undefined\x2C { cause: options.signal.reason }));\x0d\n        }\x0d\n\x0d\n        const onAbort = () => {\x0d\n          this[kQuestionCancel]();\x0d\n          reject(new AbortError(undefined\x2C { cause: options.signal.reason }));\x0d\n        };\x0d\n        addAbortListener ??= require('events').addAbortListener;\x0d\n        const disposable = addAbortListener(options.signal\x2C onAbort);\x0d\n\x0d\n        cb = (answer) => {\x0d\n          disposable[SymbolDispose]();\x0d\n          resolve(answer);\x0d\n        };\x0d\n      }\x0d\n\x0d\n      this[kQuestion](query\x2C cb);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction createInterface(input\x2C output\x2C completer\x2C terminal) {\x0d\n  return new Interface(input\x2C output\x2C completer\x2C terminal);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Interface\x2C\x0d\n  Readline\x2C\x0d\n  createInterface\x2C\x0d\n};\x0d\n
code-source-info,0x66313f94e4,123,0,1704,C0O0C4O1704,,
code-creation,JS,10,213702,0x66313f98ac,210, node:readline/promises:1:1,0x66313f9458,~
code-source-info,0x66313f98ac,123,0,1704,C0O0C41O28C47O40C53O102C59O102C64O87C69O217C75O217C80O166C85O181C91O195C97O288C103O288C108O271C114O349C120O349C125O325C131O414C137O414C142O395C148O445C149O445C151O490C177O466C179O1633C186O1655C192O1669C198O1682C204O1648C209O1703,,
code-creation,Eval,10,214027,0x66313fa3b4,5, node:internal/readline/promises:1:1,0x66313fa0d8,~
script-source,124,node:internal/readline/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  Promise\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { CSI } = require('internal/readline/utils');\x0d\nconst { validateBoolean\x2C validateInteger } = require('internal/validators');\x0d\nconst { isWritable } = require('internal/streams/utils');\x0d\nconst { codes: { ERR_INVALID_ARG_TYPE } } = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  kClearToLineBeginning\x2C\x0d\n  kClearToLineEnd\x2C\x0d\n  kClearLine\x2C\x0d\n  kClearScreenDown\x2C\x0d\n} = CSI;\x0d\n\x0d\nclass Readline {\x0d\n  #autoCommit = false;\x0d\n  #stream;\x0d\n  #todo = [];\x0d\n\x0d\n  constructor(stream\x2C options = undefined) {\x0d\n    if (!isWritable(stream))\x0d\n      throw new ERR_INVALID_ARG_TYPE('stream'\x2C 'Writable'\x2C stream);\x0d\n    this.#stream = stream;\x0d\n    if (options?.autoCommit != null) {\x0d\n      validateBoolean(options.autoCommit\x2C 'options.autoCommit');\x0d\n      this.#autoCommit = options.autoCommit;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Moves the cursor to the x and y coordinate on the given stream.\x0d\n   * @param {integer} x\x0d\n   * @param {integer} [y]\x0d\n   * @returns {Readline} this\x0d\n   */\x0d\n  cursorTo(x\x2C y = undefined) {\x0d\n    validateInteger(x\x2C 'x');\x0d\n    if (y != null) validateInteger(y\x2C 'y');\x0d\n\x0d\n    const data = y == null ? CSI`${x + 1}G` : CSI`${y + 1};${x + 1}H`;\x0d\n    if (this.#autoCommit) process.nextTick(() => this.#stream.write(data));\x0d\n    else ArrayPrototypePush(this.#todo\x2C data);\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Moves the cursor relative to its current location.\x0d\n   * @param {integer} dx\x0d\n   * @param {integer} dy\x0d\n   * @returns {Readline} this\x0d\n   */\x0d\n  moveCursor(dx\x2C dy) {\x0d\n    if (dx || dy) {\x0d\n      validateInteger(dx\x2C 'dx');\x0d\n      validateInteger(dy\x2C 'dy');\x0d\n\x0d\n      let data = '';\x0d\n\x0d\n      if (dx < 0) {\x0d\n        data += CSI`${-dx}D`;\x0d\n      } else if (dx > 0) {\x0d\n        data += CSI`${dx}C`;\x0d\n      }\x0d\n\x0d\n      if (dy < 0) {\x0d\n        data += CSI`${-dy}A`;\x0d\n      } else if (dy > 0) {\x0d\n        data += CSI`${dy}B`;\x0d\n      }\x0d\n      if (this.#autoCommit) process.nextTick(() => this.#stream.write(data));\x0d\n      else ArrayPrototypePush(this.#todo\x2C data);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Clears the current line the cursor is on.\x0d\n   * @param {-1|0|1} dir Direction to clear:\x0d\n   *   -1 for left of the cursor\x0d\n   *   +1 for right of the cursor\x0d\n   *    0 for the entire line\x0d\n   * @returns {Readline} this\x0d\n   */\x0d\n  clearLine(dir) {\x0d\n    validateInteger(dir\x2C 'dir'\x2C -1\x2C 1);\x0d\n\x0d\n    const data =\x0d\n      dir < 0 ? kClearToLineBeginning :\x0d\n        dir > 0 ? kClearToLineEnd :\x0d\n          kClearLine;\x0d\n    if (this.#autoCommit) process.nextTick(() => this.#stream.write(data));\x0d\n    else ArrayPrototypePush(this.#todo\x2C data);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Clears the screen from the current position of the cursor down.\x0d\n   * @returns {Readline} this\x0d\n   */\x0d\n  clearScreenDown() {\x0d\n    if (this.#autoCommit) {\x0d\n      process.nextTick(() => this.#stream.write(kClearScreenDown));\x0d\n    } else {\x0d\n      ArrayPrototypePush(this.#todo\x2C kClearScreenDown);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Sends all the pending actions to the associated `stream` and clears the\x0d\n   * internal list of pending actions.\x0d\n   * @returns {Promise<void>} Resolves when all pending actions have been\x0d\n   * flushed to the associated `stream`.\x0d\n   */\x0d\n  commit() {\x0d\n    return new Promise((resolve) => {\x0d\n      this.#stream.write(ArrayPrototypeJoin(this.#todo\x2C '')\x2C resolve);\x0d\n      this.#todo = [];\x0d\n    });\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Clears the internal list of pending actions without sending it to the\x0d\n   * associated `stream`.\x0d\n   * @returns {Readline} this\x0d\n   */\x0d\n  rollback() {\x0d\n    this.#todo = [];\x0d\n    return this;\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Readline\x2C\x0d\n};\x0d\n
code-source-info,0x66313fa3b4,124,0,3651,C0O0C4O3651,,
code-creation,JS,10,214325,0x66313fa9dc,280, node:internal/readline/promises:1:1,0x66313fa328,~
code-source-info,0x66313fa9dc,124,0,3651,C0O0C45O28C51O51C57O74C63O120C66O120C71O112C77O202C80O202C85O165C91O182C97O258C100O258C105O243C111O338C114O338C119O309C124O311C130O464C133O380C139O406C145O426C151O441C261O3614C268O3636C274O3629C279O3650,,
code-creation,JS,10,214389,0x66313fabb4,30,Readline node:internal/readline/promises:21:16,0x66313fa650,~
code-source-info,0x66313fabb4,124,487,3610,C3O506C13O516C21O536C29O3610,,
code-creation,Eval,10,214792,0x66313fc534,5, node:console:1:1,0x66313fc3e0,~
script-source,125,node:console,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nmodule.exports = require('internal/console/global');\x0d\n
code-source-info,0x66313fc534,125,0,1226,C0O0C4O1226,,
code-creation,JS,10,214903,0x66313fc5bc,13, node:console:1:1,0x66313fc4a8,~
code-source-info,0x66313fc5bc,125,0,1226,C0O1172C3O1189C7O1187C12O1225,,
new,MemoryChunk,0xa5da600000,262144
code-creation,JS,10,215144,0x66313fc6c4,15, node:repl:133:3,0x21de9b55400,~
code-source-info,0x66313fc6c4,114,4180,4221,C0O4187C8O4188C14O4221,,
code-creation,JS,10,215194,0xa5da604cb4,10, node:repl:136:17,0x21de9b55458,~
code-source-info,0xa5da604cb4,114,4294,4316,C0O4303C5O4311C9O4316,,
code-creation,JS,11,215275,0x7ff734384fc0,76, node:repl:136:17,0x21de9b55458,^
code-source-info,0x7ff734384fc0,114,4294,4316,,,
code-creation,JS,11,215315,0x7ff734385040,268,SafeMap node:internal/per_context/primordials:414:16,0xa4fec32b78,^
code-source-info,0x7ff734385040,6,12401,12418,,,
code-creation,JS,11,215366,0x7ff734385180,284,makeBitMapDescriptor node:internal/streams/readable:127:30,0x9b20b6adf0,^
code-source-info,0x7ff734385180,97,3888,4090,,,
code-creation,JS,11,215390,0x7ff7343852c0,284,makeBitMapDescriptor node:internal/streams/writable:120:30,0x9b20b7f3a8,^
code-source-info,0x7ff7343852c0,102,3832,4034,,,
code-creation,JS,11,215424,0x7ff734385400,264,protoGetter node:net:866:21,0x125aa7bf328,^
code-source-info,0x7ff734385400,86,23562,23731,,,
code-creation,JS,11,215444,0x7ff734385540,332,set node:internal/streams/writable:124:8,0x10fd4184938,^
code-source-info,0x7ff734385540,102,3935,4024,,,
code-creation,JS,11,215462,0x7ff7343856c0,108,get node:net:2341:6,0x9b20b4a7f0,^
code-source-info,0x7ff7343856c0,86,67512,67540,,,
code-creation,JS,11,215480,0x7ff734385780,332,set node:internal/streams/readable:131:8,0x9b20b76dd0,^
code-source-info,0x7ff734385780,97,3991,4080,,,
code-creation,JS,11,215499,0x7ff734385900,272,hideStackFrames node:internal/errors:535:25,0xa4fec3c028,^
code-source-info,0x7ff734385900,10,15215,15499,,,
code-creation,JS,11,215518,0x7ff734385a40,264, node:internal/validators:458:42,0x1d9b7243780,^
code-source-info,0x7ff734385a40,15,13555,13674,,,
code-creation,JS,11,215539,0x7ff734385b80,576,TokenType node:internal/deps/acorn/acorn/dist/acorn:114:37,0x21de9b6e1e8,^
code-source-info,0x7ff734385b80,115,14767,15183,,,
code-creation,JS,11,215586,0x7ff734385e00,168,binop node:internal/deps/acorn/acorn/dist/acorn:129:17,0x21de9b6d590,^
code-source-info,0x7ff734385e00,115,15204,15288,,,
code-creation,JS,11,215663,0x7ff734385f00,204,kw node:internal/deps/acorn/acorn/dist/acorn:139:14,0x21de9b6d5e8,^
code-source-info,0x7ff734385f00,115,15494,15650,,,
code-creation,JS,11,215719,0x7ff734386000,196,TokContext node:internal/deps/acorn/acorn/dist/acorn:2271:39,0x21de9b71f40,^
code-source-info,0x7ff734386000,115,97357,97578,,,
code-creation,JS,11,215750,0x7ff734386100,360,wordsRegexp node:internal/deps/acorn/acorn/dist/acorn:284:23,0x21de9b6d6f0,^
code-source-info,0x7ff734386100,115,20983,21107,,,
code-creation,JS,11,215821,0x7ff7343862c0,172, node:repl:133:3,0x21de9b55400,^
code-source-info,0x7ff7343862c0,114,4180,4221,,,
code-creation,JS,10,215961,0xa5da604ddc,19,getSchemeOnlyModuleNames node:internal/bootstrap/realm:326:34,0xa4fec38878,~
code-source-info,0xa5da604ddc,9,10744,10797,C0O10754C11O10771C14O10761C18O10792,,
code-creation,JS,10,216077,0xa5da604ed4,26, node:repl:139:3,0x21de9b554b0,~
code-source-info,0xa5da604ed4,114,4391,4456,C0O4400C7O4419C15O4450C20O4400C25O4456,,
code-creation,Eval,10,216531,0xa5da6069f4,5, node:domain:1:1,0xa5da606680,~
script-source,126,node:domain,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// WARNING: THIS MODULE IS PENDING DEPRECATION.\x0d\n//\x0d\n// No new pull requests targeting this module will be accepted\x0d\n// unless they address existing\x2C critical bugs.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeEvery\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeLastIndexOf\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  ERR_DOMAIN_CALLBACK_NOT_AVAILABLE\x2C\x0d\n  ERR_DOMAIN_CANNOT_SET_UNCAUGHT_EXCEPTION_CAPTURE\x2C\x0d\n  ERR_UNHANDLED_ERROR\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { createHook } = require('async_hooks');\x0d\nconst { useDomainTrampoline } = require('internal/async_hooks');\x0d\n\x0d\nconst kWeak = Symbol('kWeak');\x0d\nconst { WeakReference } = require('internal/util');\x0d\n\x0d\n// Overwrite process.domain with a getter/setter that will allow for more\x0d\n// effective optimizations\x0d\nconst _domain = [null];\x0d\nObjectDefineProperty(process\x2C 'domain'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get: function() {\x0d\n    return _domain[0];\x0d\n  }\x2C\x0d\n  set: function(arg) {\x0d\n    return _domain[0] = arg;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nconst vmPromises = new SafeWeakMap();\x0d\nconst pairing = new SafeMap();\x0d\nconst asyncHook = createHook({\x0d\n  init(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n    if (process.domain !== null && process.domain !== undefined) {\x0d\n      // If this operation is created while in a domain\x2C let's mark it\x0d\n      pairing.set(asyncId\x2C process.domain[kWeak]);\x0d\n      // Promises from other contexts\x2C such as with the VM module\x2C should not\x0d\n      // have a domain property as it can be used to escape the sandbox.\x0d\n      if (type !== 'PROMISE' || resource instanceof Promise) {\x0d\n        ObjectDefineProperty(resource\x2C 'domain'\x2C {\x0d\n          __proto__: null\x2C\x0d\n          configurable: true\x2C\x0d\n          enumerable: false\x2C\x0d\n          value: process.domain\x2C\x0d\n          writable: true\x2C\x0d\n        });\x0d\n      // Because promises from other contexts don't get a domain field\x2C\x0d\n      // the domain needs to be held alive another way. Stuffing it in a\x0d\n      // weakmap connected to the promise lifetime can fix that.\x0d\n      } else {\x0d\n        vmPromises.set(resource\x2C process.domain);\x0d\n      }\x0d\n    }\x0d\n  }\x2C\x0d\n  before(asyncId) {\x0d\n    const current = pairing.get(asyncId);\x0d\n    if (current !== undefined) { // Enter domain for this cb\x0d\n      // We will get the domain through current.get()\x2C because the resource\x0d\n      // object's .domain property makes sure it is not garbage collected.\x0d\n      // However\x2C we do need to make the reference to the domain non-weak\x2C\x0d\n      // so that it cannot be garbage collected before the after() hook.\x0d\n      current.incRef();\x0d\n      current.get().enter();\x0d\n    }\x0d\n  }\x2C\x0d\n  after(asyncId) {\x0d\n    const current = pairing.get(asyncId);\x0d\n    if (current !== undefined) { // Exit domain for this cb\x0d\n      const domain = current.get();\x0d\n      current.decRef();\x0d\n      domain.exit();\x0d\n    }\x0d\n  }\x2C\x0d\n  destroy(asyncId) {\x0d\n    pairing.delete(asyncId); // cleaning up\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// When domains are in use\x2C they claim full ownership of the\x0d\n// uncaught exception capture callback.\x0d\nif (process.hasUncaughtExceptionCaptureCallback()) {\x0d\n  throw new ERR_DOMAIN_CALLBACK_NOT_AVAILABLE();\x0d\n}\x0d\n\x0d\n// Get the stack trace at the point where `domain` was required.\x0d\n// eslint-disable-next-line no-restricted-syntax\x0d\nconst domainRequireStack = new Error('require(`domain`) at this point').stack;\x0d\n\x0d\nconst { setUncaughtExceptionCaptureCallback } = process;\x0d\nprocess.setUncaughtExceptionCaptureCallback = function(fn) {\x0d\n  const err = new ERR_DOMAIN_CANNOT_SET_UNCAUGHT_EXCEPTION_CAPTURE();\x0d\n  err.stack = err.stack + '\\n' + '-'.repeat(40) + '\\n' + domainRequireStack;\x0d\n  throw err;\x0d\n};\x0d\n\x0d\n\x0d\nlet sendMakeCallbackDeprecation = false;\x0d\nfunction emitMakeCallbackDeprecation({ target\x2C method }) {\x0d\n  if (!sendMakeCallbackDeprecation) {\x0d\n    process.emitWarning(\x0d\n      'Using a domain property in MakeCallback is deprecated. Use the ' +\x0d\n      'async_context variant of MakeCallback or the AsyncResource class ' +\x0d\n      'instead. ' +\x0d\n      `(Triggered by calling ${method?.name || '<anonymous>'} ` +\x0d\n      `on ${target?.constructor?.name}.)`\x2C\x0d\n      'DeprecationWarning'\x2C 'DEP0097');\x0d\n    sendMakeCallbackDeprecation = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction topLevelDomainCallback(cb\x2C ...args) {\x0d\n  const domain = this.domain;\x0d\n  if (exports.active && domain)\x0d\n    emitMakeCallbackDeprecation({ target: this\x2C method: cb });\x0d\n\x0d\n  if (domain)\x0d\n    domain.enter();\x0d\n  const ret = ReflectApply(cb\x2C this\x2C args);\x0d\n  if (domain)\x0d\n    domain.exit();\x0d\n\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n// It's possible to enter one domain while already inside\x0d\n// another one. The stack is each entered domain.\x0d\nlet stack = [];\x0d\nexports._stack = stack;\x0d\nuseDomainTrampoline(topLevelDomainCallback);\x0d\n\x0d\nfunction updateExceptionCapture() {\x0d\n  if (ArrayPrototypeEvery(stack\x2C\x0d\n                          (domain) => domain.listenerCount('error') === 0)) {\x0d\n    setUncaughtExceptionCaptureCallback(null);\x0d\n  } else {\x0d\n    setUncaughtExceptionCaptureCallback(null);\x0d\n    setUncaughtExceptionCaptureCallback((er) => {\x0d\n      return process.domain._errorHandler(er);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nprocess.on('newListener'\x2C (name\x2C listener) => {\x0d\n  if (name === 'uncaughtException' &&\x0d\n      listener !== domainUncaughtExceptionClear) {\x0d\n    // Make sure the first listener for `uncaughtException` always clears\x0d\n    // the domain stack.\x0d\n    process.removeListener(name\x2C domainUncaughtExceptionClear);\x0d\n    process.prependListener(name\x2C domainUncaughtExceptionClear);\x0d\n  }\x0d\n});\x0d\n\x0d\nprocess.on('removeListener'\x2C (name\x2C listener) => {\x0d\n  if (name === 'uncaughtException' &&\x0d\n      listener !== domainUncaughtExceptionClear) {\x0d\n    // If the domain listener would be the only remaining one\x2C remove it.\x0d\n    const listeners = process.listeners('uncaughtException');\x0d\n    if (listeners.length === 1 && listeners[0] === domainUncaughtExceptionClear)\x0d\n      process.removeListener(name\x2C domainUncaughtExceptionClear);\x0d\n  }\x0d\n});\x0d\n\x0d\nfunction domainUncaughtExceptionClear() {\x0d\n  stack.length = 0;\x0d\n  exports.active = process.domain = null;\x0d\n  updateExceptionCapture();\x0d\n}\x0d\n\x0d\n\x0d\nclass Domain extends EventEmitter {\x0d\n  constructor() {\x0d\n    super();\x0d\n\x0d\n    this.members = [];\x0d\n    this[kWeak] = new WeakReference(this);\x0d\n    asyncHook.enable();\x0d\n\x0d\n    this.on('removeListener'\x2C updateExceptionCapture);\x0d\n    this.on('newListener'\x2C updateExceptionCapture);\x0d\n  }\x0d\n}\x0d\n\x0d\nexports.Domain = Domain;\x0d\n\x0d\nexports.create = exports.createDomain = function createDomain() {\x0d\n  return new Domain();\x0d\n};\x0d\n\x0d\n// The active domain is always the one that we're currently in.\x0d\nexports.active = null;\x0d\nDomain.prototype.members = undefined;\x0d\n\x0d\n// Called by process._fatalException in case an error was thrown.\x0d\nDomain.prototype._errorHandler = function(er) {\x0d\n  let caught = false;\x0d\n\x0d\n  if ((typeof er === 'object' && er !== null) || typeof er === 'function') {\x0d\n    ObjectDefineProperty(er\x2C 'domain'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      value: this\x2C\x0d\n      writable: true\x2C\x0d\n    });\x0d\n    er.domainThrown = true;\x0d\n  }\x0d\n  // Pop all adjacent duplicates of the currently active domain from the stack.\x0d\n  // This is done to prevent a domain's error handler to run within the context\x0d\n  // of itself\x2C and re-entering itself recursively handler as a result of an\x0d\n  // exception thrown in its context.\x0d\n  while (exports.active === this) {\x0d\n    this.exit();\x0d\n  }\x0d\n\x0d\n  // The top-level domain-handler is handled separately.\x0d\n  //\x0d\n  // The reason is that if V8 was passed a command line option\x0d\n  // asking it to abort on an uncaught exception (currently\x0d\n  // "--abort-on-uncaught-exception")\x2C we want an uncaught exception\x0d\n  // in the top-level domain error handler to make the\x0d\n  // process abort. Using try/catch here would always make V8 think\x0d\n  // that these exceptions are caught\x2C and thus would prevent it from\x0d\n  // aborting in these cases.\x0d\n  if (stack.length === 0) {\x0d\n    // If there's no error handler\x2C do not emit an 'error' event\x0d\n    // as this would throw an error\x2C make the process exit\x2C and thus\x0d\n    // prevent the process 'uncaughtException' event from being emitted\x0d\n    // if a listener is set.\x0d\n    if (EventEmitter.listenerCount(this\x2C 'error') > 0) {\x0d\n      // Clear the uncaughtExceptionCaptureCallback so that we know that\x2C since\x0d\n      // the top-level domain is not active anymore\x2C it would be ok to abort on\x0d\n      // an uncaught exception at this point\x0d\n      setUncaughtExceptionCaptureCallback(null);\x0d\n      try {\x0d\n        caught = this.emit('error'\x2C er);\x0d\n      } finally {\x0d\n        updateExceptionCapture();\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    // Wrap this in a try/catch so we don't get infinite throwing\x0d\n    try {\x0d\n      // One of three things will happen here.\x0d\n      //\x0d\n      // 1. There is a handler\x2C caught = true\x0d\n      // 2. There is no handler\x2C caught = false\x0d\n      // 3. It throws\x2C caught = false\x0d\n      //\x0d\n      // If caught is false after this\x2C then there's no need to exit()\x0d\n      // the domain\x2C because we're going to crash the process anyway.\x0d\n      caught = this.emit('error'\x2C er);\x0d\n    } catch (er2) {\x0d\n      // The domain error handler threw!  oh no!\x0d\n      // See if another domain can catch THIS error\x2C\x0d\n      // or else crash on the original one.\x0d\n      updateExceptionCapture();\x0d\n      if (stack.length) {\x0d\n        exports.active = process.domain = stack[stack.length - 1];\x0d\n        caught = process.domain._errorHandler(er2);\x0d\n      } else {\x0d\n        // Pass on to the next exception handler.\x0d\n        throw er2;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Exit all domains on the stack.  Uncaught exceptions end the\x0d\n  // current tick and no domains should be left on the stack\x0d\n  // between ticks.\x0d\n  domainUncaughtExceptionClear();\x0d\n\x0d\n  return caught;\x0d\n};\x0d\n\x0d\n\x0d\nDomain.prototype.enter = function() {\x0d\n  // Note that this might be a no-op\x2C but we still need\x0d\n  // to push it onto the stack so that we can pop it later.\x0d\n  exports.active = process.domain = this;\x0d\n  ArrayPrototypePush(stack\x2C this);\x0d\n  updateExceptionCapture();\x0d\n};\x0d\n\x0d\n\x0d\nDomain.prototype.exit = function() {\x0d\n  // Don't do anything if this domain is not on the stack.\x0d\n  const index = ArrayPrototypeLastIndexOf(stack\x2C this);\x0d\n  if (index === -1) return;\x0d\n\x0d\n  // Exit all domains until this one.\x0d\n  ArrayPrototypeSplice(stack\x2C index);\x0d\n\x0d\n  exports.active = stack.length === 0 ? undefined : stack[stack.length - 1];\x0d\n  process.domain = exports.active;\x0d\n  updateExceptionCapture();\x0d\n};\x0d\n\x0d\n\x0d\n// note: this works for timers as well.\x0d\nDomain.prototype.add = function(ee) {\x0d\n  // If the domain is already added\x2C then nothing left to do.\x0d\n  if (ee.domain === this)\x0d\n    return;\x0d\n\x0d\n  // Has a domain already - remove it first.\x0d\n  if (ee.domain)\x0d\n    ee.domain.remove(ee);\x0d\n\x0d\n  // Check for circular Domain->Domain links.\x0d\n  // They cause big issues.\x0d\n  //\x0d\n  // For example:\x0d\n  // var d = domain.create();\x0d\n  // var e = domain.create();\x0d\n  // d.add(e);\x0d\n  // e.add(d);\x0d\n  // e.emit('error'\x2C er); // RangeError\x2C stack overflow!\x0d\n  if (this.domain && (ee instanceof Domain)) {\x0d\n    for (let d = this.domain; d; d = d.domain) {\x0d\n      if (ee === d) return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  ObjectDefineProperty(ee\x2C 'domain'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: this\x2C\x0d\n    writable: true\x2C\x0d\n  });\x0d\n  ArrayPrototypePush(this.members\x2C ee);\x0d\n};\x0d\n\x0d\n\x0d\nDomain.prototype.remove = function(ee) {\x0d\n  ee.domain = null;\x0d\n  const index = ArrayPrototypeIndexOf(this.members\x2C ee);\x0d\n  if (index !== -1)\x0d\n    ArrayPrototypeSplice(this.members\x2C index\x2C 1);\x0d\n};\x0d\n\x0d\n\x0d\nDomain.prototype.run = function(fn) {\x0d\n  this.enter();\x0d\n  const ret = ReflectApply(fn\x2C this\x2C ArrayPrototypeSlice(arguments\x2C 1));\x0d\n  this.exit();\x0d\n\x0d\n  return ret;\x0d\n};\x0d\n\x0d\n\x0d\nfunction intercepted(_this\x2C self\x2C cb\x2C fnargs) {\x0d\n  if (fnargs[0] && fnargs[0] instanceof Error) {\x0d\n    const er = fnargs[0];\x0d\n    er.domainBound = cb;\x0d\n    er.domainThrown = false;\x0d\n    ObjectDefineProperty(er\x2C 'domain'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n      value: self\x2C\x0d\n      writable: true\x2C\x0d\n    });\x0d\n    self.emit('error'\x2C er);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  self.enter();\x0d\n  const ret = ReflectApply(cb\x2C _this\x2C ArrayPrototypeSlice(fnargs\x2C 1));\x0d\n  self.exit();\x0d\n\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n\x0d\nDomain.prototype.intercept = function(cb) {\x0d\n  const self = this;\x0d\n\x0d\n  function runIntercepted() {\x0d\n    return intercepted(this\x2C self\x2C cb\x2C arguments);\x0d\n  }\x0d\n\x0d\n  return runIntercepted;\x0d\n};\x0d\n\x0d\n\x0d\nfunction bound(_this\x2C self\x2C cb\x2C fnargs) {\x0d\n  self.enter();\x0d\n  const ret = ReflectApply(cb\x2C _this\x2C fnargs);\x0d\n  self.exit();\x0d\n\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n\x0d\nDomain.prototype.bind = function(cb) {\x0d\n  const self = this;\x0d\n\x0d\n  function runBound() {\x0d\n    return bound(this\x2C self\x2C cb\x2C arguments);\x0d\n  }\x0d\n\x0d\n  ObjectDefineProperty(runBound\x2C 'domain'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: this\x2C\x0d\n    writable: true\x2C\x0d\n  });\x0d\n\x0d\n  return runBound;\x0d\n};\x0d\n\x0d\n// Override EventEmitter methods to make it domain-aware.\x0d\nEventEmitter.usingDomains = true;\x0d\n\x0d\nconst eventInit = EventEmitter.init;\x0d\nEventEmitter.init = function(opts) {\x0d\n  ObjectDefineProperty(this\x2C 'domain'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    value: null\x2C\x0d\n    writable: true\x2C\x0d\n  });\x0d\n  if (exports.active && !(this instanceof exports.Domain)) {\x0d\n    this.domain = exports.active;\x0d\n  }\x0d\n\x0d\n  return FunctionPrototypeCall(eventInit\x2C this\x2C opts);\x0d\n};\x0d\n\x0d\nconst eventEmit = EventEmitter.prototype.emit;\x0d\nEventEmitter.prototype.emit = function emit(...args) {\x0d\n  const domain = this.domain;\x0d\n\x0d\n  const type = args[0];\x0d\n  const shouldEmitError = type === 'error' &&\x0d\n                          this.listenerCount(type) > 0;\x0d\n\x0d\n  // Just call original `emit` if current EE instance has `error`\x0d\n  // handler\x2C there's no active domain or this is process\x0d\n  if (shouldEmitError || domain === null || domain === undefined ||\x0d\n      this === process) {\x0d\n    return ReflectApply(eventEmit\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  if (type === 'error') {\x0d\n    const er = args.length > 1 && args[1] ?\x0d\n      args[1] : new ERR_UNHANDLED_ERROR();\x0d\n\x0d\n    if (typeof er === 'object') {\x0d\n      er.domainEmitter = this;\x0d\n      ObjectDefineProperty(er\x2C 'domain'\x2C {\x0d\n        __proto__: null\x2C\x0d\n        configurable: true\x2C\x0d\n        enumerable: false\x2C\x0d\n        value: domain\x2C\x0d\n        writable: true\x2C\x0d\n      });\x0d\n      er.domainThrown = false;\x0d\n    }\x0d\n\x0d\n    // Remove the current domain (and its duplicates) from the domains stack and\x0d\n    // set the active domain to its parent (if any) so that the domain's error\x0d\n    // handler doesn't run in its own context. This prevents any event emitter\x0d\n    // created or any exception thrown in that error handler from recursively\x0d\n    // executing that error handler.\x0d\n    const origDomainsStack = ArrayPrototypeSlice(stack);\x0d\n    const origActiveDomain = process.domain;\x0d\n\x0d\n    // Travel the domains stack from top to bottom to find the first domain\x0d\n    // instance that is not a duplicate of the current active domain.\x0d\n    let idx = stack.length - 1;\x0d\n    while (idx > -1 && process.domain === stack[idx]) {\x0d\n      --idx;\x0d\n    }\x0d\n\x0d\n    // Change the stack to not contain the current active domain\x2C and only the\x0d\n    // domains above it on the stack.\x0d\n    if (idx < 0) {\x0d\n      stack.length = 0;\x0d\n    } else {\x0d\n      ArrayPrototypeSplice(stack\x2C idx + 1);\x0d\n    }\x0d\n\x0d\n    // Change the current active domain\x0d\n    if (stack.length > 0) {\x0d\n      exports.active = process.domain = stack[stack.length - 1];\x0d\n    } else {\x0d\n      exports.active = process.domain = null;\x0d\n    }\x0d\n\x0d\n    updateExceptionCapture();\x0d\n\x0d\n    domain.emit('error'\x2C er);\x0d\n\x0d\n    // Now that the domain's error handler has completed\x2C restore the domains\x0d\n    // stack and the active domain to their original values.\x0d\n    exports._stack = stack = origDomainsStack;\x0d\n    exports.active = process.domain = origActiveDomain;\x0d\n    updateExceptionCapture();\x0d\n\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  domain.enter();\x0d\n  const ret = ReflectApply(eventEmit\x2C this\x2C args);\x0d\n  domain.exit();\x0d\n\x0d\n  return ret;\x0d\n};\x0d\n
code-source-info,0xa5da6069f4,126,0,17268,C0O0C4O17268,,
code-creation,JS,10,217322,0xa5da607b94,785, node:domain:1:1,0xa5da606968,~
code-source-info,0xa5da607b
code-creation,JS,10,217607,0xa5da608634,12,hasUncaughtExceptionCaptureCallback node:internal/process/execution:151:45,0x1d9b7266ea8,~
script-source,40,node:internal/process/execution,'use strict';\x0d\n\x0d\nconst {\x0d\n  Symbol\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst path = require('path');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_UNCAUGHT_EXCEPTION_CAPTURE_ALREADY_SET\x2C\x0d\n    ERR_EVAL_ESM_CANNOT_PRINT\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst { exitCodes: { kGenericUserError } } = internalBinding('errors');\x0d\n\x0d\nconst {\x0d\n  executionAsyncId\x2C\x0d\n  clearDefaultTriggerAsyncId\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n  hasAsyncIdStack\x2C\x0d\n  afterHooksExist\x2C\x0d\n  emitAfter\x2C\x0d\n  popAsyncContext\x2C\x0d\n} = require('internal/async_hooks');\x0d\nconst { containsModuleSyntax } = internalBinding('contextify');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst {\x0d\n  makeContextifyScript\x2C runScriptInThisContext\x2C\x0d\n} = require('internal/vm');\x0d\n// shouldAbortOnUncaughtToggle is a typed array for faster\x0d\n// communication with JS.\x0d\nconst { shouldAbortOnUncaughtToggle } = internalBinding('util');\x0d\n\x0d\nfunction tryGetCwd() {\x0d\n  try {\x0d\n    return process.cwd();\x0d\n  } catch {\x0d\n    // getcwd(3) can fail if the current working directory has been deleted.\x0d\n    // Fall back to the directory name of the (absolute) executable path.\x0d\n    // It's not really correct but what are the alternatives?\x0d\n    return path.dirname(process.execPath);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction evalModule(source\x2C print) {\x0d\n  if (print) {\x0d\n    throw new ERR_EVAL_ESM_CANNOT_PRINT();\x0d\n  }\x0d\n  const { loadESM } = require('internal/process/esm_loader');\x0d\n  const { handleMainPromise } = require('internal/modules/run_main');\x0d\n  RegExpPrototypeExec(/^/\x2C ''); // Necessary to reset RegExp statics before user code runs.\x0d\n  return handleMainPromise(loadESM((loader) => loader.eval(source)));\x0d\n}\x0d\n\x0d\nfunction evalScript(name\x2C body\x2C breakFirstLine\x2C print\x2C shouldLoadESM = false) {\x0d\n  const CJSModule = require('internal/modules/cjs/loader').Module;\x0d\n  const { pathToFileURL } = require('internal/url');\x0d\n\x0d\n  const cwd = tryGetCwd();\x0d\n  const origModule = globalThis.module;  // Set e.g. when called from the REPL.\x0d\n\x0d\n  const module = new CJSModule(name);\x0d\n  module.filename = path.join(cwd\x2C name);\x0d\n  module.paths = CJSModule._nodeModulePaths(cwd);\x0d\n\x0d\n  const { handleMainPromise } = require('internal/modules/run_main');\x0d\n  const asyncESM = require('internal/process/esm_loader');\x0d\n  const baseUrl = pathToFileURL(module.filename).href;\x0d\n  const { loadESM } = asyncESM;\x0d\n\x0d\n  if (getOptionValue('--experimental-detect-module') &&\x0d\n    getOptionValue('--input-type') === '' && getOptionValue('--experimental-default-type') === '' &&\x0d\n    containsModuleSyntax(body\x2C name)) {\x0d\n    return evalModule(body\x2C print);\x0d\n  }\x0d\n\x0d\n  const runScript = () => {\x0d\n    // Create wrapper for cache entry\x0d\n    const script = `\x0d\n      globalThis.module = module;\x0d\n      globalThis.exports = exports;\x0d\n      globalThis.__dirname = __dirname;\x0d\n      globalThis.require = require;\x0d\n      return (main) => main();\x0d\n    `;\x0d\n    globalThis.__filename = name;\x0d\n    RegExpPrototypeExec(/^/\x2C ''); // Necessary to reset RegExp statics before user code runs.\x0d\n    const result = module._compile(script\x2C `${name}-wrapper`)(() => {\x0d\n      const hostDefinedOptionId = Symbol(name);\x0d\n      async function importModuleDynamically(specifier\x2C _\x2C importAttributes) {\x0d\n        const loader = asyncESM.esmLoader;\x0d\n        return loader.import(specifier\x2C baseUrl\x2C importAttributes);\x0d\n      }\x0d\n      const script = makeContextifyScript(\x0d\n        body\x2C                    // code\x0d\n        name\x2C                    // filename\x2C\x0d\n        0\x2C                       // lineOffset\x0d\n        0\x2C                       // columnOffset\x2C\x0d\n        undefined\x2C               // cachedData\x0d\n        false\x2C                   // produceCachedData\x0d\n        undefined\x2C               // parsingContext\x0d\n        hostDefinedOptionId\x2C     // hostDefinedOptionId\x0d\n        importModuleDynamically\x2C // importModuleDynamically\x0d\n      );\x0d\n      return runScriptInThisContext(script\x2C true\x2C !!breakFirstLine);\x0d\n    });\x0d\n    if (print) {\x0d\n      const { log } = require('internal/console/global');\x0d\n      log(result);\x0d\n    }\x0d\n\x0d\n    if (origModule !== undefined)\x0d\n      globalThis.module = origModule;\x0d\n  };\x0d\n\x0d\n  if (shouldLoadESM) {\x0d\n    return handleMainPromise(loadESM(runScript));\x0d\n  }\x0d\n  return runScript();\x0d\n}\x0d\n\x0d\nconst exceptionHandlerState = {\x0d\n  captureFn: null\x2C\x0d\n  reportFlag: false\x2C\x0d\n};\x0d\n\x0d\nfunction setUncaughtExceptionCaptureCallback(fn) {\x0d\n  if (fn === null) {\x0d\n    exceptionHandlerState.captureFn = fn;\x0d\n    shouldAbortOnUncaughtToggle[0] = 1;\x0d\n    process.report.reportOnUncaughtException = exceptionHandlerState.reportFlag;\x0d\n    return;\x0d\n  }\x0d\n  if (typeof fn !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('fn'\x2C ['Function'\x2C 'null']\x2C fn);\x0d\n  }\x0d\n  if (exceptionHandlerState.captureFn !== null) {\x0d\n    throw new ERR_UNCAUGHT_EXCEPTION_CAPTURE_ALREADY_SET();\x0d\n  }\x0d\n  exceptionHandlerState.captureFn = fn;\x0d\n  shouldAbortOnUncaughtToggle[0] = 0;\x0d\n  exceptionHandlerState.reportFlag =\x0d\n    process.report.reportOnUncaughtException === true;\x0d\n  process.report.reportOnUncaughtException = false;\x0d\n}\x0d\n\x0d\nfunction hasUncaughtExceptionCaptureCallback() {\x0d\n  return exceptionHandlerState.captureFn !== null;\x0d\n}\x0d\n\x0d\nfunction noop() {}\x0d\n\x0d\n// XXX(joyeecheung): for some reason this cannot be defined at the top-level\x0d\n// and exported to be written to process._fatalException\x2C it has to be\x0d\n// returned as an *anonymous function* wrapped inside a factory function\x2C\x0d\n// otherwise it breaks the test-timers.setInterval async hooks test -\x0d\n// this may indicate that node::errors::TriggerUncaughtException() should\x0d\n// fix up the callback scope before calling into process._fatalException\x2C\x0d\n// or this function should take extra care of the async hooks before it\x0d\n// schedules a setImmediate.\x0d\nfunction createOnGlobalUncaughtException() {\x0d\n  // The C++ land node::errors::TriggerUncaughtException() will\x0d\n  // exit the process if it returns false\x2C and continue execution if it\x0d\n  // returns true (which indicates that the exception is handled by the user).\x0d\n  return (er\x2C fromPromise) => {\x0d\n    // It's possible that defaultTriggerAsyncId was set for a constructor\x0d\n    // call that threw and was never cleared. So clear it now.\x0d\n    clearDefaultTriggerAsyncId();\x0d\n\x0d\n    const type = fromPromise ? 'unhandledRejection' : 'uncaughtException';\x0d\n    process.emit('uncaughtExceptionMonitor'\x2C er\x2C type);\x0d\n    if (exceptionHandlerState.captureFn !== null) {\x0d\n      exceptionHandlerState.captureFn(er);\x0d\n    } else if (!process.emit('uncaughtException'\x2C er\x2C type)) {\x0d\n      // If someone handled it\x2C then great. Otherwise\x2C die in C++ land\x0d\n      // since that means that we'll exit the process\x2C emit the 'exit' event.\x0d\n      try {\x0d\n        if (!process._exiting) {\x0d\n          process._exiting = true;\x0d\n          process.exitCode = kGenericUserError;\x0d\n          process.emit('exit'\x2C kGenericUserError);\x0d\n        }\x0d\n      } catch {\x0d\n        // Nothing to be done about it at this point.\x0d\n      }\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    // If we handled an error\x2C then make sure any ticks get processed\x0d\n    // by ensuring that the next Immediate cycle isn't empty.\x0d\n    require('timers').setImmediate(noop);\x0d\n\x0d\n    // Emit the after() hooks now that the exception has been handled.\x0d\n    if (afterHooksExist()) {\x0d\n      do {\x0d\n        const asyncId = executionAsyncId();\x0d\n        if (asyncId === 0)\x0d\n          popAsyncContext(0);\x0d\n        else\x0d\n          emitAfter(asyncId);\x0d\n      } while (hasAsyncIdStack());\x0d\n    }\x0d\n    // And completely empty the id stack\x2C including anything that may be\x0d\n    // cached on the native side.\x0d\n    clearAsyncIdStack();\x0d\n\x0d\n    return true;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction readStdin(callback) {\x0d\n  process.stdin.setEncoding('utf8');\x0d\n\x0d\n  let code = '';\x0d\n  process.stdin.on('data'\x2C (d) => {\x0d\n    code += d;\x0d\n  });\x0d\n\x0d\n  process.stdin.on('end'\x2C () => {\x0d\n    callback(code);\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  readStdin\x2C\x0d\n  tryGetCwd\x2C\x0d\n  evalModule\x2C\x0d\n  evalScript\x2C\x0d\n  onGlobalUncaughtException: createOnGlobalUncaughtException()\x2C\x0d\n  setUncaughtExceptionCaptureCallback\x2C\x0d\n  hasUncaughtExceptionCaptureCallback\x2C\x0d\n};\x0d\n
code-source-info,0xa5da608634,40,5060,5119,C0O5068C5O5097C10O5107C11O5116,,
code-creation,JS,10,218159,0xa5da608f54,124,prepareStackTraceCallback node:internal/errors:131:35,0xa4fec3a018,~
code-source-info,0xa5da608f54,10,3852,4975,C0O3994C5O4017C10O4017C17O4046C20O4065C25O4065C31O4082C34O4101C39O4107C44O4128C49O4144C50O4353C57O4358C68O4419C73O4425C78O4425C84O4457C85O4685C90O4713C98O4754C101O4778C106O4778C112O4810C113O4925C118O4932C123O4972,,
code-creation,JS,10,218216,0xa5da6090e4,11,ErrorPrepareStackTrace node:internal/errors:162:32,0xa4fec3a070,~
code-source-info,0xa5da6090e4,10,5076,5146,C0O5096C5O5103C10O5143,,
code-creation,JS,10,218267,0xa5da609264,104,defaultPrepareStackTrace node:internal/errors:95:34,0xa4fec39458,~
code-source-info,0xa5da609264,10,2429,2879,C0O2558C2O2574C9O2591C14O2631C26O2646C41O2662C52O2690C57O2704C62O2753C68O2760C73O2774C75O2793C76O2802C88O2835C94O2835C103O2876,,
code-creation,JS,10,218372,0xa5da60a77c,10,useDomainTrampoline node:internal/async_hooks:114:29,0x1d9b7241698,~
code-source-info,0xa5da60a77c,14,5249,5277,C0O5259C2O5269C9O5276,,
code-creation,JS,10,218442,0xa5da60aa94,322,arrayClone node:events:894:20,0x1d9b72506d0,~
code-source-info,0xa5da60aa94,23,26266,26731,C0O26408C42O26431C50O26442C62O26450C71O26455C72O26469C80O26480C92O26488C104O26496C113O26501C114O26515C122O26526C134O26534C146O26542C158O26550C167O26555C168O26569C176O26580C188O26588C200O26596C212O26604C224O26612C233O26617C234O26631C242O26642C254O26650C266O26658C278O26666C290O26674C302O26682C311O26687C312O26696C317O26703C321O26728,,
code-creation,JS,10,218509,0xa5da60ad1c,50, node:domain:186:27,0xa5da606f50,~
code-source-info,0xa5da60ad1c,126,6429,6781,C0O6454C2O6463C9O6506C14O6648C17O6656C25O6656C31O6713C34O6721C42O6721C49O6780,,
code-creation,Eval,10,219031,0xa5da60d884,5, node:internal/repl/utils:1:1,0xa5da60d510,~
script-source,127,node:internal/repl/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  Boolean\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  MathMin\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeSet\x2C\x0d\n  SafeStringIterator\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeReplaceAll\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { tokTypes: tt\x2C Parser: AcornParser } =\x0d\n  require('internal/deps/acorn/acorn/dist/acorn');\x0d\n\x0d\nconst { sendInspectorCommand } = require('internal/util/inspector');\x0d\n\x0d\nconst {\x0d\n  ERR_INSPECTOR_NOT_AVAILABLE\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst {\x0d\n  clearLine\x2C\x0d\n  clearScreenDown\x2C\x0d\n  cursorTo\x2C\x0d\n  moveCursor\x2C\x0d\n} = require('internal/readline/callbacks');\x0d\n\x0d\nconst {\x0d\n  commonPrefix\x2C\x0d\n  kSubstringSearch\x2C\x0d\n} = require('internal/readline/utils');\x0d\n\x0d\nconst {\x0d\n  getStringWidth\x2C\x0d\n  inspect\x2C\x0d\n} = require('internal/util/inspect');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('repl'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nconst previewOptions = {\x0d\n  colors: false\x2C\x0d\n  depth: 1\x2C\x0d\n  showHidden: false\x2C\x0d\n};\x0d\n\x0d\nconst REPL_MODE_STRICT = Symbol('repl-strict');\x0d\n\x0d\n// If the error is that we've unexpectedly ended the input\x2C\x0d\n// then let the user try to recover by adding more input.\x0d\n// Note: `e` (the original exception) is not used by the current implementation\x2C\x0d\n// but may be needed in the future.\x0d\nfunction isRecoverableError(e\x2C code) {\x0d\n  // For similar reasons as `defaultEval`\x2C wrap expressions starting with a\x0d\n  // curly brace with parenthesis.  Note: only the open parenthesis is added\x0d\n  // here as the point is to test for potentially valid but incomplete\x0d\n  // expressions.\x0d\n  if (RegExpPrototypeExec(/^\\s*\\{/\x2C code) !== null &&\x0d\n      isRecoverableError(e\x2C `(${code}`))\x0d\n    return true;\x0d\n\x0d\n  let recoverable = false;\x0d\n\x0d\n  // Determine if the point of any error raised is at the end of the input.\x0d\n  // There are two cases to consider:\x0d\n  //\x0d\n  //   1.  Any error raised after we have encountered the 'eof' token.\x0d\n  //       This prevents us from declaring partial tokens (like '2e') as\x0d\n  //       recoverable.\x0d\n  //\x0d\n  //   2.  Three cases where tokens can legally span lines.  This is\x0d\n  //       template\x2C comment\x2C and strings with a backslash at the end of\x0d\n  //       the line\x2C indicating a continuation.  Note that we need to look\x0d\n  //       for the specific errors of 'unterminated' kind (not\x2C for example\x2C\x0d\n  //       a syntax error in a ${} expression in a template)\x2C and the only\x0d\n  //       way to do that currently is to look at the message.  Should Acorn\x0d\n  //       change these messages in the future\x2C this will lead to a test\x0d\n  //       failure\x2C indicating that this code needs to be updated.\x0d\n  //\x0d\n  const RecoverableParser = AcornParser\x0d\n    .extend(\x0d\n      (Parser) => {\x0d\n        return class extends Parser {\x0d\n          // eslint-disable-next-line no-useless-constructor\x0d\n          constructor(options\x2C input\x2C startPos) {\x0d\n            super(options\x2C input\x2C startPos);\x0d\n          }\x0d\n          nextToken() {\x0d\n            super.nextToken();\x0d\n            if (this.type === tt.eof)\x0d\n              recoverable = true;\x0d\n          }\x0d\n          raise(pos\x2C message) {\x0d\n            switch (message) {\x0d\n              case 'Unterminated template':\x0d\n              case 'Unterminated comment':\x0d\n                recoverable = true;\x0d\n                break;\x0d\n\x0d\n              case 'Unterminated string constant': {\x0d\n                const token = StringPrototypeSlice(this.input\x2C\x0d\n                                                   this.lastTokStart\x2C this.pos);\x0d\n                // See https://www.ecma-international.org/ecma-262/#sec-line-terminators\x0d\n                if (RegExpPrototypeExec(/\\\\(?:\\r\\n?|\\n|\\u2028|\\u2029)$/\x2C\x0d\n                                        token) !== null) {\x0d\n                  recoverable = true;\x0d\n                }\x0d\n              }\x0d\n            }\x0d\n            super.raise(pos\x2C message);\x0d\n          }\x0d\n        };\x0d\n      }\x2C\x0d\n    );\x0d\n\x0d\n  // Try to parse the code with acorn.  If the parse fails\x2C ignore the acorn\x0d\n  // error and return the recoverable status.\x0d\n  try {\x0d\n    RecoverableParser.parse(code\x2C { ecmaVersion: 'latest' });\x0d\n\x0d\n    // Odd case: the underlying JS engine (V8\x2C Chakra) rejected this input\x0d\n    // but Acorn detected no issue.  Presume that additional text won't\x0d\n    // address this issue.\x0d\n    return false;\x0d\n  } catch {\x0d\n    return recoverable;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupPreview(repl\x2C contextSymbol\x2C bufferSymbol\x2C active) {\x0d\n  // Simple terminals can't handle previews.\x0d\n  if (process.env.TERM === 'dumb' || !active) {\x0d\n    return { showPreview() {}\x2C clearPreview() {} };\x0d\n  }\x0d\n\x0d\n  let inputPreview = null;\x0d\n\x0d\n  let previewCompletionCounter = 0;\x0d\n  let completionPreview = null;\x0d\n\x0d\n  let hasCompletions = false;\x0d\n\x0d\n  let wrapped = false;\x0d\n\x0d\n  let escaped = null;\x0d\n\x0d\n  function getPreviewPos() {\x0d\n    const displayPos = repl._getDisplayPos(`${repl.getPrompt()}${repl.line}`);\x0d\n    const cursorPos = repl.line.length !== repl.cursor ?\x0d\n      repl.getCursorPos() :\x0d\n      displayPos;\x0d\n    return { displayPos\x2C cursorPos };\x0d\n  }\x0d\n\x0d\n  function isCursorAtInputEnd() {\x0d\n    const { cursorPos\x2C displayPos } = getPreviewPos();\x0d\n    return cursorPos.rows === displayPos.rows &&\x0d\n           cursorPos.cols === displayPos.cols;\x0d\n  }\x0d\n\x0d\n  const clearPreview = (key) => {\x0d\n    if (inputPreview !== null) {\x0d\n      const { displayPos\x2C cursorPos } = getPreviewPos();\x0d\n      const rows = displayPos.rows - cursorPos.rows + 1;\x0d\n      moveCursor(repl.output\x2C 0\x2C rows);\x0d\n      clearLine(repl.output);\x0d\n      moveCursor(repl.output\x2C 0\x2C -rows);\x0d\n      inputPreview = null;\x0d\n    }\x0d\n    if (completionPreview !== null) {\x0d\n      // Prevent cursor moves if not necessary!\x0d\n      const move = repl.line.length !== repl.cursor;\x0d\n      let pos\x2C rows;\x0d\n      if (move) {\x0d\n        pos = getPreviewPos();\x0d\n        cursorTo(repl.output\x2C pos.displayPos.cols);\x0d\n        rows = pos.displayPos.rows - pos.cursorPos.rows;\x0d\n        moveCursor(repl.output\x2C 0\x2C rows);\x0d\n      }\x0d\n      const totalLine = `${repl.getPrompt()}${repl.line}${completionPreview}`;\x0d\n      const newPos = repl._getDisplayPos(totalLine);\x0d\n      // Minimize work for the terminal. It is enough to clear the right part of\x0d\n      // the current line in case the preview is visible on a single line.\x0d\n      if (newPos.rows === 0 || (pos && pos.displayPos.rows === newPos.rows)) {\x0d\n        clearLine(repl.output\x2C 1);\x0d\n      } else {\x0d\n        clearScreenDown(repl.output);\x0d\n      }\x0d\n      if (move) {\x0d\n        cursorTo(repl.output\x2C pos.cursorPos.cols);\x0d\n        moveCursor(repl.output\x2C 0\x2C -rows);\x0d\n      }\x0d\n      if (!key.ctrl && !key.shift) {\x0d\n        if (key.name === 'escape') {\x0d\n          if (escaped === null && key.meta) {\x0d\n            escaped = repl.line;\x0d\n          }\x0d\n        } else if ((key.name === 'return' || key.name === 'enter') &&\x0d\n                   !key.meta &&\x0d\n                   escaped !== repl.line &&\x0d\n                   isCursorAtInputEnd()) {\x0d\n          repl._insertString(completionPreview);\x0d\n        }\x0d\n      }\x0d\n      completionPreview = null;\x0d\n    }\x0d\n    if (escaped !== repl.line) {\x0d\n      escaped = null;\x0d\n    }\x0d\n  };\x0d\n\x0d\n  function showCompletionPreview(line\x2C insertPreview) {\x0d\n    previewCompletionCounter++;\x0d\n\x0d\n    const count = previewCompletionCounter;\x0d\n\x0d\n    repl.completer(line\x2C (error\x2C data) => {\x0d\n      // Tab completion might be async and the result might already be outdated.\x0d\n      if (count !== previewCompletionCounter) {\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      if (error) {\x0d\n        debug('Error while generating completion preview'\x2C error);\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      // Result and the text that was completed.\x0d\n      const { 0: rawCompletions\x2C 1: completeOn } = data;\x0d\n\x0d\n      if (!rawCompletions || rawCompletions.length === 0) {\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      hasCompletions = true;\x0d\n\x0d\n      // If there is a common prefix to all matches\x2C then apply that portion.\x0d\n      const completions = ArrayPrototypeFilter(rawCompletions\x2C Boolean);\x0d\n      const prefix = commonPrefix(completions);\x0d\n\x0d\n      // No common prefix found.\x0d\n      if (prefix.length <= completeOn.length) {\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      const suffix = StringPrototypeSlice(prefix\x2C completeOn.length);\x0d\n\x0d\n      if (insertPreview) {\x0d\n        repl._insertString(suffix);\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      completionPreview = suffix;\x0d\n\x0d\n      const result = repl.useColors ?\x0d\n        `\\u001b[90m${suffix}\\u001b[39m` :\x0d\n        ` // ${suffix}`;\x0d\n\x0d\n      const { cursorPos\x2C displayPos } = getPreviewPos();\x0d\n      if (repl.line.length !== repl.cursor) {\x0d\n        cursorTo(repl.output\x2C displayPos.cols);\x0d\n        moveCursor(repl.output\x2C 0\x2C displayPos.rows - cursorPos.rows);\x0d\n      }\x0d\n      repl.output.write(result);\x0d\n      cursorTo(repl.output\x2C cursorPos.cols);\x0d\n      const totalLine = `${repl.getPrompt()}${repl.line}${suffix}`;\x0d\n      const newPos = repl._getDisplayPos(totalLine);\x0d\n      const rows = newPos.rows - cursorPos.rows - (newPos.cols === 0 ? 1 : 0);\x0d\n      moveCursor(repl.output\x2C 0\x2C -rows);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  function isInStrictMode(repl) {\x0d\n    return repl.replMode === REPL_MODE_STRICT || ArrayPrototypeIncludes(\x0d\n      ArrayPrototypeMap(process.execArgv\x2C\x0d\n                        (e) => StringPrototypeReplaceAll(\x0d\n                          StringPrototypeToLowerCase(e)\x2C\x0d\n                          '_'\x2C\x0d\n                          '-'\x2C\x0d\n                        ))\x2C\x0d\n      '--use-strict');\x0d\n  }\x0d\n\x0d\n  // This returns a code preview for arbitrary input code.\x0d\n  function getInputPreview(input\x2C callback) {\x0d\n    // For similar reasons as `defaultEval`\x2C wrap expressions starting with a\x0d\n    // curly brace with parenthesis.\x0d\n    if (StringPrototypeStartsWith(input\x2C '{') &&\x0d\n        !StringPrototypeEndsWith(input\x2C ';') && !wrapped) {\x0d\n      input = `(${input})`;\x0d\n      wrapped = true;\x0d\n    }\x0d\n    sendInspectorCommand((session) => {\x0d\n      session.post('Runtime.evaluate'\x2C {\x0d\n        expression: input\x2C\x0d\n        throwOnSideEffect: true\x2C\x0d\n        timeout: 333\x2C\x0d\n        contextId: repl[contextSymbol]\x2C\x0d\n      }\x2C (error\x2C preview) => {\x0d\n        if (error) {\x0d\n          callback(error);\x0d\n          return;\x0d\n        }\x0d\n        const { result } = preview;\x0d\n        if (result.value !== undefined) {\x0d\n          callback(null\x2C inspect(result.value\x2C previewOptions));\x0d\n        // Ignore EvalErrors\x2C SyntaxErrors and ReferenceErrors. It is not clear\x0d\n        // where they came from and if they are recoverable or not. Other errors\x0d\n        // may be inspected.\x0d\n        } else if (preview.exceptionDetails &&\x0d\n                   (result.className === 'EvalError' ||\x0d\n                    result.className === 'SyntaxError' ||\x0d\n                    // Report ReferenceError in case the strict mode is active\x0d\n                    // for input that has no completions.\x0d\n                    (result.className === 'ReferenceError' &&\x0d\n                     (hasCompletions || !isInStrictMode(repl))))) {\x0d\n          callback(null\x2C null);\x0d\n        } else if (result.objectId) {\x0d\n          // The writer options might change and have influence on the inspect\x0d\n          // output. The user might change e.g.\x2C `showProxy`\x2C `getters` or\x0d\n          // `showHidden`. Use `inspect` instead of `JSON.stringify` to keep\x0d\n          // `Infinity` and similar intact.\x0d\n          const inspectOptions = inspect({\x0d\n            ...repl.writer.options\x2C\x0d\n            colors: false\x2C\x0d\n            depth: 1\x2C\x0d\n            compact: true\x2C\x0d\n            breakLength: Infinity\x2C\x0d\n          }\x2C previewOptions);\x0d\n          session.post('Runtime.callFunctionOn'\x2C {\x0d\n            functionDeclaration:\x0d\n              `(v) =>\x0d\n                    Reflect\x0d\n                    .getOwnPropertyDescriptor(globalThis\x2C 'util')\x0d\n                    .get().inspect(v\x2C ${inspectOptions})`\x2C\x0d\n            objectId: result.objectId\x2C\x0d\n            arguments: [result]\x2C\x0d\n          }\x2C (error\x2C preview) => {\x0d\n            if (error) {\x0d\n              callback(error);\x0d\n            } else {\x0d\n              callback(null\x2C preview.result.value);\x0d\n            }\x0d\n          });\x0d\n        } else {\x0d\n          // Either not serializable or undefined.\x0d\n          callback(null\x2C result.unserializableValue || result.type);\x0d\n        }\x0d\n      });\x0d\n    }\x2C () => callback(new ERR_INSPECTOR_NOT_AVAILABLE()));\x0d\n  }\x0d\n\x0d\n  const showPreview = (showCompletion = true) => {\x0d\n    // Prevent duplicated previews after a refresh.\x0d\n    if (inputPreview !== null || !repl.isCompletionEnabled) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    const line = StringPrototypeTrim(repl.line);\x0d\n\x0d\n    // Do not preview in case the line only contains whitespace.\x0d\n    if (line === '') {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    hasCompletions = false;\x0d\n\x0d\n    // Add the autocompletion preview.\x0d\n    if (showCompletion) {\x0d\n      const insertPreview = false;\x0d\n      showCompletionPreview(repl.line\x2C insertPreview);\x0d\n    }\x0d\n\x0d\n    // Do not preview if the command is buffered.\x0d\n    if (repl[bufferSymbol]) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    const inputPreviewCallback = (error\x2C inspected) => {\x0d\n      if (inspected == null) {\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      wrapped = false;\x0d\n\x0d\n      // Ignore the output if the value is identical to the current line.\x0d\n      if (line === inspected) {\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      if (error) {\x0d\n        debug('Error while generating preview'\x2C error);\x0d\n        return;\x0d\n      }\x0d\n      // Do not preview `undefined` if colors are deactivated or explicitly\x0d\n      // requested.\x0d\n      if (inspected === 'undefined' &&\x0d\n          (!repl.useColors || repl.ignoreUndefined)) {\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      inputPreview = inspected;\x0d\n\x0d\n      // Limit the output to maximum 250 characters. Otherwise it becomes a)\x0d\n      // difficult to read and b) non terminal REPLs would visualize the whole\x0d\n      // output.\x0d\n      let maxColumns = MathMin(repl.columns\x2C 250);\x0d\n\x0d\n      // Support unicode characters of width other than one by checking the\x0d\n      // actual width.\x0d\n      if (inspected.length * 2 >= maxColumns &&\x0d\n          getStringWidth(inspected) > maxColumns) {\x0d\n        maxColumns -= 4 + (repl.useColors ? 0 : 3);\x0d\n        let res = '';\x0d\n        for (const char of new SafeStringIterator(inspected)) {\x0d\n          maxColumns -= getStringWidth(char);\x0d\n          if (maxColumns < 0)\x0d\n            break;\x0d\n          res += char;\x0d\n        }\x0d\n        inspected = `${res}...`;\x0d\n      }\x0d\n\x0d\n      // Line breaks are very rare and probably only occur in case of error\x0d\n      // messages with line breaks.\x0d\n      const lineBreakPos = StringPrototypeIndexOf(inspected\x2C '\\n');\x0d\n      if (lineBreakPos !== -1) {\x0d\n        inspected = `${StringPrototypeSlice(inspected\x2C 0\x2C lineBreakPos)}`;\x0d\n      }\x0d\n\x0d\n      const result = repl.useColors ?\x0d\n        `\\u001b[90m${inspected}\\u001b[39m` :\x0d\n        `// ${inspected}`;\x0d\n\x0d\n      const { cursorPos\x2C displayPos } = getPreviewPos();\x0d\n      const rows = displayPos.rows - cursorPos.rows;\x0d\n      moveCursor(repl.output\x2C 0\x2C rows);\x0d\n      repl.output.write(`\\n${result}`);\x0d\n      cursorTo(repl.output\x2C cursorPos.cols);\x0d\n      moveCursor(repl.output\x2C 0\x2C -rows - 1);\x0d\n    };\x0d\n\x0d\n    let previewLine = line;\x0d\n\x0d\n    if (completionPreview !== null &&\x0d\n        isCursorAtInputEnd() &&\x0d\n        escaped !== repl.line) {\x0d\n      previewLine += completionPreview;\x0d\n    }\x0d\n\x0d\n    getInputPreview(previewLine\x2C inputPreviewCallback);\x0d\n    if (wrapped) {\x0d\n      getInputPreview(previewLine\x2C inputPreviewCallback);\x0d\n    }\x0d\n    wrapped = false;\x0d\n  };\x0d\n\x0d\n  // -------------------------------------------------------------------------//\x0d\n  // Replace multiple interface functions. This is required to fully support  //\x0d\n  // previews without changing readlines behavior.                            //\x0d\n  // -------------------------------------------------------------------------//\x0d\n\x0d\n  // Refresh prints the whole screen again and the preview will be removed\x0d\n  // during that procedure. Print the preview again. This also makes sure\x0d\n  // the preview is always correct after resizing the terminal window.\x0d\n  const originalRefresh = FunctionPrototypeBind(repl._refreshLine\x2C repl);\x0d\n  repl._refreshLine = () => {\x0d\n    inputPreview = null;\x0d\n    originalRefresh();\x0d\n    showPreview();\x0d\n  };\x0d\n\x0d\n  let insertCompletionPreview = true;\x0d\n  // Insert the longest common suffix of the current input in case the user\x0d\n  // moves to the right while already being at the current input end.\x0d\n  const originalMoveCursor = FunctionPrototypeBind(repl._moveCursor\x2C repl);\x0d\n  repl._moveCursor = (dx) => {\x0d\n    const currentCursor = repl.cursor;\x0d\n    originalMoveCursor(dx);\x0d\n    if (currentCursor + dx > repl.line.length &&\x0d\n        typeof repl.completer === 'function' &&\x0d\n        insertCompletionPreview) {\x0d\n      const insertPreview = true;\x0d\n      showCompletionPreview(repl.line\x2C insertPreview);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // This is the only function that interferes with the completion insertion.\x0d\n  // Monkey patch it to prevent inserting the completion when it shouldn't be.\x0d\n  const originalClearLine = FunctionPrototypeBind(repl.clearLine\x2C repl);\x0d\n  repl.clearLine = () => {\x0d\n    insertCompletionPreview = false;\x0d\n    originalClearLine();\x0d\n    insertCompletionPreview = true;\x0d\n  };\x0d\n\x0d\n  return { showPreview\x2C clearPreview };\x0d\n}\x0d\n\x0d\nfunction setupReverseSearch(repl) {\x0d\n  // Simple terminals can't use reverse search.\x0d\n  if (process.env.TERM === 'dumb') {\x0d\n    return { reverseSearch() { return false; } };\x0d\n  }\x0d\n\x0d\n  const alreadyMatched = new SafeSet();\x0d\n  const labels = {\x0d\n    r: 'bck-i-search: '\x2C\x0d\n    s: 'fwd-i-search: '\x2C\x0d\n  };\x0d\n  let isInReverseSearch = false;\x0d\n  let historyIndex = -1;\x0d\n  let input = '';\x0d\n  let cursor = -1;\x0d\n  let dir = 'r';\x0d\n  let lastMatch = -1;\x0d\n  let lastCursor = -1;\x0d\n  let promptPos;\x0d\n\x0d\n  function checkAndSetDirectionKey(keyName) {\x0d\n    if (!labels[keyName]) {\x0d\n      return false;\x0d\n    }\x0d\n    if (dir !== keyName) {\x0d\n      // Reset the already matched set in case the direction is changed. That\x0d\n      // way it's possible to find those entries again.\x0d\n      alreadyMatched.clear();\x0d\n      dir = keyName;\x0d\n    }\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  function goToNextHistoryIndex() {\x0d\n    // Ignore this entry for further searches and continue to the next\x0d\n    // history entry.\x0d\n    alreadyMatched.add(repl.history[historyIndex]);\x0d\n    historyIndex += dir === 'r' ? 1 : -1;\x0d\n    cursor = -1;\x0d\n  }\x0d\n\x0d\n  function search() {\x0d\n    // Just print an empty line in case the user removed the search parameter.\x0d\n    if (input === '') {\x0d\n      print(repl.line\x2C `${labels[dir]}_`);\x0d\n      return;\x0d\n    }\x0d\n    // Fix the bounds in case the direction has changed in the meanwhile.\x0d\n    if (dir === 'r') {\x0d\n      if (historyIndex < 0) {\x0d\n        historyIndex = 0;\x0d\n      }\x0d\n    } else if (historyIndex >= repl.history.length) {\x0d\n      historyIndex = repl.history.length - 1;\x0d\n    }\x0d\n    // Check the history entries until a match is found.\x0d\n    while (historyIndex >= 0 && historyIndex < repl.history.length) {\x0d\n      let entry = repl.history[historyIndex];\x0d\n      // Visualize all potential matches only once.\x0d\n      if (alreadyMatched.has(entry)) {\x0d\n        historyIndex += dir === 'r' ? 1 : -1;\x0d\n        continue;\x0d\n      }\x0d\n      // Match the next entry either from the start or from the end\x2C depending\x0d\n      // on the current direction.\x0d\n      if (dir === 'r') {\x0d\n        // Update the cursor in case it's necessary.\x0d\n        if (cursor === -1) {\x0d\n          cursor = entry.length;\x0d\n        }\x0d\n        cursor = StringPrototypeLastIndexOf(entry\x2C input\x2C cursor - 1);\x0d\n      } else {\x0d\n        cursor = StringPrototypeIndexOf(entry\x2C input\x2C cursor + 1);\x0d\n      }\x0d\n      // Match not found.\x0d\n      if (cursor === -1) {\x0d\n        goToNextHistoryIndex();\x0d\n      // Match found.\x0d\n      } else {\x0d\n        if (repl.useColors) {\x0d\n          const start = StringPrototypeSlice(entry\x2C 0\x2C cursor);\x0d\n          const end = StringPrototypeSlice(entry\x2C cursor + input.length);\x0d\n          entry = `${start}\\x1B[4m${input}\\x1B[24m${end}`;\x0d\n        }\x0d\n        print(entry\x2C `${labels[dir]}${input}_`\x2C cursor);\x0d\n        lastMatch = historyIndex;\x0d\n        lastCursor = cursor;\x0d\n        // Explicitly go to the next history item in case no further matches are\x0d\n        // possible with the current entry.\x0d\n        if ((dir === 'r' && cursor === 0) ||\x0d\n            (dir === 's' && entry.length === cursor + input.length)) {\x0d\n          goToNextHistoryIndex();\x0d\n        }\x0d\n        return;\x0d\n      }\x0d\n    }\x0d\n    print(repl.line\x2C `failed-${labels[dir]}${input}_`);\x0d\n  }\x0d\n\x0d\n  function print(outputLine\x2C inputLine\x2C cursor = repl.cursor) {\x0d\n    // TODO(BridgeAR): Resizing the terminal window hides the overlay. To fix\x0d\n    // that\x2C readline must be aware of this information. It's probably best to\x0d\n    // add a couple of properties to readline that allow to do the following:\x0d\n    // 1. Add arbitrary data to the end of the current line while not counting\x0d\n    //    towards the line. This would be useful for the completion previews.\x0d\n    // 2. Add arbitrary extra lines that do not count towards the regular line.\x0d\n    //    This would be useful for both\x2C the input preview and the reverse\x0d\n    //    search. It might be combined with the first part?\x0d\n    // 3. Add arbitrary input that is "on top" of the current line. That is\x0d\n    //    useful for the reverse search.\x0d\n    // 4. To trigger the line refresh\x2C functions should be used to pass through\x0d\n    //    the information. Alternatively\x2C getters and setters could be used.\x0d\n    //    That might even be more elegant.\x0d\n    // The data would then be accounted for when calling `_refreshLine()`.\x0d\n    // This function would then look similar to:\x0d\n    //   repl.overlay(outputLine);\x0d\n    //   repl.addTrailingLine(inputLine);\x0d\n    //   repl.setCursor(cursor);\x0d\n    // More potential improvements: use something similar to stream.cork().\x0d\n    // Multiple cursor moves on the same tick could be prevented in case all\x0d\n    // writes from the same tick are combined and the cursor is moved at the\x0d\n    // tick end instead of after each operation.\x0d\n    let rows = 0;\x0d\n    if (lastMatch !== -1) {\x0d\n      const line = StringPrototypeSlice(repl.history[lastMatch]\x2C 0\x2C lastCursor);\x0d\n      rows = repl._getDisplayPos(`${repl.getPrompt()}${line}`).rows;\x0d\n      cursorTo(repl.output\x2C promptPos.cols);\x0d\n    } else if (isInReverseSearch && repl.line !== '') {\x0d\n      rows = repl.getCursorPos().rows;\x0d\n      cursorTo(repl.output\x2C promptPos.cols);\x0d\n    }\x0d\n    if (rows !== 0)\x0d\n      moveCursor(repl.output\x2C 0\x2C -rows);\x0d\n\x0d\n    if (isInReverseSearch) {\x0d\n      clearScreenDown(repl.output);\x0d\n      repl.output.write(`${outputLine}\\n${inputLine}`);\x0d\n    } else {\x0d\n      repl.output.write(`\\n${inputLine}`);\x0d\n    }\x0d\n\x0d\n    lastMatch = -1;\x0d\n\x0d\n    // To know exactly how many rows we have to move the cursor back we need the\x0d\n    // cursor rows\x2C the output rows and the input rows.\x0d\n    const prompt = repl.getPrompt();\x0d\n    const cursorLine = prompt + StringPrototypeSlice(outputLine\x2C 0\x2C cursor);\x0d\n    const cursorPos = repl._getDisplayPos(cursorLine);\x0d\n    const outputPos = repl._getDisplayPos(`${prompt}${outputLine}`);\x0d\n    const inputPos = repl._getDisplayPos(inputLine);\x0d\n    const inputRows = inputPos.rows - (inputPos.cols === 0 ? 1 : 0);\x0d\n\x0d\n    rows = -1 - inputRows - (outputPos.rows - cursorPos.rows);\x0d\n\x0d\n    moveCursor(repl.output\x2C 0\x2C rows);\x0d\n    cursorTo(repl.output\x2C cursorPos.cols);\x0d\n  }\x0d\n\x0d\n  function reset(string) {\x0d\n    isInReverseSearch = string !== undefined;\x0d\n\x0d\n    // In case the reverse search ends and a history entry is found\x2C reset the\x0d\n    // line to the found entry.\x0d\n    if (!isInReverseSearch) {\x0d\n      if (lastMatch !== -1) {\x0d\n        repl.line = repl.history[lastMatch];\x0d\n        repl.cursor = lastCursor;\x0d\n        repl.historyIndex = lastMatch;\x0d\n      }\x0d\n\x0d\n      lastMatch = -1;\x0d\n\x0d\n      // Clear screen and write the current repl.line before exiting.\x0d\n      cursorTo(repl.output\x2C promptPos.cols);\x0d\n      moveCursor(repl.output\x2C 0\x2C promptPos.rows);\x0d\n      clearScreenDown(repl.output);\x0d\n      if (repl.line !== '') {\x0d\n        repl.output.write(repl.line);\x0d\n        if (repl.line.length !== repl.cursor) {\x0d\n          const { cols\x2C rows } = repl.getCursorPos();\x0d\n          cursorTo(repl.output\x2C cols);\x0d\n          moveCursor(repl.output\x2C 0\x2C rows);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    input = string || '';\x0d\n    cursor = -1;\x0d\n    historyIndex = repl.historyIndex;\x0d\n    alreadyMatched.clear();\x0d\n  }\x0d\n\x0d\n  function reverseSearch(string\x2C key) {\x0d\n    if (!isInReverseSearch) {\x0d\n      if (key.ctrl && checkAndSetDirectionKey(key.name)) {\x0d\n        historyIndex = repl.historyIndex;\x0d\n        promptPos = repl._getDisplayPos(`${repl.getPrompt()}`);\x0d\n        print(repl.line\x2C `${labels[dir]}_`);\x0d\n        isInReverseSearch = true;\x0d\n      }\x0d\n    } else if (key.ctrl && checkAndSetDirectionKey(key.name)) {\x0d\n      search();\x0d\n    } else if (key.name === 'backspace' ||\x0d\n        (key.ctrl && (key.name === 'h' || key.name === 'w'))) {\x0d\n      reset(StringPrototypeSlice(input\x2C 0\x2C input.length - 1));\x0d\n      search();\x0d\n      // Special handle <ctrl> + c and escape. Those should only cancel the\x0d\n      // reverse search. The original line is visible afterwards again.\x0d\n    } else if ((key.ctrl && key.name === 'c') || key.name === 'escape') {\x0d\n      lastMatch = -1;\x0d\n      reset();\x0d\n      return true;\x0d\n      // End search in case either enter is pressed or if any non-reverse-search\x0d\n      // key (combination) is pressed.\x0d\n    } else if (key.ctrl ||\x0d\n               key.meta ||\x0d\n               key.name === 'return' ||\x0d\n               key.name === 'enter' ||\x0d\n               typeof string !== 'string' ||\x0d\n               string === '') {\x0d\n      reset();\x0d\n      repl[kSubstringSearch] = '';\x0d\n    } else {\x0d\n      reset(`${input}${string}`);\x0d\n      search();\x0d\n    }\x0d\n    return isInReverseSearch;\x0d\n  }\x0d\n\x0d\n  return { reverseSearch };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  REPL_MODE_SLOPPY: Symbol('repl-sloppy')\x2C\x0d\n  REPL_MODE_STRICT\x2C\x0d\n  isRecoverableError\x2C\x0d\n  kStandaloneREPL: Symbol('kStandaloneREPL')\x2C\x0d\n  setupPreview\x2C\x0d\n  setupReverseSearch\x2C\x0d\n};\x0d\n
code-source-info,0xa5da60d884,127,0,25956,C0O0C4O25956,,
code-creation,JS,10,220232,0xa5da60dde4,456, node:internal/repl/utils:1:1,0xa5da60d7f8,~
code-source-info,0xa5da60dde4,127,0,25956,C0O0C121O28C127O53C133O80C139O102C145O114C151O140C157O152C163O176C169O188C175O211C181O239C187O266C193O297C199O327C205O352C211O382C217O413C223O437C228O515C231O515C236O484C242O496C248O600C251O600C256O575C262O684C265O684C270O710C275O650C281O796C284O796C289O732C295O746C301O766C307O779C313O890C316O890C321O850C327O867C333O973C336O973C341O940C347O959C353O1022C356O1022C361O1055C374O1056C380O1022C382O1129C386O1129C388O1216C391O1216C395O1216C397O25757C405O25797C415O25823C421O25844C428O25884C438O25914C444O25931C450O25772C455O25955,,
code-creation,Eval,10,220566,0xa5da60eec4,5, node:internal/repl/history:1:1,0xa5da60ec70,~
script-source,128,node:internal/repl/history,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  Boolean\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  RegExpPrototypeSymbolSplit\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Interface } = require('readline');\x0d\nconst path = require('path');\x0d\nconst fs = require('fs');\x0d\nconst os = require('os');\x0d\nlet debug = require('internal/util/debuglog').debuglog('repl'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst permission = require('internal/process/permission');\x0d\nconst { clearTimeout\x2C setTimeout } = require('timers');\x0d\n\x0d\nconst noop = FunctionPrototype;\x0d\n\x0d\n// XXX(chrisdickinson): The 15ms debounce value is somewhat arbitrary.\x0d\n// The debounce is to guard against code pasted into the REPL.\x0d\nconst kDebounceHistoryMS = 15;\x0d\n\x0d\nmodule.exports = setupHistory;\x0d\n\x0d\nfunction _writeToOutput(repl\x2C message) {\x0d\n  repl._writeToOutput(message);\x0d\n  repl._refreshLine();\x0d\n}\x0d\n\x0d\nfunction setupHistory(repl\x2C historyPath\x2C ready) {\x0d\n  // Empty string disables persistent history\x0d\n  if (typeof historyPath === 'string')\x0d\n    historyPath = StringPrototypeTrim(historyPath);\x0d\n\x0d\n  if (historyPath === '') {\x0d\n    repl._historyPrev = _replHistoryMessage;\x0d\n    return ready(null\x2C repl);\x0d\n  }\x0d\n\x0d\n  if (!historyPath) {\x0d\n    try {\x0d\n      historyPath = path.join(os.homedir()\x2C '.node_repl_history');\x0d\n    } catch (err) {\x0d\n      _writeToOutput(repl\x2C '\\nError: Could not get the home directory.\\n' +\x0d\n        'REPL session history will not be persisted.\\n');\x0d\n\x0d\n      debug(err.stack);\x0d\n      repl._historyPrev = _replHistoryMessage;\x0d\n      return ready(null\x2C repl);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (permission.isEnabled() && permission.has('fs.write'\x2C historyPath) === false) {\x0d\n    _writeToOutput(repl\x2C '\\nAccess to FileSystemWrite is restricted.\\n' +\x0d\n      'REPL session history will not be persisted.\\n');\x0d\n    return ready(null\x2C repl);\x0d\n  }\x0d\n\x0d\n  let timer = null;\x0d\n  let writing = false;\x0d\n  let pending = false;\x0d\n  repl.pause();\x0d\n  // History files are conventionally not readable by others:\x0d\n  // https://github.com/nodejs/node/issues/3392\x0d\n  // https://github.com/nodejs/node/pull/3394\x0d\n  fs.open(historyPath\x2C 'a+'\x2C 0o0600\x2C oninit);\x0d\n\x0d\n  function oninit(err\x2C hnd) {\x0d\n    if (err) {\x0d\n      // Cannot open history file.\x0d\n      // Don't crash\x2C just don't persist history.\x0d\n      _writeToOutput(repl\x2C '\\nError: Could not open history file.\\n' +\x0d\n        'REPL session history will not be persisted.\\n');\x0d\n      debug(err.stack);\x0d\n\x0d\n      repl._historyPrev = _replHistoryMessage;\x0d\n      repl.resume();\x0d\n      return ready(null\x2C repl);\x0d\n    }\x0d\n    fs.close(hnd\x2C onclose);\x0d\n  }\x0d\n\x0d\n  function onclose(err) {\x0d\n    if (err) {\x0d\n      return ready(err);\x0d\n    }\x0d\n    fs.readFile(historyPath\x2C 'utf8'\x2C onread);\x0d\n  }\x0d\n\x0d\n  function onread(err\x2C data) {\x0d\n    if (err) {\x0d\n      return ready(err);\x0d\n    }\x0d\n\x0d\n    if (data) {\x0d\n      repl.history = RegExpPrototypeSymbolSplit(/[\\n\\r]+/\x2C data\x2C repl.historySize);\x0d\n    } else {\x0d\n      repl.history = [];\x0d\n    }\x0d\n\x0d\n    fs.open(historyPath\x2C 'r+'\x2C onhandle);\x0d\n  }\x0d\n\x0d\n  function onhandle(err\x2C hnd) {\x0d\n    if (err) {\x0d\n      return ready(err);\x0d\n    }\x0d\n    fs.ftruncate(hnd\x2C 0\x2C (err) => {\x0d\n      repl._historyHandle = hnd;\x0d\n      repl.on('line'\x2C online);\x0d\n      repl.once('exit'\x2C onexit);\x0d\n\x0d\n      // Reading the file data out erases it\x0d\n      repl.once('flushHistory'\x2C function() {\x0d\n        repl.resume();\x0d\n        ready(null\x2C repl);\x0d\n      });\x0d\n      flushHistory();\x0d\n    });\x0d\n  }\x0d\n\x0d\n  // ------ history listeners ------\x0d\n  function online(line) {\x0d\n    repl._flushing = true;\x0d\n\x0d\n    if (timer) {\x0d\n      clearTimeout(timer);\x0d\n    }\x0d\n\x0d\n    timer = setTimeout(flushHistory\x2C kDebounceHistoryMS);\x0d\n  }\x0d\n\x0d\n  function flushHistory() {\x0d\n    timer = null;\x0d\n    if (writing) {\x0d\n      pending = true;\x0d\n      return;\x0d\n    }\x0d\n    writing = true;\x0d\n    const historyData = ArrayPrototypeJoin(repl.history\x2C os.EOL);\x0d\n    fs.write(repl._historyHandle\x2C historyData\x2C 0\x2C 'utf8'\x2C onwritten);\x0d\n  }\x0d\n\x0d\n  function onwritten(err\x2C data) {\x0d\n    writing = false;\x0d\n    if (pending) {\x0d\n      pending = false;\x0d\n      online();\x0d\n    } else {\x0d\n      repl._flushing = Boolean(timer);\x0d\n      if (!repl._flushing) {\x0d\n        repl.emit('flushHistory');\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function onexit() {\x0d\n    if (repl._flushing) {\x0d\n      repl.once('flushHistory'\x2C onexit);\x0d\n      return;\x0d\n    }\x0d\n    repl.off('line'\x2C online);\x0d\n    fs.close(repl._historyHandle\x2C noop);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction _replHistoryMessage() {\x0d\n  if (this.history.length === 0) {\x0d\n    _writeToOutput(\x0d\n      this\x2C\x0d\n      '\\nPersistent history support disabled. ' +\x0d\n      'Set the NODE_REPL_HISTORY environment\\nvariable to ' +\x0d\n      'a valid\x2C user-writable path to enable.\\n'\x2C\x0d\n    );\x0d\n  }\x0d\n  this._historyPrev = Interface.prototype._historyPrev;\x0d\n  return this._historyPrev();\x0d\n}\x0d\n
code-source-info,0xa5da60eec4,128,0,4673,C0O0C4O4673,,
code-creation,JS,10,220816,0xa5da60f1d4,208, node:internal/repl/history:1:1,0xa5da60ee38,~
code-source-info,0xa5da60f1d4,128,0,4673,C0O0C64O28C70O51C76O63C81O85C87O116C93O180C96O180C101O166C107O215C110O215C114O215C116O244C119O244C123O244C125O271C128O271C132O271C134O299C137O299C142O332C155O333C161O299C163O400C166O400C170O400C172O478C175O478C180O449C186O463C192O513C194O513C196O698C198O698C200O705C202O720C207O4672,,
code-creation,Eval,10,221032,0xa5da60fa2c,5, node:internal/modules/esm/formats:1:1,0xa5da60f878,~
script-source,129,node:internal/modules/esm/formats,'use strict';\x0d\n\x0d\nconst { RegExpPrototypeExec } = primordials;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { getValidatedPath } = require('internal/fs/utils');\x0d\nconst pathModule = require('path');\x0d\nconst fsBindings = internalBinding('fs');\x0d\nconst { fs: fsConstants } = internalBinding('constants');\x0d\n\x0d\nconst experimentalWasmModules = getOptionValue('--experimental-wasm-modules');\x0d\n\x0d\nconst extensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'module'\x2C\x0d\n  '.json': 'json'\x2C\x0d\n  '.mjs': 'module'\x2C\x0d\n};\x0d\n\x0d\nif (experimentalWasmModules) {\x0d\n  extensionFormatMap['.wasm'] = 'wasm';\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} mime\x0d\n * @returns {string | null}\x0d\n */\x0d\nfunction mimeToFormat(mime) {\x0d\n  if (\x0d\n    RegExpPrototypeExec(\x0d\n      /^\\s*(text|application)\\/javascript\\s*(;\\s*charset=utf-?8\\s*)?$/i\x2C\x0d\n      mime\x2C\x0d\n    ) !== null\x0d\n  ) { return 'module'; }\x0d\n  if (mime === 'application/json') { return 'json'; }\x0d\n  if (experimentalWasmModules && mime === 'application/wasm') { return 'wasm'; }\x0d\n  return null;\x0d\n}\x0d\n\x0d\n/**\x0d\n * For extensionless files in a `module` package scope\x2C or a default `module` scope enabled by the\x0d\n * `--experimental-default-type` flag\x2C we check the file contents to disambiguate between ES module JavaScript and Wasm.\x0d\n * We do this by taking advantage of the fact that all Wasm files start with the header `0x00 0x61 0x73 0x6d` (`_asm`).\x0d\n * @param {URL} url\x0d\n */\x0d\nfunction getFormatOfExtensionlessFile(url) {\x0d\n  if (!experimentalWasmModules) { return 'module'; }\x0d\n\x0d\n  const path = pathModule.toNamespacedPath(getValidatedPath(url));\x0d\n\x0d\n  switch (fsBindings.getFormatOfExtensionlessFile(path)) {\x0d\n    case fsConstants.EXTENSIONLESS_FORMAT_WASM:\x0d\n      return 'wasm';\x0d\n    default:\x0d\n      return 'module';\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  extensionFormatMap\x2C\x0d\n  getFormatOfExtensionlessFile\x2C\x0d\n  mimeToFormat\x2C\x0d\n};\x0d\n
code-source-info,0xa5da60fa2c,129,0,1861,C0O0C4O1861,,
code-creation,JS,10,221162,0xa5da60fc94,153, node:internal/modules/esm/formats:1:1,0xa5da60f9a0,~
code-source-info,0xa5da60fc94,129,0,1861,C0O0C33O25C39O90C42O90C47O71C52O149C55O149C60O128C66O199C69O199C73O199C75O236C78O236C82O236C84O288C87O288C92O272C98O353C101O353C105O353C107O430C112O545C116O579C118O607C122O1764C129O1786C135O1809C141O1842C147O1779C152O1860,,
code-creation,JS,10,221367,0xa5da60ffd4,82,runInNewContext node:vm:303:25,0x66313e4e28,~
code-source-info,0xa5da60ffd4,117,9649,9984,C0O9685C6O9725C13O9747C22O9766C28O9811C33O9782C40O9843C47O9868C53O9886C61O9906C64O9913C70O9940C75O9941C81O9981,,
code-creation,JS,10,221492,0xa5da6110dc,214,getContextOptions node:vm:195:27,0x66313e4c70,~
code-source-info,0xa5da6110dc,117,5993,7061,C0O6008C4O6027C5O6037C6O6064C11O6085C19O6119C28O6155C32O6194C43O6237C49O6262C54O6292C62O6262C67O6344C73O6371C78O6401C86O6371C91O6450C97O6494C102O6517C110O6494C115O6633C120O6607C125O6616C130O6661C134O6695C142O6695C147O6767C151O6798C159O6798C164O6864C171O6898C177O6907C183O6894C187O6935C193O6969C198O6992C206O6969C211O7036C213O7058,,
code-creation,JS,10,221607,0xa5da611504,282,createContext node:vm:224:23,0x66313e4cc8,~
code-source-info,0xa5da611504,117,7121,8492,C4O7121C16O7152C23O7171C26O7175C32O7208C34O7229C35O7240C43O7240C48O7294C62O7301C69O7338C78O7349C83O7362C88O7383C93O7403C98O7449C106O7449C111O7490C115O7521C121O7521C126O7566C130O7605C136O7605C141O7682C143O7702C145O7711C149O7755C160O7771C168O7809C176O7809C181O7874C187O7874C192O7938C200O7952C209O8044C216O7938C221O8083C223O8098C227O8158C232O8158C238O8218C264O8218C269O8392C274O8392C279O8468C281O8489,,
code-creation,JS,10,221687,0xa5da61178c,31,isContext node:vm:77:19,0x66313e4b68,~
code-source-info,0xa5da61178c,117,2477,2586,C0O2491C10O2524C16O2491C21O2557C26O2564C30O2583,,
code-creation,JS,10,221739,0xa5da61188c,10,isContext node:internal/vm:39:19,0x1d9b7267208,~
script-source,41,node:internal/vm,'use strict';\x0d\n\x0d\nconst {\x0d\n  ReflectApply\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ContextifyScript\x2C\x0d\n  compileFunction\x2C\x0d\n} = internalBinding('contextify');\x0d\nconst {\x0d\n  runInContext\x2C\x0d\n} = ContextifyScript.prototype;\x0d\nconst {\x0d\n  vm_dynamic_import_default_internal\x2C\x0d\n  vm_dynamic_import_main_context_default\x2C\x0d\n  vm_dynamic_import_no_callback\x2C\x0d\n  vm_dynamic_import_missing_flag\x2C\x0d\n} = internalBinding('symbols');\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  getOptionValue\x2C\x0d\n} = require('internal/options');\x0d\nconst {\x0d\n  privateSymbols: {\x0d\n    contextify_context_private_symbol\x2C\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\n\x0d\n/**\x0d\n * Checks if the given object is a context object.\x0d\n * @param {object} object - The object to check.\x0d\n * @returns {boolean} - Returns true if the object is a context object\x2C else false.\x0d\n */\x0d\nfunction isContext(object) {\x0d\n  return object[contextify_context_private_symbol] !== undefined;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Retrieves the host-defined option ID based on the provided importModuleDynamically and hint.\x0d\n * @param {import('internal/modules/esm/utils').ImportModuleDynamicallyCallback | undefined} importModuleDynamically -\x0d\n * The importModuleDynamically function or undefined.\x0d\n * @param {string} hint - The hint for the option ID.\x0d\n * @returns {symbol | import('internal/modules/esm/utils').ImportModuleDynamicallyCallback} - The host-defined option\x0d\n * ID.\x0d\n */\x0d\nfunction getHostDefinedOptionId(importModuleDynamically\x2C hint) {\x0d\n  if (importModuleDynamically === vm_dynamic_import_main_context_default ||\x0d\n      importModuleDynamically === vm_dynamic_import_default_internal) {\x0d\n    return importModuleDynamically;\x0d\n  }\x0d\n\x0d\n  if (importModuleDynamically !== undefined) {\x0d\n    // Check that it's either undefined or a function before we pass\x0d\n    // it into the native constructor.\x0d\n    validateFunction(importModuleDynamically\x2C\x0d\n                     'options.importModuleDynamically');\x0d\n  }\x0d\n  if (importModuleDynamically === undefined) {\x0d\n    // We need a default host defined options that are the same for all\x0d\n    // scripts not needing custom module callbacks so that the isolate\x0d\n    // compilation cache can be hit.\x0d\n    return vm_dynamic_import_no_callback;\x0d\n  }\x0d\n  // We should've thrown here immediately when we introduced\x0d\n  // --experimental-vm-modules and importModuleDynamically\x2C but since\x0d\n  // users are already using this callback to throw a similar error\x2C\x0d\n  // we also defer the error to the time when an actual import() is called\x0d\n  // to avoid breaking them. To ensure that the isolate compilation\x0d\n  // cache can still be hit\x2C use a constant sentinel symbol here.\x0d\n  if (!getOptionValue('--experimental-vm-modules')) {\x0d\n    return vm_dynamic_import_missing_flag;\x0d\n  }\x0d\n\x0d\n  return Symbol(hint);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Registers a dynamically imported module for customization.\x0d\n * @param {string} referrer - The path of the referrer module.\x0d\n * @param {import('internal/modules/esm/utils').ImportModuleDynamicallyCallback} importModuleDynamically - The\x0d\n * dynamically imported module function to be registered.\x0d\n */\x0d\nfunction registerImportModuleDynamically(referrer\x2C importModuleDynamically) {\x0d\n  // If it's undefined or certain known symbol\x2C there's no customization so\x0d\n  // no need to register anything.\x0d\n  if (importModuleDynamically === undefined ||\x0d\n      importModuleDynamically === vm_dynamic_import_main_context_default ||\x0d\n      importModuleDynamically === vm_dynamic_import_default_internal) {\x0d\n    return;\x0d\n  }\x0d\n  const { importModuleDynamicallyWrap } = require('internal/vm/module');\x0d\n  const { registerModule } = require('internal/modules/esm/utils');\x0d\n  registerModule(referrer\x2C {\x0d\n    __proto__: null\x2C\x0d\n    importModuleDynamically:\x0d\n      importModuleDynamicallyWrap(importModuleDynamically)\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Compiles a function from the given code string.\x0d\n * @param {string} code - The code string to compile.\x0d\n * @param {string} filename - The filename to use for the compiled function.\x0d\n * @param {number} lineOffset - The line offset to use for the compiled function.\x0d\n * @param {number} columnOffset - The column offset to use for the compiled function.\x0d\n * @param {Buffer} [cachedData=undefined] - The cached data to use for the compiled function.\x0d\n * @param {boolean} produceCachedData - Whether to produce cached data for the compiled function.\x0d\n * @param {ReturnType<import('vm').createContext} [parsingContext=undefined] - The parsing context to use for the\x0d\n * compiled function.\x0d\n * @param {object[]} [contextExtensions=[]] - An array of context extensions to use for the compiled function.\x0d\n * @param {string[]} [params] - An optional array of parameter names for the compiled function.\x0d\n * @param {symbol} hostDefinedOptionId - A symbol referenced by the field `host_defined_option_symbol`.\x0d\n * @param {import('internal/modules/esm/utils').ImportModuleDynamicallyCallback} [importModuleDynamically] -\x0d\n * A function to use for dynamically importing modules.\x0d\n * @returns {object} An object containing the compiled function and any associated data.\x0d\n * @throws {TypeError} If any of the arguments are of the wrong type.\x0d\n * @throws {ERR_INVALID_ARG_TYPE} If the parsing context is not a valid context object.\x0d\n */\x0d\nfunction internalCompileFunction(\x0d\n  code\x2C filename\x2C lineOffset\x2C columnOffset\x2C\x0d\n  cachedData\x2C produceCachedData\x2C parsingContext\x2C contextExtensions\x2C\x0d\n  params\x2C hostDefinedOptionId\x2C importModuleDynamically) {\x0d\n  const result = compileFunction(\x0d\n    code\x2C\x0d\n    filename\x2C\x0d\n    lineOffset\x2C\x0d\n    columnOffset\x2C\x0d\n    cachedData\x2C\x0d\n    produceCachedData\x2C\x0d\n    parsingContext\x2C\x0d\n    contextExtensions\x2C\x0d\n    params\x2C\x0d\n    hostDefinedOptionId\x2C\x0d\n  );\x0d\n\x0d\n  if (produceCachedData) {\x0d\n    result.function.cachedDataProduced = result.cachedDataProduced;\x0d\n  }\x0d\n\x0d\n  if (result.cachedData) {\x0d\n    result.function.cachedData = result.cachedData;\x0d\n  }\x0d\n\x0d\n  if (typeof result.cachedDataRejected === 'boolean') {\x0d\n    result.function.cachedDataRejected = result.cachedDataRejected;\x0d\n  }\x0d\n\x0d\n  registerImportModuleDynamically(result.function\x2C importModuleDynamically);\x0d\n\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a contextify script.\x0d\n * @param {string} code - The code of the script.\x0d\n * @param {string} filename - The filename of the script.\x0d\n * @param {number} lineOffset - The line offset of the script.\x0d\n * @param {number} columnOffset - The column offset of the script.\x0d\n * @param {Buffer} cachedData - The cached data of the script.\x0d\n * @param {boolean} produceCachedData - Indicates whether to produce cached data.\x0d\n * @param {object} parsingContext - The parsing context of the script.\x0d\n * @param {number} hostDefinedOptionId - The host-defined option ID.\x0d\n * @param {boolean} importModuleDynamically - Indicates whether to import modules dynamically.\x0d\n * @returns {ContextifyScript} The created contextify script.\x0d\n */\x0d\nfunction makeContextifyScript(code\x2C\x0d\n                              filename\x2C\x0d\n                              lineOffset\x2C\x0d\n                              columnOffset\x2C\x0d\n                              cachedData\x2C\x0d\n                              produceCachedData\x2C\x0d\n                              parsingContext\x2C\x0d\n                              hostDefinedOptionId\x2C\x0d\n                              importModuleDynamically) {\x0d\n  let script;\x0d\n  // Calling `ReThrow()` on a native TryCatch does not generate a new\x0d\n  // abort-on-uncaught-exception check. A dummy try/catch in JS land\x0d\n  // protects against that.\x0d\n  try { // eslint-disable-line no-useless-catch\x0d\n    script = new ContextifyScript(code\x2C\x0d\n                                  filename\x2C\x0d\n                                  lineOffset\x2C\x0d\n                                  columnOffset\x2C\x0d\n                                  cachedData\x2C\x0d\n                                  produceCachedData\x2C\x0d\n                                  parsingContext\x2C\x0d\n                                  hostDefinedOptionId);\x0d\n  } catch (e) {\x0d\n    throw e; /* node-do-not-add-exception-line */\x0d\n  }\x0d\n\x0d\n  registerImportModuleDynamically(script\x2C importModuleDynamically);\x0d\n  return script;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Runs a script in the current context.\x0d\n * Internal version of `vm.Script.prototype.runInThisContext()` which skips argument validation.\x0d\n * @param {ReturnType<makeContextifyScript>} script - The script to run.\x0d\n * @param {boolean} displayErrors - Whether to display errors.\x0d\n * @param {boolean} breakOnFirstLine - Whether to break on the first line.\x0d\n */\x0d\nfunction runScriptInThisContext(script\x2C displayErrors\x2C breakOnFirstLine) {\x0d\n  return ReflectApply(\x0d\n    runInContext\x2C\x0d\n    script\x2C\x0d\n    [\x0d\n      null\x2C                // sandbox - use current context\x0d\n      -1\x2C                  // timeout\x0d\n      displayErrors\x2C       // displayErrors\x0d\n      false\x2C               // breakOnSigint\x0d\n      breakOnFirstLine\x2C    // breakOnFirstLine\x0d\n    ]\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  getHostDefinedOptionId\x2C\x0d\n  internalCompileFunction\x2C\x0d\n  isContext\x2C\x0d\n  makeContextifyScript\x2C\x0d\n  registerImportModuleDynamically\x2C\x0d\n  runScriptInThisContext\x2C\x0d\n};\x0d\n
code-source-info,0xa5da61188c,41,866,946,C0O880C2O894C4O893C8O929C9O943,,
code-creation,JS,10,222206,0xa5da612184,75, node:internal/validators:197:39,0x1d9b7243308,~
code-source-info,0xa5da612184,15,5554,5896,C0O5583C5O5588C12O5649C19O5676C22O5694C27O5676C36O5649C42O5800C47O5819C51O5835C67O5841C72O5835C74O5895,,
code-creation,JS,10,222268,0xa5da612374,76,getHostDefinedOptionId node:internal/vm:51:32,0x1d9b7267388,~
code-source-info,0xa5da612374,41,1445,2767,C0O1482C2O1514C4O1510C11O1591C13O1587C18O1634C20O1665C21O1676C25O1836C33O1836C38O1944C42O2177C46O2214C47O2638C55O2643C61O2695C65O2733C66O2744C71O2751C75O2764,,
code-creation,JS,10,222919,0xa5da636acc,76,registerImportModuleDynamically node:internal/vm:88:41,0x1d9b72673e0,~
code-source-info,0xa5da636acc,41,3119,3781,C0O3273C6O3353C8O3349C15O3430C17O3426C22O3473C23O3480C24O3529C30O3529C35O3497C40O3590C46O3590C51O3571C56O3647C61O3718C69O3632C75O3780,,
code-creation,JS,10,222993,0xa5da63705c,19,createScript node:vm:267:22,0x66313e4d20,~
code-source-info,0xa5da63705c,117,8517,8574,C0O8538C13O8545C18O8571,,
code-creation,JS,10,223075,0xa5da63736c,308,Script node:vm:84:14,0x66313e4f88,~
code-source-info,0xa5da63736c,117,2644,4132,C14O2661C21O2682C25O2705C31O2747C38O2769C49O2801C59O2801C64O2866C76O2911C84O2934C92O2959C97O2978C105O3012C114O3045C122O3104C132O3104C137O3155C147O3155C152O3209C160O3209C165O3267C169O3306C179O3306C184O3368C194O3368C199O3477C206O3477C215O3770C260O3770C287O4004C289O4004C290O4064C300O4064C307O4131,,
code-creation,JS,10,223159,0xa5da63764c,155, node:internal/validators:114:3,0x1d9b72430c0,~
code-source-info,0xa5da63764c,15,3158,3632,C36O3301C42O3341C58O3347C63O3341C64O3408C69O3413C75O3446C91O3452C96O3446C97O3513C99O3523C106O3538C111O3554C121O3593C134O3606C147O3560C152O3554C154O3631,,
code-creation,Script,10,223226,0xa5da63796c,20, evalmachine.<anonymous>:1:1,0xa5da637890,~
script-source,130,evalmachine.<anonymous>,Object.getOwnPropertyNames(globalThis)
code-source-info,0xa5da63796c,130,0,38,C0O0C4O7C9O27C13O7C19O38,,
code-creation,JS,10,223293,0xa5da637b64,33,runInNewContext node:vm:151:18,0x66313e5090,~
code-source-info,0xa5da637b64,117,4861,5020,C0O4909C10O4938C15O4909C21O4984C26O4984C32O5015,,
code-creation,JS,10,223360,0xa5da637dac,109,runInContext node:vm:139:15,0x66313e5038,~
code-source-info,0xa5da637dac,117,4457,4840,C0O4494C5O4494C9O4568C14O4568C20O4544C25O4559C30O4645C39O4674C47O4674C54O4698C59O4712C66O4744C77O4719C82O4770C83O4783C92O4809C103O4790C108O4835,,
code-creation,JS,10,223406,0xa5da637f4c,33,validateContext node:vm:157:25,0x66313e4bc0,~
code-source-info,0xa5da637f4c,117,5051,5251,C0O5077C3O5082C9O5120C25O5126C30O5120C32O5250,,
code-creation,JS,10,223470,0xa5da6381b4,184,getRunInContextArgs node:vm:164:29,0x66313e4c18,~
code-source-info,0xa5da6381b4,117,5283,5963,C9O5314C16O5333C24O5333C29O5396C34O5408C36O5442C41O5473C54O5473C59O5546C70O5573C80O5602C91O5673C99O5673C104O5733C110O5733C115O5795C122O5809C126O5835C135O5844C144O5871C153O5887C162O5909C171O5931C183O5960,,
code-creation,JS,10,223627,0xa5da638534,31,wrappedCwd node:internal/bootstrap/switches/does_own_process_state:142:20,0x172de4029c8,~
script-source,72,node:internal/bootstrap/switches/does_own_process_state,'use strict';\x0d\n\x0d\nconst credentials = internalBinding('credentials');\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\nconst {\x0d\n  namespace: {\x0d\n    addDeserializeCallback\x2C\x0d\n    addSerializeCallback\x2C\x0d\n    isBuildingSnapshot\x2C\x0d\n  }\x2C\x0d\n} = require('internal/v8/startup_snapshot');\x0d\n\x0d\nprocess.abort = rawMethods.abort;\x0d\nprocess.umask = wrappedUmask;\x0d\nprocess.chdir = wrappedChdir;\x0d\nprocess.cwd = wrappedCwd;\x0d\n\x0d\nif (credentials.implementsPosixCredentials) {\x0d\n  const wrapped = wrapPosixCredentialSetters(credentials);\x0d\n\x0d\n  process.initgroups = wrapped.initgroups;\x0d\n  process.setgroups = wrapped.setgroups;\x0d\n  process.setegid = wrapped.setegid;\x0d\n  process.seteuid = wrapped.seteuid;\x0d\n  process.setgid = wrapped.setgid;\x0d\n  process.setuid = wrapped.setuid;\x0d\n}\x0d\n\x0d\n// ---- keep the attachment of the wrappers above so that it's easier to ----\x0d\n// ----              compare the setups side-by-side                    -----\x0d\n\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nfunction wrapPosixCredentialSetters(credentials) {\x0d\n  const {\x0d\n    codes: {\x0d\n      ERR_INVALID_ARG_TYPE\x2C\x0d\n      ERR_UNKNOWN_CREDENTIAL\x2C\x0d\n    }\x2C\x0d\n  } = require('internal/errors');\x0d\n  const {\x0d\n    validateUint32\x2C\x0d\n  } = require('internal/validators');\x0d\n\x0d\n  const {\x0d\n    initgroups: _initgroups\x2C\x0d\n    setgroups: _setgroups\x2C\x0d\n    setegid: _setegid\x2C\x0d\n    seteuid: _seteuid\x2C\x0d\n    setgid: _setgid\x2C\x0d\n    setuid: _setuid\x2C\x0d\n  } = credentials;\x0d\n\x0d\n  function initgroups(user\x2C extraGroup) {\x0d\n    validateId(user\x2C 'user');\x0d\n    validateId(extraGroup\x2C 'extraGroup');\x0d\n    // Result is 0 on success\x2C 1 if user is unknown\x2C 2 if group is unknown.\x0d\n    const result = _initgroups(user\x2C extraGroup);\x0d\n    if (result === 1) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('User'\x2C user);\x0d\n    } else if (result === 2) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C extraGroup);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function setgroups(groups) {\x0d\n    validateArray(groups\x2C 'groups');\x0d\n    for (let i = 0; i < groups.length; i++) {\x0d\n      validateId(groups[i]\x2C `groups[${i}]`);\x0d\n    }\x0d\n    // Result is 0 on success. A positive integer indicates that the\x0d\n    // corresponding group was not found.\x0d\n    const result = _setgroups(groups);\x0d\n    if (result > 0) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C groups[result - 1]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function wrapIdSetter(type\x2C method) {\x0d\n    return function(id) {\x0d\n      validateId(id\x2C 'id');\x0d\n      if (typeof id === 'number') id >>>= 0;\x0d\n      // Result is 0 on success\x2C 1 if credential is unknown.\x0d\n      const result = method(id);\x0d\n      if (result === 1) {\x0d\n        throw new ERR_UNKNOWN_CREDENTIAL(type\x2C id);\x0d\n      }\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function validateId(id\x2C name) {\x0d\n    if (typeof id === 'number') {\x0d\n      validateUint32(id\x2C name);\x0d\n    } else if (typeof id !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C ['number'\x2C 'string']\x2C id);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    initgroups\x2C\x0d\n    setgroups\x2C\x0d\n    setegid: wrapIdSetter('Group'\x2C _setegid)\x2C\x0d\n    seteuid: wrapIdSetter('User'\x2C _seteuid)\x2C\x0d\n    setgid: wrapIdSetter('Group'\x2C _setgid)\x2C\x0d\n    setuid: wrapIdSetter('User'\x2C _setuid)\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\n// Cache the working directory to prevent lots of lookups. If the working\x0d\n// directory is changed by `chdir`\x2C it'll be updated.\x0d\nlet cachedCwd = '';\x0d\n\x0d\nif (isBuildingSnapshot()) {\x0d\n  // Reset the cwd on both serialization and deserialization so it's fine\x0d\n  // for process.cwd() to be accessed inside of serialization callbacks.\x0d\n  addSerializeCallback(() => {\x0d\n    cachedCwd = '';\x0d\n    addDeserializeCallback(() => {\x0d\n      cachedCwd = '';\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction wrappedChdir(directory) {\x0d\n  validateString(directory\x2C 'directory');\x0d\n  rawMethods.chdir(directory);\x0d\n  // Mark cache that it requires an update.\x0d\n  cachedCwd = '';\x0d\n}\x0d\n\x0d\nfunction wrappedUmask(mask) {\x0d\n  if (mask !== undefined) {\x0d\n    mask = parseFileMode(mask\x2C 'mask');\x0d\n  }\x0d\n  return rawMethods.umask(mask);\x0d\n}\x0d\n\x0d\nfunction wrappedCwd() {\x0d\n  if (cachedCwd === '')\x0d\n    cachedCwd = rawMethods.cwd();\x0d\n  return cachedCwd;\x0d\n}\x0d\n
code-source-info,0xa5da638534,72,3941,4029,C0O3949C7O3963C12O3976C17O3999C22O3999C26O3986C28O4009C30O4026,,
code-creation,JS,10,223946,0xa5da638bb4,246,Module._nodeModulePaths node:internal/modules/cjs/loader:739:37,0x1d9b727c190,~
code-source-info,0xa5da638bb
code-creation,JS,10,224064,0xa5da638fcc,5,get node:internal/util/inspect:370:6,0x1d9b724bca0,~
code-source-info,0xa5da638fcc,21,11518,11562,C0O11528C4O11557,,
code-creation,JS,10,224242,0xa5da639cdc,297,createRepl node:internal/repl:15:20,0x21de9b4dab8,~
code-source-info,0xa5da639cdc,113,295,1265,C0O316C6O355C9O371C12O392C19O407C24O425C33O453C42O476C51O506C62O520C69O537C74O560C79O541C85O586C86O600C90O627C96O650C103O685C106O690C117O730C125O759C130O774C135O774C140O787C145O788C149O754C152O664C156O816C162O847C164O863C167O868C171O861C175O916C180O927C185O916C190O955C195O960C202O1000C207O1012C209O1029C215O1061C219O1078C223O1109C228O1114C233O1114C239O1143C244O1154C249O1169C258O1188C263O1195C268O1210C278O1223C280O1234C289O1210C296O1264,,
code-creation,JS,10,224342,0xa5da63a10c,29,start node:repl:1068:15,0x21de9b54e80,~
code-source-info,0xa5da63a10c,114,36070,36229,C0O36137C23O36144C28O36226,,
code-creation,JS,10,224604,0xa5da63b59c,1620,REPLServer node:repl:257:20,0x21de9b54d00,~
code-source-info,0xa5da63b59c,114,8454,35812,C0O8454C79O8626C86O8637C91O8668C116O8675C121O8886C122O8901C123O8901C125O8913C135O9008C139O9016C141O9038C144O9055C153O9073C159O9086C162O9102C168O9113C171O9133C177O9149C180O9175C186O9197C189O9214C195O9227C198O9246C206O9273C207O9281C209O9297C212O9310C221O9328C227O9399C231O9495C237O9668C240O9691C248O9682C252O9713C255O9737C263O9728C267O9765C270O9777C276O9808C282O9835C287O9842C291O9825C295O9857C301O9886C306O9874C310O9901C313O9913C322O9933C328O10026C335O10046C341O10069C346O10046C350O10044C354O10168C357O10176C366O10202C375O10236C384O10247C386O10260C408O10336C416O10364C429O10467C436O10364C455O10595C461O10623C474O10735C481O10623C496O10260C501O10921C521O10998C527O11026C540O11130C547O11026C566O11259C572O11287C585O11400C592O11287C607O10921C612O11589C618O11631C623O11619C627O11660C633O11687C638O11675C642O11701C648O11724C658O11734C661O11741C666O11741C670O11714C674O11754C679O11773C680O11769C684O11787C689O11812C690O11808C694O11832C699O11848C706O11867C711O11875C715O11846C719O11896C723O11920C727O11932C731O11942C735O11958C739O11985C743O11997C747O12012C751O12028C757O12063C762O12051C766O12085C770O12101C774O12167C781O12172C785O12184C789O12202C792O12211C800O12232C802O12380C809O12386C814O12380C815O12432C822O12444C824O12443C829O12624C834O12631C841O12644C847O12662C855O12920C860O12928C873O12928C879O13575C880O13592C884O13610C891O13620C899O13629C904O13620C909O13670C913O13670C915O13727C917O13727C919O13773C931O13788C944O13798C957O13808C970O13818C983O13868C993O13878C1006O13888C1019O13898C1029O13828C1035O13948C1042O13908C1048O13773C1053O13773C1055O13966C1063O14014C1065O14014C1067O14111C1069O14111C1071O14131C1072O14131C1074O23500C1077O23517C1082O23525C1087O23525C1092O23510C1096O23543C1099O23548C1104O23556C1117O23556C1123O27644C1126O27649C1131O27649C1135O27834C1146O27847C1167O27887C1178O27915C1189O27947C1197O27960C1204O27994C1215O28030C1225O28048C1235O27834C1240O28069C1243O28074C1248O28074C1252O28095C1259O28109C1263O28135C1271O28135C1275O28217C1281O28239C1292O28256C1297O28264C1301O28229C1305O28277C1308O28286C1317O28297C1319O28293C1324O28357C1329O28364C1337O28386C1341O28379C1345O28404C1352O28415C1357O28443C1366O28464C1377O28526C1385O28589C1393O28443C1398O29008C1401O29013C1414O29013C1420O29192C1421O29192C1423O29217C1424O29217C1426O29258C1433O29258C1438O29258C1440O29276C1443O29281C1456O29281C1462O30034C1465O30039C1478O30039C1484O33411C1487O33416C1500O33416C1506O33825C1516O33825C1521O33807C1527O33908C1546O33955C1552O33908C1558O33869C1564O33888C1570O34080C1580O34107C1588O34080C1593O34080C1595O34128C1602O34143C1606O35788C1609O35793C1614O35793C1619O35811,,
code-creation,JS,10,224902,0xa5da63c4bc,202,Interface node:readline:101:19,0x66313e82a0,~
code-source-info,0xa5da63c4bc,118,2709,3456,C0O2751C2O2762C7O2792C24O2799C29O2849C30O2860C37O2869C46O2900C54O2934C59O2944C66O2951C78O2973C84O2999C88O3015C96O3062C102O3111C109O3118C121O3154C123O3154C125O3170C133O3231C140O3253C158O3231C163O3348C166O3360C171O3364C178O3369C183O3388C185O3405C191O3405C196O3403C201O3455,,
new,MemoryChunk,0x2d4d28c0000,262144
code-creation,JS,10,225054,0xa5da63d75c,51,Interface node:internal/readline/interface:345:14,0x66313f4188,~
code-source-info,0xa5da63d75c,122,9882,9973,C3O9926C36O9926C50O9972,,
code-creation,JS,10,225223,0x2d4d28c4474,1039,InterfaceConstructor node:internal/readline/interface:132:30,0x66313f40d0,~
code-source-info,0x2d4d28c
code-creation,JS,10,225482,0x2d4d28c50bc,458,getStdin node:internal/bootstrap/switches/is_main_thread:191:18,0x1d9b72708b8,~
code-source-info,0x2d4d28c50bc
code-creation,JS,10,225770,0x2d4d28c5574,150,ReadStream node:tty:47:20,0x125aa7b6160,~
code-source-info,0x2d4d28c5574,85,1708,2179,C0O1727C2O1738C7O1767C18O1774C23O1802C24O1806C26O1813C32O1818C38O1831C43O1841C50O1847C55O1841C56O1888C58O1907C71O1907C77O1936C83O1963C90O1969C95O1963C96O2009C101O2013C106O2020C118O2077C128O2114C132O2020C138O2135C139O2146C143O2158C144O2169C149O2178,,
code-creation,JS,10,226039,0x2d4d28c5de4,75,EventEmitter.init node:domain:461:29,0xa5da607590,~
code-source-info,0x2d4d28c5de4,126,14329,14659,C0O14341C16O14341C21O14500C24O14512C33O14548C37O14529C42O14564C45O14586C49O14576C53O14604C60O14633C69O14611C74O14656,,
code-creation,JS,11,226195,0x7ff73438da80,2028,_addListener node:events:547:22,0x1d9b724fc10,^
code-source-info,0x7ff73438da80,23,16257,18185,,,
code-creation,JS,11,226223,0x7ff7343863c0,268,SafeWeakMap node:internal/per_context/primordials:420:16,0xa4fec32ca0,^
code-source-info,0x7ff7343863c0,6,12579,12596,,,
code-creation,JS,11,226244,0x7ff734386500,156,checkListener node:events:275:23,0x1d9b724f000,^
code-source-info,0x7ff734386500,23,8339,8397,,,
code-creation,JS,11,226279,0x7ff7343865c0,556,wrappedFn node:internal/errors:536:21,0xa4fec3c150,^
code-source-info,0x7ff7343865c0,10,15243,15438,,,
code-creation,JS,11,226340,0x7ff734386840,1816,Module._nodeModulePaths node:internal/modules/cjs/loader:739:37,0x1d9b727c190,^
code-source-info,0x7ff734386840,63,23077,24680,,,
code-creation,JS,10,226539,0x2d4d28c6cac,11,createDomain node:domain:228:62,0xa5da607058,~
code-source-info,0x2d4d28c6cac,126,7747,7778,C0O7755C5O7762C10O7775,,
code-creation,JS,10,226590,0x2d4d28c6dc4,114,Domain node:domain:214:14,0xa5da607000,~
code-source-info,0x2d4d28c6dc4,126,7422,7651,C3O7432C24O7432C36O7448C38O7461C42O7472C44O7477C49O7490C54O7486C59O7484C63O7516C68O7526C73O7526C77O7548C88O7548C94O7604C105O7604C113O7650,,
code-creation,JS,10,226740,0x2d4d28c73b4,300,enable node:async_hooks:94:9,0x1d9b7265548,~
script-source,38,node:async_hooks,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  NumberIsSafeInteger\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectIs\x2C\x0d\n  ReflectApply\x2C\x0d\n  Symbol\x2C\x0d\n  ObjectFreeze\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_ASYNC_CALLBACK\x2C\x0d\n  ERR_ASYNC_TYPE\x2C\x0d\n  ERR_INVALID_ASYNC_ID\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  deprecate\x2C\x0d\n  kEmptyObject\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst internal_async_hooks = require('internal/async_hooks');\x0d\n\x0d\n// Get functions\x0d\n// For userland AsyncResources\x2C make sure to emit a destroy event when the\x0d\n// resource gets gced.\x0d\nconst { registerDestroyHook } = internal_async_hooks;\x0d\nconst {\x0d\n  asyncWrap\x2C\x0d\n  executionAsyncId\x2C\x0d\n  triggerAsyncId\x2C\x0d\n  // Private API\x0d\n  hasAsyncIdStack\x2C\x0d\n  getHookArrays\x2C\x0d\n  enableHooks\x2C\x0d\n  disableHooks\x2C\x0d\n  updatePromiseHookMode\x2C\x0d\n  executionAsyncResource\x2C\x0d\n  // Internal Embedder API\x0d\n  newAsyncId\x2C\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  emitInit\x2C\x0d\n  emitBefore\x2C\x0d\n  emitAfter\x2C\x0d\n  emitDestroy\x2C\x0d\n  enabledHooksExist\x2C\x0d\n  initHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n} = internal_async_hooks;\x0d\n\x0d\n// Get symbols\x0d\nconst {\x0d\n  async_id_symbol\x2C trigger_async_id_symbol\x2C\x0d\n  init_symbol\x2C before_symbol\x2C after_symbol\x2C destroy_symbol\x2C\x0d\n  promise_resolve_symbol\x2C\x0d\n} = internal_async_hooks.symbols;\x0d\n\x0d\n// Get constants\x0d\nconst {\x0d\n  kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x2C\x0d\n} = internal_async_hooks.constants;\x0d\n\x0d\n// Listener API //\x0d\n\x0d\nclass AsyncHook {\x0d\n  constructor({ init\x2C before\x2C after\x2C destroy\x2C promiseResolve }) {\x0d\n    if (init !== undefined && typeof init !== 'function')\x0d\n      throw new ERR_ASYNC_CALLBACK('hook.init');\x0d\n    if (before !== undefined && typeof before !== 'function')\x0d\n      throw new ERR_ASYNC_CALLBACK('hook.before');\x0d\n    if (after !== undefined && typeof after !== 'function')\x0d\n      throw new ERR_ASYNC_CALLBACK('hook.after');\x0d\n    if (destroy !== undefined && typeof destroy !== 'function')\x0d\n      throw new ERR_ASYNC_CALLBACK('hook.destroy');\x0d\n    if (promiseResolve !== undefined && typeof promiseResolve !== 'function')\x0d\n      throw new ERR_ASYNC_CALLBACK('hook.promiseResolve');\x0d\n\x0d\n    this[init_symbol] = init;\x0d\n    this[before_symbol] = before;\x0d\n    this[after_symbol] = after;\x0d\n    this[destroy_symbol] = destroy;\x0d\n    this[promise_resolve_symbol] = promiseResolve;\x0d\n  }\x0d\n\x0d\n  enable() {\x0d\n    // The set of callbacks for a hook should be the same regardless of whether\x0d\n    // enable()/disable() are run during their execution. The following\x0d\n    // references are reassigned to the tmp arrays if a hook is currently being\x0d\n    // processed.\x0d\n    const { 0: hooks_array\x2C 1: hook_fields } = getHookArrays();\x0d\n\x0d\n    // Each hook is only allowed to be added once.\x0d\n    if (ArrayPrototypeIncludes(hooks_array\x2C this))\x0d\n      return this;\x0d\n\x0d\n    const prev_kTotals = hook_fields[kTotals];\x0d\n\x0d\n    // createHook() has already enforced that the callbacks are all functions\x2C\x0d\n    // so here simply increment the count of whether each callbacks exists or\x0d\n    // not.\x0d\n    hook_fields[kTotals] = hook_fields[kInit] += +!!this[init_symbol];\x0d\n    hook_fields[kTotals] += hook_fields[kBefore] += +!!this[before_symbol];\x0d\n    hook_fields[kTotals] += hook_fields[kAfter] += +!!this[after_symbol];\x0d\n    hook_fields[kTotals] += hook_fields[kDestroy] += +!!this[destroy_symbol];\x0d\n    hook_fields[kTotals] +=\x0d\n        hook_fields[kPromiseResolve] += +!!this[promise_resolve_symbol];\x0d\n    ArrayPrototypePush(hooks_array\x2C this);\x0d\n\x0d\n    if (prev_kTotals === 0 && hook_fields[kTotals] > 0) {\x0d\n      enableHooks();\x0d\n    }\x0d\n\x0d\n    updatePromiseHookMode();\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  disable() {\x0d\n    const { 0: hooks_array\x2C 1: hook_fields } = getHookArrays();\x0d\n\x0d\n    const index = ArrayPrototypeIndexOf(hooks_array\x2C this);\x0d\n    if (index === -1)\x0d\n      return this;\x0d\n\x0d\n    const prev_kTotals = hook_fields[kTotals];\x0d\n\x0d\n    hook_fields[kTotals] = hook_fields[kInit] -= +!!this[init_symbol];\x0d\n    hook_fields[kTotals] += hook_fields[kBefore] -= +!!this[before_symbol];\x0d\n    hook_fields[kTotals] += hook_fields[kAfter] -= +!!this[after_symbol];\x0d\n    hook_fields[kTotals] += hook_fields[kDestroy] -= +!!this[destroy_symbol];\x0d\n    hook_fields[kTotals] +=\x0d\n        hook_fields[kPromiseResolve] -= +!!this[promise_resolve_symbol];\x0d\n    ArrayPrototypeSplice(hooks_array\x2C index\x2C 1);\x0d\n\x0d\n    if (prev_kTotals > 0 && hook_fields[kTotals] === 0) {\x0d\n      disableHooks();\x0d\n    }\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction createHook(fns) {\x0d\n  return new AsyncHook(fns);\x0d\n}\x0d\n\x0d\n\x0d\n// Embedder API //\x0d\n\x0d\nconst destroyedSymbol = Symbol('destroyed');\x0d\n\x0d\nclass AsyncResource {\x0d\n  constructor(type\x2C opts = kEmptyObject) {\x0d\n    validateString(type\x2C 'type');\x0d\n\x0d\n    let triggerAsyncId = opts;\x0d\n    let requireManualDestroy = false;\x0d\n    if (typeof opts !== 'number') {\x0d\n      triggerAsyncId = opts.triggerAsyncId === undefined ?\x0d\n        getDefaultTriggerAsyncId() : opts.triggerAsyncId;\x0d\n      requireManualDestroy = !!opts.requireManualDestroy;\x0d\n    }\x0d\n\x0d\n    // Unlike emitInitScript\x2C AsyncResource doesn't supports null as the\x0d\n    // triggerAsyncId.\x0d\n    if (!NumberIsSafeInteger(triggerAsyncId) || triggerAsyncId < -1) {\x0d\n      throw new ERR_INVALID_ASYNC_ID('triggerAsyncId'\x2C triggerAsyncId);\x0d\n    }\x0d\n\x0d\n    const asyncId = newAsyncId();\x0d\n    this[async_id_symbol] = asyncId;\x0d\n    this[trigger_async_id_symbol] = triggerAsyncId;\x0d\n\x0d\n    if (initHooksExist()) {\x0d\n      if (enabledHooksExist() && type.length === 0) {\x0d\n        throw new ERR_ASYNC_TYPE(type);\x0d\n      }\x0d\n\x0d\n      emitInit(asyncId\x2C type\x2C triggerAsyncId\x2C this);\x0d\n    }\x0d\n\x0d\n    if (!requireManualDestroy && destroyHooksExist()) {\x0d\n      // This prop name (destroyed) has to be synchronized with C++\x0d\n      const destroyed = { destroyed: false };\x0d\n      this[destroyedSymbol] = destroyed;\x0d\n      registerDestroyHook(this\x2C asyncId\x2C destroyed);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  runInAsyncScope(fn\x2C thisArg\x2C ...args) {\x0d\n    const asyncId = this[async_id_symbol];\x0d\n    emitBefore(asyncId\x2C this[trigger_async_id_symbol]\x2C this);\x0d\n\x0d\n    try {\x0d\n      const ret =\x0d\n        ReflectApply(fn\x2C thisArg\x2C args);\x0d\n\x0d\n      return ret;\x0d\n    } finally {\x0d\n      if (hasAsyncIdStack())\x0d\n        emitAfter(asyncId);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  emitDestroy() {\x0d\n    if (this[destroyedSymbol] !== undefined) {\x0d\n      this[destroyedSymbol].destroyed = true;\x0d\n    }\x0d\n    emitDestroy(this[async_id_symbol]);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  asyncId() {\x0d\n    return this[async_id_symbol];\x0d\n  }\x0d\n\x0d\n  triggerAsyncId() {\x0d\n    return this[trigger_async_id_symbol];\x0d\n  }\x0d\n\x0d\n  bind(fn\x2C thisArg) {\x0d\n    validateFunction(fn\x2C 'fn');\x0d\n    let bound;\x0d\n    if (thisArg === undefined) {\x0d\n      const resource = this;\x0d\n      bound = function(...args) {\x0d\n        ArrayPrototypeUnshift(args\x2C fn\x2C this);\x0d\n        return ReflectApply(resource.runInAsyncScope\x2C resource\x2C args);\x0d\n      };\x0d\n    } else {\x0d\n      bound = FunctionPrototypeBind(this.runInAsyncScope\x2C this\x2C fn\x2C thisArg);\x0d\n    }\x0d\n    let self = this;\x0d\n    ObjectDefineProperties(bound\x2C {\x0d\n      'length': {\x0d\n        __proto__: null\x2C\x0d\n        configurable: true\x2C\x0d\n        enumerable: false\x2C\x0d\n        value: fn.length\x2C\x0d\n        writable: false\x2C\x0d\n      }\x2C\x0d\n      'asyncResource': {\x0d\n        __proto__: null\x2C\x0d\n        configurable: true\x2C\x0d\n        enumerable: true\x2C\x0d\n        get: deprecate(function() {\x0d\n          return self;\x0d\n        }\x2C 'The asyncResource property on bound functions is deprecated'\x2C 'DEP0172')\x2C\x0d\n        set: deprecate(function(val) {\x0d\n          self = val;\x0d\n        }\x2C 'The asyncResource property on bound functions is deprecated'\x2C 'DEP0172')\x2C\x0d\n      }\x2C\x0d\n    });\x0d\n    return bound;\x0d\n  }\x0d\n\x0d\n  static bind(fn\x2C type\x2C thisArg) {\x0d\n    type = type || fn.name;\x0d\n    return (new AsyncResource(type || 'bound-anonymous-fn')).bind(fn\x2C thisArg);\x0d\n  }\x0d\n}\x0d\n\x0d\nconst storageList = [];\x0d\nconst storageHook = createHook({\x0d\n  init(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n    const currentResource = executionAsyncResource();\x0d\n    // Value of currentResource is always a non null object\x0d\n    for (let i = 0; i < storageList.length; ++i) {\x0d\n      storageList[i]._propagate(resource\x2C currentResource\x2C type);\x0d\n    }\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nclass AsyncLocalStorage {\x0d\n  constructor() {\x0d\n    this.kResourceStore = Symbol('kResourceStore');\x0d\n    this.enabled = false;\x0d\n  }\x0d\n\x0d\n  static bind(fn) {\x0d\n    return AsyncResource.bind(fn);\x0d\n  }\x0d\n\x0d\n  static snapshot() {\x0d\n    return AsyncLocalStorage.bind((cb\x2C ...args) => cb(...args));\x0d\n  }\x0d\n\x0d\n  disable() {\x0d\n    if (this.enabled) {\x0d\n      this.enabled = false;\x0d\n      // If this.enabled\x2C the instance must be in storageList\x0d\n      ArrayPrototypeSplice(storageList\x2C\x0d\n                           ArrayPrototypeIndexOf(storageList\x2C this)\x2C 1);\x0d\n      if (storageList.length === 0) {\x0d\n        storageHook.disable();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  _enable() {\x0d\n    if (!this.enabled) {\x0d\n      this.enabled = true;\x0d\n      ArrayPrototypePush(storageList\x2C this);\x0d\n      storageHook.enable();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Propagate the context from a parent resource to a child one\x0d\n  _propagate(resource\x2C triggerResource\x2C type) {\x0d\n    const store = triggerResource[this.kResourceStore];\x0d\n    if (this.enabled) {\x0d\n      resource[this.kResourceStore] = store;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  enterWith(store) {\x0d\n    this._enable();\x0d\n    const resource = executionAsyncResource();\x0d\n    resource[this.kResourceStore] = store;\x0d\n  }\x0d\n\x0d\n  run(store\x2C callback\x2C ...args) {\x0d\n    // Avoid creation of an AsyncResource if store is already active\x0d\n    if (ObjectIs(store\x2C this.getStore())) {\x0d\n      return ReflectApply(callback\x2C null\x2C args);\x0d\n    }\x0d\n\x0d\n    this._enable();\x0d\n\x0d\n    const resource = executionAsyncResource();\x0d\n    const oldStore = resource[this.kResourceStore];\x0d\n\x0d\n    resource[this.kResourceStore] = store;\x0d\n\x0d\n    try {\x0d\n      return ReflectApply(callback\x2C null\x2C args);\x0d\n    } finally {\x0d\n      resource[this.kResourceStore] = oldStore;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  exit(callback\x2C ...args) {\x0d\n    if (!this.enabled) {\x0d\n      return ReflectApply(callback\x2C null\x2C args);\x0d\n    }\x0d\n    this.disable();\x0d\n    try {\x0d\n      return ReflectApply(callback\x2C null\x2C args);\x0d\n    } finally {\x0d\n      this._enable();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  getStore() {\x0d\n    if (this.enabled) {\x0d\n      const resource = executionAsyncResource();\x0d\n      return resource[this.kResourceStore];\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Placing all exports down here because the exported classes won't export\x0d\n// otherwise.\x0d\nmodule.exports = {\x0d\n  // Public API\x0d\n  AsyncLocalStorage\x2C\x0d\n  createHook\x2C\x0d\n  executionAsyncId\x2C\x0d\n  triggerAsyncId\x2C\x0d\n  executionAsyncResource\x2C\x0d\n  asyncWrapProviders: ObjectFreeze({ __proto__: null\x2C ...asyncWrap.Providers })\x2C\x0d\n  // Embedder API\x0d\n  AsyncResource\x2C\x0d\n};\x0d\n
code-source-info,0x2d4d28c73b4,38,2475,3745,C0O2782C5O2782C11O2750C18O2766C22O2858C27O2862C34O2912C36O2924C37O2953C39O2965C41O2964C45O3154C50O3189C59O3207C61O3206C65O3199C71O3196C77O3175C81O3226C84O3238C90O3262C99O3282C101O3281C105O3274C111O3271C120O3247C124O3303C127O3315C133O3339C142O3358C144O3357C148O3350C154O3347C163O3324C167O3378C170O3390C176O3414C185O3435C187O3434C191O3427C197O3424C206O3399C210O3457C213O3469C219O3502C228O3530C230O3529C234O3522C240O3519C249O3478C253O3560C258O3560C263O3606C264O3623C271O3643C276O3653C281O3667C286O3667C289O3696C294O3696C297O3728C299O3740,,
code-creation,JS,10,227443,0x2d4d28c8324,98,getHookArrays node:internal/async_hooks:266:23,0x1d9b7241e20,~
code-source-info,0x2d4d28c8324,14,10182,10660,C0O10190C5O10207C11O10218C16O10230C26O10251C39O10258C47O10277C48O10535C51O10552C57O10577C60O10577C63O10600C73O10621C87O10645C97O10657,,
code-creation,JS,10,227528,0x2d4d28c848c,34,enableHooks node:internal/async_hooks:368:21,0x1d9b72421e8,~
code-source-info,0x2d4d28c848c,14,13604,13694,C0O13612C7O13630C16O13638C20O13649C28O13649C33O13693,,
tick,0x7ff7b3e70345,227722,0,0x0,3,0x7ff7b3cc62d0,0x2d4d28c74da,0x2d4d28c6e0d,0x2d4d28c6cb1,0xa5da63b836,0xa5da63a123,0xa5da639dc5,0x125aa7b3c43,0x125aa7ab020,0x3151437ffa6
code-creation,JS,10,227890,0x2d4d28c869c,128,updatePromiseHookMode node:internal/async_hooks:375:31,0x1d9b7242240,~
code-source-info,0x2d4d28c869c,14,13750,14316,C0O13758C4O13774C10O13789C12O13802C15O13806C20O13831C23O13842C37O13935C40O13939C45O13967C48O14003C54O14024C57O14024C60O14067C66O14067C71O14136C83O14160C89O14183C95O14214C102O14246C115O14296C119O14136C124O14121C127O14315,,
code-creation,JS,10,228023,0x2d4d28c8834,13,destroyHooksExist node:internal/async_hooks:486:27,0x1d9b7242660,~
code-source-info,0x2d4d28c8834,14,16849,16886,C0O16857C5O16873C8O16864C12O16883,,
code-creation,Eval,10,228318,0x2d4d28c91ec,5, node:internal/promise_hooks:1:1,0x2d4d28c8f48,~
script-source,131,node:internal/promise_hooks,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { setPromiseHooks } = internalBinding('async_wrap');\x0d\nconst { triggerUncaughtException } = internalBinding('errors');\x0d\n\x0d\nconst { kEmptyObject } = require('internal/util');\x0d\nconst { validatePlainFunction } = require('internal/validators');\x0d\n\x0d\nconst hooks = {\x0d\n  init: []\x2C\x0d\n  before: []\x2C\x0d\n  after: []\x2C\x0d\n  settled: []\x2C\x0d\n};\x0d\n\x0d\nfunction initAll(promise\x2C parent) {\x0d\n  const hookSet = ArrayPrototypeSlice(hooks.init);\x0d\n  const exceptions = [];\x0d\n\x0d\n  for (let i = 0; i < hookSet.length; i++) {\x0d\n    const init = hookSet[i];\x0d\n    try {\x0d\n      init(promise\x2C parent);\x0d\n    } catch (err) {\x0d\n      ArrayPrototypePush(exceptions\x2C err);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Triggering exceptions is deferred to allow other hooks to complete\x0d\n  for (let i = 0; i < exceptions.length; i++) {\x0d\n    const err = exceptions[i];\x0d\n    triggerUncaughtException(err\x2C false);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction makeRunHook(list) {\x0d\n  return (promise) => {\x0d\n    const hookSet = ArrayPrototypeSlice(list);\x0d\n    const exceptions = [];\x0d\n\x0d\n    for (let i = 0; i < hookSet.length; i++) {\x0d\n      const hook = hookSet[i];\x0d\n      try {\x0d\n        hook(promise);\x0d\n      } catch (err) {\x0d\n        ArrayPrototypePush(exceptions\x2C err);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Triggering exceptions is deferred to allow other hooks to complete\x0d\n    for (let i = 0; i < exceptions.length; i++) {\x0d\n      const err = exceptions[i];\x0d\n      triggerUncaughtException(err\x2C false);\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nconst beforeAll = makeRunHook(hooks.before);\x0d\nconst afterAll = makeRunHook(hooks.after);\x0d\nconst settledAll = makeRunHook(hooks.settled);\x0d\n\x0d\nfunction maybeFastPath(list\x2C runAll) {\x0d\n  return list.length > 1 ? runAll : list[0];\x0d\n}\x0d\n\x0d\nfunction update() {\x0d\n  const init = maybeFastPath(hooks.init\x2C initAll);\x0d\n  const before = maybeFastPath(hooks.before\x2C beforeAll);\x0d\n  const after = maybeFastPath(hooks.after\x2C afterAll);\x0d\n  const settled = maybeFastPath(hooks.settled\x2C settledAll);\x0d\n  setPromiseHooks(init\x2C before\x2C after\x2C settled);\x0d\n}\x0d\n\x0d\nfunction stop(list\x2C hook) {\x0d\n  const index = ArrayPrototypeIndexOf(list\x2C hook);\x0d\n  if (index >= 0) {\x0d\n    ArrayPrototypeSplice(list\x2C index\x2C 1);\x0d\n    update();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction makeUseHook(name) {\x0d\n  const list = hooks[name];\x0d\n  return (hook) => {\x0d\n    validatePlainFunction(hook\x2C `${name}Hook`);\x0d\n    ArrayPrototypePush(list\x2C hook);\x0d\n    update();\x0d\n    return FunctionPrototypeBind(stop\x2C null\x2C list\x2C hook);\x0d\n  };\x0d\n}\x0d\n\x0d\nconst onInit = makeUseHook('init');\x0d\nconst onBefore = makeUseHook('before');\x0d\nconst onAfter = makeUseHook('after');\x0d\nconst onSettled = makeUseHook('settled');\x0d\n\x0d\nfunction createHook({ init\x2C before\x2C after\x2C settled } = kEmptyObject) {\x0d\n  const hooks = [];\x0d\n\x0d\n  if (init) ArrayPrototypePush(hooks\x2C onInit(init));\x0d\n  if (before) ArrayPrototypePush(hooks\x2C onBefore(before));\x0d\n  if (after) ArrayPrototypePush(hooks\x2C onAfter(after));\x0d\n  if (settled) ArrayPrototypePush(hooks\x2C onSettled(settled));\x0d\n\x0d\n  return () => {\x0d\n    for (const stop of hooks) {\x0d\n      stop();\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  createHook\x2C\x0d\n  onInit\x2C\x0d\n  onBefore\x2C\x0d\n  onAfter\x2C\x0d\n  onSettled\x2C\x0d\n};\x0d\n
code-source-info,0x2d4d28c91ec,131,0,3200,C0O0C4O3200,,
code-creation,JS,10,228644,0x2d4d28c96f4,308, node:internal/promise_hooks:1:1,0x2d4d28c9160,~
code-source-info,0x2d4d28c96f4,131,0,3200,C0O0C95O28C101O54C107O78C113O103C119O126C125O198C128O198C133O178C139O267C142O267C147O238C153O322C156O322C161O305C167O383C170O383C175O357C181O432C185O432C187O1597C190O1615C195O1597C199O1597C201O1642C204O1660C209O1642C213O1642C215O1688C218O1706C223O1688C227O1688C229O2549C232O2549C236O2549C238O2588C241O2588C245O2588C247O2628C250O2628C254O2628C256O2669C259O2669C263O2669C265O3111C272O3133C278O3148C284O3159C290O3172C296O3184C302O3126C307O3199,,
code-creation,JS,10,228867,0x2d4d28c9b8c,14,makeRunHook node:internal/promise_hooks:44:21,0x2d4d28c9278,~
code-source-info,0x2d4d28c9b8c,131,1039,1575,C0O1039C9O1051C13O1572,,
code-creation,JS,10,228932,0x2d4d28ca144,31,makeUseHook node:internal/promise_hooks:90:21,0x2d4d28c93d8,~
code-source-info,0x2d4d28ca144,131,2302,2530,C0O2302C12O2327C21O2332C24O2327C26O2343C30O2527,,
code-creation,JS,10,229025,0x2d4d28ca3d4,13,promiseResolveHooksExist node:internal/async_hooks:490:34,0x1d9b72426b8,~
code-source-info,0x2d4d28ca3d4,14,16923,16967,C0O16931C5O16947C8O16938C12O16964,,
code-creation,JS,10,229116,0x2d4d28ca5a4,173,createHook node:internal/promise_hooks:105:20,0x2d4d28c9430,~
code-source-info,0x2d4d28ca5a4,131,2715,3107,C6O2751C13O2718C18O2724C23O2732C28O2739C40O2784C42O2784C44O2793C48O2803C62O2829C65O2829C70O2803C75O2847C79O2859C93O2885C96O2885C101O2859C106O2907C110O2918C124O2944C127O2944C132O2918C137O2964C141O2977C155O3003C158O3003C163O2977C168O3029C172O3104,,
code-creation,JS,10,229198,0x2d4d28ca7c4,73, node:internal/promise_hooks:92:10,0x2d4d28ca090,~
code-source-info,0x2d4d28ca7c4,131,2350,2526,C0O2367C9O2398C17O2367C22O2416C31O2435C34O2416C39O2453C44O2453C47O2468C67O2475C72O2521,,
code-creation,JS,10,229243,0x2d4d28ca904,41, node:internal/validators:471:47,0x1d9b72438c0,~
code-source-info,0x2d4d28ca904,15,13899,14044,C0O13921C8O13956C11O13956C17O13985C33O13991C38O13985C40O14043,,
code-creation,JS,10,229319,0x2d4d28caa4c,112,update node:internal/promise_hooks:74:16,0x2d4d28c9328,~
code-source-info,0x2d4d28caa4c,131,1825,2108,C0O1846C5O1860C8O1866C16O1846C22O1900C28O1920C35O1928C38O1900C44O1957C50O1977C57O1984C60O1957C66O2014C72O2034C79O2043C82O2014C88O2059C105O2059C111O2107,,
code-creation,JS,10,229381,0x2d4d28cabbc,21,maybeFastPath node:internal/promise_hooks:70:23,0x2d4d28c92d0,~
code-source-info,0x2d4d28cabbc,131,1741,1806,C0O1773C7O1780C17O1799C20O1803,,
code-creation,JS,10,229524,0x2d4d28cb1bc,53,Domain.bind node:domain:439:33,0xa5da6074d8,~
code-source-info,0x2d4d28cb1bc,126,13866,14162,C0O13866C17O13889C19O13889C21O13978C31O13999C38O14104C45O13978C50O14143C52O14159,,
code-creation,JS,10,229653,0x2d4d28cb514,434,emit node:domain:477:44,0xa5da607620,~
code-source-info,0x2d4d28cb
code-creation,JS,10,229805,0x2d4d28cb964,60,updateExceptionCapture node:domain:173:32,0xa5da606ad8,~
code-source-info,0x2d4d28cb964,126,6056,6397,C0O6064C7O6088C15O6068C22O6179C29O6179C35O6239C42O6239C46O6287C54O6287C59O6396,,
code-creation,JS,10,229867,0x2d4d28cbb84,160,setUncaughtExceptionCaptureCallback node:internal/process/execution:131:45,0x1d9b7266e50,~
code-source-info,0x2d4d28cbb84,40,4344,5012,C0O4354C4O4378C11O4410C15O4421C24O4452C28O4462C31O4470C39O4527C43O4503C47O4544C48O4551C49O4560C55O4597C73O4603C78O4597C79O4669C84O4695C90O4722C95O4728C100O4722C101O4786C106O4818C110O4827C118O4858C122O4866C128O4914C133O4921C141O4899C145O4960C148O4968C154O5001C159O5011,,
code-creation,JS,10,229928,0x2d4d28cbd54,17,get node:internal/process/pre_execution:415:8,0x125aa790578,~
code-source-info,0x2d4d28cbd54,67,13505,13600,C0O13536C6O13536C11O13525C16O13593,,
code-creation,Eval,10,230065,0x2d4d28cc644,5, node:internal/process/report:1:1,0x2d4d28cc430,~
script-source,132,node:internal/process/report,'use strict';\x0d\nconst {\x0d\n  ERR_SYNTHETIC\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { getValidatedPath } = require('internal/fs/utils');\x0d\nconst {\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst nr = internalBinding('report');\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n} = primordials;\x0d\nconst report = {\x0d\n  writeReport(file\x2C err) {\x0d\n    if (typeof file === 'object' && file !== null) {\x0d\n      err = file;\x0d\n      file = undefined;\x0d\n    } else if (file !== undefined) {\x0d\n      validateString(file\x2C 'file');\x0d\n      file = getValidatedPath(file);\x0d\n    }\x0d\n\x0d\n    if (err === undefined) {\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    } else {\x0d\n      validateObject(err\x2C 'err');\x0d\n    }\x0d\n\x0d\n    return nr.writeReport('JavaScript API'\x2C 'API'\x2C file\x2C err);\x0d\n  }\x2C\x0d\n  getReport(err) {\x0d\n    if (err === undefined)\x0d\n      err = new ERR_SYNTHETIC();\x0d\n    else\x0d\n      validateObject(err\x2C 'err');\x0d\n\x0d\n    return JSONParse(nr.getReport(err));\x0d\n  }\x2C\x0d\n  get directory() {\x0d\n    return nr.getDirectory();\x0d\n  }\x2C\x0d\n  set directory(dir) {\x0d\n    validateString(dir\x2C 'directory');\x0d\n    nr.setDirectory(dir);\x0d\n  }\x2C\x0d\n  get filename() {\x0d\n    return nr.getFilename();\x0d\n  }\x2C\x0d\n  set filename(name) {\x0d\n    validateString(name\x2C 'filename');\x0d\n    nr.setFilename(name);\x0d\n  }\x2C\x0d\n  get compact() {\x0d\n    return nr.getCompact();\x0d\n  }\x2C\x0d\n  set compact(b) {\x0d\n    validateBoolean(b\x2C 'compact');\x0d\n    nr.setCompact(b);\x0d\n  }\x2C\x0d\n  get signal() {\x0d\n    return nr.getSignal();\x0d\n  }\x2C\x0d\n  set signal(sig) {\x0d\n    validateSignalName(sig\x2C 'signal');\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler(sig);\x0d\n    nr.setSignal(sig);\x0d\n  }\x2C\x0d\n  get reportOnFatalError() {\x0d\n    return nr.shouldReportOnFatalError();\x0d\n  }\x2C\x0d\n  set reportOnFatalError(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnFatalError(trigger);\x0d\n  }\x2C\x0d\n  get reportOnSignal() {\x0d\n    return nr.shouldReportOnSignal();\x0d\n  }\x2C\x0d\n  set reportOnSignal(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnSignal(trigger);\x0d\n    removeSignalHandler();\x0d\n    addSignalHandler();\x0d\n  }\x2C\x0d\n  get reportOnUncaughtException() {\x0d\n    return nr.shouldReportOnUncaughtException();\x0d\n  }\x2C\x0d\n  set reportOnUncaughtException(trigger) {\x0d\n    validateBoolean(trigger\x2C 'trigger');\x0d\n\x0d\n    nr.setReportOnUncaughtException(trigger);\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nfunction addSignalHandler(sig) {\x0d\n  if (nr.shouldReportOnSignal()) {\x0d\n    if (typeof sig !== 'string')\x0d\n      sig = nr.getSignal();\x0d\n\x0d\n    process.on(sig\x2C signalHandler);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction removeSignalHandler() {\x0d\n  const sig = nr.getSignal();\x0d\n\x0d\n  if (sig)\x0d\n    process.removeListener(sig\x2C signalHandler);\x0d\n}\x0d\n\x0d\nfunction signalHandler(sig) {\x0d\n  nr.writeReport(sig\x2C 'Signal'\x2C null\x2C '');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  addSignalHandler\x2C\x0d\n  report\x2C\x0d\n};\x0d\n
code-source-info,0x2d4d28cc644,132,0,2767,C0O0C4O2767,,
code-creation,JS,10,230243,0x2d4d28cd1fc,323, node:internal/process/report:1:1,0x2d4d28cc5b8,~
code-source-info,0x2d4d28cd1fc,132,0,2767,C0O0C51O46C54O46C59O72C64O26C70O110C73O110C78O89C84O235C87O235C92O152C98O172C104O191C110O214C116O279C119O279C123O279C125O318C131O363C136O368C144O808C298O2711C305O2733C311O2754C317O2726C322O2766,,
code-creation,JS,10,230419,0x2d4d28cf684,30,set reportOnUncaughtException node:internal/process/report:93:32,0x2d4d28ccea8,~
code-source-info,0x2d4d28cf684,132,2200,2307,C0O2217C8O2217C13O2261C18O2264C23O2264C29O2306,,
code-creation,JS,10,230460,0x2d4d28cfb7c,13,clearBufferedCommand node:repl:1077:74,0x21de9b55668,~
code-source-info,0x2d4d28cfb7c,114,36425,36470,C0O36433C2O36438C7O36462C12O36469,,
code-creation,JS,10,230560,0x2d4d28d0224,177, node:internal/validators:175:40,0x1d9b72432b0,~
code-source-info,0x2d4d28d0224,15,4898,5355,C19O4942C25O4978C41O4984C46O4978C47O5038C54O5064C66O5096C83O5144C86O5144C92O5172C110O5243C136O5275C151O5319C169O5178C174O5172C176O5354,,
code-creation,JS,10,230628,0x2d4d28d07ec,49,setPrompt node:repl:1205:52,0x21de9b558e0,~
code-source-info,0x2d4d28d07ec,114,40217,40327,C0O40231C2O40251C6O40264C13O40277C16O40287C21O40297C35O40315C42O40264C48O40326,,
code-creation,JS,10,230685,0x2d4d28d0944,13,setPrompt node:internal/readline/interface:358:12,0x66313f4258,~
code-source-info,0x2d4d28d0944,122,10217,10261,C0O10233C2O10238C7O10247C12O10260,,
code-creation,JS,10,230786,0x2d4d28d0d4c,257,emitKeypressEvents node:internal/readline/emitKeypressEvents:34:28,0x66313ef138,~
code-source-info,0x2d4d28d0d4c,121,704,2720,C0O704C51O730C60O741C62O740C67O760C68O767C69O773C83O804C91O800C96O798C100O832C109O839C116O857C124O857C128O855C132O878C141O884C145O901C150O901C154O936C158O936C160O1030C165O986C175O1006C179O1044C180O1044C182O2579C187O2590C195O2590C202O2616C207O2628C212O2635C223O2635C231O2672C236O2679C247O2679C256O2719,,
code-creation,JS,10,230862,0x2d4d28d134c,69,StringDecoder node:string_decoder:81:23,0x9b20b74948,~
code-source-info,0x2d4d28d134c,100,2735,2916,C0O2751C3O2767C7O2765C11O2799C13O2804C18O2822C21O2829C28O2835C31O2829C36O2820C40O2846C42O2850C48O2867C53O2885C56O2903C60O2897C63O2883C68O2915,,
code-creation,JS,10,230916,0x2d4d28d1a3c,65,normalizeEncoding node:string_decoder:65:27,0x9b20b748f0,~
code-source-info,0x2d4d28d1a3c,100,2262,2494,C0O2286C5O2286C10O2314C12O2345C17O2356C24O2371C26O2367C34O2393C39O2393C46O2417C53O2423C58O2417C59O2459C61O2470C62O2479C64O2491,,
code-creation,JS,10,230960,0x2d4d28d1b74,30,normalizeEncoding node:internal/util:200:27,0x1d9b72452c8,~
code-source-info,0x2d4d28d1b74,16,5556,5664,C0O5567C7O5590C14O5608C19O5621C21O5635C22O5639C25O5646C29O5661,,
code-creation,JS,10,231014,0x2d4d28d1d74,87,alloc node:buffer:388:30,0x1d9b7252ca8,~
code-source-info,0x2d4d28d1d74,24,11549,11814,C0O11577C12O11609C18O11577C23O11625C28O11656C34O11670C39O11694C44O11694C49O11725C54O11756C68O11732C73O11774C74O11783C81O11790C86O11811,,
code-creation,JS,10,231325,0x2d4d28d3184,2822,emitKeys node:internal/readline/utils:86:19,0x66313ed020,~
code-source-info,0x2d4d28d
code-creation,JS,10,231959,0x2d4d28d439c,55,onNewListener node:internal/readline/emitKeypressEvents:85:25,0x2d4d28d0bc8,~
code-source-info,0x2d4d28d439c,121,2425,2573,C0O2440C2O2450C7O2475C14O2482C25O2482C31O2509C36O2516C47O2516C54O2572,,
code-creation,JS,10,232016,0x2d4d28d44f4,70,Socket.resume node:net:757:35,0x9b20b49698,~
code-source-info,0x2d4d28d44f4,86,20707,20889,C0O20715C2O20724C4O20723C9O20742C15O20761C21O20785C26O20793C32O20809C35O20809C39O20837C44O20851C49O20858C54O20868C59O20875C64O20875C69O20886,,
code-creation,JS,10,232079,0x2d4d28d4674,162,Readable.resume node:internal/streams/readable:1225:37,0x9b20b6c5c0,~
code-source-info,0x2d4d28d4674,97,39681,40196,C0O39708C5O39727C7O39738C9O39737C15O39748C17O39746C22O39758C27O39772C35O39772C39O39910C42O39916C48O39927C53O39924C57O39945C59O39955C65O39966C67O39964C72O39986C77O40002C80O40008C86O40019C89O40016C95O40050C98O40056C104O40067C109O40064C113O40090C116O40090C121O40119C124O40125C130O40136C135O40133C139O40151C142O40157C148O40169C150O40168C155O40165C159O40181C161O40193,,
code-creation,JS,10,232150,0x2d4d28d485c,89,logger node:internal/util/debuglog:100:18,0x1d9b724dd18,~
code-source-info,0x2d4d28d485c,22,3064,3265,C0O3064C3O3097C24O3122C30O3139C34O3129C38O3144C39O3160C45O3177C51O3186C55O3167C60O3191C61O3208C65O3215C72O3228C77O3224C83O3215C88O3253,,
code-creation,JS,10,232206,0x2d4d28d49c4,132,debug node:internal/util/debuglog:81:15,0x1d9b724dc68,~
code-source-info,0x2d4d28d49c4,22,2533,2939,C0O2533C3O2553C6O2553C9O2664C16O2685C22O2672C30O2670C36O2705C42O2742C48O2742C52O2771C73O2796C77O2813C81O2803C85O2818C86O2834C90O2851C96O2860C100O2841C105O2865C106O2882C115O2902C120O2898C126O2889C131O2927,,
code-creation,JS,10,232255,0x2d4d28d4b64,41,init node:internal/util/debuglog:77:16,0x1d9b724dc10,~
code-source-info,0x2d4d28d4b64,22,2431,2517,C0O2441C10O2447C14O2445C16O2485C26O2495C33O2493C40O2516,,
code-creation,JS,10,232285,0x2d4d28d4c54,2,testEnabled node:internal/util/debuglog:31:19,0x125aa78feb8,~
code-source-info,0x2d4d28d4c54,22,988,999,C0O994C1O999,,
code-creation,JS,10,232328,0x2d4d28d4dd4,110,debuglogImpl node:internal/util/debuglog:54:22,0x1d9b724d9b8,~
code-source-info,0x2d4d28d4dd4,22,1607,2160,C0O1607C9O1627C18O1641C23O1669C34O1703C39O1711C43O1703C45O1723C55O1723C59O1756C69O1767C73O1772C81O2095C93O2113C95O2111C99O2134C106O2151C109O2157,,
code-creation,JS,10,232374,0x2d4d28d4f84,10, node:internal/streams/readable:53:66,0x9b20b6b8c0,~
code-source-info,0x2d4d28d4f84,97,1894,1921,C0O1907C2O1913C9O1920,,
code-creation,JS,10,232401,0x2d4d28d5034,2,noop node:internal/util/debuglog:46:14,0x1d9b724d908,~
code-source-info,0x2d4d28d5034,22,1449,1457,C1O1456,,
code-creation,JS,10,232437,0x2d4d28d50fc,62,resume node:internal/streams/readable:1245:16,0x9b20b6b520,~
code-source-info,0x2d4d28d50fc,97,40216,40379,C0O40237C2O40248C4O40247C10O40258C12O40256C17O40276C22O40290C25O40296C31O40307C34O40304C38O40330C41O40338C55O40338C61O40378,,
code-creation,JS,10,232496,0x2d4d28d5234,50,emitInitScript node:internal/async_hooks:495:24,0x1d9b7242710,~
code-source-info,0x2d4d28d5234,14,16996,17392,C0O17202C5O17216C8O17207C14O17229C15O17236C16O17242C20O17278C23O17295C28O17333C43O17333C49O17391,,
code-creation,JS,10,232561,0x2d4d28d53e4,216,emitInitNative node:internal/async_hooks:192:24,0x1d9b7241d70,~
code-source-info,0x2d4d28d53e4,14,7591,8730,C0O7638C12O7662C16O7671C19O7682C31O8024C33O8029C36O8044C41O8050C45O8029C50O8072C53O8096C60O8101C66O8105C68O8104C75O8145C78O8158C85O8163C91O8166C107O8179C112O8059C117O8011C134O8294C142O8294C160O8329C170O8353C185O8624C188O8641C194O8652C202O8674C208O8701C211O8701C215O8729,,
code-creation,JS,10,232654,0x2d4d28d5604,29,lookupPublicResource node:internal/async_hooks:177:30,0x1d9b7241d18,~
code-source-info,0x2d4d28d5604,14,7042,7370,C0O7058C10O7113C12O7129C13O7256C15O7265C17O7264C21O7286C23O7325C25O7347C26O7351C28O7367,,
code-creation,JS,10,232714,0x2d4d28d57ac,126,init node:domain:75:7,0xa5da606d58,~
code-source-info,0x2d4d28d57ac,126,2496,3464,C0O2545C3O2557C12O2584C18O2687C23O2695C31O2716C38O2723C40O2722C44O2695C50O2892C52O2901C59O2938C61O2927C66O2958C74O2979C82O3116C93O2958C100O3402C105O3413C113O3435C118O3413C125O3463,,
code-creation,JS,10,232758,0x2d4d28d5934,10,get node:domain:64:16,0xa5da606c38,~
code-source-info,0x2d4d28d5934,126,2284,2317,C0O2294C6O2308C9O2312,,
code-creation,JS,11,232828,0x7ff73438e2c0,2116,Readable.on node:internal/streams/readable:1125:33,0x9b20b6c400,^
code-source-info,0x7ff73438e2c0,97,36124,37154,,,
code-creation,JS,11,232854,0x7ff734386f80,128,addListener node:events:610:58,0x1d9b7250108,^
code-source-info,0x7ff734386f80,23,18391,18465,,,
code-creation,JS,11,232874,0x7ff734387040,380,get node:internal/streams/writable:222:8,0x9b20b7fb60,^
code-source-info,0x7ff734387040,102,7414,7511,,,
code-creation,JS,11,232893,0x7ff734387200,128,maybeFastPath node:internal/promise_hooks:70:23,0x2d4d28c92d0,^
code-source-info,0x7ff734387200,131,1741,1806,,,
code-creation,JS,11,232931,0x7ff73438eb40,2704,emit node:events:466:44,0x1d9b724f7c0,^
code-source-info,0x7ff73438eb40,23,13862,16231,,,
code-creation,JS,10,232981,0x2d4d28d5f8c,5,get node:readline:220:8,0x66313e8458,~
code-source-info,0x2d4d28d5f8c,118,6313,6356,C0O6337C4O6349,,
code-creation,JS,10,233021,0x2d4d28d6074,41, node:internal/readline/interface:370:16,0x66313f4308,~
code-source-info,0x2d4d28d6074,122,10425,10611,C0O10465C5O10471C10O10501C15O10507C23O10548C28O10554C33O10554C38O10586C40O10606,,
code-creation,JS,10,233069,0x2d4d28d61bc,78,ReadStream.setRawMode node:tty:73:43,0x125aa7b6210,~
code-source-info,0x2d4d28d61bc,85,2341,2563,C0O2353C5O2388C12O2395C17O2397C26O2418C28O2439C38O2457C41O2464C54O2453C60O2439C66O2505C68O2517C69O2526C71O2537C75O2548C77O2560,,
code-creation,JS,10,233306,0x2d4d28d6864,177,REPLServer.resetContext node:repl:1151:45,0x21de9b557b0,~
code-source-info,0x2d4d28d6864,114,38577,39615,C0O38577C9O38585C12O38605C17O38605C21O38598C25O38625C29O38649C33O38661C37O38688C41O38743C46O38754C50O38763C53O38768C60O38780C64O38791C74O38817C87O38890C95O38917C103O38791C108O39139C116O39165C129O39243C137O39275C145O39139C150O39579C153O39584C164O39603C169O39584C176O39614,,
code-creation,JS,10,233422,0x2d4d28d6e5c,287,REPLServer.createContext node:repl:1095:46,0x21de9b55718,~
code-source-info,0x2d4d28d6e5c,114,36887,38528,C0O36887C12O36899C13O36899C15O36911C18O36920C24O36938C30O36946C34O36977C51O36977C56O37327C67O37349C74O37375C77O37349C87O37327C92O37785C97O37800C101O37833C111O37850C118O37833C124O37864C137O37885C144O37995C148O37864C153O38043C165O38043C171O38071C176O38100C188O38130C191O38100C197O38088C201O38150C214O38171C221O38272C225O38150C230O38294C241O38315C250O38417C253O38417C261O38294C266O38462C279O38462C284O38510C286O38525,,
code-creation,JS,10,233523,0x2d4d28d7244,212,Module node:internal/modules/cjs/loader:251:16,0x1d9b727b968,~
code-source-info,0x2d4d28d7244,63,7322,8084,C14O7345C16O7353C20O7362C22O7374C25O7379C30O7379C35O7372C39O7395C52O7395C57O7435C62O7453C67O7453C73O7475C84O7475C89O7515C90O7529C94O7540C95O7552C99O7564C101O7578C105O7591C107O7622C112O7622C118O7630C126O7645C128O7684C133O7684C138O7729C143O7729C149O7827C157O7859C160O7859C169O7827C174O7945C177O7965C188O7987C194O7945C199O8034C201O8039C206O8063C211O8083,,
code-creation,JS,10,233657,0x2d4d28d75c4,439,dirname node:path:657:10,0x1d9b725e240,~
code-source-info,0x2d4d28d75c
code-creation,JS,10,233811,0x2d4d28d7a04,28,setOwnProperty node:internal/util:723:24,0x1d9b7246cc8,~
code-source-info,0x2d4d28d7a04,16,20452,20627,C0O20475C5O20508C12O20590C22O20482C27O20624,,
code-creation,JS,10,233865,0x2d4d28d7b84,45,updateChildren node:internal/modules/cjs/loader:216:24,0x1d9b727b860,~
code-source-info,0x2d4d28d7b84,63,6226,6410,C0O6270C7O6276C15O6291C19O6309C23O6317C26O6317C33O6366C38O6366C44O6409,,
code-creation,JS,10,233909,0x2d4d28d7d7c,33, node:internal/util:794:18,0x1d9b7247060,~
code-source-info,0x2d4d28d7d7c,16,22800,22926,C0O22810C10O22846C13O22854C19O22852C25O22876C26O22888C28O22908C32O22921,,
code-creation,JS,10,233945,0x2d4d28d7e8c,28, node:internal/modules/cjs/loader:122:3,0x1d9b727a208,~
code-source-info,0x2d4d28d7e8c,63,3639,3730,C0O3646C8O3646C20O3688C27O3730,,
code-creation,JS,10,234028,0x2d4d28d81dc,337,Module._resolveLookupPaths node:internal/modules/cjs/loader:837:38,0x1d9b727c228,~
code-source-info,0x2d4d28d81dc
code-creation,JS,10,234114,0x2d4d28d84e4,77,normalizeRequirableId node:internal/bootstrap/realm:301:31,0xa4fec38770,~
code-source-info,0x2d4d28d84e4,9,9988,10323,C0O10000C10O10004C17O10074C27O10074C33O10110C38O10128C43O10128C50O10175C52O10195C55O10217C60O10235C65O10235C72O10276C74O10286C75O10301C76O10318,,
code-creation,JS,10,234156,0x2d4d28d862c,18,canBeRequiredWithoutScheme node:internal/bootstrap/realm:297:36,0xa4fec38718,~
code-source-info,0x2d4d28d862c,9,9884,9954,C0O9896C7O9941C12O9941C17O9949,,
code-creation,JS,10,234223,0x2d4d28d884c,10, node:internal/modules/cjs/loader:356:66,0x1d9b727bd30,~
code-source-info,0x2d4d28d884c,63,10131,10158,C0O10144C2O10150C9O10157,,
code-creation,JS,10,234316,0x2d4d28d8c94,215,makeRequireFunction node:internal/modules/helpers:130:29,0x1d9b727d458,~
code-source-info,0x2d4d28d8c94,64,4069,6657,C0O4069C22O4130C27O4130C30O4130C32O4147C37O4155C46O4190C64O4196C69O4190C70O4292C72O4304C92O4337C97O4341C108O4357C112O4337C114O4385C119O4385C122O4385C124O4418C130O4427C136O4456C145O5640C150O6142C152O6158C156O6420C158O6434C162O6448C177O6488C185O6448C190O6557C193O6585C197O6576C201O6603C204O6626C208O6617C212O6639C214O6654,,
code-creation,JS,10,234378,0x2d4d28d8f44,26,lazyModule node:internal/modules/helpers:113:20,0x1d9b727d400,~
code-source-info,0x2d4d28d8f44,64,3341,3438,C0O3349C12O3370C17O3408C21O3357C23O3420C25O3435,,
code-creation,JS,10,234461,0x2d4d28d9494,63,addBuiltinLibsToObject node:internal/modules/helpers:234:32,0x1d9b727d548,~
code-source-info,0x2d4d28d9494,64,7348,9334,C0O7348C12O7458C20O7458C25O7496C30O7516C35O7754C37O7754C42O7754C44O7788C51O7810C56O7788C62O9333,,
code-creation,JS,10,234537,0x2d4d28d97ac,123, node:internal/modules/helpers:244:41,0x2d4d28d93c8,~
code-source-info,0x2d4d28d97ac,64,7826,9329,C0O7826C12O7978C25O7982C36O8031C45O8031C56O8078C67O8078C74O8132C75O8139C76O8455C80O8455C82O8639C97O8668C102O8712C112O9254C116O8639C122O9328,,
code-creation,JS,10,234751,0x2d4d28daf6c,219,defineDefaultCommands node:repl:1734:31,0x21de9b552f0,~
code-source-info,0x2d4d28daf6c,114,58744,61701,C0O58761C13O58856C21O58761C27O58958C29O58984C35O59002C40O59054C43O59125C58O59161C62O59188C70O59125C76O59413C89O59478C97O59413C103O59537C116O59612C124O59537C130O60282C143O60392C151O60282C157O60689C170O60782C178O60689C184O61435C190O61457C203O61524C211O61457C218O61700,,
code-creation,JS,10,234822,0x2d4d28db364,55,REPLServer.defineCommand node:repl:1632:46,0x21de9b55a68,~
code-source-info,0x2d4d28db364,114,55462,55644,C0O55482C6O55520C13O55536C24O55560C29O55581C37O55560C42O55617C49O55635C54O55643,,
code-creation,JS,10,234958,0x2d4d28db9dc,176,setupReverseSearch node:internal/repl/utils:513:28,0xa5da60da10,~
code-source-info,0x2d4d28db9dc,127,17259,25753,C0O17259C74O17320C79O17332C84O17336C91O17341C96O17360C101O17369C111O17405C112O17439C119O17439C124O17439C126O17472C130O17472C132O17559C133O17559C135O17588C137O17588C139O17607C141O17607C143O17627C145O17627C147O17644C149O17644C151O17668C153O17668C155O17692C157O17692C159O17703C160O17703C162O25725C169O25734C175O25750,,
code-creation,JS,10,235165,0x2d4d28ddccc,286,setupPreview node:internal/repl/utils:143:22,0xa5da60d948,~
code-source-info,0x2d4d28ddccc,127,4524,17228,C0O4524C80O4619C85O4631C90O4635C97O4640C104O4655C106O4670C111O4679C119O4697C129O4717C130O4747C131O4747C133O4789C134O4789C136O4819C137O4819C139O4851C140O4851C142O4877C143O4877C145O4903C146O4903C148O5393C153O12365C157O12365C159O16052C169O16079C177O16052C182O16052C184O16103C191O16121C195O16242C196O16242C198O16426C206O16453C214O16426C219O16426C221O16476C228O16493C232O17003C240O17030C248O17003C253O17003C255O17051C262O17066C266O17188C273O17197C279O17210C285O17225,,
code-creation,JS,10,235289,0x2d4d28de444,138,REPLServer.displayPrompt node:repl:1190:46,0x21de9b55848,~
code-source-info,0x2d4d28de444,114,39665,40101,C0O39705C5O39724C7O39733C9O39732C13O39757C19O39772C22O39810C27O39816C32O39822C38O39836C43O39842C48O39848C52O39855C59O39886C67O39886C73O39925C75O39944C85O40006C92O40019C95O40029C100O40039C114O40057C121O40006C126O40075C131O40075C137O40100,,
code-creation,JS,10,235358,0x2d4d28de62c,87,prompt node:internal/readline/interface:385:9,0x66313f4360,~
code-source-info,0x2d4d28de62c,122,10763,11019,C0O10796C6O10809C11O10809C15O10833C24O10853C29O10857C36O10862C41O10883C45O10904C46O10916C50O10928C52O10933C54O10932C58O10946C64O10971C66O10976C68O10975C74O10997C76O10996C80O10991C86O11018,,
code-creation,JS,10,235409,0x2d4d28de78c,5,get node:readline:244:8,0x66313e85b8,~
code-source-info,0x2d4d28de78c,118,6716,6760,C0O6740C4O6753,,
code-creation,JS,10,235439,0x2d4d28de874,28,repl._refreshLine node:internal/repl/utils:480:23,0x2d4d28dd990,~
code-source-info,0x2d4d28de874,127,16123,16205,C0O16136C4O16149C10O16162C15O16162C18O16186C23O16186C27O16204,,
code-creation,JS,10,235501,0x2d4d28de9cc,214, node:internal/readline/interface:476:17,0x66313f45c8,~
code-source-info,0x2d4d28de9cc,122,13323,14352,C0O13366C2O13371C4O13370C8O13387C12O13380C16O13414C18O13419C20O13418C24O13434C30O13472C35O13508C40O13568C45O13568C50O13687C58O13707C59O13720C64O13734C69O13750C78O13761C81O13734C86O13816C91O13830C98O13816C103O13866C108O13887C113O13866C117O13960C119O13965C121O13964C125O13980C130O14041C131O14054C136O14070C138O14074C145O14090C150O14153C153O14167C158O14185C163O14153C168O14233C172O14221C176O14244C177O14253C182O14267C187O14283C196O14294C199O14267C204O14342C208O14330C213O14351,,
code-creation,JS,10,235568,0x2d4d28dec04,5,get node:readline:334:8,0x66313e8ae0,~
code-source-info,0x2d4d28dec04,118,8267,8313,C0O8291C4O8306,,
code-creation,JS,10,235639,0x2d4d28dedb4,326, node:internal/readline/interface:981:19,0x66313f4f10,~
code-source-info,0x2d4d28dedb4,122,28507,29462,C0O28533C2O28558C7O28583C9O28591C14O28597C20O28652C27O28652C50O28644C78O28644C81O28690C83O28699C88O28801C90O28809C95O28825C100O28809C115O28847C117O28868C119O28955C121O28964C126O29000C131O29025C135O29018C138O29008C148O29044C150O29084C158O29084C164O29151C165O29161C172O29176C177O29194C179O29204C188O29260C190O29272C196O29277C201O29283C206O29303C211O29333C217O28633C282O29380C284O29387C288O29399C290O29415C296O29423C306O29435C313O29444C319O29450C325O29457,,
code-creation,JS,10,235714,0x2d4d28df084,31,get columns node:internal/readline/interface:348:14,0x66313f4200,~
code-source-info,0x2d4d28df084,122,9988,10092,C0O10007C6O10022C11O10029C17O10050C22O10057C26O10065C27O10071C30O10087,,
code-creation,JS,10,235754,0x2d4d28df1a4,35,stripVTControlCharacters node:internal/util/inspect:2411:34,0x1d9b724d440,~
code-source-info,0x2d4d28df1a4,21,83688,83786,C0O83699C8O83699C13O83732C20O83768C29O83739C34O83783,,
code-creation,JS,10,235911,0x2d4d28df77c,142,getStringWidth node:internal/util/inspect:2324:43,0x1d9b724d3b0,~
code-source-info,0x2d4d28df77c,21,80549,81134,C13O80601C15O80611C19O80644C24O80650C29O80706C31O80717C35O80711C40O80901C45O80901C51O80923C53O80932C58O80951C60O80960C63O80964C72O80979C79O81004C82O81004C91O80979C97O80964C109O81052C111O81075C113O81089C130O80726C135O80693C139O81116C141O81129,,
code-creation,JS,10,235983,0x2d4d28df9cc,48,getCursorPos node:internal/readline/interface:1022:15,0x66313f4f68,~
code-source-info,0x2d4d28df9cc,122,29661,29822,C0O29702C2O29707C4O29706C10O29718C13O29744C20O29758C25O29718C30O29716C34O29772C36O29784C38O29783C42O29799C47O29817,,
code-creation,RegExp,3,236068,0x7ff73438f600,3260,[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)|(?:(?:\\d{1\x2C4}(?:;\\d{0\x2C4})*)?[\\dA-PR-TZcf-ntqry=><~]))
code-creation,JS,10,236147,0x2d4d28dff24,212,cursorTo node:internal/readline/callbacks:33:18,0x66313eb8a0,~
code-source-info,0x2d4d28dff24,119,509,1200,C0O539C4O574C12O574C17O624C23O660C26O679C29O704C34O708C40O724C53O730C58O724C59O768C62O772C68O788C81O794C86O788C87O834C104O913C110O949C113O957C120O957C126O988C127O1000C128O1011C134O1038C139O1044C144O1038C145O1092C153O1116C156O1119C162O1124C166O1119C175O1133C178O1136C184O1141C190O1150C194O1136C200O1175C205O1175C211O1197,,
code-creation,JS,10,236370,0x2d4d28e068c,66,clearScreenDown node:internal/readline/callbacks:114:25,0x66313eb9a8,~
code-source-info,0x2d4d28e068c,119,2486,2796,C0O2510C4O2545C12O2545C17O2595C25O2647C31O2683C34O2691C41O2691C47O2722C48O2734C49O2759C56O2765C59O2759C65O2793,,
code-creation,JS,10,236942,0x2d4d28e07bc,5,get node:readline:232:8,0x66313e8508,~
code-source-info,0x2d4d28e07bc,118,6510,6556,C0O6534C4O6549,,
code-creation,JS,10,236991,0x2d4d28e08ac,42, node:internal/readline/interface:432:19,0x66313f4518,~
code-source-info,0x2d4d28e08ac,122,11898,12085,C0O11921C8O11921C13O11985C19O12009C25O12045C30O12052C35O12052C41O12084,,
code-creation,JS,10,237312,0x2d4d28e0b6c,224,showPreview node:internal/repl/utils:366:23,0x2d4d28dd938,~
code-source-info,0x2d4d28e0b6c,127,12365,15468,C10O12365C17O12452C30O12487C36O12517C37O12524C38O12552C50O12577C55O12552C59O12552C61O12657C66O12666C71O12683C72O12690C73O12705C79O12720C87O12776C91O12827C93O12841C103O12868C108O12841C113O12955C122O12963C127O12988C128O12995C129O13039C134O15135C137O15148C150O15191C159O15224C167O15241C171O15232C176O15256C180O15271C187O15304C192O15304C197O15361C205O15383C210O15383C215O15447C216O15455C223O15467,,
code-creation,JS,10,237394,0x2d4d28e0db4,21,setupHistory node:repl:1073:58,0x21de9b55610,~
code-source-info,0x2d4d28e0db4,114,36290,36347,C0O36313C14O36313C20O36346,,
code-creation,JS,10,237490,0x2d4d28e149c,400,setupHistory node:internal/repl/history:34:22,0xa5da60ef50,~
code-source-info,0x2d4d28e149c,128,864,4296,C0O864C73O943C79O985C89O999C93O997C95O1038C100O1054C105O1069C112O1087C116O1115C124O1122C129O1140C130O1151C137O1189C144O1208C153O1213C156O1216C161O1216C169O1208C175O1201C190O1278C205O1346C209O1278C214O1416C224O1426C229O1416C233O1441C242O1459C246O1489C258O1496C263O1514C264O1532C271O1547C276O1547C287O1573C298O1573C310O1620C323O1688C327O1620C332O1752C340O1759C345O1777C346O1800C347O1800C349O1823C350O1823C352O1847C353O1847C355O1857C358O1862C363O1862C367O2033C374O2036C393O2036C399O4295,,
code-creation,JS,10,237576,0x2d4d28e1ed4,35,checkError node:os:64:45,0x10fd41ba2f0,~
code-source-info,0x2d4d28e1ed4,112,2167,2338,C0O2189C2O2210C5O2210C10O2224C12O2256C19O2283C26O2262C31O2256C32O2322C34O2333,,
code-creation,JS,10,237668,0x2d4d28e2074,295,join node:path:425:7,0x1d9b725e138,~
code-source-info,0x2d4d28e
code-creation,JS,10,237830,0x2d4d28e2374,607,normalize node:path:308:12,0x1d9b725e088,~
code-source-info,0x2d4d28e
code-creation,JS,10,237983,0x2d4d28e27ec,34,isEnabled node:internal/process/permission:16:12,0x1d9b725d818,~
script-source,29,node:internal/process/permission,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectFreeze\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst permission = internalBinding('permission');\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst { resolve } = require('path');\x0d\n\x0d\nlet experimentalPermission;\x0d\n\x0d\nmodule.exports = ObjectFreeze({\x0d\n  __proto__: null\x2C\x0d\n  isEnabled() {\x0d\n    if (experimentalPermission === undefined) {\x0d\n      const { getOptionValue } = require('internal/options');\x0d\n      experimentalPermission = getOptionValue('--experimental-permission');\x0d\n    }\x0d\n    return experimentalPermission;\x0d\n  }\x2C\x0d\n  has(scope\x2C reference) {\x0d\n    validateString(scope\x2C 'scope');\x0d\n    if (reference != null) {\x0d\n      // TODO: add support for WHATWG URLs and Uint8Arrays.\x0d\n      validateString(reference\x2C 'reference');\x0d\n      if (StringPrototypeStartsWith(scope\x2C 'fs')) {\x0d\n        reference = resolve(reference);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return permission.has(scope\x2C reference);\x0d\n  }\x2C\x0d\n});\x0d\n
code-source-info,0x2d4d28e27ec,29,339,580,C0O349C6O427C12O427C17O408C22O463C25O488C29O486C31O545C33O575,,
code-creation,JS,10,238100,0x2d4d28e2a34,43,pause node:internal/readline/interface:534:8,0x66313f4678,~
code-source-info,0x2d4d28e2a34,122,14713,14845,C0O14732C6O14740C7O14747C8O14758C13O14764C18O14764C22O14778C23O14790C27O14808C35O14808C40O14828C42O14840,,
code-creation,JS,10,238164,0x2d4d28e2bb4,125,Socket.pause node:net:743:34,0x9b20b49608,~
code-source-info,0x2d4d28e2bb4,86,20325,20666,C0O20333C2O20342C4O20341C9O20360C15O20379C21O20402C26O20410C32O20431C38O20447C42O20471C48O20508C53O20516C58O20516C63O20535C65O20558C72O20570C83O20566C89O20558C94O20615C99O20629C104O20636C109O20646C114O20652C119O20652C124O20663,,
code-creation,JS,10,238232,0x2d4d28e2db4,134,Readable.pause node:internal/streams/readable:1265:36,0x9b20b6c650,~
code-source-info,0x2d4d28e2db4,97,40747,41062,C0O40774C5O40793C13O40793C17O40817C19O40828C21O40827C27O40839C32O40853C34O40851C37O40836C43O40864C48O40888C54O40888C58O40909C61O40915C67O40926C70O40923C74O40944C77O40950C83O40961C88O40958C92O40982C100O40982C105O41005C108O41011C114O41022C119O41035C121O41033C127O41019C131O41047C133O41059,,
code-creation,JS,10,238319,0x2d4d28e2f7c,20, node:internal/bootstrap/switches/is_main_thread:260:21,0x2d4d28c4da0,~
code-source-info,0x2d4d28e2f7c,53,7339,7383,C0O7352C5O7360C13O7360C19O7382,,
code-creation,JS,10,238546,0x2d4d28e3124,158,open node:fs:546:14,0x1d9b7273d10,~
script-source,56,node:fs,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// Maintainers\x2C keep in mind that ES1-style octal literals (`0666`) are not\x0d\n// allowed in strict mode. Use ES6-style octal literals instead (`0o666`).\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  BigIntPrototypeToString\x2C\x0d\n  Boolean\x2C\x0d\n  MathMax\x2C\x0d\n  Number\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Promise\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  uncurryThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { fs: constants } = internalBinding('constants');\x0d\nconst {\x0d\n  S_IFIFO\x2C\x0d\n  S_IFLNK\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x2C\x0d\n  S_IFSOCK\x2C\x0d\n  F_OK\x2C\x0d\n  R_OK\x2C\x0d\n  W_OK\x2C\x0d\n  X_OK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  O_SYMLINK\x2C\x0d\n} = constants;\x0d\n\x0d\nconst pathModule = require('path');\x0d\nconst { isAbsolute } = pathModule;\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\n\x0d\nconst binding = internalBinding('fs');\x0d\n\x0d\nconst { createBlobFromFilePath } = require('internal/blob');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { isBuffer: BufferIsBuffer } = Buffer;\x0d\nconst BufferToString = uncurryThis(Buffer.prototype.toString);\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_ACCESS_DENIED\x2C\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  FSReqCallback\x2C\x0d\n  statValues\x2C\x0d\n} = binding;\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst {\x0d\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\x0d\n  kEmptyObject\x2C\x0d\n  promisify: {\x0d\n    custom: kCustomPromisifiedSymbol\x2C\x0d\n  }\x2C\x0d\n  SideEffectFreeRegExpPrototypeExec\x2C\x0d\n  defineLazyProperties\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirent\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  Stats\x2C\x0d\n  getStatFsFromBinding\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  realpathCacheKey\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x2C\x0d\n} = require('internal/fs/utils');\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n  kValidateObjectAllowNullable\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst permission = require('internal/process/permission');\x0d\n\x0d\nlet truncateWarn = true;\x0d\nlet fs;\x0d\n\x0d\n// Lazy loaded\x0d\nlet cpFn;\x0d\nlet cpSyncFn;\x0d\nlet promises = null;\x0d\nlet ReadStream;\x0d\nlet WriteStream;\x0d\nlet rimraf;\x0d\nlet rimrafSync;\x0d\nlet kResistStopPropagation;\x0d\n\x0d\n// These have to be separate because of how graceful-fs happens to do it's\x0d\n// monkeypatching.\x0d\nlet FileReadStream;\x0d\nlet FileWriteStream;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst isOSX = process.platform === 'darwin';\x0d\n\x0d\nfunction showTruncateDeprecation() {\x0d\n  if (truncateWarn) {\x0d\n    process.emitWarning(\x0d\n      'Using fs.truncate with a file descriptor is deprecated. Please use ' +\x0d\n      'fs.ftruncate with a file descriptor instead.'\x2C\x0d\n      'DeprecationWarning'\x2C 'DEP0081');\x0d\n    truncateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeCallback(cb) {\x0d\n  validateFunction(cb\x2C 'cb');\x0d\n\x0d\n  return cb;\x0d\n}\x0d\n\x0d\n// Ensure that callbacks run in the global context. Only use this function\x0d\n// for callbacks that are passed to the binding layer\x2C callbacks that are\x0d\n// invoked from JS already run in the proper scope.\x0d\nfunction makeCallback(cb) {\x0d\n  validateFunction(cb\x2C 'cb');\x0d\n\x0d\n  return (...args) => ReflectApply(cb\x2C this\x2C args);\x0d\n}\x0d\n\x0d\n// Special case of `makeCallback()` that is specific to async `*stat()` calls as\x0d\n// an optimization\x2C since the data passed back to the callback needs to be\x0d\n// transformed anyway.\x0d\nfunction makeStatsCallback(cb) {\x0d\n  validateFunction(cb\x2C 'cb');\x0d\n\x0d\n  return (err\x2C stats) => {\x0d\n    if (err) return cb(err);\x0d\n    cb(err\x2C getStatsFromBinding(stats));\x0d\n  };\x0d\n}\x0d\n\x0d\nconst isFd = isInt32;\x0d\n\x0d\nfunction isFileType(stats\x2C fileType) {\x0d\n  // Use stats array directly to avoid creating an fs.Stats instance just for\x0d\n  // our internal use.\x0d\n  let mode = stats[1];\x0d\n  if (typeof mode === 'bigint')\x0d\n    mode = Number(mode);\x0d\n  return (mode & S_IFMT) === fileType;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests a user's permissions for the file or directory\x0d\n * specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction access(path\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = F_OK;\x0d\n  }\x0d\n\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously tests a user's permissions for the file or\x0d\n * directory specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction accessSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(exists?: boolean) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction exists(path\x2C callback) {\x0d\n  maybeCallback(callback);\x0d\n\x0d\n  function suppressedCallback(err) {\x0d\n    callback(err ? false : true);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    fs.access(path\x2C F_OK\x2C suppressedCallback);\x0d\n  } catch {\x0d\n    return callback(false);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperty(exists\x2C kCustomPromisifiedSymbol\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: function exists(path) { // eslint-disable-line func-name-matching\x0d\n    return new Promise((resolve) => fs.exists(path\x2C resolve));\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// fs.existsSync never throws\x2C it only returns true or false.\x0d\n// Since fs.existsSync never throws\x2C users have established\x0d\n// the expectation that passing invalid arguments to it\x2C even like\x0d\n// fs.existsSync()\x2C would only get a false in return\x2C so we cannot signal\x0d\n// validation errors to users properly out of compatibility concerns.\x0d\n// TODO(joyeecheung): deprecate the never-throw-on-invalid-arguments behavior\x0d\n/**\x0d\n * Synchronously tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction existsSync(path) {\x0d\n  try {\x0d\n    path = getValidatedPath(path);\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  return binding.existsSync(pathModule.toNamespacedPath(path));\x0d\n}\x0d\n\x0d\nfunction readFileAfterOpen(err\x2C fd) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err) {\x0d\n    context.callback(err);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  context.fd = fd;\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = readFileAfterStat;\x0d\n  req.context = context;\x0d\n  binding.fstat(fd\x2C false\x2C req);\x0d\n}\x0d\n\x0d\nfunction readFileAfterStat(err\x2C stats) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err)\x0d\n    return context.close(err);\x0d\n\x0d\n  // TODO(BridgeAR): Check if allocating a smaller chunk is better performance\x0d\n  // wise\x2C similar to the promise based version (less peak memory and chunked\x0d\n  // stringify operations vs multiple C++/JS boundary crossings).\x0d\n  const size = context.size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n\x0d\n  if (size > kIoMaxLength) {\x0d\n    err = new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    return context.close(err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    if (size === 0) {\x0d\n      // TODO(BridgeAR): If an encoding is set\x2C use the StringDecoder to concat\x0d\n      // the result and reuse the buffer instead of allocating a new one.\x0d\n      context.buffers = [];\x0d\n    } else {\x0d\n      context.buffer = Buffer.allocUnsafeSlow(size);\x0d\n    }\x0d\n  } catch (err) {\x0d\n    return context.close(err);\x0d\n  }\x0d\n  context.read();\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    callback(new AbortError(undefined\x2C { cause: signal?.reason }));\x0d\n    return true;\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   data?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readFile(path\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const ReadFileContext = require('internal/fs/read/context');\x0d\n  const context = new ReadFileContext(callback\x2C options.encoding);\x0d\n  context.isUserFd = isFd(path); // File descriptor ownership\x0d\n\x0d\n  if (options.signal) {\x0d\n    context.signal = options.signal;\x0d\n  }\x0d\n  if (context.isUserFd) {\x0d\n    process.nextTick(function tick(context) {\x0d\n      ReflectApply(readFileAfterOpen\x2C { context }\x2C [null\x2C path]);\x0d\n    }\x2C context);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  const flagsNumber = stringToFlags(options.flag\x2C 'options.flag');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.context = context;\x0d\n  req.oncomplete = readFileAfterOpen;\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               0o666\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\nfunction tryStatSync(fd\x2C isUserFd) {\x0d\n  const stats = binding.fstat(fd\x2C false\x2C undefined\x2C true /* shouldNotThrow */);\x0d\n  if (stats === undefined && !isUserFd) {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return stats;\x0d\n}\x0d\n\x0d\nfunction tryCreateBuffer(size\x2C fd\x2C isUserFd) {\x0d\n  let threw = true;\x0d\n  let buffer;\x0d\n  try {\x0d\n    if (size > kIoMaxLength) {\x0d\n      throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    }\x0d\n    buffer = Buffer.allocUnsafe(size);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C len) {\x0d\n  let threw = true;\x0d\n  let bytesRead;\x0d\n  try {\x0d\n    bytesRead = fs.readSync(fd\x2C buffer\x2C pos\x2C len);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return bytesRead;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readFileSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n\x0d\n  if (options.encoding === 'utf8' || options.encoding === 'utf-8') {\x0d\n    if (!isInt32(path)) {\x0d\n      path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n    }\x0d\n    return binding.readFileUtf8(path\x2C stringToFlags(options.flag));\x0d\n  }\x0d\n\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C options.flag\x2C 0o666);\x0d\n\x0d\n  const stats = tryStatSync(fd\x2C isUserFd);\x0d\n  const size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n  let pos = 0;\x0d\n  let buffer; // Single buffer with file data\x0d\n  let buffers; // List for when size is unknown\x0d\n\x0d\n  if (size === 0) {\x0d\n    buffers = [];\x0d\n  } else {\x0d\n    buffer = tryCreateBuffer(size\x2C fd\x2C isUserFd);\x0d\n  }\x0d\n\x0d\n  let bytesRead;\x0d\n\x0d\n  if (size !== 0) {\x0d\n    do {\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C size - pos);\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0 && pos < size);\x0d\n  } else {\x0d\n    do {\x0d\n      // The kernel lies about many files.\x0d\n      // Go ahead and try to read some bytes.\x0d\n      buffer = Buffer.allocUnsafe(8192);\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C 0\x2C 8192);\x0d\n      if (bytesRead !== 0) {\x0d\n        ArrayPrototypePush(buffers\x2C buffer.slice(0\x2C bytesRead));\x0d\n      }\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0);\x0d\n  }\x0d\n\x0d\n  if (!isUserFd)\x0d\n    fs.closeSync(fd);\x0d\n\x0d\n  if (size === 0) {\x0d\n    // Data was collected into the buffers list.\x0d\n    buffer = Buffer.concat(buffers\x2C pos);\x0d\n  } else if (pos < size) {\x0d\n    buffer = buffer.slice(0\x2C pos);\x0d\n  }\x0d\n\x0d\n  if (options.encoding) buffer = buffer.toString(options.encoding);\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction defaultCloseCallback(err) {\x0d\n  if (err != null) throw err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} [callback]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction close(fd\x2C callback = defaultCloseCallback) {\x0d\n  if (callback !== defaultCloseCallback)\x0d\n    callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.close(getValidatedFd(fd)\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction closeSync(fd) {\x0d\n  binding.close(getValidatedFd(fd));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   fd?: number\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction open(path\x2C flags\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  if (arguments.length < 3) {\x0d\n    callback = flags;\x0d\n    flags = 'r';\x0d\n    mode = 0o666;\x0d\n  } else if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0o666;\x0d\n  } else {\x0d\n    mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  }\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               mode\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction openSync(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  return binding.open(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    stringToFlags(flags)\x2C\x0d\n    parseFileMode(mode\x2C 'mode'\x2C 0o666)\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string | Buffer | URL } path\x0d\n * @param {{\x0d\n *   type?: string;\x0d\n *   }} [options]\x0d\n * @returns {Promise<Blob>}\x0d\n */\x0d\nfunction openAsBlob(path\x2C options = kEmptyObject) {\x0d\n  validateObject(options\x2C 'options');\x0d\n  const type = options.type || '';\x0d\n  validateString(type\x2C 'options.type');\x0d\n  // The underlying implementation here returns the Blob synchronously for now.\x0d\n  // To give ourselves flexibility to maybe return the Blob asynchronously\x2C\x0d\n  // this API returns a Promise.\x0d\n  path = getValidatedPath(path);\x0d\n  return PromiseResolve(createBlobFromFilePath(pathModule.toNamespacedPath(path)\x2C { type }));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {number} offsetOrOptions\x0d\n * @param {number} length\x0d\n * @param {number | bigint | null} position\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffer?: Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction read(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  let offset = offsetOrOptions;\x0d\n  let params = null;\x0d\n  if (arguments.length <= 4) {\x0d\n    if (arguments.length === 4) {\x0d\n      // This is fs.read(fd\x2C buffer\x2C options\x2C callback)\x0d\n      validateObject(offsetOrOptions\x2C 'options'\x2C kValidateObjectAllowNullable);\x0d\n      callback = length;\x0d\n      params = offsetOrOptions;\x0d\n    } else if (arguments.length === 3) {\x0d\n      // This is fs.read(fd\x2C bufferOrParams\x2C callback)\x0d\n      if (!isArrayBufferView(buffer)) {\x0d\n        // This is fs.read(fd\x2C params\x2C callback)\x0d\n        params = buffer;\x0d\n        ({ buffer = Buffer.alloc(16384) } = params ?? kEmptyObject);\x0d\n      }\x0d\n      callback = offsetOrOptions;\x0d\n    } else {\x0d\n      // This is fs.read(fd\x2C callback)\x0d\n      callback = buffer;\x0d\n      buffer = Buffer.alloc(16384);\x0d\n    }\x0d\n\x0d\n    if (params !== undefined) {\x0d\n      validateObject(params\x2C 'options'\x2C kValidateObjectAllowNullable);\x0d\n    }\x0d\n    ({\x0d\n      offset = 0\x2C\x0d\n      length = buffer?.byteLength - offset\x2C\x0d\n      position = null\x2C\x0d\n    } = params ?? kEmptyObject);\x0d\n  }\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n  callback = maybeCallback(callback);\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return process.nextTick(function tick() {\x0d\n      callback(null\x2C 0\x2C buffer);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null) {\x0d\n    position = -1;\x0d\n  } else {\x0d\n    validatePosition(position\x2C 'position'\x2C length);\x0d\n  }\x0d\n\x0d\n  function wrapper(err\x2C bytesRead) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C bytesRead || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(read\x2C kCustomPromisifyArgsSymbol\x2C\x0d\n                     { __proto__: null\x2C value: ['bytesRead'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads the file from the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {{\x0d\n *   offset?: number;\x0d\n *   length?: number;\x0d\n *   position?: number | bigint | null;\x0d\n *   }} [offsetOrOptions]\x0d\n * @param {number} [length]\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readSync(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  let offset = offsetOrOptions;\x0d\n  if (arguments.length <= 3 || typeof offsetOrOptions === 'object') {\x0d\n    if (offsetOrOptions !== undefined) {\x0d\n      validateObject(offsetOrOptions\x2C 'options'\x2C kValidateObjectAllowNullable);\x0d\n    }\x0d\n\x0d\n    ({\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x2C\x0d\n    } = offsetOrOptions ?? kEmptyObject);\x0d\n  }\x0d\n\x0d\n  if (offset === undefined) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null) {\x0d\n    position = -1;\x0d\n  } else {\x0d\n    validatePosition(position\x2C 'position'\x2C length);\x0d\n  }\x0d\n\x0d\n  return binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor)\x0d\n * and writes to an array of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number | null} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffers?: ArrayBufferView[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readv(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C read) {\x0d\n    callback(err\x2C read || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  binding.readBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(readv\x2C kCustomPromisifyArgsSymbol\x2C\x0d\n                     { __proto__: null\x2C value: ['bytesRead'\x2C 'buffers']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads file from the\x0d\n * specified `fd` (file descriptor) and writes to an array\x0d\n * of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number | null} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readvSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.readBuffers(fd\x2C buffers\x2C position);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes `buffer` to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string} buffer\x0d\n * @param {number | object} [offsetOrOptions]\x0d\n * @param {number} [length]\x0d\n * @param {number | null} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number;\x0d\n *   buffer?: Buffer | TypedArray | DataView\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction write(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C written || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  let offset = offsetOrOptions;\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    callback = maybeCallback(callback || position || length || offset);\x0d\n\x0d\n    if (typeof offset === 'object') {\x0d\n      ({\x0d\n        offset = 0\x2C\x0d\n        length = buffer.byteLength - offset\x2C\x0d\n        position = null\x2C\x0d\n      } = offsetOrOptions ?? kEmptyObject);\x0d\n    }\x0d\n\x0d\n    if (offset == null || typeof offset === 'function') {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = wrapper;\x0d\n    binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n\x0d\n  if (typeof position !== 'function') {\x0d\n    if (typeof offset === 'function') {\x0d\n      position = offset;\x0d\n      offset = null;\x0d\n    } else {\x0d\n      position = length;\x0d\n    }\x0d\n    length = 'utf8';\x0d\n  }\x0d\n\x0d\n  const str = buffer;\x0d\n  validateEncoding(str\x2C length);\x0d\n  callback = maybeCallback(position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n  binding.writeString(fd\x2C str\x2C offset\x2C length\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(write\x2C kCustomPromisifyArgsSymbol\x2C\x0d\n                     { __proto__: null\x2C value: ['bytesWritten'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously writes `buffer` to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string} buffer\x0d\n * @param {{\x0d\n *   offset?: number;\x0d\n *   length?: number;\x0d\n *   position?: number | null;\x0d\n *   }} [offsetOrOptions]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writeSync(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  let result;\x0d\n\x0d\n  let offset = offsetOrOptions;\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (typeof offset === 'object') {\x0d\n      ({\x0d\n        offset = 0\x2C\x0d\n        length = buffer.byteLength - offset\x2C\x0d\n        position = null\x2C\x0d\n      } = offsetOrOptions ?? kEmptyObject);\x0d\n    }\x0d\n    if (position === undefined)\x0d\n      position = null;\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    result = binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  } else {\x0d\n    validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n    validateEncoding(buffer\x2C length);\x0d\n\x0d\n    if (offset === undefined)\x0d\n      offset = null;\x0d\n    result = binding.writeString(fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes an array of `ArrayBufferView`s to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number | null} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number\x2C\x0d\n *   buffers?: ArrayBufferView[]\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writev(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    callback(err\x2C written || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    process.nextTick(callback\x2C null\x2C 0\x2C buffers);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  binding.writeBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(writev\x2C kCustomPromisifyArgsSymbol\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: ['bytesWritten'\x2C 'buffer']\x2C\x0d\n  enumerable: false\x2C\x0d\n});\x0d\n\x0d\n/**\x0d\n * Synchronously writes an array of `ArrayBufferView`s\x0d\n * to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number | null} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writevSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.writeBuffers(fd\x2C buffers\x2C position);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rename(oldPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Synchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction renameSync(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  binding.rename(\x0d\n    pathModule.toNamespacedPath(oldPath)\x2C\x0d\n    pathModule.toNamespacedPath(newPath)\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncate(path\x2C len\x2C callback) {\x0d\n  if (typeof path === 'number') {\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncate(path\x2C len\x2C callback);\x0d\n  }\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  } else if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = maybeCallback(callback);\x0d\n  fs.open(path\x2C 'r+'\x2C (er\x2C fd) => {\x0d\n    if (er) return callback(er);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = function oncomplete(er) {\x0d\n      fs.close(fd\x2C (er2) => {\x0d\n        callback(aggregateTwoErrors(er2\x2C er));\x0d\n      });\x0d\n    };\x0d\n    binding.ftruncate(fd\x2C len\x2C req);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncateSync(path\x2C len) {\x0d\n  if (typeof path === 'number') {\x0d\n    // legacy\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncateSync(path\x2C len);\x0d\n  }\x0d\n  if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n  // Allow error to be thrown\x2C but still close fd.\x0d\n  const fd = fs.openSync(path\x2C 'r+');\x0d\n  let ret;\x0d\n\x0d\n  try {\x0d\n    ret = fs.ftruncateSync(fd\x2C len);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncate(fd\x2C len = 0\x2C callback) {\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  }\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.ftruncate(fd\x2C len\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncateSync(fd\x2C len = 0) {\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  binding.ftruncate(fd\x2C len);\x0d\n}\x0d\n\x0d\nfunction lazyLoadCp() {\x0d\n  if (cpFn === undefined) {\x0d\n    ({ cpFn } = require('internal/fs/cp/cp'));\x0d\n    cpFn = require('util').callbackify(cpFn);\x0d\n    ({ cpSyncFn } = require('internal/fs/cp/cp-sync'));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction lazyLoadRimraf() {\x0d\n  if (rimraf === undefined)\x0d\n    ({ rimraf\x2C rimrafSync } = require('internal/fs/rimraf'));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdir(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  callback = makeCallback(callback);\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    validateRmOptions(\x0d\n      path\x2C\x0d\n      { ...options\x2C force: false }\x2C\x0d\n      true\x2C\x0d\n      (err\x2C options) => {\x0d\n        if (err === false) {\x0d\n          const req = new FSReqCallback();\x0d\n          req.oncomplete = callback;\x0d\n          binding.rmdir(path\x2C req);\x0d\n          return;\x0d\n        }\x0d\n        if (err) {\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        lazyLoadRimraf();\x0d\n        rimraf(path\x2C options\x2C callback);\x0d\n      });\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = callback;\x0d\n    binding.rmdir(path\x2C req);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdirSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    options = validateRmOptionsSync(path\x2C { ...options\x2C force: false }\x2C true);\x0d\n    if (options !== false) {\x0d\n      lazyLoadRimraf();\x0d\n      return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n    }\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n  }\x0d\n\x0d\n  binding.rmdir(pathModule.toNamespacedPath(path));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rm(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateRmOptions(path\x2C options\x2C false\x2C (err\x2C options) => {\x0d\n    if (err) {\x0d\n      return callback(err);\x0d\n    }\x0d\n    lazyLoadRimraf();\x0d\n    return rimraf(pathModule.toNamespacedPath(path)\x2C options\x2C callback);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n  options = validateRmOptionsSync(path\x2C options\x2C false);\x0d\n\x0d\n  lazyLoadRimraf();\x0d\n  return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Forces all currently queued I/O operations associated\x0d\n * with the file to the operating system's synchronized\x0d\n * I/O completion state.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasync(fd\x2C callback) {\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fdatasync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously forces all currently queued I/O operations\x0d\n * associated with the file to the operating\x0d\n * system's synchronized I/O completion state.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasyncSync(fd) {\x0d\n  binding.fdatasync(fd);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Requests for all data for the open file descriptor\x0d\n * to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsync(fd\x2C callback) {\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fsync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously requests for all data for the open\x0d\n * file descriptor to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsyncSync(fd) {\x0d\n  binding.fsync(fd);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdir(path\x2C options\x2C callback) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n  } else if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                parseFileMode(mode\x2C 'mode')\x2C recursive\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @returns {string | void}\x0d\n */\x0d\nfunction mkdirSync(path\x2C options) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const result = binding.mkdir(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    parseFileMode(mode\x2C 'mode')\x2C\x0d\n    recursive\x2C\x0d\n  );\x0d\n\x0d\n  if (recursive) {\x0d\n    return result;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * An iterative algorithm for reading the entire contents of the `basePath` directory.\x0d\n * This function does not validate `basePath` as a directory. It is passed directly to\x0d\n * `binding.readdir`.\x0d\n * @param {string} basePath\x0d\n * @param {{ encoding: string\x2C withFileTypes: boolean }} options\x0d\n * @returns {string[] | Dirent[]}\x0d\n */\x0d\nfunction readdirSyncRecursive(basePath\x2C options) {\x0d\n  const withFileTypes = Boolean(options.withFileTypes);\x0d\n  const encoding = options.encoding;\x0d\n\x0d\n  const readdirResults = [];\x0d\n  const pathsQueue = [basePath];\x0d\n\x0d\n  function read(path) {\x0d\n    const readdirResult = binding.readdir(\x0d\n      pathModule.toNamespacedPath(path)\x2C\x0d\n      encoding\x2C\x0d\n      withFileTypes\x2C\x0d\n    );\x0d\n\x0d\n    if (readdirResult === undefined) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (withFileTypes) {\x0d\n      // Calling `readdir` with `withFileTypes=true`\x2C the result is an array of arrays.\x0d\n      // The first array is the names\x2C and the second array is the types.\x0d\n      // They are guaranteed to be the same length; hence\x2C setting `length` to the length\x0d\n      // of the first array within the result.\x0d\n      const length = readdirResult[0].length;\x0d\n      for (let i = 0; i < length; i++) {\x0d\n        const dirent = getDirent(path\x2C readdirResult[0][i]\x2C readdirResult[1][i]);\x0d\n        ArrayPrototypePush(readdirResults\x2C dirent);\x0d\n        if (dirent.isDirectory()) {\x0d\n          ArrayPrototypePush(pathsQueue\x2C pathModule.join(dirent.parentPath\x2C dirent.name));\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      for (let i = 0; i < readdirResult.length; i++) {\x0d\n        const resultPath = pathModule.join(path\x2C readdirResult[i]);\x0d\n        const relativeResultPath = pathModule.relative(basePath\x2C resultPath);\x0d\n        const stat = binding.internalModuleStat(resultPath);\x0d\n        ArrayPrototypePush(readdirResults\x2C relativeResultPath);\x0d\n        // 1 indicates directory\x0d\n        if (stat === 1) {\x0d\n          ArrayPrototypePush(pathsQueue\x2C resultPath);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  for (let i = 0; i < pathsQueue.length; i++) {\x0d\n    read(pathsQueue[i]);\x0d\n  }\x0d\n\x0d\n  return readdirResults;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   recursive?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   files?: string[] | Buffer[] | Dirent[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readdir(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  if (options.recursive != null) {\x0d\n    validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n  }\x0d\n\x0d\n  if (options.recursive) {\x0d\n    callback(null\x2C readdirSyncRecursive(path\x2C options));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  if (!options.withFileTypes) {\x0d\n    req.oncomplete = callback;\x0d\n  } else {\x0d\n    req.oncomplete = (err\x2C result) => {\x0d\n      if (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      getDirents(path\x2C result\x2C callback);\x0d\n    };\x0d\n  }\x0d\n  binding.readdir(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C\x0d\n                  !!options.withFileTypes\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   recursive?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer[] | Dirent[]}\x0d\n */\x0d\nfunction readdirSync(path\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  if (options.recursive != null) {\x0d\n    validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n  }\x0d\n\x0d\n  if (options.recursive) {\x0d\n    return readdirSyncRecursive(path\x2C options);\x0d\n  }\x0d\n\x0d\n  const result = binding.readdir(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    options.encoding\x2C\x0d\n    !!options.withFileTypes\x2C\x0d\n  );\x0d\n\x0d\n  return result !== undefined && options.withFileTypes ? getDirents(path\x2C result) : result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Invokes the callback with the `fs.Stats`\x0d\n * for the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fstat(fd\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.fstat(fd\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Retrieves the `fs.Stats` for the symbolic link\x0d\n * referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lstat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.lstat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously gets the stats of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction stat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.stat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\nfunction statfs(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n  callback = maybeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      return callback(err);\x0d\n    }\x0d\n\x0d\n    callback(err\x2C getStatFsFromBinding(stats));\x0d\n  };\x0d\n  binding.statfs(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats | undefined}\x0d\n */\x0d\nfunction fstatSync(fd\x2C options = { bigint: false }) {\x0d\n  const stats = binding.fstat(fd\x2C options.bigint\x2C undefined\x2C false);\x0d\n  if (stats === undefined) {\x0d\n    return;\x0d\n  }\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the symbolic link referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats | undefined}\x0d\n */\x0d\nfunction lstatSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const stats = binding.lstat(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    options.bigint\x2C\x0d\n    undefined\x2C\x0d\n    options.throwIfNoEntry\x2C\x0d\n  );\x0d\n\x0d\n  if (stats === undefined) {\x0d\n    return;\x0d\n  }\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats`\x0d\n * for the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction statSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const stats = binding.stat(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    options.bigint\x2C\x0d\n    undefined\x2C\x0d\n    options.throwIfNoEntry\x2C\x0d\n  );\x0d\n  if (stats === undefined) {\x0d\n    return undefined;\x0d\n  }\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\nfunction statfsSync(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const stats = binding.statfs(pathModule.toNamespacedPath(path)\x2C options.bigint);\x0d\n  return getStatFsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   linkString?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readlink(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.readlink(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readlinkSync(path\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  return binding.readlink(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    options.encoding\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates the link called `path` pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | null} [type_]\x0d\n * @param {(err?: Error) => any} callback_\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlink(target\x2C path\x2C type_\x2C callback_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  const callback = makeCallback(arguments[arguments.length - 1]);\x0d\n\x0d\n  if (permission.isEnabled()) {\x0d\n    // The permission model's security guarantees fall apart in the presence of\x0d\n    // relative symbolic links. Thus\x2C we have to prevent their creation.\x0d\n    if (BufferIsBuffer(target)) {\x0d\n      if (!isAbsolute(BufferToString(target))) {\x0d\n        callback(new ERR_ACCESS_DENIED('relative symbolic link target'));\x0d\n        return;\x0d\n      }\x0d\n    } else if (typeof target !== 'string' || !isAbsolute(toPathIfFileURL(target))) {\x0d\n      callback(new ERR_ACCESS_DENIED('relative symbolic link target'));\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (isWindows && type === null) {\x0d\n    let absoluteTarget;\x0d\n    try {\x0d\n      // Symlinks targets can be relative to the newly created path.\x0d\n      // Calculate absolute file name of the symlink target\x2C and check\x0d\n      // if it is a directory. Ignore resolve error to keep symlink\x0d\n      // errors consistent between platforms if invalid path is\x0d\n      // provided.\x0d\n      absoluteTarget = pathModule.resolve(path\x2C '..'\x2C target);\x0d\n    } catch {\x0d\n      // Continue regardless of error.\x0d\n    }\x0d\n    if (absoluteTarget !== undefined) {\x0d\n      stat(absoluteTarget\x2C (err\x2C stat) => {\x0d\n        const resolvedType = !err && stat.isDirectory() ? 'dir' : 'file';\x0d\n        const resolvedFlags = stringToSymlinkType(resolvedType);\x0d\n        const destination = preprocessSymlinkDestination(target\x2C\x0d\n                                                         resolvedType\x2C\x0d\n                                                         path);\x0d\n\x0d\n        const req = new FSReqCallback();\x0d\n        req.oncomplete = callback;\x0d\n        binding.symlink(destination\x2C\x0d\n                        pathModule.toNamespacedPath(path)\x2C resolvedFlags\x2C req);\x0d\n      });\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const destination = preprocessSymlinkDestination(target\x2C type\x2C path);\x0d\n\x0d\n  const flags = stringToSymlinkType(type);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.symlink(destination\x2C pathModule.toNamespacedPath(path)\x2C flags\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates the link called `path`\x0d\n * pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | null} [type]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlinkSync(target\x2C path\x2C type) {\x0d\n  type = (typeof type === 'string' ? type : null);\x0d\n  if (isWindows && type === null) {\x0d\n    const absoluteTarget = pathModule.resolve(`${path}`\x2C '..'\x2C `${target}`);\x0d\n    if (statSync(absoluteTarget\x2C { throwIfNoEntry: false })?.isDirectory()) {\x0d\n      type = 'dir';\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (permission.isEnabled()) {\x0d\n    // The permission model's security guarantees fall apart in the presence of\x0d\n    // relative symbolic links. Thus\x2C we have to prevent their creation.\x0d\n    if (typeof target !== 'string' || !isAbsolute(toPathIfFileURL(target))) {\x0d\n      throw new ERR_ACCESS_DENIED('relative symbolic link target');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  binding.symlink(\x0d\n    preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    stringToSymlinkType(type)\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction link(existingPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n               pathModule.toNamespacedPath(newPath)\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction linkSync(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  binding.link(\x0d\n    pathModule.toNamespacedPath(existingPath)\x2C\x0d\n    pathModule.toNamespacedPath(newPath)\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlink(path\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlinkSync(path) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  binding.unlink(path);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmod(fd\x2C mode\x2C callback) {\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchmod(fd\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmodSync(fd\x2C mode) {\x0d\n  binding.fchmod(\x0d\n    fd\x2C\x0d\n    parseFileMode(mode\x2C 'mode')\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmod(path\x2C mode\x2C callback) {\x0d\n  callback = maybeCallback(callback);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  fs.open(path\x2C O_WRONLY | O_SYMLINK\x2C (err\x2C fd) => {\x0d\n    if (err) {\x0d\n      callback(err);\x0d\n      return;\x0d\n    }\x0d\n    // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n    // but still try to close\x2C and report closing errors if they occur.\x0d\n    fs.fchmod(fd\x2C mode\x2C (err) => {\x0d\n      fs.close(fd\x2C (err2) => {\x0d\n        callback(aggregateTwoErrors(err2\x2C err));\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmodSync(path\x2C mode) {\x0d\n  const fd = fs.openSync(path\x2C O_WRONLY | O_SYMLINK);\x0d\n\x0d\n  // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n  // but still try to close\x2C and report closing errors if they occur.\x0d\n  let ret;\x0d\n  try {\x0d\n    ret = fs.fchmodSync(fd\x2C mode);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmod(path\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmodSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n\x0d\n  binding.chmod(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    mode\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  binding.lchown(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    uid\x2C\x0d\n    gid\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchown(fd\x2C uid\x2C gid\x2C callback) {\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchown(getValidatedFd(fd)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchownSync(fd\x2C uid\x2C gid) {\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  binding.fchown(getValidatedFd(fd)\x2C uid\x2C gid);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  binding.chown(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    uid\x2C\x0d\n    gid\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C\x0d\n                 toUnixTimestamp(mtime)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  binding.utimes(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    toUnixTimestamp(atime)\x2C\x0d\n    toUnixTimestamp(mtime)\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by the supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimes(fd\x2C atime\x2C mtime\x2C callback) {\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by the\x0d\n * supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimesSync(fd\x2C atime\x2C mtime) {\x0d\n  binding.futimes(\x0d\n    fd\x2C\x0d\n    toUnixTimestamp(atime\x2C 'atime')\x2C\x0d\n    toUnixTimestamp(mtime\x2C 'mtime')\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the access and modification times of\x0d\n * a file in the same way as `fs.utimes()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the access and modification\x0d\n * times of a file in the same way as `fs.utimesSync()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  binding.lutimes(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    toUnixTimestamp(atime)\x2C\x0d\n    toUnixTimestamp(mtime)\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C flush\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    const abortError = new AbortError(undefined\x2C { cause: signal?.reason });\x0d\n    if (isUserFd) {\x0d\n      callback(abortError);\x0d\n    } else {\x0d\n      fs.close(fd\x2C (err) => {\x0d\n        callback(aggregateTwoErrors(err\x2C abortError));\x0d\n      });\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  // write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback)\x0d\n  fs.write(fd\x2C buffer\x2C offset\x2C length\x2C null\x2C (writeErr\x2C written) => {\x0d\n    if (writeErr) {\x0d\n      if (isUserFd) {\x0d\n        callback(writeErr);\x0d\n      } else {\x0d\n        fs.close(fd\x2C (err) => {\x0d\n          callback(aggregateTwoErrors(err\x2C writeErr));\x0d\n        });\x0d\n      }\x0d\n    } else if (written === length) {\x0d\n      if (!flush) {\x0d\n        if (isUserFd) {\x0d\n          callback(null);\x0d\n        } else {\x0d\n          fs.close(fd\x2C callback);\x0d\n        }\x0d\n      } else {\x0d\n        fs.fsync(fd\x2C (syncErr) => {\x0d\n          if (syncErr) {\x0d\n            if (isUserFd) {\x0d\n              callback(syncErr);\x0d\n            } else {\x0d\n              fs.close(fd\x2C (err) => {\x0d\n                callback(aggregateTwoErrors(err\x2C syncErr));\x0d\n              });\x0d\n            }\x0d\n          } else if (isUserFd) {\x0d\n            callback(null);\x0d\n          } else {\x0d\n            fs.close(fd\x2C callback);\x0d\n          }\x0d\n        });\x0d\n      }\x0d\n    } else {\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n      writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C flush\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   flush?: boolean;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C {\x0d\n    encoding: 'utf8'\x2C\x0d\n    mode: 0o666\x2C\x0d\n    flag: 'w'\x2C\x0d\n    flush: false\x2C\x0d\n  });\x0d\n  const flag = options.flag || 'w';\x0d\n  const flush = options.flush ?? false;\x0d\n\x0d\n  validateBoolean(flush\x2C 'options.flush');\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  if (isFd(path)) {\x0d\n    const isUserFd = true;\x0d\n    const signal = options.signal;\x0d\n    writeAll(path\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C flush\x2C callback);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  fs.open(path\x2C flag\x2C options.mode\x2C (openErr\x2C fd) => {\x0d\n    if (openErr) {\x0d\n      callback(openErr);\x0d\n    } else {\x0d\n      const isUserFd = false;\x0d\n      const signal = options.signal;\x0d\n      writeAll(fd\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C flush\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   flush?: boolean;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C {\x0d\n    encoding: 'utf8'\x2C\x0d\n    mode: 0o666\x2C\x0d\n    flag: 'w'\x2C\x0d\n    flush: false\x2C\x0d\n  });\x0d\n\x0d\n  const flush = options.flush ?? false;\x0d\n\x0d\n  validateBoolean(flush\x2C 'options.flush');\x0d\n\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  // C++ fast path for string data and UTF8 encoding\x0d\n  if (typeof data === 'string' && (options.encoding === 'utf8' || options.encoding === 'utf-8')) {\x0d\n    if (!isInt32(path)) {\x0d\n      path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n    }\x0d\n\x0d\n    return binding.writeFileUtf8(\x0d\n      path\x2C data\x2C\x0d\n      stringToFlags(flag)\x2C\x0d\n      parseFileMode(options.mode\x2C 'mode'\x2C 0o666)\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C flag\x2C options.mode);\x0d\n\x0d\n  let offset = 0;\x0d\n  let length = data.byteLength;\x0d\n  try {\x0d\n    while (length > 0) {\x0d\n      const written = fs.writeSync(fd\x2C data\x2C offset\x2C length);\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n    }\x0d\n\x0d\n    if (flush) {\x0d\n      fs.fsyncSync(fd);\x0d\n    }\x0d\n  } finally {\x0d\n    if (!isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   flush?: boolean;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFile(path\x2C data\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFileSync(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Watches for the changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {string | {\x0d\n *   persistent?: boolean;\x0d\n *   recursive?: boolean;\x0d\n *   encoding?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   eventType?: string\x2C\x0d\n *   filename?: string | Buffer\x0d\n *   ) => any} [listener]\x0d\n * @returns {watchers.FSWatcher}\x0d\n */\x0d\nfunction watch(filename\x2C options\x2C listener) {\x0d\n  if (typeof options === 'function') {\x0d\n    listener = options;\x0d\n  }\x0d\n  options = getOptions(options);\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  if (options.persistent === undefined) options.persistent = true;\x0d\n  if (options.recursive === undefined) options.recursive = false;\x0d\n\x0d\n  let watcher;\x0d\n  const watchers = require('internal/fs/watchers');\x0d\n  const path = getValidatedPath(filename);\x0d\n  // TODO(anonrig): Remove non-native watcher when/if libuv supports recursive.\x0d\n  // As of November 2022\x2C libuv does not support recursive file watch on all platforms\x2C\x0d\n  // e.g. Linux due to the limitations of inotify.\x0d\n  if (options.recursive && !isOSX && !isWindows) {\x0d\n    const nonNativeWatcher = require('internal/fs/recursive_watch');\x0d\n    watcher = new nonNativeWatcher.FSWatcher(options);\x0d\n    watcher[watchers.kFSWatchStart](path);\x0d\n  } else {\x0d\n    watcher = new watchers.FSWatcher();\x0d\n    watcher[watchers.kFSWatchStart](path\x2C\x0d\n                                    options.persistent\x2C\x0d\n                                    options.recursive\x2C\x0d\n                                    options.encoding);\x0d\n  }\x0d\n\x0d\n  if (listener) {\x0d\n    watcher.addListener('change'\x2C listener);\x0d\n  }\x0d\n  if (options.signal) {\x0d\n    if (options.signal.aborted) {\x0d\n      process.nextTick(() => watcher.close());\x0d\n    } else {\x0d\n      const listener = () => watcher.close();\x0d\n      kResistStopPropagation ??= require('internal/event_target').kResistStopPropagation;\x0d\n      options.signal.addEventListener('abort'\x2C listener\x2C { __proto__: null\x2C [kResistStopPropagation]: true });\x0d\n      watcher.once('close'\x2C () => {\x0d\n        options.signal.removeEventListener('abort'\x2C listener);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return watcher;\x0d\n}\x0d\n\x0d\n\x0d\nconst statWatchers = new SafeMap();\x0d\n\x0d\n/**\x0d\n * Watches for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   persistent?: boolean;\x0d\n *   interval?: number;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   current?: Stats\x2C\x0d\n *   previous?: Stats\x0d\n *   ) => any} listener\x0d\n * @returns {watchers.StatWatcher}\x0d\n */\x0d\nfunction watchFile(filename\x2C options\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  let stat;\x0d\n\x0d\n  if (options === null || typeof options !== 'object') {\x0d\n    listener = options;\x0d\n    options = null;\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    // Poll interval in milliseconds. 5007 is what libev used to use. It's\x0d\n    // a little on the slow side but let's stick with it for now to keep\x0d\n    // behavioral changes to a minimum.\x0d\n    interval: 5007\x2C\x0d\n    persistent: true\x2C\x0d\n    ...options\x2C\x0d\n  };\x0d\n\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n\x0d\n  stat = statWatchers.get(filename);\x0d\n  const watchers = require('internal/fs/watchers');\x0d\n  if (stat === undefined) {\x0d\n    stat = new watchers.StatWatcher(options.bigint);\x0d\n    stat[watchers.kFSStatWatcherStart](filename\x2C\x0d\n                                       options.persistent\x2C options.interval);\x0d\n    statWatchers.set(filename\x2C stat);\x0d\n  } else {\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('add');\x0d\n  }\x0d\n\x0d\n  stat.addListener('change'\x2C listener);\x0d\n  return stat;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Stops watching for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {() => any} [listener]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unwatchFile(filename\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  const stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) return;\x0d\n  const watchers = require('internal/fs/watchers');\x0d\n  if (typeof listener === 'function') {\x0d\n    const beforeListenerCount = stat.listenerCount('change');\x0d\n    stat.removeListener('change'\x2C listener);\x0d\n    if (stat.listenerCount('change') < beforeListenerCount)\x0d\n      stat[watchers.kFSStatWatcherAddOrCleanRef]('clean');\x0d\n  } else {\x0d\n    stat.removeAllListeners('change');\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('cleanAll');\x0d\n  }\x0d\n\x0d\n  if (stat.listenerCount('change') === 0) {\x0d\n    stat.stop();\x0d\n    statWatchers.delete(filename);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nlet splitRoot;\x0d\nif (isWindows) {\x0d\n  // Regex to find the device root on Windows (e.g. 'c:\\\\')\x2C including trailing\x0d\n  // slash.\x0d\n  const splitRootRe = /^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*/;\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    return SideEffectFreeRegExpPrototypeExec(splitRootRe\x2C str)[0];\x0d\n  };\x0d\n} else {\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    for (let i = 0; i < str.length; ++i) {\x0d\n      if (StringPrototypeCharCodeAt(str\x2C i) !== CHAR_FORWARD_SLASH)\x0d\n        return StringPrototypeSlice(str\x2C 0\x2C i);\x0d\n    }\x0d\n    return str;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction encodeRealpathResult(result\x2C options) {\x0d\n  if (!options || !options.encoding || options.encoding === 'utf8')\x0d\n    return result;\x0d\n  const asBuffer = Buffer.from(result);\x0d\n  if (options.encoding === 'buffer') {\x0d\n    return asBuffer;\x0d\n  }\x0d\n  return asBuffer.toString(options.encoding);\x0d\n}\x0d\n\x0d\n// Finds the next portion of a (partial) path\x2C up to the next path delimiter\x0d\nlet nextPart;\x0d\nif (isWindows) {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    for (; i < p.length; ++i) {\x0d\n      const ch = StringPrototypeCharCodeAt(p\x2C i);\x0d\n\x0d\n      // Check for a separator character\x0d\n      if (ch === CHAR_BACKWARD_SLASH || ch === CHAR_FORWARD_SLASH)\x0d\n        return i;\x0d\n    }\x0d\n    return -1;\x0d\n  };\x0d\n} else {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    return StringPrototypeIndexOf(p\x2C '/'\x2C i);\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string | null; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction realpathSync(p\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  p = toPathIfFileURL(p);\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const cache = options[realpathCacheKey];\x0d\n  const maybeCachedResult = cache?.get(p);\x0d\n  if (maybeCachedResult) {\x0d\n    return maybeCachedResult;\x0d\n  }\x0d\n\x0d\n  const seenLinks = new SafeMap();\x0d\n  const knownHard = new SafeSet();\x0d\n  const original = p;\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  // Skip over roots\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows) {\x0d\n    const out = binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C true /* throwIfNoEntry */);\x0d\n    if (out === undefined) {\x0d\n      return;\x0d\n    }\x0d\n    knownHard.add(base);\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  // NB: p.length changes.\x0d\n  while (pos < p.length) {\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard.has(base) || cache?.get(base) === base) {\x0d\n      if (isFileType(statValues\x2C S_IFIFO) ||\x0d\n          isFileType(statValues\x2C S_IFSOCK)) {\x0d\n        break;\x0d\n      }\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    let resolvedLink;\x0d\n    const maybeCachedResolved = cache?.get(base);\x0d\n    if (maybeCachedResolved) {\x0d\n      resolvedLink = maybeCachedResolved;\x0d\n    } else {\x0d\n      // Use stats array directly to avoid creating an fs.Stats instance just\x0d\n      // for our internal use.\x0d\n\x0d\n      const baseLong = pathModule.toNamespacedPath(base);\x0d\n      const stats = binding.lstat(baseLong\x2C true\x2C undefined\x2C true /* throwIfNoEntry */);\x0d\n      if (stats === undefined) {\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      if (!isFileType(stats\x2C S_IFLNK)) {\x0d\n        knownHard.add(base);\x0d\n        cache?.set(base\x2C base);\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      // Read the link if it wasn't read before\x0d\n      // dev/ino always return 0 on windows\x2C so skip the check.\x0d\n      let linkTarget = null;\x0d\n      let id;\x0d\n      if (!isWindows) {\x0d\n        const dev = BigIntPrototypeToString(stats[0]\x2C 32);\x0d\n        const ino = BigIntPrototypeToString(stats[7]\x2C 32);\x0d\n        id = `${dev}:${ino}`;\x0d\n        if (seenLinks.has(id)) {\x0d\n          linkTarget = seenLinks.get(id);\x0d\n        }\x0d\n      }\x0d\n      if (linkTarget === null) {\x0d\n        binding.stat(baseLong\x2C false\x2C undefined\x2C true);\x0d\n        linkTarget = binding.readlink(baseLong\x2C undefined);\x0d\n      }\x0d\n      resolvedLink = pathModule.resolve(previous\x2C linkTarget);\x0d\n\x0d\n      cache?.set(base\x2C resolvedLink);\x0d\n      if (!isWindows) seenLinks.set(id\x2C linkTarget);\x0d\n    }\x0d\n\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n\x0d\n    // Skip over roots\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard.has(base)) {\x0d\n      const out = binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C true /* throwIfNoEntry */);\x0d\n      if (out === undefined) {\x0d\n        return;\x0d\n      }\x0d\n      knownHard.add(base);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  cache?.set(original\x2C p);\x0d\n  return encodeRealpathResult(p\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nrealpathSync.native = (path\x2C options) => {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.realpath(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    options.encoding\x2C\x0d\n  );\x0d\n};\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction realpath(p\x2C options\x2C callback) {\x0d\n  callback = typeof options === 'function' ? options : maybeCallback(callback);\x0d\n  options = getOptions(options);\x0d\n  p = toPathIfFileURL(p);\x0d\n\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const seenLinks = new SafeMap();\x0d\n  const knownHard = new SafeSet();\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows && !knownHard.has(base)) {\x0d\n    fs.lstat(base\x2C (err\x2C stats) => {\x0d\n      if (err) return callback(err);\x0d\n      knownHard.add(base);\x0d\n      LOOP();\x0d\n    });\x0d\n  } else {\x0d\n    process.nextTick(LOOP);\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  function LOOP() {\x0d\n    // Stop if scanned past end of path\x0d\n    if (pos >= p.length) {\x0d\n      return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n    }\x0d\n\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard.has(base)) {\x0d\n      if (isFileType(statValues\x2C S_IFIFO) ||\x0d\n          isFileType(statValues\x2C S_IFSOCK)) {\x0d\n        return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n      }\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    return fs.lstat(base\x2C { bigint: true }\x2C gotStat);\x0d\n  }\x0d\n\x0d\n  function gotStat(err\x2C stats) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    // If not a symlink\x2C skip to the next path part\x0d\n    if (!stats.isSymbolicLink()) {\x0d\n      knownHard.add(base);\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    // Stat & read the link if not read before.\x0d\n    // Call `gotTarget()` as soon as the link target is known.\x0d\n    // `dev`/`ino` always return 0 on windows\x2C so skip the check.\x0d\n    let id;\x0d\n    if (!isWindows) {\x0d\n      const dev = BigIntPrototypeToString(stats.dev\x2C 32);\x0d\n      const ino = BigIntPrototypeToString(stats.ino\x2C 32);\x0d\n      id = `${dev}:${ino}`;\x0d\n      if (seenLinks.has(id)) {\x0d\n        return gotTarget(null\x2C seenLinks.get(id));\x0d\n      }\x0d\n    }\x0d\n    fs.stat(base\x2C (err) => {\x0d\n      if (err) return callback(err);\x0d\n\x0d\n      fs.readlink(base\x2C (err\x2C target) => {\x0d\n        if (!isWindows) seenLinks.set(id\x2C target);\x0d\n        gotTarget(err\x2C target);\x0d\n      });\x0d\n    });\x0d\n  }\x0d\n\x0d\n  function gotTarget(err\x2C target) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    gotResolvedLink(pathModule.resolve(previous\x2C target));\x0d\n  }\x0d\n\x0d\n  function gotResolvedLink(resolvedLink) {\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard.has(base)) {\x0d\n      fs.lstat(base\x2C (err) => {\x0d\n        if (err) return callback(err);\x0d\n        knownHard.add(base);\x0d\n        LOOP();\x0d\n      });\x0d\n    } else {\x0d\n      process.nextTick(LOOP);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nrealpath.native = (path\x2C options\x2C callback) => {\x0d\n  callback = makeCallback(callback || options);\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.realpath(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C req);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Creates a unique temporary directory.\x0d\n * @param {string | Buffer | URL} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   directory?: string\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdtemp(prefix\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options);\x0d\n\x0d\n  prefix = getValidatedPath(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdtemp(prefix\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a unique temporary directory.\x0d\n * @param {string | Buffer | URL} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string}\x0d\n */\x0d\nfunction mkdtempSync(prefix\x2C options) {\x0d\n  options = getOptions(options);\x0d\n\x0d\n  prefix = getValidatedPath(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  return binding.mkdtemp(prefix\x2C options.encoding);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFile(src\x2C dest\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0;\x0d\n  }\x0d\n\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  src = pathModule.toNamespacedPath(src);\x0d\n  dest = pathModule.toNamespacedPath(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFileSync(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  binding.copyFile(\x0d\n    pathModule.toNamespacedPath(src)\x2C\x0d\n    pathModule.toNamespacedPath(dest)\x2C\x0d\n    getValidMode(mode\x2C 'copyFile')\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cp(src\x2C dest\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpFn(src\x2C dest\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cpSync(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpSyncFn(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nfunction lazyLoadStreams() {\x0d\n  if (!ReadStream) {\x0d\n    ({ ReadStream\x2C WriteStream } = require('internal/fs/streams'));\x0d\n    FileReadStream = ReadStream;\x0d\n    FileWriteStream = WriteStream;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a readable stream with a default `highWaterMark`\x0d\n * of 64 KiB.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   end?: number;\x0d\n *   highWaterMark?: number;\x0d\n *   fs?: object | null;\x0d\n *   signal?: AbortSignal | null;\x0d\n *   }} [options]\x0d\n * @returns {ReadStream}\x0d\n */\x0d\nfunction createReadStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new ReadStream(path\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a write stream.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   fs?: object | null;\x0d\n *   signal?: AbortSignal | null;\x0d\n *   highWaterMark?: number;\x0d\n *   flush?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {WriteStream}\x0d\n */\x0d\nfunction createWriteStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new WriteStream(path\x2C options);\x0d\n}\x0d\n\x0d\nmodule.exports = fs = {\x0d\n  appendFile\x2C\x0d\n  appendFileSync\x2C\x0d\n  access\x2C\x0d\n  accessSync\x2C\x0d\n  chown\x2C\x0d\n  chownSync\x2C\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  close\x2C\x0d\n  closeSync\x2C\x0d\n  copyFile\x2C\x0d\n  copyFileSync\x2C\x0d\n  cp\x2C\x0d\n  cpSync\x2C\x0d\n  createReadStream\x2C\x0d\n  createWriteStream\x2C\x0d\n  exists\x2C\x0d\n  existsSync\x2C\x0d\n  fchown\x2C\x0d\n  fchownSync\x2C\x0d\n  fchmod\x2C\x0d\n  fchmodSync\x2C\x0d\n  fdatasync\x2C\x0d\n  fdatasyncSync\x2C\x0d\n  fstat\x2C\x0d\n  fstatSync\x2C\x0d\n  fsync\x2C\x0d\n  fsyncSync\x2C\x0d\n  ftruncate\x2C\x0d\n  ftruncateSync\x2C\x0d\n  futimes\x2C\x0d\n  futimesSync\x2C\x0d\n  lchown\x2C\x0d\n  lchownSync\x2C\x0d\n  lchmod: constants.O_SYMLINK !== undefined ? lchmod : undefined\x2C\x0d\n  lchmodSync: constants.O_SYMLINK !== undefined ? lchmodSync : undefined\x2C\x0d\n  link\x2C\x0d\n  linkSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  lutimes\x2C\x0d\n  lutimesSync\x2C\x0d\n  mkdir\x2C\x0d\n  mkdirSync\x2C\x0d\n  mkdtemp\x2C\x0d\n  mkdtempSync\x2C\x0d\n  open\x2C\x0d\n  openSync\x2C\x0d\n  openAsBlob\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  read\x2C\x0d\n  readSync\x2C\x0d\n  readv\x2C\x0d\n  readvSync\x2C\x0d\n  readFile\x2C\x0d\n  readFileSync\x2C\x0d\n  readlink\x2C\x0d\n  readlinkSync\x2C\x0d\n  realpath\x2C\x0d\n  realpathSync\x2C\x0d\n  rename\x2C\x0d\n  renameSync\x2C\x0d\n  rm\x2C\x0d\n  rmSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statfs\x2C\x0d\n  statSync\x2C\x0d\n  statfsSync\x2C\x0d\n  symlink\x2C\x0d\n  symlinkSync\x2C\x0d\n  truncate\x2C\x0d\n  truncateSync\x2C\x0d\n  unwatchFile\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x2C\x0d\n  utimes\x2C\x0d\n  utimesSync\x2C\x0d\n  watch\x2C\x0d\n  watchFile\x2C\x0d\n  writeFile\x2C\x0d\n  writeFileSync\x2C\x0d\n  write\x2C\x0d\n  writeSync\x2C\x0d\n  writev\x2C\x0d\n  writevSync\x2C\x0d\n  Dirent\x2C\x0d\n  Stats\x2C\x0d\n\x0d\n  get ReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return ReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set ReadStream(val) {\x0d\n    ReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get WriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return WriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set WriteStream(val) {\x0d\n    WriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // Legacy names... these have to be separate because of how graceful-fs\x0d\n  // (and possibly other) modules monkey patch the values.\x0d\n  get FileReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileReadStream(val) {\x0d\n    FileReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get FileWriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileWriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileWriteStream(val) {\x0d\n    FileWriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // For tests\x0d\n  _toUnixTimestamp: toUnixTimestamp\x2C\x0d\n};\x0d\n\x0d\ndefineLazyProperties(\x0d\n  fs\x2C\x0d\n  'internal/fs/dir'\x2C\x0d\n  ['Dir'\x2C 'opendir'\x2C 'opendirSync']\x2C\x0d\n);\x0d\n\x0d\nObjectDefineProperties(fs\x2C {\x0d\n  F_OK: { __proto__: null\x2C enumerable: true\x2C value: F_OK || 0 }\x2C\x0d\n  R_OK: { __proto__: null\x2C enumerable: true\x2C value: R_OK || 0 }\x2C\x0d\n  W_OK: { __proto__: null\x2C enumerable: true\x2C value: W_OK || 0 }\x2C\x0d\n  X_OK: { __proto__: null\x2C enumerable: true\x2C value: X_OK || 0 }\x2C\x0d\n  constants: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x2C\x0d\n  }\x2C\x0d\n  promises: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      promises ??= require('internal/fs/promises').exports;\x0d\n      return promises;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n});\x0d\n
code-source-info,0x2d4d28e3124,56,14437,15023,C0O14437C2O14472C7O14479C13O14520C20O14527C25O14539C28O14562C32O14580C40O14604C46O14643C49O14665C57O14696C73O14703C80O14767C85O14767C90O14792C93O14803C99O14844C104O14844C110O14868C112O14883C116O14900C121O14908C128O14913C131O14924C136O14924C151O14908C157O15022,,
code-creation,JS,10,242693,0x2d4d28e992c,42, node:internal/fs/utils:719:42,0x1d9b725d208,~
script-source,28,node:internal/fs/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  BigInt\x2C\x0d\n  Date\x2C\x0d\n  DateNow\x2C\x0d\n  DatePrototypeGetTime\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Number\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  MathMin\x2C\x0d\n  MathRound\x2C\x0d\n  ObjectIs\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeAt\x2C\x0d\n  TypedArrayPrototypeIncludes\x2C\x0d\n  uncurryThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst permission = require('internal/process/permission');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_EISDIR\x2C\x0d\n    ERR_FS_INVALID_SYMLINK_TYPE\x2C\x0d\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n  }\x2C\x0d\n  hideStackFrames\x2C\x0d\n  UVException\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n  isBigInt64Array\x2C\x0d\n  isDate\x2C\x0d\n  isUint8Array\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  kEmptyObject\x2C\x0d\n  once\x2C\x0d\n} = require('internal/util');\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst kType = Symbol('type');\x0d\nconst kStats = Symbol('stats');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst { encodeUtf8String } = internalBinding('encoding_binding');\x0d\n\x0d\nconst {\x0d\n  fs: {\x0d\n    F_OK = 0\x2C\x0d\n    W_OK = 0\x2C\x0d\n    R_OK = 0\x2C\x0d\n    X_OK = 0\x2C\x0d\n    COPYFILE_EXCL\x2C\x0d\n    COPYFILE_FICLONE\x2C\x0d\n    COPYFILE_FICLONE_FORCE\x2C\x0d\n    O_APPEND\x2C\x0d\n    O_CREAT\x2C\x0d\n    O_EXCL\x2C\x0d\n    O_RDONLY\x2C\x0d\n    O_RDWR\x2C\x0d\n    O_SYNC\x2C\x0d\n    O_TRUNC\x2C\x0d\n    O_WRONLY\x2C\x0d\n    S_IFBLK\x2C\x0d\n    S_IFCHR\x2C\x0d\n    S_IFDIR\x2C\x0d\n    S_IFIFO\x2C\x0d\n    S_IFLNK\x2C\x0d\n    S_IFMT\x2C\x0d\n    S_IFREG\x2C\x0d\n    S_IFSOCK\x2C\x0d\n    UV_FS_SYMLINK_DIR\x2C\x0d\n    UV_FS_SYMLINK_JUNCTION\x2C\x0d\n    UV_DIRENT_UNKNOWN\x2C\x0d\n    UV_DIRENT_FILE\x2C\x0d\n    UV_DIRENT_DIR\x2C\x0d\n    UV_DIRENT_LINK\x2C\x0d\n    UV_DIRENT_FIFO\x2C\x0d\n    UV_DIRENT_SOCKET\x2C\x0d\n    UV_DIRENT_CHAR\x2C\x0d\n    UV_DIRENT_BLOCK\x2C\x0d\n  }\x2C\x0d\n  os: {\x0d\n    errno: {\x0d\n      EISDIR\x2C\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n} = internalBinding('constants');\x0d\n\x0d\n// The access modes can be any of F_OK\x2C R_OK\x2C W_OK or X_OK. Some might not be\x0d\n// available on specific systems. They can be used in combination as well\x0d\n// (F_OK | R_OK | W_OK | X_OK).\x0d\nconst kMinimumAccessMode = MathMin(F_OK\x2C W_OK\x2C R_OK\x2C X_OK);\x0d\nconst kMaximumAccessMode = F_OK | W_OK | R_OK | X_OK;\x0d\n\x0d\nconst kDefaultCopyMode = 0;\x0d\n// The copy modes can be any of COPYFILE_EXCL\x2C COPYFILE_FICLONE or\x0d\n// COPYFILE_FICLONE_FORCE. They can be used in combination as well\x0d\n// (COPYFILE_EXCL | COPYFILE_FICLONE | COPYFILE_FICLONE_FORCE).\x0d\nconst kMinimumCopyMode = MathMin(\x0d\n  kDefaultCopyMode\x2C\x0d\n  COPYFILE_EXCL\x2C\x0d\n  COPYFILE_FICLONE\x2C\x0d\n  COPYFILE_FICLONE_FORCE\x2C\x0d\n);\x0d\nconst kMaximumCopyMode = COPYFILE_EXCL |\x0d\n                         COPYFILE_FICLONE |\x0d\n                         COPYFILE_FICLONE_FORCE;\x0d\n\x0d\n// Most platforms don't allow reads or writes >= 2 GiB.\x0d\n// See https://github.com/libuv/libuv/pull/1501.\x0d\nconst kIoMaxLength = 2 ** 31 - 1;\x0d\n\x0d\n// Use 64kb in case the file type is not a regular file and thus do not know the\x0d\n// actual file size. Increasing the value further results in more frequent over\x0d\n// allocation for small files and consumes CPU time and memory that should be\x0d\n// used else wise.\x0d\n// Use up to 512kb per read otherwise to partition reading big files to prevent\x0d\n// blocking other threads in case the available threads are all in use.\x0d\nconst kReadFileUnknownBufferLength = 64 * 1024;\x0d\nconst kReadFileBufferLength = 512 * 1024;\x0d\n\x0d\nconst kWriteFileMaxChunkSize = 512 * 1024;\x0d\n\x0d\nconst kMaxUserId = 2 ** 32 - 1;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nlet fs;\x0d\nfunction lazyLoadFs() {\x0d\n  if (!fs) {\x0d\n    fs = require('fs');\x0d\n  }\x0d\n  return fs;\x0d\n}\x0d\n\x0d\nfunction assertEncoding(encoding) {\x0d\n  if (encoding && !Buffer.isEncoding(encoding)) {\x0d\n    const reason = 'is invalid encoding';\x0d\n    throw new ERR_INVALID_ARG_VALUE(encoding\x2C 'encoding'\x2C reason);\x0d\n  }\x0d\n}\x0d\n\x0d\nclass Dirent {\x0d\n  constructor(name\x2C type\x2C path) {\x0d\n    this.name = name;\x0d\n    this.parentPath = path;\x0d\n    this.path = path;\x0d\n    this[kType] = type;\x0d\n  }\x0d\n\x0d\n  isDirectory() {\x0d\n    return this[kType] === UV_DIRENT_DIR;\x0d\n  }\x0d\n\x0d\n  isFile() {\x0d\n    return this[kType] === UV_DIRENT_FILE;\x0d\n  }\x0d\n\x0d\n  isBlockDevice() {\x0d\n    return this[kType] === UV_DIRENT_BLOCK;\x0d\n  }\x0d\n\x0d\n  isCharacterDevice() {\x0d\n    return this[kType] === UV_DIRENT_CHAR;\x0d\n  }\x0d\n\x0d\n  isSymbolicLink() {\x0d\n    return this[kType] === UV_DIRENT_LINK;\x0d\n  }\x0d\n\x0d\n  isFIFO() {\x0d\n    return this[kType] === UV_DIRENT_FIFO;\x0d\n  }\x0d\n\x0d\n  isSocket() {\x0d\n    return this[kType] === UV_DIRENT_SOCKET;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass DirentFromStats extends Dirent {\x0d\n  constructor(name\x2C stats\x2C path) {\x0d\n    super(name\x2C null\x2C path);\x0d\n    this[kStats] = stats;\x0d\n  }\x0d\n}\x0d\n\x0d\nfor (const name of ReflectOwnKeys(Dirent.prototype)) {\x0d\n  if (name === 'constructor') {\x0d\n    continue;\x0d\n  }\x0d\n  DirentFromStats.prototype[name] = function() {\x0d\n    return this[kStats][name]();\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction copyObject(source) {\x0d\n  const target = {};\x0d\n  for (const key in source)\x0d\n    target[key] = source[key];\x0d\n  return target;\x0d\n}\x0d\n\x0d\nconst bufferSep = Buffer.from(pathModule.sep);\x0d\n\x0d\nfunction join(path\x2C name) {\x0d\n  if ((typeof path === 'string' || isUint8Array(path)) &&\x0d\n      name === undefined) {\x0d\n    return path;\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && isUint8Array(name)) {\x0d\n    const pathBuffer = Buffer.from(pathModule.join(path\x2C pathModule.sep));\x0d\n    return Buffer.concat([pathBuffer\x2C name]);\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && typeof name === 'string') {\x0d\n    return pathModule.join(path\x2C name);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(path) && isUint8Array(name)) {\x0d\n    return Buffer.concat([path\x2C bufferSep\x2C name]);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'path'\x2C ['string'\x2C 'Buffer']\x2C path);\x0d\n}\x0d\n\x0d\nfunction getDirents(path\x2C { 0: names\x2C 1: types }\x2C callback) {\x0d\n  let i;\x0d\n  if (typeof callback === 'function') {\x0d\n    const len = names.length;\x0d\n    let toFinish = 0;\x0d\n    callback = once(callback);\x0d\n    for (i = 0; i < len; i++) {\x0d\n      const type = types[i];\x0d\n      if (type === UV_DIRENT_UNKNOWN) {\x0d\n        const name = names[i];\x0d\n        const idx = i;\x0d\n        toFinish++;\x0d\n        let filepath;\x0d\n        try {\x0d\n          filepath = join(path\x2C name);\x0d\n        } catch (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n          if (err) {\x0d\n            callback(err);\x0d\n            return;\x0d\n          }\x0d\n          names[idx] = new DirentFromStats(name\x2C stats\x2C path);\x0d\n          if (--toFinish === 0) {\x0d\n            callback(null\x2C names);\x0d\n          }\x0d\n        });\x0d\n      } else {\x0d\n        names[i] = new Dirent(names[i]\x2C types[i]\x2C path);\x0d\n      }\x0d\n    }\x0d\n    if (toFinish === 0) {\x0d\n      callback(null\x2C names);\x0d\n    }\x0d\n  } else {\x0d\n    const len = names.length;\x0d\n    for (i = 0; i < len; i++) {\x0d\n      names[i] = getDirent(path\x2C names[i]\x2C types[i]);\x0d\n    }\x0d\n    return names;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getDirent(path\x2C name\x2C type\x2C callback) {\x0d\n  if (typeof callback === 'function') {\x0d\n    if (type === UV_DIRENT_UNKNOWN) {\x0d\n      let filepath;\x0d\n      try {\x0d\n        filepath = join(path\x2C name);\x0d\n      } catch (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n        if (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        callback(null\x2C new DirentFromStats(name\x2C stats\x2C filepath));\x0d\n      });\x0d\n    } else {\x0d\n      callback(null\x2C new Dirent(name\x2C type\x2C path));\x0d\n    }\x0d\n  } else if (type === UV_DIRENT_UNKNOWN) {\x0d\n    const filepath = join(path\x2C name);\x0d\n    const stats = lazyLoadFs().lstatSync(filepath);\x0d\n    return new DirentFromStats(name\x2C stats\x2C path);\x0d\n  } else {\x0d\n    return new Dirent(name\x2C type\x2C path);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getOptions(options\x2C defaultOptions = kEmptyObject) {\x0d\n  if (options == null || typeof options === 'function') {\x0d\n    return defaultOptions;\x0d\n  }\x0d\n\x0d\n  if (typeof options === 'string') {\x0d\n    defaultOptions = { ...defaultOptions };\x0d\n    defaultOptions.encoding = options;\x0d\n    options = defaultOptions;\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C ['string'\x2C 'Object']\x2C options);\x0d\n  }\x0d\n\x0d\n  if (options.encoding !== 'buffer')\x0d\n    assertEncoding(options.encoding);\x0d\n\x0d\n  if (options.signal !== undefined) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n\x0d\n  return options;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {InternalFSBinding.FSSyncContext} ctx\x0d\n */\x0d\nfunction handleErrorFromBinding(ctx) {\x0d\n  if (ctx.errno !== undefined) {  // libuv error numbers\x0d\n    const err = new UVException(ctx);\x0d\n    ErrorCaptureStackTrace(err\x2C handleErrorFromBinding);\x0d\n    throw err;\x0d\n  }\x0d\n  if (ctx.error !== undefined) {  // Errors created in C++ land.\x0d\n    // TODO(joyeecheung): currently\x2C ctx.error are encoding errors\x0d\n    // usually caused by memory problems. We need to figure out proper error\x0d\n    // code(s) for this.\x0d\n    ErrorCaptureStackTrace(ctx.error\x2C handleErrorFromBinding);\x0d\n    throw ctx.error;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction preprocessSymlinkDestination(path\x2C type\x2C linkPath) {\x0d\n  if (!isWindows) {\x0d\n    // No preprocessing is needed on Unix.\x0d\n    return path;\x0d\n  }\x0d\n  path = '' + path;\x0d\n  if (type === 'junction') {\x0d\n    // Junctions paths need to be absolute and \\\\?\\-prefixed.\x0d\n    // A relative target is relative to the link's parent directory.\x0d\n    path = pathModule.resolve(linkPath\x2C '..'\x2C path);\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  if (pathModule.isAbsolute(path)) {\x0d\n    // If the path is absolute\x2C use the \\\\?\\-prefix to enable long filenames\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  // Windows symlinks don't tolerate forward slashes.\x0d\n  return RegExpPrototypeSymbolReplace(/\\//g\x2C path\x2C '\\\\');\x0d\n}\x0d\n\x0d\n// Constructor for file stats.\x0d\nfunction StatsBase(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                   ino\x2C size\x2C blocks) {\x0d\n  this.dev = dev;\x0d\n  this.mode = mode;\x0d\n  this.nlink = nlink;\x0d\n  this.uid = uid;\x0d\n  this.gid = gid;\x0d\n  this.rdev = rdev;\x0d\n  this.blksize = blksize;\x0d\n  this.ino = ino;\x0d\n  this.size = size;\x0d\n  this.blocks = blocks;\x0d\n}\x0d\n\x0d\nStatsBase.prototype.isDirectory = function() {\x0d\n  return this._checkModeProperty(S_IFDIR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFile = function() {\x0d\n  return this._checkModeProperty(S_IFREG);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isBlockDevice = function() {\x0d\n  return this._checkModeProperty(S_IFBLK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isCharacterDevice = function() {\x0d\n  return this._checkModeProperty(S_IFCHR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSymbolicLink = function() {\x0d\n  return this._checkModeProperty(S_IFLNK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFIFO = function() {\x0d\n  return this._checkModeProperty(S_IFIFO);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSocket = function() {\x0d\n  return this._checkModeProperty(S_IFSOCK);\x0d\n};\x0d\n\x0d\nconst kNsPerMsBigInt = 10n ** 6n;\x0d\nconst kNsPerSecBigInt = 10n ** 9n;\x0d\nconst kMsPerSec = 10 ** 3;\x0d\nconst kNsPerMs = 10 ** 6;\x0d\nfunction msFromTimeSpec(sec\x2C nsec) {\x0d\n  return sec * kMsPerSec + nsec / kNsPerMs;\x0d\n}\x0d\n\x0d\nfunction nsFromTimeSpecBigInt(sec\x2C nsec) {\x0d\n  return sec * kNsPerSecBigInt + nsec;\x0d\n}\x0d\n\x0d\n// The Date constructor performs Math.floor() on the absolute value\x0d\n// of the timestamp: https://tc39.es/ecma262/#sec-timeclip\x0d\n// Since there may be a precision loss when the timestamp is\x0d\n// converted to a floating point number\x2C we manually round\x0d\n// the timestamp here before passing it to Date().\x0d\n// Refs: https://github.com/nodejs/node/pull/12607\x0d\n// Refs: https://github.com/nodejs/node/pull/43714\x0d\nfunction dateFromMs(ms) {\x0d\n  // Coercing to number\x2C ms can be bigint\x0d\n  return new Date(MathRound(Number(ms)));\x0d\n}\x0d\n\x0d\nfunction BigIntStats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                     ino\x2C size\x2C blocks\x2C\x0d\n                     atimeNs\x2C mtimeNs\x2C ctimeNs\x2C birthtimeNs) {\x0d\n  ReflectApply(StatsBase\x2C this\x2C [dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                                 ino\x2C size\x2C blocks]);\x0d\n\x0d\n  this.atimeMs = atimeNs / kNsPerMsBigInt;\x0d\n  this.mtimeMs = mtimeNs / kNsPerMsBigInt;\x0d\n  this.ctimeMs = ctimeNs / kNsPerMsBigInt;\x0d\n  this.birthtimeMs = birthtimeNs / kNsPerMsBigInt;\x0d\n  this.atimeNs = atimeNs;\x0d\n  this.mtimeNs = mtimeNs;\x0d\n  this.ctimeNs = ctimeNs;\x0d\n  this.birthtimeNs = birthtimeNs;\x0d\n  this.atime = dateFromMs(this.atimeMs);\x0d\n  this.mtime = dateFromMs(this.mtimeMs);\x0d\n  this.ctime = dateFromMs(this.ctimeMs);\x0d\n  this.birthtime = dateFromMs(this.birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(BigIntStats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(BigIntStats\x2C StatsBase);\x0d\n\x0d\nBigIntStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & BigInt(S_IFMT)) === BigInt(property);\x0d\n};\x0d\n\x0d\nfunction Stats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n               ino\x2C size\x2C blocks\x2C\x0d\n               atimeMs\x2C mtimeMs\x2C ctimeMs\x2C birthtimeMs) {\x0d\n  FunctionPrototypeCall(StatsBase\x2C this\x2C dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C\x0d\n                        blksize\x2C ino\x2C size\x2C blocks);\x0d\n  this.atimeMs = atimeMs;\x0d\n  this.mtimeMs = mtimeMs;\x0d\n  this.ctimeMs = ctimeMs;\x0d\n  this.birthtimeMs = birthtimeMs;\x0d\n  this.atime = dateFromMs(atimeMs);\x0d\n  this.mtime = dateFromMs(mtimeMs);\x0d\n  this.ctime = dateFromMs(ctimeMs);\x0d\n  this.birthtime = dateFromMs(birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Stats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(Stats\x2C StatsBase);\x0d\n\x0d\n// HACK: Workaround for https://github.com/standard-things/esm/issues/821.\x0d\n// TODO(ronag): Remove this as soon as `esm` publishes a fixed version.\x0d\nStats.prototype.isFile = StatsBase.prototype.isFile;\x0d\n\x0d\nStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & S_IFMT) === property;\x0d\n};\x0d\n\x0d\n/**\x0d\n * @param {Float64Array | BigInt64Array} stats\x0d\n * @param {number} offset\x0d\n * @returns {BigIntStats | Stats}\x0d\n */\x0d\nfunction getStatsFromBinding(stats\x2C offset = 0) {\x0d\n  if (isBigInt64Array(stats)) {\x0d\n    return new BigIntStats(\x0d\n      stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n      stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n      stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n      stats[9 + offset]\x2C\x0d\n      nsFromTimeSpecBigInt(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[16 + offset]\x2C stats[17 + offset])\x2C\x0d\n    );\x0d\n  }\x0d\n  return new Stats(\x0d\n    stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n    stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n    stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n    stats[9 + offset]\x2C\x0d\n    msFromTimeSpec(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n    msFromTimeSpec(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n    msFromTimeSpec(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n    msFromTimeSpec(stats[16 + offset]\x2C stats[17 + offset])\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nclass StatFs {\x0d\n  constructor(type\x2C bsize\x2C blocks\x2C bfree\x2C bavail\x2C files\x2C ffree) {\x0d\n    this.type = type;\x0d\n    this.bsize = bsize;\x0d\n    this.blocks = blocks;\x0d\n    this.bfree = bfree;\x0d\n    this.bavail = bavail;\x0d\n    this.files = files;\x0d\n    this.ffree = ffree;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getStatFsFromBinding(stats) {\x0d\n  return new StatFs(\x0d\n    stats[0]\x2C stats[1]\x2C stats[2]\x2C stats[3]\x2C stats[4]\x2C stats[5]\x2C stats[6]\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringToFlags(flags\x2C name = 'flags') {\x0d\n  if (typeof flags === 'number') {\x0d\n    validateInt32(flags\x2C name);\x0d\n    return flags;\x0d\n  }\x0d\n\x0d\n  if (flags == null) {\x0d\n    return O_RDONLY;\x0d\n  }\x0d\n\x0d\n  switch (flags) {\x0d\n    case 'r' : return O_RDONLY;\x0d\n    case 'rs' : // Fall through.\x0d\n    case 'sr' : return O_RDONLY | O_SYNC;\x0d\n    case 'r+' : return O_RDWR;\x0d\n    case 'rs+' : // Fall through.\x0d\n    case 'sr+' : return O_RDWR | O_SYNC;\x0d\n\x0d\n    case 'w' : return O_TRUNC | O_CREAT | O_WRONLY;\x0d\n    case 'wx' : // Fall through.\x0d\n    case 'xw' : return O_TRUNC | O_CREAT | O_WRONLY | O_EXCL;\x0d\n\x0d\n    case 'w+' : return O_TRUNC | O_CREAT | O_RDWR;\x0d\n    case 'wx+': // Fall through.\x0d\n    case 'xw+': return O_TRUNC | O_CREAT | O_RDWR | O_EXCL;\x0d\n\x0d\n    case 'a' : return O_APPEND | O_CREAT | O_WRONLY;\x0d\n    case 'ax' : // Fall through.\x0d\n    case 'xa' : return O_APPEND | O_CREAT | O_WRONLY | O_EXCL;\x0d\n    case 'as' : // Fall through.\x0d\n    case 'sa' : return O_APPEND | O_CREAT | O_WRONLY | O_SYNC;\x0d\n\x0d\n    case 'a+' : return O_APPEND | O_CREAT | O_RDWR;\x0d\n    case 'ax+': // Fall through.\x0d\n    case 'xa+': return O_APPEND | O_CREAT | O_RDWR | O_EXCL;\x0d\n    case 'as+': // Fall through.\x0d\n    case 'sa+': return O_APPEND | O_CREAT | O_RDWR | O_SYNC;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('flags'\x2C flags);\x0d\n}\x0d\n\x0d\nconst stringToSymlinkType = hideStackFrames((type) => {\x0d\n  let flags = 0;\x0d\n  if (typeof type === 'string') {\x0d\n    switch (type) {\x0d\n      case 'dir':\x0d\n        flags |= UV_FS_SYMLINK_DIR;\x0d\n        break;\x0d\n      case 'junction':\x0d\n        flags |= UV_FS_SYMLINK_JUNCTION;\x0d\n        break;\x0d\n      case 'file':\x0d\n        break;\x0d\n      default:\x0d\n        throw new ERR_FS_INVALID_SYMLINK_TYPE(type);\x0d\n    }\x0d\n  }\x0d\n  return flags;\x0d\n});\x0d\n\x0d\n// converts Date or number to a fractional UNIX timestamp\x0d\nfunction toUnixTimestamp(time\x2C name = 'time') {\x0d\n  // eslint-disable-next-line eqeqeq\x0d\n  if (typeof time === 'string' && +time == time) {\x0d\n    return +time;\x0d\n  }\x0d\n  if (NumberIsFinite(time)) {\x0d\n    if (time < 0) {\x0d\n      return DateNow() / 1000;\x0d\n    }\x0d\n    return time;\x0d\n  }\x0d\n  if (isDate(time)) {\x0d\n    // Convert to 123.456 UNIX timestamp\x0d\n    return DatePrototypeGetTime(time) / 1000;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE(name\x2C ['Date'\x2C 'Time in seconds']\x2C time);\x0d\n}\x0d\n\x0d\nconst validateOffsetLengthRead = hideStackFrames(\x0d\n  (offset\x2C length\x2C bufferLength) => {\x0d\n    if (offset < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE.HideStackFramesError('offset'\x2C '>= 0'\x2C offset);\x0d\n    }\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE.HideStackFramesError('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n    if (offset + length > bufferLength) {\x0d\n      throw new ERR_OUT_OF_RANGE.HideStackFramesError('length'\x2C\x0d\n                                                      `<= ${bufferLength - offset}`\x2C length);\x0d\n    }\x0d\n  }\x2C\x0d\n);\x0d\n\x0d\nconst validateOffsetLengthWrite = hideStackFrames(\x0d\n  (offset\x2C length\x2C byteLength) => {\x0d\n    if (offset > byteLength) {\x0d\n      throw new ERR_OUT_OF_RANGE.HideStackFramesError('offset'\x2C `<= ${byteLength}`\x2C offset);\x0d\n    }\x0d\n\x0d\n    if (length > byteLength - offset) {\x0d\n      throw new ERR_OUT_OF_RANGE.HideStackFramesError('length'\x2C `<= ${byteLength - offset}`\x2C length);\x0d\n    }\x0d\n\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE.HideStackFramesError('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n\x0d\n    validateInt32.withoutStackTrace(length\x2C 'length'\x2C 0);\x0d\n  }\x2C\x0d\n);\x0d\n\x0d\nconst validatePath = hideStackFrames((path\x2C propName = 'path') => {\x0d\n  if (typeof path !== 'string' && !isUint8Array(path)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE.HideStackFramesError(propName\x2C ['string'\x2C 'Buffer'\x2C 'URL']\x2C path);\x0d\n  }\x0d\n\x0d\n  const pathIsString = typeof path === 'string';\x0d\n  const pathIsUint8Array = isUint8Array(path);\x0d\n\x0d\n  // We can only perform meaningful checks on strings and Uint8Arrays.\x0d\n  if ((!pathIsString && !pathIsUint8Array) ||\x0d\n      (pathIsString && !StringPrototypeIncludes(path\x2C '\\u0000')) ||\x0d\n      (pathIsUint8Array && !TypedArrayPrototypeIncludes(path\x2C 0))) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE.HideStackFramesError(\x0d\n    propName\x2C\x0d\n    path\x2C\x0d\n    'must be a string\x2C Uint8Array\x2C or URL without null bytes'\x2C\x0d\n  );\x0d\n});\x0d\n\x0d\n// TODO(rafaelgss): implement the path.resolve on C++ side\x0d\n// See: https://github.com/nodejs/node/pull/44004#discussion_r930958420\x0d\n// The permission model needs the absolute path for the fs_permission\x0d\nconst resolvePath = pathModule.resolve;\x0d\nconst { isBuffer: BufferIsBuffer\x2C from: BufferFrom } = Buffer;\x0d\nconst BufferToString = uncurryThis(Buffer.prototype.toString);\x0d\nfunction possiblyTransformPath(path) {\x0d\n  if (permission.isEnabled()) {\x0d\n    if (typeof path === 'string') {\x0d\n      return resolvePath(path);\x0d\n    }\x0d\n    assert(isUint8Array(path));\x0d\n    if (!BufferIsBuffer(path)) path = BufferFrom(path);\x0d\n    // Avoid Buffer.from() and use a C++ binding instead to encode the result\x0d\n    // of path.resolve() in order to prevent path traversal attacks that\x0d\n    // monkey-patch Buffer internals.\x0d\n    return encodeUtf8String(resolvePath(BufferToString(path)));\x0d\n  }\x0d\n  return path;\x0d\n}\x0d\n\x0d\nconst getValidatedPath = hideStackFrames((fileURLOrPath\x2C propName = 'path') => {\x0d\n  const path = toPathIfFileURL(fileURLOrPath);\x0d\n  validatePath(path\x2C propName);\x0d\n  return possiblyTransformPath(path);\x0d\n});\x0d\n\x0d\nconst getValidatedFd = hideStackFrames((fd\x2C propName = 'fd') => {\x0d\n  if (ObjectIs(fd\x2C -0)) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  validateInt32(fd\x2C propName\x2C 0);\x0d\n\x0d\n  return fd;\x0d\n});\x0d\n\x0d\nconst validateBufferArray = hideStackFrames((buffers\x2C propName = 'buffers') => {\x0d\n  if (!ArrayIsArray(buffers))\x0d\n    throw new ERR_INVALID_ARG_TYPE.HideStackFramesError(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n\x0d\n  for (let i = 0; i < buffers.length; i++) {\x0d\n    if (!isArrayBufferView(buffers[i]))\x0d\n      throw new ERR_INVALID_ARG_TYPE.HideStackFramesError(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n  }\x0d\n\x0d\n  return buffers;\x0d\n});\x0d\n\x0d\nlet nonPortableTemplateWarn = true;\x0d\n\x0d\nfunction warnOnNonPortableTemplate(template) {\x0d\n  // Template strings passed to the mkdtemp() family of functions should not\x0d\n  // end with 'X' because they are handled inconsistently across platforms.\x0d\n  if (nonPortableTemplateWarn &&\x0d\n    ((typeof template === 'string' && StringPrototypeEndsWith(template\x2C 'X')) ||\x0d\n    (typeof template !== 'string' && TypedArrayPrototypeAt(template\x2C -1) === 0x58))) {\x0d\n    process.emitWarning('mkdtemp() templates ending with X are not portable. ' +\x0d\n                        'For details see: https://nodejs.org/api/fs.html');\x0d\n    nonPortableTemplateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst defaultCpOptions = {\x0d\n  dereference: false\x2C\x0d\n  errorOnExist: false\x2C\x0d\n  filter: undefined\x2C\x0d\n  force: true\x2C\x0d\n  preserveTimestamps: false\x2C\x0d\n  recursive: false\x2C\x0d\n  verbatimSymlinks: false\x2C\x0d\n};\x0d\n\x0d\nconst defaultRmOptions = {\x0d\n  recursive: false\x2C\x0d\n  force: false\x2C\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x2C\x0d\n};\x0d\n\x0d\nconst defaultRmdirOptions = {\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x2C\x0d\n  recursive: false\x2C\x0d\n};\x0d\n\x0d\nconst validateCpOptions = hideStackFrames((options) => {\x0d\n  if (options === undefined)\x0d\n    return { ...defaultCpOptions };\x0d\n  validateObject(options\x2C 'options');\x0d\n  options = { ...defaultCpOptions\x2C ...options };\x0d\n  validateBoolean(options.dereference\x2C 'options.dereference');\x0d\n  validateBoolean(options.errorOnExist\x2C 'options.errorOnExist');\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n  validateBoolean(options.preserveTimestamps\x2C 'options.preserveTimestamps');\x0d\n  validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n  validateBoolean(options.verbatimSymlinks\x2C 'options.verbatimSymlinks');\x0d\n  options.mode = getValidMode(options.mode\x2C 'copyFile');\x0d\n  if (options.dereference === true && options.verbatimSymlinks === true) {\x0d\n    throw new ERR_INCOMPATIBLE_OPTION_PAIR.HideStackFramesError('dereference'\x2C 'verbatimSymlinks');\x0d\n  }\x0d\n  if (options.filter !== undefined) {\x0d\n    validateFunction(options.filter\x2C 'options.filter');\x0d\n  }\x0d\n  return options;\x0d\n});\x0d\n\x0d\nconst validateRmOptions = hideStackFrames((path\x2C options\x2C expectDir\x2C cb) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  lazyLoadFs().lstat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (options.force && err.code === 'ENOENT') {\x0d\n        return cb(null\x2C options);\x0d\n      }\x0d\n      return cb(err\x2C options);\x0d\n    }\x0d\n\x0d\n    if (expectDir && !stats.isDirectory()) {\x0d\n      return cb(false);\x0d\n    }\x0d\n\x0d\n    if (stats.isDirectory() && !options.recursive) {\x0d\n      const err = new ERR_FS_EISDIR.HideStackFramesError({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x2C\x0d\n      });\x0d\n\x0d\n      return cb(err);\x0d\n    }\x0d\n    return cb(null\x2C options);\x0d\n  });\x0d\n});\x0d\n\x0d\nconst validateRmOptionsSync = hideStackFrames((path\x2C options\x2C expectDir) => {\x0d\n  options = validateRmdirOptions.withoutStackTrace(options\x2C defaultRmOptions);\x0d\n  validateBoolean.withoutStackTrace(options.force\x2C 'options.force');\x0d\n\x0d\n  if (!options.force || expectDir || !options.recursive) {\x0d\n    const isDirectory = lazyLoadFs()\x0d\n      .lstatSync(path\x2C { throwIfNoEntry: !options.force })?.isDirectory();\x0d\n\x0d\n    if (expectDir && !isDirectory) {\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    if (isDirectory && !options.recursive) {\x0d\n      throw new ERR_FS_EISDIR.HideStackFramesError({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return options;\x0d\n});\x0d\n\x0d\nlet recursiveRmdirWarned;\x0d\nfunction emitRecursiveRmdirWarning() {\x0d\n  if (recursiveRmdirWarned === undefined) {\x0d\n    // TODO(joyeecheung): use getOptionValue('--no-deprecation') instead.\x0d\n    recursiveRmdirWarned = process.noDeprecation;\x0d\n  }\x0d\n  if (!recursiveRmdirWarned) {\x0d\n    process.emitWarning(\x0d\n      'In future versions of Node.js\x2C fs.rmdir(path\x2C { recursive: true }) ' +\x0d\n      'will be removed. Use fs.rm(path\x2C { recursive: true }) instead'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0147'\x2C\x0d\n    );\x0d\n    recursiveRmdirWarned = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateRmdirOptions = hideStackFrames(\x0d\n  (options\x2C defaults = defaultRmdirOptions) => {\x0d\n    if (options === undefined)\x0d\n      return defaults;\x0d\n    validateObject.withoutStackTrace(options\x2C 'options');\x0d\n\x0d\n    options = { ...defaults\x2C ...options };\x0d\n\x0d\n    validateBoolean.withoutStackTrace(options.recursive\x2C 'options.recursive');\x0d\n    validateInt32.withoutStackTrace(options.retryDelay\x2C 'options.retryDelay'\x2C 0);\x0d\n    validateUint32.withoutStackTrace(options.maxRetries\x2C 'options.maxRetries');\x0d\n\x0d\n    return options;\x0d\n  });\x0d\n\x0d\nconst getValidMode = hideStackFrames((mode\x2C type) => {\x0d\n  let min = kMinimumAccessMode;\x0d\n  let max = kMaximumAccessMode;\x0d\n  let def = F_OK;\x0d\n  if (type === 'copyFile') {\x0d\n    min = kMinimumCopyMode;\x0d\n    max = kMaximumCopyMode;\x0d\n    def = mode || kDefaultCopyMode;\x0d\n  } else {\x0d\n    assert(type === 'access');\x0d\n  }\x0d\n  if (mode == null) {\x0d\n    return def;\x0d\n  }\x0d\n  validateInteger.withoutStackTrace(mode\x2C 'mode'\x2C min\x2C max);\x0d\n  return mode;\x0d\n});\x0d\n\x0d\nconst validateStringAfterArrayBufferView = hideStackFrames((buffer\x2C name) => {\x0d\n  if (typeof buffer !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE.HideStackFramesError(\x0d\n      name\x2C\x0d\n      ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n      buffer\x2C\x0d\n    );\x0d\n  }\x0d\n});\x0d\n\x0d\nconst validatePosition = hideStackFrames((position\x2C name\x2C length) => {\x0d\n  if (typeof position === 'number') {\x0d\n    validateInteger.withoutStackTrace(position\x2C name\x2C -1);\x0d\n  } else if (typeof position === 'bigint') {\x0d\n    const maxPosition = 2n ** 63n - 1n - BigInt(length);\x0d\n    if (!(position >= -1n && position <= maxPosition)) {\x0d\n      throw new ERR_OUT_OF_RANGE.HideStackFramesError(name\x2C\x0d\n                                                      `>= -1 && <= ${maxPosition}`\x2C\x0d\n                                                      position);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE.HideStackFramesError(name\x2C ['integer'\x2C 'bigint']\x2C position);\x0d\n  }\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  assertEncoding\x2C\x0d\n  BigIntStats\x2C  // for testing\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirent\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  possiblyTransformPath\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  realpathCacheKey: Symbol('realpathCacheKey')\x2C\x0d\n  getStatFsFromBinding\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  Stats\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x2C\x0d\n};\x0d\n
code-source-info,0x2d4d28e992c,28,20776,20938,C14O20832C19O20832C24O20867C29O20867C34O20900C37O20907C41O20935,,
tick,0x7ff7b354e311,244150,0,0x0,3,0x7ff7b3cc62d0,0x7ff734386677,0x2d4d28e312b,0x2d4d28e1625,0x2d4d28e0dc2,0xa5da639dfd,0x125aa7b3c43,0x125aa7ab020,0x3151437ffa6
code-creation,JS,10,244218,0x2d4d28eb8bc,20,toPathIfFileURL node:internal/url:1555:25,0x1d9b7262590,~
script-source,32,node:internal/url,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Boolean\x2C\x0d\n  Int8Array\x2C\x0d\n  IteratorPrototype\x2C\x0d\n  Number\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeCharAt\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeCodePointAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  StringPrototypeToWellFormed\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\nconst {\x0d\n  encodeStr\x2C\x0d\n  hexTable\x2C\x0d\n  isHexTable\x2C\x0d\n} = require('internal/querystring');\x0d\n\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  removeColors\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n  SideEffectFreeRegExpPrototypeSymbolReplace\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  markTransferMode\x2C\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ARG_NOT_ITERABLE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FILE_URL_HOST\x2C\x0d\n    ERR_INVALID_FILE_URL_PATH\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_INVALID_TUPLE\x2C\x0d\n    ERR_INVALID_URL\x2C\x0d\n    ERR_INVALID_URL_SCHEME\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  CHAR_AMPERSAND\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_EQUAL\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_PERCENT\x2C\x0d\n  CHAR_PLUS\x2C\x0d\n} = require('internal/constants');\x0d\nconst path = require('path');\x0d\n\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst querystring = require('querystring');\x0d\n\x0d\nconst { platform } = process;\x0d\nconst isWindows = platform === 'win32';\x0d\n\x0d\nconst bindingUrl = internalBinding('url');\x0d\n\x0d\nconst FORWARD_SLASH = /\\//g;\x0d\n\x0d\nconst contextForInspect = Symbol('context');\x0d\n\x0d\n// `unsafeProtocol`\x2C `hostlessProtocol` and `slashedProtocol` is\x0d\n// deliberately moved to `internal/url` rather than `url`.\x0d\n// Workers does not bootstrap URL module. Therefore\x2C `SafeSet`\x0d\n// is not initialized on bootstrap. This case breaks the\x0d\n// test-require-delete-array-iterator test.\x0d\n\x0d\n// Protocols that can allow "unsafe" and "unwise" chars.\x0d\nconst unsafeProtocol = new SafeSet([\x0d\n  'javascript'\x2C\x0d\n  'javascript:'\x2C\x0d\n]);\x0d\n// Protocols that never have a hostname.\x0d\nconst hostlessProtocol = new SafeSet([\x0d\n  'javascript'\x2C\x0d\n  'javascript:'\x2C\x0d\n]);\x0d\n// Protocols that always contain a // bit.\x0d\nconst slashedProtocol = new SafeSet([\x0d\n  'http'\x2C\x0d\n  'http:'\x2C\x0d\n  'https'\x2C\x0d\n  'https:'\x2C\x0d\n  'ftp'\x2C\x0d\n  'ftp:'\x2C\x0d\n  'gopher'\x2C\x0d\n  'gopher:'\x2C\x0d\n  'file'\x2C\x0d\n  'file:'\x2C\x0d\n  'ws'\x2C\x0d\n  'ws:'\x2C\x0d\n  'wss'\x2C\x0d\n  'wss:'\x2C\x0d\n]);\x0d\n\x0d\nconst updateActions = {\x0d\n  kProtocol: 0\x2C\x0d\n  kHost: 1\x2C\x0d\n  kHostname: 2\x2C\x0d\n  kPort: 3\x2C\x0d\n  kUsername: 4\x2C\x0d\n  kPassword: 5\x2C\x0d\n  kPathname: 6\x2C\x0d\n  kSearch: 7\x2C\x0d\n  kHash: 8\x2C\x0d\n  kHref: 9\x2C\x0d\n};\x0d\nlet blob;\x0d\nlet cryptoRandom;\x0d\n\x0d\nfunction lazyBlob() {\x0d\n  blob ??= require('internal/blob');\x0d\n  return blob;\x0d\n}\x0d\n\x0d\nfunction lazyCryptoRandom() {\x0d\n  try {\x0d\n    cryptoRandom ??= require('internal/crypto/random');\x0d\n  } catch {\x0d\n    // If Node.js built without crypto support\x2C we'll fall\x0d\n    // through here and handle it later.\x0d\n  }\x0d\n  return cryptoRandom;\x0d\n}\x0d\n\x0d\n// This class provides the internal state of a URL object. An instance of this\x0d\n// class is stored in every URL object and is accessed internally by setters\x0d\n// and getters. It roughly corresponds to the concept of a URL record in the\x0d\n// URL Standard\x2C with a few differences. It is also the object transported to\x0d\n// the C++ binding.\x0d\n// Refs: https://url.spec.whatwg.org/#concept-url\x0d\nclass URLContext {\x0d\n  // This is the maximum value uint32_t can get.\x0d\n  // Ada uses uint32_t(-1) for declaring omitted values.\x0d\n  static #omitted = 4294967295;\x0d\n\x0d\n  href = '';\x0d\n  protocol_end = 0;\x0d\n  username_end = 0;\x0d\n  host_start = 0;\x0d\n  host_end = 0;\x0d\n  pathname_start = 0;\x0d\n  search_start = 0;\x0d\n  hash_start = 0;\x0d\n  port = 0;\x0d\n  /**\x0d\n   * Refers to `ada::scheme::type`\x0d\n   *\x0d\n   * enum type : uint8_t {\x0d\n   *   HTTP = 0\x2C\x0d\n   *   NOT_SPECIAL = 1\x2C\x0d\n   *   HTTPS = 2\x2C\x0d\n   *   WS = 3\x2C\x0d\n   *   FTP = 4\x2C\x0d\n   *   WSS = 5\x2C\x0d\n   *   FILE = 6\x0d\n   * };\x0d\n   * @type {number}\x0d\n   */\x0d\n  scheme_type = 1;\x0d\n\x0d\n  get hasPort() {\x0d\n    return this.port !== URLContext.#omitted;\x0d\n  }\x0d\n\x0d\n  get hasSearch() {\x0d\n    return this.search_start !== URLContext.#omitted;\x0d\n  }\x0d\n\x0d\n  get hasHash() {\x0d\n    return this.hash_start !== URLContext.#omitted;\x0d\n  }\x0d\n}\x0d\n\x0d\nlet setURLSearchParamsModified;\x0d\nlet setURLSearchParamsContext;\x0d\nlet getURLSearchParamsList;\x0d\nlet setURLSearchParams;\x0d\n\x0d\nclass URLSearchParamsIterator {\x0d\n  #target;\x0d\n  #kind;\x0d\n  #index;\x0d\n\x0d\n  // https://heycam.github.io/webidl/#dfn-default-iterator-object\x0d\n  constructor(target\x2C kind) {\x0d\n    this.#target = target;\x0d\n    this.#kind = kind;\x0d\n    this.#index = 0;\x0d\n  }\x0d\n\x0d\n  next() {\x0d\n    if (typeof this !== 'object' || this === null || !(#target in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n\x0d\n    const index = this.#index;\x0d\n    const values = getURLSearchParamsList(this.#target);\x0d\n    const len = values.length;\x0d\n    if (index >= len) {\x0d\n      return {\x0d\n        value: undefined\x2C\x0d\n        done: true\x2C\x0d\n      };\x0d\n    }\x0d\n\x0d\n    const name = values[index];\x0d\n    const value = values[index + 1];\x0d\n    this.#index = index + 2;\x0d\n\x0d\n    let result;\x0d\n    if (this.#kind === 'key') {\x0d\n      result = name;\x0d\n    } else if (this.#kind === 'value') {\x0d\n      result = value;\x0d\n    } else {\x0d\n      result = [name\x2C value];\x0d\n    }\x0d\n\x0d\n    return {\x0d\n      value: result\x2C\x0d\n      done: false\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (!this || typeof this !== 'object' || !(#target in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const index = this.#index;\x0d\n    const values = getURLSearchParamsList(this.#target);\x0d\n    const output = ArrayPrototypeReduce(\x0d\n      ArrayPrototypeSlice(values\x2C index)\x2C\x0d\n      (prev\x2C cur\x2C i) => {\x0d\n        const key = i % 2 === 0;\x0d\n        if (this.#kind === 'key' && key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (this.#kind === 'value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (this.#kind === 'key+value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C [values[index + i - 1]\x2C cur]);\x0d\n        }\x0d\n        return prev;\x0d\n      }\x2C\x0d\n      []\x2C\x0d\n    );\x0d\n    const breakLn = StringPrototypeIncludes(inspect(output\x2C innerOpts)\x2C '\\n');\x0d\n    const outputStrs = ArrayPrototypeMap(output\x2C (p) => inspect(p\x2C innerOpts));\x0d\n    let outputStr;\x0d\n    if (breakLn) {\x0d\n      outputStr = `\\n  ${ArrayPrototypeJoin(outputStrs\x2C '\x2C\\n  ')}`;\x0d\n    } else {\x0d\n      outputStr = ` ${ArrayPrototypeJoin(outputStrs\x2C '\x2C ')}`;\x0d\n    }\x0d\n    return `${this[SymbolToStringTag]} {${outputStr} }`;\x0d\n  }\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-iterator-prototype-object\x0d\ndelete URLSearchParamsIterator.prototype.constructor;\x0d\nObjectSetPrototypeOf(URLSearchParamsIterator.prototype\x2C IteratorPrototype);\x0d\n\x0d\nObjectDefineProperties(URLSearchParamsIterator.prototype\x2C {\x0d\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'URLSearchParams Iterator' }\x2C\x0d\n  next: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\n\x0d\nclass URLSearchParams {\x0d\n  #searchParams = [];\x0d\n\x0d\n  // "associated url object"\x0d\n  #context;\x0d\n\x0d\n  static {\x0d\n    setURLSearchParamsContext = (obj\x2C ctx) => {\x0d\n      obj.#context = ctx;\x0d\n    };\x0d\n    getURLSearchParamsList = (obj) => obj.#searchParams;\x0d\n    setURLSearchParams = (obj\x2C query) => {\x0d\n      if (query === undefined) {\x0d\n        obj.#searchParams = [];\x0d\n      } else {\x0d\n        obj.#searchParams = parseParams(query);\x0d\n      }\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // URL Standard says the default value is ''\x2C but as undefined and '' have\x0d\n  // the same result\x2C undefined is used to prevent unnecessary parsing.\x0d\n  // Default parameter is necessary to keep URLSearchParams.length === 0 in\x0d\n  // accordance with Web IDL spec.\x0d\n  constructor(init = undefined) {\x0d\n    markTransferMode(this\x2C false\x2C false);\x0d\n\x0d\n    if (init == null) {\x0d\n      // Do nothing\x0d\n    } else if (typeof init === 'object' || typeof init === 'function') {\x0d\n      const method = init[SymbolIterator];\x0d\n      if (method === this[SymbolIterator] && #searchParams in init) {\x0d\n        // While the spec does not have this branch\x2C we can use it as a\x0d\n        // shortcut to avoid having to go through the costly generic iterator.\x0d\n        const childParams = init.#searchParams;\x0d\n        this.#searchParams = childParams.slice();\x0d\n      } else if (method != null) {\x0d\n        // Sequence<sequence<USVString>>\x0d\n        if (typeof method !== 'function') {\x0d\n          throw new ERR_ARG_NOT_ITERABLE('Query pairs');\x0d\n        }\x0d\n\x0d\n        // The following implementationd differs from the URL specification:\x0d\n        // Sequences must first be converted from ECMAScript objects before\x0d\n        // and operations are done on them\x2C and the operation of converting\x0d\n        // the sequences would first exhaust the iterators. If the iterator\x0d\n        // returns something invalid in the middle\x2C whether it would be called\x0d\n        // after that would be an observable change to the users.\x0d\n        // Exhausting the iterator and later converting them to USVString comes\x0d\n        // with a significant cost (~40-80%). In order optimize URLSearchParams\x0d\n        // creation duration\x2C Node.js merges the iteration and converting\x0d\n        // iterations into a single iteration.\x0d\n        for (const pair of init) {\x0d\n          if (pair == null) {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          } else if (ArrayIsArray(pair)) {\x0d\n            // If innerSequence's size is not 2\x2C then throw a TypeError.\x0d\n            if (pair.length !== 2) {\x0d\n              throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n            }\x0d\n            // Append (innerSequence[0]\x2C innerSequence[1]) to querys list.\x0d\n            ArrayPrototypePush(\x0d\n              this.#searchParams\x2C\x0d\n              StringPrototypeToWellFormed(`${pair[0]}`)\x2C\x0d\n              StringPrototypeToWellFormed(`${pair[1]}`)\x2C\x0d\n            );\x0d\n          } else {\x0d\n            if (((typeof pair !== 'object' && typeof pair !== 'function') ||\x0d\n                typeof pair[SymbolIterator] !== 'function')) {\x0d\n              throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n            }\x0d\n\x0d\n            let length = 0;\x0d\n\x0d\n            for (const element of pair) {\x0d\n              length++;\x0d\n              ArrayPrototypePush(this.#searchParams\x2C StringPrototypeToWellFormed(`${element}`));\x0d\n            }\x0d\n\x0d\n            // If innerSequence's size is not 2\x2C then throw a TypeError.\x0d\n            if (length !== 2) {\x0d\n              throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      } else {\x0d\n        // Record<USVString\x2C USVString>\x0d\n        // Need to use reflection APIs for full spec compliance.\x0d\n        const visited = new SafeMap();\x0d\n        const keys = ReflectOwnKeys(init);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const desc = ReflectGetOwnPropertyDescriptor(init\x2C key);\x0d\n          if (desc !== undefined && desc.enumerable) {\x0d\n            const typedKey = StringPrototypeToWellFormed(key);\x0d\n            const typedValue = StringPrototypeToWellFormed(`${init[key]}`);\x0d\n\x0d\n            // Two different keys may become the same USVString after normalization.\x0d\n            // In that case\x2C we retain the later one. Refer to WPT.\x0d\n            const keyIdx = visited.get(typedKey);\x0d\n            if (keyIdx !== undefined) {\x0d\n              this.#searchParams[keyIdx] = typedValue;\x0d\n            } else {\x0d\n              visited.set(typedKey\x2C ArrayPrototypePush(this.#searchParams\x2C\x0d\n                                                       typedKey\x2C\x0d\n                                                       typedValue) - 1);\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      // https://url.spec.whatwg.org/#dom-urlsearchparams-urlsearchparams\x0d\n      init = StringPrototypeToWellFormed(`${init}`);\x0d\n      this.#searchParams = init ? parseParams(init) : [];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const separator = '\x2C ';\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const innerInspect = (v) => inspect(v\x2C innerOpts);\x0d\n\x0d\n    const list = this.#searchParams;\x0d\n    const output = [];\x0d\n    for (let i = 0; i < list.length; i += 2)\x0d\n      ArrayPrototypePush(\x0d\n        output\x2C\x0d\n        `${innerInspect(list[i])} => ${innerInspect(list[i + 1])}`);\x0d\n\x0d\n    const length = ArrayPrototypeReduce(\x0d\n      output\x2C\x0d\n      (prev\x2C cur) => prev + removeColors(cur).length + separator.length\x2C\x0d\n      -separator.length\x2C\x0d\n    );\x0d\n    if (length > ctx.breakLength) {\x0d\n      return `${this.constructor.name} {\\n` +\x0d\n      `  ${ArrayPrototypeJoin(output\x2C '\x2C\\n  ')} }`;\x0d\n    } else if (output.length) {\x0d\n      return `${this.constructor.name} { ` +\x0d\n      `${ArrayPrototypeJoin(output\x2C separator)} }`;\x0d\n    }\x0d\n    return `${this.constructor.name} {}`;\x0d\n  }\x0d\n\x0d\n  get size() {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n    return this.#searchParams.length / 2;\x0d\n  }\x0d\n\x0d\n  append(name\x2C value) {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    name = StringPrototypeToWellFormed(`${name}`);\x0d\n    value = StringPrototypeToWellFormed(`${value}`);\x0d\n    ArrayPrototypePush(this.#searchParams\x2C name\x2C value);\x0d\n\x0d\n    if (this.#context) {\x0d\n      setURLSearchParamsModified(this.#context);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  delete(name\x2C value = undefined) {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this.#searchParams;\x0d\n    name = StringPrototypeToWellFormed(`${name}`);\x0d\n\x0d\n    if (value !== undefined) {\x0d\n      value = StringPrototypeToWellFormed(`${value}`);\x0d\n      for (let i = 0; i < list.length;) {\x0d\n        if (list[i] === name && list[i + 1] === value) {\x0d\n          list.splice(i\x2C 2);\x0d\n        } else {\x0d\n          i += 2;\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      for (let i = 0; i < list.length;) {\x0d\n        if (list[i] === name) {\x0d\n          list.splice(i\x2C 2);\x0d\n        } else {\x0d\n          i += 2;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (this.#context) {\x0d\n      setURLSearchParamsModified(this.#context);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get(name) {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this.#searchParams;\x0d\n    name = StringPrototypeToWellFormed(`${name}`);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return list[i + 1];\x0d\n      }\x0d\n    }\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  getAll(name) {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this.#searchParams;\x0d\n    const values = [];\x0d\n    name = StringPrototypeToWellFormed(`${name}`);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        values.push(list[i + 1]);\x0d\n      }\x0d\n    }\x0d\n    return values;\x0d\n  }\x0d\n\x0d\n  has(name\x2C value = undefined) {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this.#searchParams;\x0d\n    name = StringPrototypeToWellFormed(`${name}`);\x0d\n\x0d\n    if (value !== undefined) {\x0d\n      value = StringPrototypeToWellFormed(`${value}`);\x0d\n    }\x0d\n\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        if (value === undefined || list[i + 1] === value) {\x0d\n          return true;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  set(name\x2C value) {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    const list = this.#searchParams;\x0d\n    name = StringPrototypeToWellFormed(`${name}`);\x0d\n    value = StringPrototypeToWellFormed(`${value}`);\x0d\n\x0d\n    // If there are any name-value pairs whose name is `name`\x2C in `list`\x2C set\x0d\n    // the value of the first such name-value pair to `value` and remove the\x0d\n    // others.\x0d\n    let found = false;\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        if (!found) {\x0d\n          list[i + 1] = value;\x0d\n          found = true;\x0d\n          i += 2;\x0d\n        } else {\x0d\n          list.splice(i\x2C 2);\x0d\n        }\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Otherwise\x2C append a new name-value pair whose name is `name` and value\x0d\n    // is `value`\x2C to `list`.\x0d\n    if (!found) {\x0d\n      ArrayPrototypePush(list\x2C name\x2C value);\x0d\n    }\x0d\n\x0d\n    if (this.#context) {\x0d\n      setURLSearchParamsModified(this.#context);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  sort() {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    const a = this.#searchParams;\x0d\n    const len = a.length;\x0d\n\x0d\n    if (len <= 2) {\x0d\n      // Nothing needs to be done.\x0d\n    } else if (len < 100) {\x0d\n      // 100 is found through testing.\x0d\n      // Simple stable in-place insertion sort\x0d\n      // Derived from v8/src/js/array.js\x0d\n      for (let i = 2; i < len; i += 2) {\x0d\n        const curKey = a[i];\x0d\n        const curVal = a[i + 1];\x0d\n        let j;\x0d\n        for (j = i - 2; j >= 0; j -= 2) {\x0d\n          if (a[j] > curKey) {\x0d\n            a[j + 2] = a[j];\x0d\n            a[j + 3] = a[j + 1];\x0d\n          } else {\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n        a[j + 2] = curKey;\x0d\n        a[j + 3] = curVal;\x0d\n      }\x0d\n    } else {\x0d\n      // Bottom-up iterative stable merge sort\x0d\n      const lBuffer = new Array(len);\x0d\n      const rBuffer = new Array(len);\x0d\n      for (let step = 2; step < len; step *= 2) {\x0d\n        for (let start = 0; start < len - 2; start += 2 * step) {\x0d\n          const mid = start + step;\x0d\n          let end = mid + step;\x0d\n          end = end < len ? end : len;\x0d\n          if (mid > end)\x0d\n            continue;\x0d\n          merge(a\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (this.#context) {\x0d\n      setURLSearchParamsModified(this.#context);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterators\x0d\n  // Define entries here rather than [Symbol.iterator] as the function name\x0d\n  // must be set to `entries`.\x0d\n  entries() {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return new URLSearchParamsIterator(this\x2C 'key+value');\x0d\n  }\x0d\n\x0d\n  forEach(callback\x2C thisArg = undefined) {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n\x0d\n    let list = this.#searchParams;\x0d\n\x0d\n    let i = 0;\x0d\n    while (i < list.length) {\x0d\n      const key = list[i];\x0d\n      const value = list[i + 1];\x0d\n      callback.call(thisArg\x2C value\x2C key\x2C this);\x0d\n      // In case the URL object's `search` is updated\x0d\n      list = this.#searchParams;\x0d\n      i += 2;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable\x0d\n  keys() {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return new URLSearchParamsIterator(this\x2C 'key');\x0d\n  }\x0d\n\x0d\n  values() {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return new URLSearchParamsIterator(this\x2C 'value');\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  // https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\x0d\n  toString() {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return serializeParams(this.#searchParams);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URLSearchParams.prototype\x2C {\x0d\n  append: kEnumerableProperty\x2C\x0d\n  delete: kEnumerableProperty\x2C\x0d\n  get: kEnumerableProperty\x2C\x0d\n  getAll: kEnumerableProperty\x2C\x0d\n  has: kEnumerableProperty\x2C\x0d\n  set: kEnumerableProperty\x2C\x0d\n  size: kEnumerableProperty\x2C\x0d\n  sort: kEnumerableProperty\x2C\x0d\n  entries: kEnumerableProperty\x2C\x0d\n  forEach: kEnumerableProperty\x2C\x0d\n  keys: kEnumerableProperty\x2C\x0d\n  values: kEnumerableProperty\x2C\x0d\n  toString: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'URLSearchParams' }\x2C\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable-entries\x0d\n  [SymbolIterator]: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n    value: URLSearchParams.prototype.entries\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n/**\x0d\n * Checks if a value has the shape of a WHATWG URL object.\x0d\n *\x0d\n * Using a symbol or instanceof would not be able to recognize URL objects\x0d\n * coming from other implementations (e.g. in Electron)\x2C so instead we are\x0d\n * checking some well known properties for a lack of a better test.\x0d\n *\x0d\n * We use `href` and `protocol` as they are the only properties that are\x0d\n * easy to retrieve and calculate due to the lazy nature of the getters.\x0d\n *\x0d\n * We check for `auth` and `path` attribute to distinguish legacy url instance with\x0d\n * WHATWG URL instance.\x0d\n * @param {*} self\x0d\n * @returns {self is URL}\x0d\n */\x0d\nfunction isURL(self) {\x0d\n  return Boolean(self?.href && self.protocol && self.auth === undefined && self.path === undefined);\x0d\n}\x0d\n\x0d\nclass URL {\x0d\n  #context = new URLContext();\x0d\n  #searchParams;\x0d\n  #searchParamsModified;\x0d\n\x0d\n  static {\x0d\n    setURLSearchParamsModified = (obj) => {\x0d\n      // When URLSearchParams changes\x2C we lazily update URL on the next read/write for performance.\x0d\n      obj.#searchParamsModified = true;\x0d\n\x0d\n      // If URL has an existing search\x2C remove it without cascading back to URLSearchParams.\x0d\n      // Do this to avoid any internal confusion about whether URLSearchParams or URL is up-to-date.\x0d\n      if (obj.#context.hasSearch) {\x0d\n        obj.#updateContext(bindingUrl.update(obj.#context.href\x2C updateActions.kSearch\x2C ''));\x0d\n      }\x0d\n    };\x0d\n  }\x0d\n\x0d\n  constructor(input\x2C base = undefined) {\x0d\n    markTransferMode(this\x2C false\x2C false);\x0d\n\x0d\n    if (arguments.length === 0) {\x0d\n      throw new ERR_MISSING_ARGS('url');\x0d\n    }\x0d\n\x0d\n    // StringPrototypeToWellFormed is not needed.\x0d\n    input = `${input}`;\x0d\n\x0d\n    if (base !== undefined) {\x0d\n      base = `${base}`;\x0d\n    }\x0d\n\x0d\n    this.#updateContext(bindingUrl.parse(input\x2C base));\x0d\n  }\x0d\n\x0d\n  [inspect.custom](depth\x2C opts) {\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || URL;\x0d\n    const obj = { __proto__: { constructor } };\x0d\n\x0d\n    obj.href = this.href;\x0d\n    obj.origin = this.origin;\x0d\n    obj.protocol = this.protocol;\x0d\n    obj.username = this.username;\x0d\n    obj.password = this.password;\x0d\n    obj.host = this.host;\x0d\n    obj.hostname = this.hostname;\x0d\n    obj.port = this.port;\x0d\n    obj.pathname = this.pathname;\x0d\n    obj.search = this.search;\x0d\n    obj.searchParams = this.searchParams;\x0d\n    obj.hash = this.hash;\x0d\n\x0d\n    if (opts.showHidden) {\x0d\n      obj[contextForInspect] = this.#context;\x0d\n    }\x0d\n\x0d\n    return `${constructor.name} ${inspect(obj\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  #getSearchFromContext() {\x0d\n    if (!this.#context.hasSearch) return '';\x0d\n    let endsAt = this.#context.href.length;\x0d\n    if (this.#context.hasHash) endsAt = this.#context.hash_start;\x0d\n    if (endsAt - this.#context.search_start <= 1) return '';\x0d\n    return StringPrototypeSlice(this.#context.href\x2C this.#context.search_start\x2C endsAt);\x0d\n  }\x0d\n\x0d\n  #getSearchFromParams() {\x0d\n    if (!this.#searchParams?.size) return '';\x0d\n    return `?${this.#searchParams}`;\x0d\n  }\x0d\n\x0d\n  #ensureSearchParamsUpdated() {\x0d\n    // URL is updated lazily to greatly improve performance when URLSearchParams is updated repeatedly.\x0d\n    // If URLSearchParams has been modified\x2C reflect that back into URL\x2C without cascading back.\x0d\n    if (this.#searchParamsModified) {\x0d\n      this.#searchParamsModified = false;\x0d\n      this.#updateContext(bindingUrl.update(this.#context.href\x2C updateActions.kSearch\x2C this.#getSearchFromParams()));\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Update the internal context state for URL.\x0d\n   * @param {string} href New href string from `bindingUrl.update`.\x0d\n   * @param {boolean} [shouldUpdateSearchParams] If the update has potential to update search params (href/search).\x0d\n   */\x0d\n  #updateContext(href\x2C shouldUpdateSearchParams = false) {\x0d\n    const previousSearch = shouldUpdateSearchParams && this.#searchParams &&\x0d\n      (this.#searchParamsModified ? this.#getSearchFromParams() : this.#getSearchFromContext());\x0d\n\x0d\n    this.#context.href = href;\x0d\n\x0d\n    const {\x0d\n      0: protocol_end\x2C\x0d\n      1: username_end\x2C\x0d\n      2: host_start\x2C\x0d\n      3: host_end\x2C\x0d\n      4: port\x2C\x0d\n      5: pathname_start\x2C\x0d\n      6: search_start\x2C\x0d\n      7: hash_start\x2C\x0d\n      8: scheme_type\x2C\x0d\n    } = bindingUrl.urlComponents;\x0d\n\x0d\n    this.#context.protocol_end = protocol_end;\x0d\n    this.#context.username_end = username_end;\x0d\n    this.#context.host_start = host_start;\x0d\n    this.#context.host_end = host_end;\x0d\n    this.#context.port = port;\x0d\n    this.#context.pathname_start = pathname_start;\x0d\n    this.#context.search_start = search_start;\x0d\n    this.#context.hash_start = hash_start;\x0d\n    this.#context.scheme_type = scheme_type;\x0d\n\x0d\n    if (this.#searchParams) {\x0d\n      // If the search string has updated\x2C URL becomes the source of truth\x2C and we update URLSearchParams.\x0d\n      // Only do this when we're expecting it to have changed\x2C otherwise a change to hash etc.\x0d\n      // would incorrectly compare the URLSearchParams state to the empty URL search state.\x0d\n      if (shouldUpdateSearchParams) {\x0d\n        const currentSearch = this.#getSearchFromContext();\x0d\n        if (previousSearch !== currentSearch) {\x0d\n          setURLSearchParams(this.#searchParams\x2C currentSearch);\x0d\n          this.#searchParamsModified = false;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      // If we have a URLSearchParams\x2C ensure that URL is up-to-date with any modification to it.\x0d\n      this.#ensureSearchParamsUpdated();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  toString() {\x0d\n    // Updates to URLSearchParams are lazily propagated to URL\x2C so we need to check we're in sync.\x0d\n    this.#ensureSearchParamsUpdated();\x0d\n    return this.#context.href;\x0d\n  }\x0d\n\x0d\n  get href() {\x0d\n    // Updates to URLSearchParams are lazily propagated to URL\x2C so we need to check we're in sync.\x0d\n    this.#ensureSearchParamsUpdated();\x0d\n    return this.#context.href;\x0d\n  }\x0d\n\x0d\n  set href(value) {\x0d\n    value = `${value}`;\x0d\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kHref\x2C value);\x0d\n    if (!href) { throw new ERR_INVALID_URL(value); }\x0d\n    this.#updateContext(href\x2C true);\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get origin() {\x0d\n    const protocol = StringPrototypeSlice(this.#context.href\x2C 0\x2C this.#context.protocol_end);\x0d\n\x0d\n    // Check if scheme_type is not `NOT_SPECIAL`\x0d\n    if (this.#context.scheme_type !== 1) {\x0d\n      // Check if scheme_type is `FILE`\x0d\n      if (this.#context.scheme_type === 6) {\x0d\n        return 'null';\x0d\n      }\x0d\n      return `${protocol}//${this.host}`;\x0d\n    }\x0d\n\x0d\n    if (protocol === 'blob:') {\x0d\n      const path = this.pathname;\x0d\n      if (path.length > 0) {\x0d\n        try {\x0d\n          const out = new URL(path);\x0d\n          // Only return origin of scheme is `http` or `https`\x0d\n          // Otherwise return a new opaque origin (null).\x0d\n          if (out.#context.scheme_type === 0 || out.#context.scheme_type === 2) {\x0d\n            return `${out.protocol}//${out.host}`;\x0d\n          }\x0d\n        } catch {\x0d\n          // Do nothing.\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return 'null';\x0d\n  }\x0d\n\x0d\n  get protocol() {\x0d\n    return StringPrototypeSlice(this.#context.href\x2C 0\x2C this.#context.protocol_end);\x0d\n  }\x0d\n\x0d\n  set protocol(value) {\x0d\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kProtocol\x2C `${value}`);\x0d\n    if (href) {\x0d\n      this.#updateContext(href);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get username() {\x0d\n    if (this.#context.protocol_end + 2 < this.#context.username_end) {\x0d\n      return StringPrototypeSlice(this.#context.href\x2C this.#context.protocol_end + 2\x2C this.#context.username_end);\x0d\n    }\x0d\n    return '';\x0d\n  }\x0d\n\x0d\n  set username(value) {\x0d\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kUsername\x2C `${value}`);\x0d\n    if (href) {\x0d\n      this.#updateContext(href);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get password() {\x0d\n    if (this.#context.host_start - this.#context.username_end > 0) {\x0d\n      return StringPrototypeSlice(this.#context.href\x2C this.#context.username_end + 1\x2C this.#context.host_start);\x0d\n    }\x0d\n    return '';\x0d\n  }\x0d\n\x0d\n  set password(value) {\x0d\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kPassword\x2C `${value}`);\x0d\n    if (href) {\x0d\n      this.#updateContext(href);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get host() {\x0d\n    let startsAt = this.#context.host_start;\x0d\n    if (this.#context.href[startsAt] === '@') {\x0d\n      startsAt++;\x0d\n    }\x0d\n    // If we have an empty host\x2C then the space between components.host_end and\x0d\n    // components.pathname_start may be occupied by /.\x0d\n    if (startsAt === this.#context.host_end) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(this.#context.href\x2C startsAt\x2C this.#context.pathname_start);\x0d\n  }\x0d\n\x0d\n  set host(value) {\x0d\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kHost\x2C `${value}`);\x0d\n    if (href) {\x0d\n      this.#updateContext(href);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get hostname() {\x0d\n    let startsAt = this.#context.host_start;\x0d\n    // host_start might be "@" if the URL has credentials\x0d\n    if (this.#context.href[startsAt] === '@') {\x0d\n      startsAt++;\x0d\n    }\x0d\n    return StringPrototypeSlice(this.#context.href\x2C startsAt\x2C this.#context.host_end);\x0d\n  }\x0d\n\x0d\n  set hostname(value) {\x0d\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kHostname\x2C `${value}`);\x0d\n    if (href) {\x0d\n      this.#updateContext(href);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get port() {\x0d\n    if (this.#context.hasPort) {\x0d\n      return `${this.#context.port}`;\x0d\n    }\x0d\n    return '';\x0d\n  }\x0d\n\x0d\n  set port(value) {\x0d\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kPort\x2C `${value}`);\x0d\n    if (href) {\x0d\n      this.#updateContext(href);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get pathname() {\x0d\n    let endsAt;\x0d\n    if (this.#context.hasSearch) {\x0d\n      endsAt = this.#context.search_start;\x0d\n    } else if (this.#context.hasHash) {\x0d\n      endsAt = this.#context.hash_start;\x0d\n    }\x0d\n    return StringPrototypeSlice(this.#context.href\x2C this.#context.pathname_start\x2C endsAt);\x0d\n  }\x0d\n\x0d\n  set pathname(value) {\x0d\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kPathname\x2C `${value}`);\x0d\n    if (href) {\x0d\n      this.#updateContext(href);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get search() {\x0d\n    // Updates to URLSearchParams are lazily propagated to URL\x2C so we need to check we're in sync.\x0d\n    this.#ensureSearchParamsUpdated();\x0d\n    return this.#getSearchFromContext();\x0d\n  }\x0d\n\x0d\n  set search(value) {\x0d\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kSearch\x2C StringPrototypeToWellFormed(`${value}`));\x0d\n    if (href) {\x0d\n      this.#updateContext(href\x2C true);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get searchParams() {\x0d\n    // Create URLSearchParams on demand to greatly improve the URL performance.\x0d\n    if (this.#searchParams == null) {\x0d\n      this.#searchParams = new URLSearchParams(this.#getSearchFromContext());\x0d\n      setURLSearchParamsContext(this.#searchParams\x2C this);\x0d\n      this.#searchParamsModified = false;\x0d\n    }\x0d\n    return this.#searchParams;\x0d\n  }\x0d\n\x0d\n  get hash() {\x0d\n    if (!this.#context.hasHash || (this.#context.href.length - this.#context.hash_start <= 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(this.#context.href\x2C this.#context.hash_start);\x0d\n  }\x0d\n\x0d\n  set hash(value) {\x0d\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kHash\x2C `${value}`);\x0d\n    if (href) {\x0d\n      this.#updateContext(href);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    // Updates to URLSearchParams are lazily propagated to URL\x2C so we need to check we're in sync.\x0d\n    this.#ensureSearchParamsUpdated();\x0d\n    return this.#context.href;\x0d\n  }\x0d\n\x0d\n  static canParse(url\x2C base = undefined) {\x0d\n    if (arguments.length === 0) {\x0d\n      throw new ERR_MISSING_ARGS('url');\x0d\n    }\x0d\n\x0d\n    url = `${url}`;\x0d\n\x0d\n    if (base !== undefined) {\x0d\n      return bindingUrl.canParse(url\x2C `${base}`);\x0d\n    }\x0d\n\x0d\n    // It is important to differentiate the canParse call statements\x0d\n    // since they resolve into different v8 fast api overloads.\x0d\n    return bindingUrl.canParse(url);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URL.prototype\x2C {\x0d\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'URL' }\x2C\x0d\n  toString: kEnumerableProperty\x2C\x0d\n  href: kEnumerableProperty\x2C\x0d\n  origin: kEnumerableProperty\x2C\x0d\n  protocol: kEnumerableProperty\x2C\x0d\n  username: kEnumerableProperty\x2C\x0d\n  password: kEnumerableProperty\x2C\x0d\n  host: kEnumerableProperty\x2C\x0d\n  hostname: kEnumerableProperty\x2C\x0d\n  port: kEnumerableProperty\x2C\x0d\n  pathname: kEnumerableProperty\x2C\x0d\n  search: kEnumerableProperty\x2C\x0d\n  searchParams: kEnumerableProperty\x2C\x0d\n  hash: kEnumerableProperty\x2C\x0d\n  toJSON: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperties(URL\x2C {\x0d\n  canParse: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nfunction installObjectURLMethods() {\x0d\n  const bindingBlob = internalBinding('blob');\x0d\n\x0d\n  function createObjectURL(obj) {\x0d\n    const cryptoRandom = lazyCryptoRandom();\x0d\n    if (cryptoRandom === undefined)\x0d\n      throw new ERR_NO_CRYPTO();\x0d\n\x0d\n    const blob = lazyBlob();\x0d\n    if (!blob.isBlob(obj))\x0d\n      throw new ERR_INVALID_ARG_TYPE('obj'\x2C 'Blob'\x2C obj);\x0d\n\x0d\n    const id = cryptoRandom.randomUUID();\x0d\n\x0d\n    bindingBlob.storeDataObject(id\x2C obj[blob.kHandle]\x2C obj.size\x2C obj.type);\x0d\n\x0d\n    return `blob:nodedata:${id}`;\x0d\n  }\x0d\n\x0d\n  function revokeObjectURL(url) {\x0d\n    if (arguments.length === 0) {\x0d\n      throw new ERR_MISSING_ARGS('url');\x0d\n    }\x0d\n\x0d\n    bindingBlob.revokeObjectURL(`${url}`);\x0d\n  }\x0d\n\x0d\n  ObjectDefineProperties(URL\x2C {\x0d\n    createObjectURL: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      value: createObjectURL\x2C\x0d\n    }\x2C\x0d\n    revokeObjectURL: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      value: revokeObjectURL\x2C\x0d\n    }\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\n// application/x-www-form-urlencoded parser\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-parser\x0d\nfunction parseParams(qs) {\x0d\n  const out = [];\x0d\n  let seenSep = false;\x0d\n  let buf = '';\x0d\n  let encoded = false;\x0d\n  let encodeCheck = 0;\x0d\n  let i = qs[0] === '?' ? 1 : 0;\x0d\n  let pairStart = i;\x0d\n  let lastPos = i;\x0d\n  for (; i < qs.length; ++i) {\x0d\n    const code = StringPrototypeCharCodeAt(qs\x2C i);\x0d\n\x0d\n    // Try matching key/value pair separator\x0d\n    if (code === CHAR_AMPERSAND) {\x0d\n      if (pairStart === i) {\x0d\n        // We saw an empty substring between pair separators\x0d\n        lastPos = pairStart = i + 1;\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      // If `buf` is the key\x2C add an empty value.\x0d\n      if (!seenSep)\x0d\n        out.push('');\x0d\n\x0d\n      seenSep = false;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = pairStart = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Try matching key/value separator (e.g. '=') if we haven't already\x0d\n    if (!seenSep && code === CHAR_EQUAL) {\x0d\n      // Key/value separator match!\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      seenSep = true;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Handle + and percent decoding.\x0d\n    if (code === CHAR_PLUS) {\x0d\n      if (lastPos < i)\x0d\n        buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n      buf += ' ';\x0d\n      lastPos = i + 1;\x0d\n    } else if (!encoded) {\x0d\n      // Try to match an (valid) encoded byte (once) to minimize unnecessary\x0d\n      // calls to string decoding functions\x0d\n      if (code === CHAR_PERCENT) {\x0d\n        encodeCheck = 1;\x0d\n      } else if (encodeCheck > 0) {\x0d\n        if (isHexTable[code] === 1) {\x0d\n          if (++encodeCheck === 3) {\x0d\n            encoded = true;\x0d\n          }\x0d\n        } else {\x0d\n          encodeCheck = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Deal with any leftover key or value data\x0d\n\x0d\n  // There is a trailing &. No more processing is needed.\x0d\n  if (pairStart === i)\x0d\n    return out;\x0d\n\x0d\n  if (lastPos < i)\x0d\n    buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n  if (encoded)\x0d\n    buf = querystring.unescape(buf);\x0d\n  ArrayPrototypePush(out\x2C buf);\x0d\n\x0d\n  // If `buf` is the key\x2C add an empty value.\x0d\n  if (!seenSep)\x0d\n    ArrayPrototypePush(out\x2C '');\x0d\n\x0d\n  return out;\x0d\n}\x0d\n\x0d\n// Adapted from querystring's implementation.\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer\x0d\nconst noEscape = new Int8Array([\x0d\n/*\x0d\n  0\x2C 1\x2C 2\x2C 3\x2C 4\x2C 5\x2C 6\x2C 7\x2C 8\x2C 9\x2C A\x2C B\x2C C\x2C D\x2C E\x2C F\x0d\n*/\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x00 - 0x0F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x10 - 0x1F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C 0\x2C 0\x2C 1\x2C 1\x2C 0\x2C // 0x20 - 0x2F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x30 - 0x3F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x40 - 0x4F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C // 0x50 - 0x5F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x60 - 0x6F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C  // 0x70 - 0x7F\x0d\n]);\x0d\n\x0d\n// Special version of hexTable that uses `+` for U+0020 SPACE.\x0d\nconst paramHexTable = hexTable.slice();\x0d\nparamHexTable[0x20] = '+';\x0d\n\x0d\n// application/x-www-form-urlencoded serializer\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-serializer\x0d\nfunction serializeParams(array) {\x0d\n  const len = array.length;\x0d\n  if (len === 0)\x0d\n    return '';\x0d\n\x0d\n  const firstEncodedParam = encodeStr(array[0]\x2C noEscape\x2C paramHexTable);\x0d\n  const firstEncodedValue = encodeStr(array[1]\x2C noEscape\x2C paramHexTable);\x0d\n  let output = `${firstEncodedParam}=${firstEncodedValue}`;\x0d\n\x0d\n  for (let i = 2; i < len; i += 2) {\x0d\n    const encodedParam = encodeStr(array[i]\x2C noEscape\x2C paramHexTable);\x0d\n    const encodedValue = encodeStr(array[i + 1]\x2C noEscape\x2C paramHexTable);\x0d\n    output += `&${encodedParam}=${encodedValue}`;\x0d\n  }\x0d\n\x0d\n  return output;\x0d\n}\x0d\n\x0d\n// for merge sort\x0d\nfunction merge(out\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer) {\x0d\n  const sizeLeft = mid - start;\x0d\n  const sizeRight = end - mid;\x0d\n  let l\x2C r\x2C o;\x0d\n\x0d\n  for (l = 0; l < sizeLeft; l++)\x0d\n    lBuffer[l] = out[start + l];\x0d\n  for (r = 0; r < sizeRight; r++)\x0d\n    rBuffer[r] = out[mid + r];\x0d\n\x0d\n  l = 0;\x0d\n  r = 0;\x0d\n  o = start;\x0d\n  while (l < sizeLeft && r < sizeRight) {\x0d\n    if (lBuffer[l] <= rBuffer[r]) {\x0d\n      out[o++] = lBuffer[l++];\x0d\n      out[o++] = lBuffer[l++];\x0d\n    } else {\x0d\n      out[o++] = rBuffer[r++];\x0d\n      out[o++] = rBuffer[r++];\x0d\n    }\x0d\n  }\x0d\n  while (l < sizeLeft)\x0d\n    out[o++] = lBuffer[l++];\x0d\n  while (r < sizeRight)\x0d\n    out[o++] = rBuffer[r++];\x0d\n}\x0d\n\x0d\nfunction domainToASCII(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // StringPrototypeToWellFormed is not needed.\x0d\n  return bindingUrl.domainToASCII(`${domain}`);\x0d\n}\x0d\n\x0d\nfunction domainToUnicode(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // StringPrototypeToWellFormed is not needed.\x0d\n  return bindingUrl.domainToUnicode(`${domain}`);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Utility function that converts a URL object into an ordinary options object\x0d\n * as expected by the `http.request` and `https.request` APIs.\x0d\n * @param {URL} url\x0d\n * @returns {Record<string\x2C unknown>}\x0d\n */\x0d\nfunction urlToHttpOptions(url) {\x0d\n  const { hostname\x2C pathname\x2C port\x2C username\x2C password\x2C search } = url;\x0d\n  const options = {\x0d\n    __proto__: null\x2C\x0d\n    ...url\x2C // In case the url object was extended by the user.\x0d\n    protocol: url.protocol\x2C\x0d\n    hostname: hostname && StringPrototypeStartsWith(hostname\x2C '[') ?\x0d\n      StringPrototypeSlice(hostname\x2C 1\x2C -1) :\x0d\n      hostname\x2C\x0d\n    hash: url.hash\x2C\x0d\n    search: search\x2C\x0d\n    pathname: pathname\x2C\x0d\n    path: `${pathname || ''}${search || ''}`\x2C\x0d\n    href: url.href\x2C\x0d\n  };\x0d\n  if (port !== '') {\x0d\n    options.port = Number(port);\x0d\n  }\x0d\n  if (username || password) {\x0d\n    options.auth = `${decodeURIComponent(username)}:${decodeURIComponent(password)}`;\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\nfunction getPathFromURLWin32(url) {\x0d\n  const hostname = url.hostname;\x0d\n  let pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = StringPrototypeCodePointAt(pathname\x2C n + 2) | 0x20;\x0d\n      if ((pathname[n + 1] === '2' && third === 102) || // 2f 2F /\x0d\n          (pathname[n + 1] === '5' && third === 99)) {  // 5c 5C \\\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded \\\\ or / characters'\x2C\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  pathname = SideEffectFreeRegExpPrototypeSymbolReplace(FORWARD_SLASH\x2C pathname\x2C '\\\\');\x0d\n  pathname = decodeURIComponent(pathname);\x0d\n  if (hostname !== '') {\x0d\n    // If hostname is set\x2C then we have a UNC path\x0d\n    // Pass the hostname through domainToUnicode just in case\x0d\n    // it is an IDN using punycode encoding. We do not need to worry\x0d\n    // about percent encoding because the URL parser will have\x0d\n    // already taken care of that for us. Note that this only\x0d\n    // causes IDNs with an appropriate `xn--` prefix to be decoded.\x0d\n    return `\\\\\\\\${domainToUnicode(hostname)}${pathname}`;\x0d\n  }\x0d\n  // Otherwise\x2C it's a local path that requires a drive letter\x0d\n  const letter = StringPrototypeCodePointAt(pathname\x2C 1) | 0x20;\x0d\n  const sep = StringPrototypeCharAt(pathname\x2C 2);\x0d\n  if (letter < CHAR_LOWERCASE_A || letter > CHAR_LOWERCASE_Z ||   // a..z A..Z\x0d\n      (sep !== ':')) {\x0d\n    throw new ERR_INVALID_FILE_URL_PATH('must be absolute');\x0d\n  }\x0d\n  return StringPrototypeSlice(pathname\x2C 1);\x0d\n}\x0d\n\x0d\nfunction getPathFromURLPosix(url) {\x0d\n  if (url.hostname !== '') {\x0d\n    throw new ERR_INVALID_FILE_URL_HOST(platform);\x0d\n  }\x0d\n  const pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = StringPrototypeCodePointAt(pathname\x2C n + 2) | 0x20;\x0d\n      if (pathname[n + 1] === '2' && third === 102) {\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded / characters'\x2C\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return decodeURIComponent(pathname);\x0d\n}\x0d\n\x0d\nfunction fileURLToPath(path) {\x0d\n  if (typeof path === 'string')\x0d\n    path = new URL(path);\x0d\n  else if (!isURL(path))\x0d\n    throw new ERR_INVALID_ARG_TYPE('path'\x2C ['string'\x2C 'URL']\x2C path);\x0d\n  if (path.protocol !== 'file:')\x0d\n    throw new ERR_INVALID_URL_SCHEME('file');\x0d\n  return isWindows ? getPathFromURLWin32(path) : getPathFromURLPosix(path);\x0d\n}\x0d\n\x0d\n// The following characters are percent-encoded when converting from file path\x0d\n// to URL:\x0d\n// - %: The percent character is the only character not encoded by the\x0d\n//        `pathname` setter.\x0d\n// - \\: Backslash is encoded on non-windows platforms since it's a valid\x0d\n//      character but the `pathname` setters replaces it by a forward slash.\x0d\n// - LF: The newline character is stripped out by the `pathname` setter.\x0d\n//       (See whatwg/url#419)\x0d\n// - CR: The carriage return character is also stripped out by the `pathname`\x0d\n//       setter.\x0d\n// - TAB: The tab character is also stripped out by the `pathname` setter.\x0d\nconst percentRegEx = /%/g;\x0d\nconst backslashRegEx = /\\\\/g;\x0d\nconst newlineRegEx = /\\n/g;\x0d\nconst carriageReturnRegEx = /\\r/g;\x0d\nconst tabRegEx = /\\t/g;\x0d\nconst questionRegex = /\\?/g;\x0d\nconst hashRegex = /#/g;\x0d\n\x0d\nfunction encodePathChars(filepath) {\x0d\n  if (StringPrototypeIndexOf(filepath\x2C '%') !== -1)\x0d\n    filepath = RegExpPrototypeSymbolReplace(percentRegEx\x2C filepath\x2C '%25');\x0d\n  // In posix\x2C backslash is a valid character in paths:\x0d\n  if (!isWindows && StringPrototypeIndexOf(filepath\x2C '\\\\') !== -1)\x0d\n    filepath = RegExpPrototypeSymbolReplace(backslashRegEx\x2C filepath\x2C '%5C');\x0d\n  if (StringPrototypeIndexOf(filepath\x2C '\\n') !== -1)\x0d\n    filepath = RegExpPrototypeSymbolReplace(newlineRegEx\x2C filepath\x2C '%0A');\x0d\n  if (StringPrototypeIndexOf(filepath\x2C '\\r') !== -1)\x0d\n    filepath = RegExpPrototypeSymbolReplace(carriageReturnRegEx\x2C filepath\x2C '%0D');\x0d\n  if (StringPrototypeIndexOf(filepath\x2C '\\t') !== -1)\x0d\n    filepath = RegExpPrototypeSymbolReplace(tabRegEx\x2C filepath\x2C '%09');\x0d\n  return filepath;\x0d\n}\x0d\n\x0d\nfunction pathToFileURL(filepath) {\x0d\n  if (isWindows && StringPrototypeStartsWith(filepath\x2C '\\\\\\\\')) {\x0d\n    const outURL = new URL('file://');\x0d\n    // UNC path format: \\\\server\\share\\resource\x0d\n    const hostnameEndIndex = StringPrototypeIndexOf(filepath\x2C '\\\\'\x2C 2);\x0d\n    if (hostnameEndIndex === -1) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'path'\x2C\x0d\n        filepath\x2C\x0d\n        'Missing UNC resource path'\x2C\x0d\n      );\x0d\n    }\x0d\n    if (hostnameEndIndex === 2) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'path'\x2C\x0d\n        filepath\x2C\x0d\n        'Empty UNC servername'\x2C\x0d\n      );\x0d\n    }\x0d\n    const hostname = StringPrototypeSlice(filepath\x2C 2\x2C hostnameEndIndex);\x0d\n    outURL.hostname = domainToASCII(hostname);\x0d\n    outURL.pathname = encodePathChars(\x0d\n      RegExpPrototypeSymbolReplace(backslashRegEx\x2C StringPrototypeSlice(filepath\x2C hostnameEndIndex)\x2C '/'));\x0d\n    return outURL;\x0d\n  }\x0d\n  let resolved = path.resolve(filepath);\x0d\n  // path.resolve strips trailing slashes so we must add them back\x0d\n  const filePathLast = StringPrototypeCharCodeAt(filepath\x2C\x0d\n                                                 filepath.length - 1);\x0d\n  if ((filePathLast === CHAR_FORWARD_SLASH ||\x0d\n       (isWindows && filePathLast === CHAR_BACKWARD_SLASH)) &&\x0d\n      resolved[resolved.length - 1] !== path.sep)\x0d\n    resolved += '/';\x0d\n\x0d\n  // Call encodePathChars first to avoid encoding % again for ? and #.\x0d\n  resolved = encodePathChars(resolved);\x0d\n\x0d\n  // Question and hash character should be included in pathname.\x0d\n  // Therefore\x2C encoding is required to eliminate parsing them in different states.\x0d\n  // This is done as an optimization to not creating a URL instance and\x0d\n  // later triggering pathname setter\x2C which impacts performance\x0d\n  if (StringPrototypeIndexOf(resolved\x2C '?') !== -1)\x0d\n    resolved = RegExpPrototypeSymbolReplace(questionRegex\x2C resolved\x2C '%3F');\x0d\n  if (StringPrototypeIndexOf(resolved\x2C '#') !== -1)\x0d\n    resolved = RegExpPrototypeSymbolReplace(hashRegex\x2C resolved\x2C '%23');\x0d\n  return new URL(`file://${resolved}`);\x0d\n}\x0d\n\x0d\nfunction toPathIfFileURL(fileURLOrPath) {\x0d\n  if (!isURL(fileURLOrPath))\x0d\n    return fileURLOrPath;\x0d\n  return fileURLToPath(fileURLOrPath);\x0d\n}\x0d\n\x0d\n/**\x0d\n * This util takes a string containing a URL and return the URL origin\x2C\x0d\n * its meant to avoid calls to `new URL` constructor.\x0d\n * @param {string} url\x0d\n * @returns {URL['origin']}\x0d\n */\x0d\nfunction getURLOrigin(url) {\x0d\n  return bindingUrl.getOrigin(url);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  fileURLToPath\x2C\x0d\n  pathToFileURL\x2C\x0d\n  toPathIfFileURL\x2C\x0d\n  installObjectURLMethods\x2C\x0d\n  URL\x2C\x0d\n  URLSearchParams\x2C\x0d\n  domainToASCII\x2C\x0d\n  domainToUnicode\x2C\x0d\n  urlToHttpOptions\x2C\x0d\n  encodeStr\x2C\x0d\n  isURL\x2C\x0d\n\x0d\n  urlUpdateActions: updateActions\x2C\x0d\n  getURLOrigin\x2C\x0d\n  unsafeProtocol\x2C\x0d\n  hostlessProtocol\x2C\x0d\n  slashedProtocol\x2C\x0d\n};\x0d\n
code-source-info,0x2d4d28eb8bc,32,47853,47970,C0O47874C3O47879C9O47906C11O47927C12O47931C15O47938C19O47967,,
code-creation,JS,10,246358,0x2d4d28eeba4,45,isURL node:internal/url:768:15,0x1d9b7260e58,~
code-source-info,0x2d4d28eeba4,32,22622,22735,C0O22634C12O22653C21O22668C27O22685C34O22712C40O22641C44O22732,,
code-creation,JS,10,246496,0x2d4d28eedc4,149, node:internal/fs/utils:676:38,0x1d9b725d158,~
code-source-info,0x2d4d28eedc4,28,19101,19833,C14O19135C22O19168C25O19168C31O19195C36O19226C41O19247C54O19201C59O19195C60O19324C65O19378C70O19378C75O19475C81O19498C85O19527C89O19544C95O19544C104O19596C108O19617C113O19617C120O19663C121O19670C122O19681C127O19713C143O19687C148O19681,,
code-creation,JS,10,246569,0x2d4d28eef74,16,isUint8Array node:internal/util/types:13:22,0x1d9b7247db0,~
script-source,18,node:internal/util/types,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBufferIsView\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction isTypedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) !== undefined;\x0d\n}\x0d\n\x0d\nfunction isUint8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8Array';\x0d\n}\x0d\n\x0d\nfunction isUint8ClampedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8ClampedArray';\x0d\n}\x0d\n\x0d\nfunction isUint16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint16Array';\x0d\n}\x0d\n\x0d\nfunction isUint32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint32Array';\x0d\n}\x0d\n\x0d\nfunction isInt8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int8Array';\x0d\n}\x0d\n\x0d\nfunction isInt16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int16Array';\x0d\n}\x0d\n\x0d\nfunction isInt32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float64Array';\x0d\n}\x0d\n\x0d\nfunction isBigInt64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigInt64Array';\x0d\n}\x0d\n\x0d\nfunction isBigUint64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigUint64Array';\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ...internalBinding('types')\x2C\x0d\n  isArrayBufferView: ArrayBufferIsView\x2C\x0d\n  isTypedArray\x2C\x0d\n  isUint8Array\x2C\x0d\n  isUint8ClampedArray\x2C\x0d\n  isUint16Array\x2C\x0d\n  isUint32Array\x2C\x0d\n  isInt8Array\x2C\x0d\n  isInt16Array\x2C\x0d\n  isInt32Array\x2C\x0d\n  isFloat32Array\x2C\x0d\n  isFloat64Array\x2C\x0d\n  isBigInt64Array\x2C\x0d\n  isBigUint64Array\x2C\x0d\n};\x0d\n\x0d\nlet isCryptoKey;\x0d\nlet isKeyObject;\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  isKeyObject: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isKeyObject) {\x0d\n        ({ isKeyObject } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isKeyObject(obj);\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  isCryptoKey: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isCryptoKey) {\x0d\n        ({ isCryptoKey } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isCryptoKey(obj);\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n});\x0d\n
code-source-info,0x2d4d28eef74,18,269,356,C0O282C5O289C12O336C15O353,,
code-creation,JS,10,246745,0x2d4d28ef424,106,possiblyTransformPath node:internal/fs/utils:704:31,0x1d9b725d1b0,~
code-source-info,0x2d4d28ef424,28,20242,20731,C0O20254C5O20269C10O20269C16O20289C22O20328C27O20335C31O20353C32O20366C39O20373C42O20373C47O20366C51O20399C56O20404C62O20426C67O20433C73O20648C80O20672C85O20684C88O20684C93O20672C98O20655C102O20707C103O20716C105O20728,,
code-creation,JS,10,246811,0x2d4d28ef5d4,86,parseFileMode node:internal/validators:69:23,0x1d9b7243010,~
code-source-info,0x2d4d28ef5d4,15,1953,2253,C0O1977C11O1995C17O2033C24O2057C27O2037C34O2093C41O2138C52O2099C57O2093C58O2161C66O2169C73O2205C78O2205C83O2237C85O2250,,
code-creation,JS,10,246878,0x2d4d28ef77c,148, node:internal/validators:137:40,0x1d9b7243118,~
code-source-info,0x2d4d28ef77c,15,3882,4327,C16O3922C22O3960C38O3966C43O3960C44O4023C49O4028C55O4059C71O4065C76O4059C77O4134C87O4196C90O4214C92O4224C99O4239C104O4253C114O4292C127O4305C140O4259C145O4253C147O4326,,
code-creation,JS,10,246969,0x2d4d28efbc4,515,stringToFlags node:internal/fs/utils:563:23,0x1d9b725cfa0,~
code-source-info,0x2d4d28efbc
code-creation,JS,10,247087,0x2d4d28efffc,36,makeCallback node:fs:190:22,0x1d9b7273638,~
code-source-info,0x2d4d28efffc,56,4978,5073,C0O4978C13O4988C26O4988C31O5021C35O5070,,
code-creation,JS,10,247193,0x2d4d28f02d4,218,toNamespacedPath node:path:622:19,0x1d9b725e1e8,~
code-source-info,0x2d4d28f02d4,30,20189,21304,C0O20255C6O20292C12O20299C17O20313C19O20325C20O20354C25O20360C30O20360C36O20399C43O20406C48O20419C50O20431C51O20439C58O20443C66O20490C68O20486C73O20548C79O20552C87O20595C92O20644C98O20644C104O20697C106O20710C108O20706C115O20741C117O20737C122O20841C127O20863C133O20863C142O20903C145O20936C153O20968C159O20948C171O21022C179O21069C181O21065C192O21090C200O21133C205O21240C210O21257C214O21272C215O21287C217O21299,,
code-creation,JS,10,248036,0x2d4d28f04dc,18,promiseInitHookWithDestroyTracking node:internal/async_hooks:327:44,0x1d9b7242030,~
code-source-info,0x2d4d28f04dc,14,12324,12420,C0O12347C3O12347C8O12384C11O12384C17O12419,,
code-creation,JS,10,248088,0x2d4d28f05d4,46,promiseInitHook node:internal/async_hooks:320:25,0x1d9b7241fd8,~
code-source-info,0x2d4d28f05d4,14,12052,12277,C0O12075C3O12075C8O12125C10O12133C12O12132C16O12177C18O12185C20O12184C24O12214C39O12214C45O12276,,
code-creation,JS,10,248137,0x2d4d28f06f4,57,trackPromise node:internal/async_hooks:306:22,0x1d9b7241f80,~
code-source-info,0x2d4d28f06f4,14,11603,12024,C0O11626C2O11638C4O11637C9O11663C10O11670C11O11854C18O11863C27O11894C31O11927C37O11954C40O11952C44O11971C46O11979C51O12004C56O12023,,
code-creation,JS,10,248186,0x2d4d28f0824,40,getOrSetAsyncId node:internal/async_hooks:421:25,0x1d9b72423a0,~
code-source-info,0x2d4d28f0824,14,15065,15237,C0O15079C7O15121C10O15083C17O15146C19O15159C22O15177C23O15188C29O15221C33O15219C39O15234,,
code-creation,JS,10,248250,0x2d4d28f0a2c,28,destroyTracking node:internal/async_hooks:332:25,0x1d9b7242088,~
code-source-info,0x2d4d28f0a2c,14,12448,12591,C0O12471C3O12471C8O12521C10O12529C12O12528C16O12550C21O12550C27O12590,,
code-creation,JS,10,248352,0x2d4d28f0bcc,320,processTicksAndRejections node:internal/process/task_queues:67:35,0x1d9b7263650,~
code-source-info,0x2d4d28f0bcc
code-creation,JS,10,248441,0x2d4d28f0e9c,48,shift node:internal/fixed_queue:108:8,0x1d9b7264c08,~
code-source-info,0x2d4d28f0e9c,37,4061,4320,C0O4089C5O4118C10O4118C15O4141C20O4141C26O4159C32O4260C36O4253C40O4273C41O4283C45O4303C47O4315,,
code-creation,JS,10,248491,0x2d4d28f0fe4,54,shift node:internal/fixed_queue:80:8,0x1d9b7264988,~
code-source-info,0x2d4d28f0fe4,37,3379,3596,C0O3411C5O3421C9O3415C13O3435C15O3470C16O3482C17O3493C22O3503C28O3511C32O3549C36O3556C42O3563C44O3561C47O3541C51O3575C53O3591,,
code-creation,JS,10,248543,0x2d4d28f111c,42,emitBeforeScript node:internal/async_hooks:509:26,0x1d9b7242768,~
code-source-info,0x2d4d28f111c,14,17423,17579,C0O17464C12O17464C17O17522C22O17535C25O17526C31O17550C36O17550C41O17578,,
code-creation,JS,10,248596,0x2d4d28f126c,162,pushAsyncContext node:internal/async_hooks:539:26,0x1d9b72428c8,~
code-source-info,0x2d4d28f126c,14,18097,18652,C0O18153C7O18171C9O18170C13O18189C20O18223C24O18238C26O18249C32O18256C35O18267C40O18283C44O18253C49O18296C54O18303C59O18346C60O18350C63O18361C70O18384C76O18391C81O18407C83O18406C86O18389C90O18430C93O18441C100O18464C103O18468C112O18491C114O18490C117O18473C121O18512C127O18530C132O18543C136O18550C144O18585C148O18599C156O18632C161O18651,,
code-creation,JS,10,248686,0x2d4d28f14cc,193,emitHook node:internal/async_hooks:225:18,0x1d9b7241dc8,~
code-source-info,0x2d4d28f14cc,14,8852,9850,C0O8875C12O8899C22O9220C24O9225C27O9240C32O9246C36O9225C41O9268C44O9292C51O9297C57O9300C64O9336C67O9349C74O9354C80O9357C84O9365C89O9255C94O9207C111O9414C119O9414C137O9449C147O9473C162O9744C165O9761C171O9772C179O9794C185O9821C188O9821C192O9849,,
code-creation,JS,10,248746,0x2d4d28f16c4,48,before node:domain:97:9,0xa5da606db0,~
code-source-info,0x2d4d28f16c4,126,3475,3961,C0O3508C5O3516C10O3516C16O3535C18O3910C23O3910C27O3935C32O3935C37O3940C42O3941C47O3960,,
code-creation,JS,10,248796,0x2d4d28f1814,73,afterWriteTick node:internal/streams/writable:684:24,0x9b20b7f6e8,~
code-source-info,0x2d4d28f1814,102,21707,21875,C0O21710C5O21718C10O21725C15O21732C20O21743C22O21749C31O21761C33O21760C38O21757C42O21785C44O21791C48O21817C52O21828C67O21835C72O21872,,
code-creation,JS,10,248866,0x2d4d28f1994,198,afterWrite node:internal/streams/writable:690:20,0x9b20b7f740,~
code-source-info,0x2d4d28f1994,102,21898,22408,C0O21930C2O21936C11O21948C13O21947C18O21944C22O21991C24O21997C30O22009C35O22019C37O22017C43O22032C45O22030C48O22006C54O22045C59O22069C65O22076C69O22086C71O22108C74O22114C80O22125C85O22122C89O22150C97O22150C102O22190C112O22190C117O22202C123O22217C127O22226C129O22226C133O22175C137O22246C139O22256C145O22265C150O22279C155O22293C158O22293C162O22323C164O22333C170O22342C175O22353C180O22367C191O22367C197O22407,,
code-creation,JS,10,248945,0x2d4d28f1bdc,87, node:internal/console/constructor:358:10,0x1d9b726ab48,~
code-source-info,0x2d4d28f1bdc,46,11087,11921,C0O11308C7O11325C9O11321C17O11354C26O11373C31O11387C35O11415C40O11430C46O11832C54O11832C61O11855C66O11880C79O11880C86O11920,,
code-creation,JS,10,248995,0x2d4d28f1d3c,39,emitDestroyScript node:internal/async_hooks:525:27,0x1d9b7242818,~
code-source-info,0x2d4d28f1d3c,14,17742,17931,C0O17831C5O17845C8O17836C15O17866C20O17877C21O17884C22O17888C27O17899C32O17899C38O17930,,
code-creation,JS,10,249034,0x2d4d28f1e54,32,emitAfterScript node:internal/async_hooks:517:25,0x1d9b72427c0,~
code-source-info,0x2d4d28f1e54,14,17609,17710,C0O17624C5O17637C8O17628C14O17651C19O17651C23O17682C26O17682C31O17709,,
code-creation,JS,10,249075,0x2d4d28f1f6c,48,after node:domain:108:8,0xa5da606e08,~
code-source-info,0x2d4d28f1f6c,126,3971,4182,C0O4004C5O4012C10O4012C16O4031C18O4117C23O4117C28O4139C33O4139C37O4163C42O4163C47O4181,,
code-creation,JS,10,249135,0x2d4d28f20f4,159,popAsyncContext node:internal/async_hooks:553:25,0x1d9b7242920,~
code-source-info,0x2d4d28f20f4,14,18745,19347,C0O18780C7O18798C9O18797C13O18816C14O18832C19O18839C20O18852C21O18858C24O18862C31O18885C36O18901C38O18900C44O18920C49O19004C54O19011C58O19037C59O19063C61O19075C65O19083C72O19099C77O19120C80O19131C87O19149C90O19146C93O19118C97O19163C102O19179C108O19209C115O19227C118O19236C121O19224C124O19196C128O19245C133O19271C138O19271C142O19281C150O19313C154O19326C155O19340C158O19344,,
code-creation,JS,10,249194,0x2d4d28f22cc,13,enabledHooksExist node:internal/async_hooks:474:27,0x1d9b7242558,~
code-source-info,0x2d4d28f22cc,14,16660,16695,C0O16668C5O16684C8O16675C12O16692,,
code-creation,JS,10,249254,0x2d4d28f23ec,146,resume_ node:internal/streams/readable:1252:17,0x9b20b6b578,~
code-source-info,0x2d4d28f23ec,97,40399,40708,C0O40420C10O40443C12O40442C18O40453C20O40451C25O40463C30O40420C35O40474C37O40484C43O40493C48O40505C53O40526C60O40526C65O40545C68O40551C74O40563C76O40562C81O40559C85O40591C93O40591C98O40610C101O40610C105O40627C107O40637C113O40649C118O40658C121O40646C127O40671C132O40697C139O40697C145O40707,,
code-creation,JS,10,249320,0x2d4d28f25dc,71,Socket.read node:net:766:33,0x9b20b49728,~
code-source-info,0x2d4d28f25dc,86,20928,21112,C0O20937C2O20946C4O20945C9O20964C15O20983C21O21007C26O21015C32O21031C35O21031C39O21059C44O21073C49O21080C54O21090C59O21095C64O21095C70O21109,,
code-creation,JS,10,249468,0x2d4d28f2934,878,Readable.read node:internal/streams/readable:645:35,0x9b20b6c150,~
code-source-info,0x2d4d28f
code-creation,JS,10,249675,0x2d4d28f2fb4,166,howMuchToRead node:internal/streams/readable:628:23,0x9b20b6b1e0,~
code-source-info,0x2d4d28f2fb4,97,19415,19888,C0O19431C1O19437C6O19452C12O19459C19O19475C21O19474C27O19485C29O19483C34O19493C39O19506C40O19515C41O19519C43O19530C45O19529C51O19540C53O19538C58O19553C63O19565C65O19574C66O19578C71O19582C77O19645C79O19655C85O19666C87O19664C92O19676C97O19691C103O19719C108O19732C112O19725C116O19745C120O19752C121O19771C125O19778C126O19802C130O19793C135O19815C137O19824C138O19828C140O19841C146O19852C148O19850C153O19860C158O19874C165O19885,,
code-creation,JS,10,249760,0x2d4d28f332c,137,Socket._read node:net:705:34,0x9b20b49450,~
code-source-info,0x2d4d28f332c,86,19369,19693,C0O19369C13O19378C32O19435C44O19473C50O19378C55O19493C58O19502C67O19522C73O19538C81O19538C85O19579C88O19584C101O19584C109O19632C112O19642C117O19650C123O19666C131O19666C136O19692,,
code-creation,JS,10,249818,0x2d4d28f34fc,10, node:net:45:63,0x125aa7bfc88,~
code-source-info,0x2d4d28f34fc,86,1656,1683,C0O1669C2O1675C9O1682,,
code-creation,JS,10,249860,0x2d4d28f3624,70,tryReadStart node:net:695:22,0x125aa7bf278,~
code-source-info,0x2d4d28f3624,86,19030,19266,C0O19086C8O19086C12O19131C18O19147C22O19177C27O19185C32O19185C37O19201C39O19222C46O19234C57O19230C63O19222C69O19265,,
code-creation,JS,10,250018,0x2d4d28f37ac,56,flow node:internal/streams/readable:1278:14,0x9b20b6b5d0,~
code-source-info,0x2d4d28f37ac,97,41080,41222,C0O41115C5O41134C13O41134C17O41192C19O41166C21O41165C27O41176C29O41174C34O41186C39O41202C44O41202C50O41152C55O41221,,
code-creation,JS,10,250155,0x2d4d28f3904,93,onpause node:internal/bootstrap/switches/is_main_thread:264:19,0x2d4d28c4cf0,~
code-source-info,0x2d4d28f3904,53,7407,7639,C0O7417C7O7428C13O7444C14O7451C15O7457C20O7467C25O7475C36O7493C42O7519C47O7525C53O7548C57O7564C62O7570C68O7586C72O7602C77O7608C82O7616C87O7616C92O7638,,
code-creation,JS,10,250201,0x2d4d28f3a6c,10,get node:internal/streams/readable:1469:18,0x9b20b6cc90,~
code-source-info,0x2d4d28f3a6c,97,45804,45858,C0O45828C5O45843C9O45851,,
code-creation,JS,10,250234,0x2d4d28f3b5c,45,get node:internal/streams/readable:243:8,0x9b20b6bc30,~
code-source-info,0x2d4d28f3b5c,97,7780,7882,C0O7792C2O7805C4O7804C10O7815C12O7813C17O7828C24O7841C30O7852C32O7850C37O7862C44O7875,,
code-creation,JS,10,250410,0x2d4d28f3da4,42,promiseBeforeHook node:internal/async_hooks:338:27,0x1d9b72420e0,~
code-source-info,0x2d4d28f3da4,14,12621,12811,C0O12636C3O12636C7O12678C9O12686C11O12685C15O12725C17O12733C19O12732C23O12762C35O12762C41O12810,,
code-creation,JS,10,250489,0x2d4d28f3f0c,58,promiseAfterHook node:internal/async_hooks:345:26,0x1d9b7242138,~
code-source-info,0x2d4d28f3f0c,14,12840,13396,C0O12855C3O12855C7O12897C9O12905C11O12904C15O12926C20O12939C23O12930C29O12955C34O12955C38O12989C41O13005C44O13001C49O13363C52O13363C57O13395,,
code-creation,JS,10,250538,0x2d4d28f4044,13,executionAsyncId node:internal/async_hooks:571:26,0x1d9b7242978,~
code-source-info,0x2d4d28f4044,14,19378,19431,C0O19386C7O19409C9O19408C12O19428,,
code-creation,JS,10,250680,0x2d4d28f4314,618,processPromiseRejections node:internal/process/promises:221:34,0x1d9b7264228,~
script-source,36,node:internal/process/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  Error\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeWeakMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  tickInfo\x2C\x0d\n  promiseRejectEvents: {\x0d\n    kPromiseRejectWithNoHandler\x2C\x0d\n    kPromiseHandlerAddedAfterReject\x2C\x0d\n    kPromiseResolveAfterResolved\x2C\x0d\n    kPromiseRejectAfterResolved\x2C\x0d\n  }\x2C\x0d\n  setPromiseRejectCallback\x2C\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst { deprecate } = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  noSideEffectsToString\x2C\x0d\n  triggerUncaughtException\x2C\x0d\n  exitCodes: { kGenericUserError }\x2C\x0d\n} = internalBinding('errors');\x0d\n\x0d\nconst {\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n  symbols: {\x0d\n    async_id_symbol: kAsyncIdSymbol\x2C\x0d\n    trigger_async_id_symbol: kTriggerAsyncIdSymbol\x2C\x0d\n  }\x2C\x0d\n} = require('internal/async_hooks');\x0d\nconst { isErrorStackTraceLimitWritable } = require('internal/errors');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasRejectionToWarn = 1;\x0d\n\x0d\nconst maybeUnhandledPromises = new SafeWeakMap();\x0d\nconst pendingUnhandledRejections = [];\x0d\nconst asyncHandledRejections = [];\x0d\nlet lastPromiseId = 0;\x0d\n\x0d\n// --unhandled-rejections=none:\x0d\n// Emit 'unhandledRejection'\x2C but do not emit any warning.\x0d\nconst kIgnoreUnhandledRejections = 0;\x0d\n\x0d\n// --unhandled-rejections=warn:\x0d\n// Emit 'unhandledRejection'\x2C then emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kAlwaysWarnUnhandledRejections = 1;\x0d\n\x0d\n// --unhandled-rejections=strict:\x0d\n// Emit 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\n// Otherwise\x2C emit 'unhandledRejection'. If 'unhandledRejection' is not\x0d\n// handled\x2C emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kStrictUnhandledRejections = 2;\x0d\n\x0d\n// --unhandled-rejections=throw:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\nconst kThrowUnhandledRejections = 3;\x0d\n\x0d\n// --unhandled-rejections=warn-with-error-code:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'UnhandledPromiseRejectionWarning'\x2C then set process exit code to 1.\x0d\n\x0d\nconst kWarnWithErrorCodeUnhandledRejections = 4;\x0d\n\x0d\nlet unhandledRejectionsMode;\x0d\n\x0d\nfunction setHasRejectionToWarn(value) {\x0d\n  tickInfo[kHasRejectionToWarn] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nfunction hasRejectionToWarn() {\x0d\n  return tickInfo[kHasRejectionToWarn] === 1;\x0d\n}\x0d\n\x0d\nfunction isErrorLike(o) {\x0d\n  return typeof o === 'object' &&\x0d\n         o !== null &&\x0d\n         ObjectPrototypeHasOwnProperty(o\x2C 'stack');\x0d\n}\x0d\n\x0d\nfunction getUnhandledRejectionsMode() {\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  switch (getOptionValue('--unhandled-rejections')) {\x0d\n    case 'none':\x0d\n      return kIgnoreUnhandledRejections;\x0d\n    case 'warn':\x0d\n      return kAlwaysWarnUnhandledRejections;\x0d\n    case 'strict':\x0d\n      return kStrictUnhandledRejections;\x0d\n    case 'throw':\x0d\n      return kThrowUnhandledRejections;\x0d\n    case 'warn-with-error-code':\x0d\n      return kWarnWithErrorCodeUnhandledRejections;\x0d\n    default:\x0d\n      return kThrowUnhandledRejections;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseRejectHandler(type\x2C promise\x2C reason) {\x0d\n  if (unhandledRejectionsMode === undefined) {\x0d\n    unhandledRejectionsMode = getUnhandledRejectionsMode();\x0d\n  }\x0d\n  switch (type) {\x0d\n    case kPromiseRejectWithNoHandler:\x0d\n      unhandledRejection(promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseHandlerAddedAfterReject:\x0d\n      handledRejection(promise);\x0d\n      break;\x0d\n    case kPromiseResolveAfterResolved:\x0d\n      resolveError('resolve'\x2C promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseRejectAfterResolved:\x0d\n      resolveError('reject'\x2C promise\x2C reason);\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst multipleResolvesDeprecate = deprecate(\x0d\n  () => {}\x2C\x0d\n  'The multipleResolves event has been deprecated.'\x2C\x0d\n  'DEP0160'\x2C\x0d\n);\x0d\nfunction resolveError(type\x2C promise\x2C reason) {\x0d\n  // We have to wrap this in a next tick. Otherwise the error could be caught by\x0d\n  // the executed promise.\x0d\n  process.nextTick(() => {\x0d\n    if (process.emit('multipleResolves'\x2C type\x2C promise\x2C reason)) {\x0d\n      multipleResolvesDeprecate();\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction unhandledRejection(promise\x2C reason) {\x0d\n  const emit = (reason\x2C promise\x2C promiseInfo) => {\x0d\n    if (promiseInfo.domain) {\x0d\n      return promiseInfo.domain.emit('error'\x2C reason);\x0d\n    }\x0d\n    return process.emit('unhandledRejection'\x2C reason\x2C promise);\x0d\n  };\x0d\n\x0d\n  maybeUnhandledPromises.set(promise\x2C {\x0d\n    reason\x2C\x0d\n    uid: ++lastPromiseId\x2C\x0d\n    warned: false\x2C\x0d\n    domain: process.domain\x2C\x0d\n    emit\x2C\x0d\n  });\x0d\n  // This causes the promise to be referenced at least for one tick.\x0d\n  ArrayPrototypePush(pendingUnhandledRejections\x2C promise);\x0d\n  setHasRejectionToWarn(true);\x0d\n}\x0d\n\x0d\nfunction handledRejection(promise) {\x0d\n  const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n  if (promiseInfo !== undefined) {\x0d\n    maybeUnhandledPromises.delete(promise);\x0d\n    if (promiseInfo.warned) {\x0d\n      const { uid } = promiseInfo;\x0d\n      // Generate the warning object early to get a good stack trace.\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const warning = new Error('Promise rejection was handled ' +\x0d\n                                `asynchronously (rejection id: ${uid})`);\x0d\n      warning.name = 'PromiseRejectionHandledWarning';\x0d\n      warning.id = uid;\x0d\n      ArrayPrototypePush(asyncHandledRejections\x2C { promise\x2C warning });\x0d\n      setHasRejectionToWarn(true);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  if (maybeUnhandledPromises.size === 0 && asyncHandledRejections.length === 0)\x0d\n    setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\nconst unhandledRejectionErrName = 'UnhandledPromiseRejectionWarning';\x0d\nfunction emitUnhandledRejectionWarning(uid\x2C reason) {\x0d\n  const warning = getErrorWithoutStack(\x0d\n    unhandledRejectionErrName\x2C\x0d\n    'Unhandled promise rejection. This error originated either by ' +\x0d\n      'throwing inside of an async function without a catch block\x2C ' +\x0d\n      'or by rejecting a promise which was not handled with .catch(). ' +\x0d\n      'To terminate the node process on unhandled promise ' +\x0d\n      'rejection\x2C use the CLI flag `--unhandled-rejections=strict` (see ' +\x0d\n      'https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). ' +\x0d\n      `(rejection id: ${uid})`\x2C\x0d\n  );\x0d\n  try {\x0d\n    if (isErrorLike(reason)) {\x0d\n      warning.stack = reason.stack;\x0d\n      process.emitWarning(reason.stack\x2C unhandledRejectionErrName);\x0d\n    } else {\x0d\n      process.emitWarning(\x0d\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\x0d\n    }\x0d\n  } catch {\x0d\n    try {\x0d\n      process.emitWarning(\x0d\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\x0d\n    } catch {\x0d\n      // Ignore.\x0d\n    }\x0d\n  }\x0d\n\x0d\n  process.emitWarning(warning);\x0d\n}\x0d\n\x0d\n// If this method returns true\x2C we've executed user code or triggered\x0d\n// a warning to be emitted which requires the microtask and next tick\x0d\n// queues to be drained again.\x0d\nfunction processPromiseRejections() {\x0d\n  let maybeScheduledTicksOrMicrotasks = asyncHandledRejections.length > 0;\x0d\n\x0d\n  while (asyncHandledRejections.length > 0) {\x0d\n    const { promise\x2C warning } = ArrayPrototypeShift(asyncHandledRejections);\x0d\n    if (!process.emit('rejectionHandled'\x2C promise)) {\x0d\n      process.emitWarning(warning);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let len = pendingUnhandledRejections.length;\x0d\n  while (len--) {\x0d\n    const promise = ArrayPrototypeShift(pendingUnhandledRejections);\x0d\n    const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n    if (promiseInfo === undefined) {\x0d\n      continue;\x0d\n    }\x0d\n    promiseInfo.warned = true;\x0d\n    const { reason\x2C uid\x2C emit } = promiseInfo;\x0d\n\x0d\n    let needPop = true;\x0d\n    const {\x0d\n      [kAsyncIdSymbol]: promiseAsyncId\x2C\x0d\n      [kTriggerAsyncIdSymbol]: promiseTriggerAsyncId\x2C\x0d\n    } = promise;\x0d\n    // We need to check if async_hooks are enabled\x0d\n    // don't use enabledHooksExist as a Promise could\x0d\n    // come from a vm.* context and not have an async id\x0d\n    if (typeof promiseAsyncId !== 'undefined') {\x0d\n      pushAsyncContext(\x0d\n        promiseAsyncId\x2C\x0d\n        promiseTriggerAsyncId\x2C\x0d\n        promise\x2C\x0d\n      );\x0d\n    }\x0d\n    try {\x0d\n      switch (unhandledRejectionsMode) {\x0d\n        case kStrictUnhandledRejections: {\x0d\n          const err = isErrorLike(reason) ?\x0d\n            reason : generateUnhandledRejectionError(reason);\x0d\n          // This destroys the async stack\x2C don't clear it after\x0d\n          triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n          if (typeof promiseAsyncId !== 'undefined') {\x0d\n            pushAsyncContext(\x0d\n              promise[kAsyncIdSymbol]\x2C\x0d\n              promise[kTriggerAsyncIdSymbol]\x2C\x0d\n              promise\x2C\x0d\n            );\x0d\n          }\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n          break;\x0d\n        }\x0d\n        case kIgnoreUnhandledRejections: {\x0d\n          emit(reason\x2C promise\x2C promiseInfo);\x0d\n          break;\x0d\n        }\x0d\n        case kAlwaysWarnUnhandledRejections: {\x0d\n          emit(reason\x2C promise\x2C promiseInfo);\x0d\n          emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n          break;\x0d\n        }\x0d\n        case kThrowUnhandledRejections: {\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) {\x0d\n            const err = isErrorLike(reason) ?\x0d\n              reason : generateUnhandledRejectionError(reason);\x0d\n              // This destroys the async stack\x2C don't clear it after\x0d\n            triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n            needPop = false;\x0d\n          }\x0d\n          break;\x0d\n        }\x0d\n        case kWarnWithErrorCodeUnhandledRejections: {\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) {\x0d\n            emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n            process.exitCode = kGenericUserError;\x0d\n          }\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    } finally {\x0d\n      if (needPop) {\x0d\n        if (typeof promiseAsyncId !== 'undefined') {\x0d\n          popAsyncContext(promiseAsyncId);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    maybeScheduledTicksOrMicrotasks = true;\x0d\n  }\x0d\n  return maybeScheduledTicksOrMicrotasks ||\x0d\n         pendingUnhandledRejections.length !== 0;\x0d\n}\x0d\n\x0d\nfunction getErrorWithoutStack(name\x2C message) {\x0d\n  // Reset the stack to prevent any overhead.\x0d\n  const tmp = Error.stackTraceLimit;\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmp;\x0d\n  ObjectDefineProperty(err\x2C 'name'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: name\x2C\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction generateUnhandledRejectionError(reason) {\x0d\n  const message =\x0d\n    'This error originated either by ' +\x0d\n    'throwing inside of an async function without a catch block\x2C ' +\x0d\n    'or by rejecting a promise which was not handled with .catch().' +\x0d\n    ' The promise rejected with the reason ' +\x0d\n    `"${noSideEffectsToString(reason)}".`;\x0d\n\x0d\n  const err = getErrorWithoutStack('UnhandledPromiseRejection'\x2C message);\x0d\n  err.code = 'ERR_UNHANDLED_REJECTION';\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction listenForRejections() {\x0d\n  setPromiseRejectCallback(promiseRejectHandler);\x0d\n}\x0d\nmodule.exports = {\x0d\n  hasRejectionToWarn\x2C\x0d\n  setHasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x2C\x0d\n};\x0d\n
code-source-info,0x2d4d28f
code-creation,JS,10,251382,0x2d4d28f52ac,25,setHasRejectionToWarn node:internal/process/promises:78:31,0x1d9b7263bb0,~
code-source-info,0x2d4d28f52ac,36,2262,2324,C0O2275C7O2284C12O2307C19O2305C24O2323,,
new,MemoryChunk,0x162abf80000,262144
new,MemoryChunk,0x28bc73c0000,262144
new,MemoryChunk,0x19224300000,262144
new,MemoryChunk,0x17371400000,262144
code-creation,JS,10,252039,0x2d4d28f53ec,171,callbackTrampoline node:internal/async_hooks:118:28,0x1d9b7241bb8,~
code-source-info,0x2d4d28f53ec,14,5308,5850,C0O5308C14O5360C21O5378C23O5377C26O5392C30O5400C37O5433C41O5450C42O5462C52O5480C55O5471C61O5495C66O5495C70O5531C72O5542C73O5554C86O5608C91O5608C96O5626C101O5645C106O5645C115O5693C120O5693C127O5722C128O5734C138O5752C141O5743C147O5766C152O5766C156O5797C159O5823C164O5823C168O5833C170O5847,,
code-creation,JS,10,252115,0x2d4d28f55bc,25, node:fs:193:10,0x2d4d28eff40,~
code-source-info,0x2d4d28f55bc,56,5028,5069,C0O5028C3O5041C19O5041C24O5069,,
code-creation,JS,10,252163,0x2d4d28f571c,102,oninit node:internal/repl/history:72:18,0x2d4d28e1078,~
code-source-info,0x2d4d28f571c,128,2097,2514,C0O2115C4O2220C17O2283C21O2220C26O2351C33O2361C38O2351C42O2378C49O2396C53O2426C56O2431C61O2431C65O2448C73O2455C78O2473C79O2486C86O2489C94O2489C101O2513,,
code-creation,JS,10,252221,0x2d4d28f58a4,74,close node:fs:517:15,0x1d9b7273c60,~
code-source-info,0x2d4d28f58a4,56,13765,14000,C14O13808C16O13821C21O13852C24O13863C29O13904C34O13904C40O13928C42O13943C46O13958C51O13966C58O13972C61O13972C66O13966C73O13999,,
code-creation,JS,11,252290,0x7ff7343872c0,1436,emitInitNative node:internal/async_hooks:192:24,0x1d9b7241d70,^
code-source-info,0x7ff7343872c0,14,7591,8730,,,
code-creation,JS,11,252319,0x7ff734387880,976, node:internal/modules/helpers:244:41,0x2d4d28d93c8,^
code-source-info,0x7ff734387880,64,7826,9329,,,
code-creation,JS,11,252341,0x7ff734387c80,584,CSI node:internal/readline/utils:19:13,0x66313ecf18,^
code-source-info,0x7ff734387c80,120,415,605,,,
code-creation,JS,11,252365,0x7ff734387f00,456,_unrefTimer node:net:505:52,0x125aa7bfd38,^
code-source-info,0x7ff734387f00,86,14386,14501,,,
code-creation,JS,11,252383,0x7ff734388100,136,hasHooks node:internal/async_hooks:470:18,0x1d9b7242500,^
code-source-info,0x7ff734388100,14,16582,16630,,,
code-creation,JS,11,252400,0x7ff7343881c0,44,noop node:internal/util/debuglog:46:14,0x1d9b724d908,^
code-source-info,0x7ff7343881c0,22,1449,1457,,,
code-creation,JS,11,252426,0x7ff734388240,1288,emitHook node:internal/async_hooks:225:18,0x1d9b7241dc8,^
code-source-info,0x7ff734388240,14,8852,9850,,,
code-creation,JS,10,252464,0x2d4d28f5b44,52, node:internal/fs/utils:725:40,0x1d9b725d260,~
code-source-info,0x2d4d28f5b44,28,20983,21112,C14O21013C22O21017C29O21042C30O21051C31O21062C44O21062C49O21099C51O21109,,
code-creation,JS,10,252524,0x2d4d28f5c5c,17,destroy node:domain:116:10,0xa5da606e60,~
code-source-info,0x2d4d28f5c5c,126,4194,4255,C0O4211C5O4219C10O4225C16O4254,,
code-creation,JS,10,252653,0x2d4d28f5d54,40,onclose node:internal/repl/history:87:19,0x2d4d28e10d0,~
code-source-info,0x2d4d28f5d54,128,2536,2644,C0O2549C4O2567C7O2574C11O2585C12O2598C19O2601C33O2601C39O2643,,
code-creation,JS,10,252746,0x2d4d28f6024,270,readFile node:fs:372:18,0x1d9b7273a28,~
code-source-info,0x2d4d28f6024,56,9838,10803,C0O9838C9O9869C16O9894C21O9880C27O9919C34O9940C39O9929C46O9992C54O9992C59O10086C69O10048C75O10100C79O10119C85O10119C89O10117C93O10177C99O10217C103O10207C107O10245C113O10262C118O10270C128O10270C134O10394C135O10401C136O10412C141O10437C146O10416C153O10461C154O10468C155O10494C162O10516C170O10494C176O10542C186O10549C190O10547C192O10590C199O10590C205O10614C207O10626C211O10640C215O10655C219O10679C226O10687C235O10692C238O10703C246O10703C263O10687C269O10802,,
code-creation,JS,10,252817,0x2d4d28f62c4,16,maybeCallback node:fs:181:23,0x1d9b72735e0,~
code-source-info,0x2d4d28f62c4,56,4693,4749,C0O4703C8O4703C13O4736C15O4746,,
code-creation,JS,10,252883,0x2d4d28f646c,135,getOptions node:internal/fs/utils:326:20,0x1d9b725c638,~
code-source-info,0x2d4d28f646c,28,7877,8505,C9O7904C16O7923C27O7984C29O8006C30O8017C36O8057C41O8102C43O8126C47O8142C54O8178C60O8218C78O8224C83O8218C84O8314C91O8323C96O8342C99O8365C104O8342C108O8393C114O8422C119O8450C127O8422C132O8487C134O8502,,
code-creation,JS,10,252945,0x2d4d28f6694,48,assertEncoding node:internal/fs/utils:160:24,0x1d9b725c098,~
code-source-info,0x2d4d28f6694,28,3881,4063,C0O3897C6O3914C9O3921C14O3921C21O3965C24O3993C40O3999C45O3993C47O4062,,
code-creation,JS,10,252986,0x2d4d28f67ac,30,isEncoding node:buffer:557:40,0x1d9b7253428,~
code-source-info,0x2d4d28f67ac,24,16127,16262,C0O16143C6O16191C12O16198C20O16217C23O16217C28O16245C29O16259,,
code-creation,Eval,10,253132,0x2d4d28f6fb4,5, node:internal/fs/read/context:1:1,0x2d4d28f6d80,~
script-source,133,node:internal/fs/read/context,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  MathMin\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  constants: {\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n  }\x2C\x0d\n} = require('internal/fs/utils');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst { FSReqCallback\x2C close\x2C read } = internalBinding('fs');\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  aggregateTwoErrors\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nfunction readFileAfterRead(err\x2C bytesRead) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err)\x0d\n    return context.close(err);\x0d\n\x0d\n  context.pos += bytesRead;\x0d\n\x0d\n  if (context.pos === context.size || bytesRead === 0) {\x0d\n    context.close();\x0d\n  } else {\x0d\n    if (context.size === 0) {\x0d\n      // Unknown size\x2C just read until we don't get bytes.\x0d\n      const buffer = bytesRead === kReadFileUnknownBufferLength ?\x0d\n        context.buffer : context.buffer.slice(0\x2C bytesRead);\x0d\n      ArrayPrototypePush(context.buffers\x2C buffer);\x0d\n    }\x0d\n    context.read();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction readFileAfterClose(err) {\x0d\n  const context = this.context;\x0d\n  const callback = context.callback;\x0d\n  let buffer = null;\x0d\n\x0d\n  if (context.err || err)\x0d\n    return callback(aggregateTwoErrors(err\x2C context.err));\x0d\n\x0d\n  try {\x0d\n    if (context.size === 0)\x0d\n      buffer = Buffer.concat(context.buffers\x2C context.pos);\x0d\n    else if (context.pos < context.size)\x0d\n      buffer = context.buffer.slice(0\x2C context.pos);\x0d\n    else\x0d\n      buffer = context.buffer;\x0d\n\x0d\n    if (context.encoding)\x0d\n      buffer = buffer.toString(context.encoding);\x0d\n  } catch (err) {\x0d\n    return callback(err);\x0d\n  }\x0d\n\x0d\n  callback(null\x2C buffer);\x0d\n}\x0d\n\x0d\nclass ReadFileContext {\x0d\n  constructor(callback\x2C encoding) {\x0d\n    this.fd = undefined;\x0d\n    this.isUserFd = undefined;\x0d\n    this.size = 0;\x0d\n    this.callback = callback;\x0d\n    this.buffers = null;\x0d\n    this.buffer = null;\x0d\n    this.pos = 0;\x0d\n    this.encoding = encoding;\x0d\n    this.err = null;\x0d\n    this.signal = undefined;\x0d\n  }\x0d\n\x0d\n  read() {\x0d\n    let buffer;\x0d\n    let offset;\x0d\n    let length;\x0d\n\x0d\n    if (this.signal?.aborted) {\x0d\n      return this.close(\x0d\n        new AbortError(undefined\x2C { cause: this.signal?.reason }));\x0d\n    }\x0d\n    if (this.size === 0) {\x0d\n      buffer = Buffer.allocUnsafeSlow(kReadFileUnknownBufferLength);\x0d\n      offset = 0;\x0d\n      length = kReadFileUnknownBufferLength;\x0d\n      this.buffer = buffer;\x0d\n    } else {\x0d\n      buffer = this.buffer;\x0d\n      offset = this.pos;\x0d\n      length = MathMin(kReadFileBufferLength\x2C this.size - this.pos);\x0d\n    }\x0d\n\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = readFileAfterRead;\x0d\n    req.context = this;\x0d\n\x0d\n    read(this.fd\x2C buffer\x2C offset\x2C length\x2C -1\x2C req);\x0d\n  }\x0d\n\x0d\n  close(err) {\x0d\n    if (this.isUserFd) {\x0d\n      process.nextTick(function tick(context) {\x0d\n        ReflectApply(readFileAfterClose\x2C { context }\x2C [null]);\x0d\n      }\x2C this);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = readFileAfterClose;\x0d\n    req.context = this;\x0d\n    this.err = err;\x0d\n\x0d\n    close(this.fd\x2C req);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = ReadFileContext;\x0d\n
code-source-info,0x2d4d28f6fb4,133,0,3031,C0O0C4O3031,,
code-creation,JS,10,253291,0x2d4d28f7434,196, node:internal/fs/read/context:1:1,0x2d4d28f6f28,~
code-source-info,0x2d4d28f7434,133,0,3031,C0O0C54O28C60O51C66O63C72O196C75O196C80O120C85O127C91O155C97O248C100O248C105O237C111O309C114O309C119O278C125O293C131O300C137O386C140O386C145O346C151O361C188O2996C190O3011C195O3030,,
code-creation,JS,10,253404,0x2d4d28f77f4,54,ReadFileContext node:internal/fs/read/context:72:14,0x2d4d28f7098,~
code-source-info,0x2d4d28f77f4,133,1637,1926,C0O1665C1O1673C5O1691C6O1705C10O1723C11O1733C15O1743C17O1757C21O1774C22O1787C26O1800C27O1812C31O1825C32O1834C36O1844C38O1858C42O1875C43O1884C47O1897C48O1909C53O1925,,
code-creation,JS,10,253467,0x2d4d28f8094,9,isInt32 node:internal/validators:43:17,0x1d9b7242ce8,~
code-source-info,0x2d4d28f8094,15,1127,1172,C0O1140C2O1164C5O1153C8O1169,,
code-creation,JS,10,253513,0x2d4d28f81bc,65,checkAborted node:fs:350:22,0x1d9b72739d0,~
code-source-info,0x2d4d28f81bc,56,9314,9472,C0O9338C7O9348C16O9366C18O9379C23O9390C38O9416C51O9375C57O9366C61O9435C62O9447C63O9456C64O9469,,
code-creation,JS,10,253810,0x2d4d28f83e4,75,readFileAfterOpen node:fs:304:27,0x1d9b7273920,~
code-source-info,0x2d4d28f83e4,56,8111,8379,C0O8147C5O8161C9O8185C14O8185C19O8205C20O8212C21O8223C23O8234C27O8257C32O8257C38O8281C40O8296C44O8320C46O8332C50O8346C55O8354C68O8354C74O8378,,
code-creation,JS,10,254016,0x2d4d28f8624,162,readFileAfterStat node:fs:320:27,0x1d9b7273978,~
code-source-info,0x2d4d28f8624,56,8409,9289,C0O8448C5O8462C9O8491C14O8491C19O8502C20O8747C25O8780C28O8762C40O8796C47O8760C54O8810C56O8821C58O8819C63O8842C70O8848C77O8901C82O8901C87O8912C91O8934C92O8943C97O9115C99O9131C105O9158C107O9175C110O9182C115O9182C120O9173C137O9251C145O9251C150O9262C151O9279C156O9279C161O9288,,
code-creation,JS,10,254088,0x2d4d28f880c,34,isFileType node:fs:210:20,0x1d9b72736e8,~
code-source-info,0x2d4d28f880c,56,5481,5729,C0O5618C2O5623C6O5631C10O5666C15O5673C20O5690C22O5705C24O5703C30O5713C33O5726,,
code-creation,JS,10,254139,0x2d4d28f8b6c,33,allocUnsafeSlow node:buffer:411:50,0x1d9b7252d58,~
code-source-info,0x2d4d28f8b6c,24,12376,12471,C0O12388C12O12420C18O12388C23O12436C28O12443C32O12468,,
code-creation,JS,10,254212,0x2d4d28f8d2c,213,read node:internal/fs/read/context:85:7,0x2d4d28f70f0,~
code-source-info,0x2d4d28f8d2c,133,1936,2632,C0O1950C2O1967C4O1984C6O2008C13O2014C22O2046C29O2066C34O2077C39O2102C49O2108C62O2062C68O2046C73O2121C74O2143C80O2148C85O2164C90O2180C97O2196C100O2180C106O2234C108O2253C111O2299C113O2311C119O2356C124O2385C129O2397C136O2414C139O2442C144O2454C148O2447C152O2406C158O2486C163O2486C169O2512C171O2527C175O2553C177O2565C181O2580C186O2590C206O2580C212O2631,,
code-creation,JS,10,254511,0x2d4d28f91fc,136,readFileAfterRead node:internal/fs/read/context:25:27,0x2d4d28f6fe8,~
code-source-info,0x2d4d28f91fc,133,443,973,C0O486C5O500C9O529C14O529C19O540C20O546C27O561C30O558C34O589C39O605C43O593C49O623C54O645C59O645C65O683C71O688C76O779C78O793C80O789C85O841C91O858C96O865C103O865C110O893C115O920C120O893C125O958C130O958C135O972,,
code-creation,JS,10,254592,0x2d4d28f943c,73,close node:internal/fs/read/context:112:8,0x2d4d28f7148,~
code-source-info,0x2d4d28f943c,133,2643,2989,C0O2665C6O2684C9O2692C19O2692C25O2814C26O2821C27O2848C32O2848C38O2874C40O2889C44O2916C46O2928C50O2941C52O2950C56O2964C61O2975C66O2964C72O2988,,
code-creation,JS,10,254901,0x2d4d28f9784,183,readFileAfterClose node:internal/fs/read/context:46:28,0x2d4d28f7040,~
code-source-info,0x2d4d28f9784,133,1004,1595,C0O1036C5O1073C10O1099C12O1122C20O1129C22O1139C24O1155C27O1187C32O1155C38O1146C42O1193C46O1222C52O1227C57O1241C62O1257C67O1272C72O1289C77O1257C86O1317C91O1331C95O1321C100O1361C105O1368C112O1385C117O1368C126O1425C131O1452C137O1485C142O1502C147O1485C156O1476C166O1537C169O1544C173O1558C174O1569C176O1569C182O1594,,
code-creation,JS,10,255037,0x2d4d28f99ac,162,toString node:buffer:811:46,0x1d9b7254ea0,~
code-source-info,0x2d4d28f99ac,24,24769,25361,C0O24769C2O24811C8O24818C13O24844C20O24862C25O24844C31O24870C32O24898C37O24911C38O24921C43O24932C48O24951C50O24961C55O24974C57O24984C58O24998C65O25015C71O25044C76O25056C83O25080C90O25095C92O25103C97O25118C99O25128C100O25134C104O25179C109O25179C115O25201C116O25219C119O25219C124O25248C126O25276C133O25282C138O25276C139O25334C156O25334C161O25358,,
code-creation,JS,10,255197,0x2d4d28f9c3c,499,getEncodingOps node:buffer:706:24,0x1d9b7254ce8,~
code-source-info,0x2d4d28f9c3c
code-creation,JS,10,255333,0x2d4d28fa01c,12,slice node:buffer:621:12,0x1d9b72536a0,~
code-source-info,0x2d4d28fa01c,24,18019,18065,C0O18044C5O18044C11O18065,,
code-creation,JS,10,255391,0x2d4d28fa12c,91,onread node:internal/repl/history:94:18,0x2d4d28e1128,~
code-source-info,0x2d4d28fa12c,128,2665,2928,C0O2684C4O2702C7O2709C11O2720C12O2735C16O2754C23O2769C35O2818C43O2769C48O2767C54O2853C59O2866C63O2886C70O2889C84O2889C90O2927,,
code-creation,RegExp,3,255483,0x7ff734390300,940,[\\n\\r]+
code-creation,JS,10,255815,0x2d4d28fa45c,52,onhandle node:internal/repl/history:108:20,0x2d4d28e1180,~
code-source-info,0x2d4d28fa45c,128,2951,3343,C0O2951C9O2969C13O2987C18O2994C22O3005C23O3018C30O3021C40O3031C45O3021C51O3342,,
code-creation,JS,10,255885,0x2d4d28fa5cc,104,ftruncate node:fs:1105:19,0x1d9b7274308,~
code-source-info,0x2d4d28fa5cc,56,29470,29774,C16O29499C22O29537C25O29558C27O29575C35O29575C40O29607C47O29613C53O29633C56O29644C61O29685C66O29685C72O29709C74O29724C78O29739C83O29747C97O29747C103O29773,,
code-creation,JS,10,255950,0x2d4d28fa774,151, node:internal/validators:93:3,0x1d9b7243068,~
code-source-info,0x2d4d28fa774,15,2512,2900,C12O2532C25O2562C32O2596C38O2634C54O2640C59O2634C60O2694C65O2699C71O2730C87O2736C92O2730C93O2790C95O2800C102O2815C107O2829C117O2868C130O2881C143O2835C148O2829C150O2899,,
code-creation,JS,10,256209,0x2d4d28fa994,93, node:internal/repl/history:112:26,0x2d4d28fa3a0,~
code-source-info,0x2d4d28fa994,128,3039,3336,C0O3057C7O3077C11O3091C16O3096C29O3096C35O3123C40O3128C53O3128C59O3205C64O3210C77O3210C83O3314C88O3314C92O3335,,
code-creation,JS,10,256308,0x2d4d28fabb4,102,flushHistory node:internal/repl/history:137:24,0x2d4d28e1238,~
code-source-info,0x2d4d28fabb4,128,3586,3838,C0O3596C4O3602C10O3615C16O3637C20O3645C26O3660C27O3667C28O3680C29O3688C31O3721C41O3745C50O3754C53O3757C58O3721C64O3768C71O3771C79O3782C95O3771C101O3837,,
code-creation,JS,10,256427,0x2d4d28fae44,405,write node:fs:825:15,0x1d9b7273fd0,~
code-source-info,0x2d4d28fae
code-creation,JS,10,256522,0x2d4d28fb1e4,37, node:internal/fs/utils:912:60,0x1d9b725d578,~
code-source-info,0x2d4d28fb1e4,28,26725,26938,C0O26748C6O26787C11O26818C16O26847C29O26793C34O26787C36O26937,,
code-creation,JS,10,256571,0x2d4d28fb36c,65, node:internal/validators:405:42,0x1d9b7243678,~
code-source-info,0x2d4d28fb36c,15,11941,12261,C0O11993C5O11993C10O12045C15O12058C17O12081C24O12101C29O12105C34O12119C47O12243C57O12125C62O12119C64O12260,,
code-creation,JS,10,256775,0x2d4d28fb49c,22,wrapper node:fs:826:19,0x2d4d28fad08,~
code-source-info,0x2d4d28fb49c,56,22080,22216,C0O22175C8O22189C15O22175C21O22215,,
code-creation,JS,10,256831,0x2d4d28fb5bc,77,onwritten node:internal/repl/history:148:21,0x2d4d28e1290,~
code-source-info,0x2d4d28fb5bc,128,3862,4099,C0O3881C4O3889C10O3903C16O3925C17O3933C19O3949C22O3949C27O3980C34O3997C39O4005C42O3997C46O3995C50O4020C53O4030C59O4052C62O4057C70O4057C76O4098,,
code-creation,JS,10,256906,0x2d4d28fb7a4,95,onceWrapper node:events:628:21,0x1d9b7250270,~
code-source-info,0x2d4d28fb7a4,23,18894,19146,C0O18894C2O18912C8O18931C13O18938C18O18958C23O18969C28O18938C34O18983C35O18994C39O19021C45O19028C50O19054C55O19063C60O19073C65O19063C70O19081C71O19099C76O19108C81O19119C86O19108C92O19138C94O19145,,
code-creation,JS,10,256964,0x2d4d28fb914,33, node:internal/repl/history:118:41,0x2d4d28fa8c0,~
code-source-info,0x2d4d28fb914,128,3239,3304,C0O3253C5O3258C10O3258C14O3277C26O3277C32O3303,,
code-creation,JS,10,257003,0x2d4d28fba24,43,resume node:internal/readline/interface:546:9,0x66313f46d0,~
code-source-info,0x2d4d28fba24,122,14949,15085,C0O14969C6O14977C7O14984C8O14995C13O15001C18O15001C22O15016C23O15028C27O15047C35O15047C40O15068C42O15080,,
code-creation,JS,10,257089,0x2d4d28fbc3c,40, node:internal/main/repl:44:45,0x125aa7b3ad8,~
code-source-info,0x2d4d28fbc3c,79,1357,1657,C0O1357C9O1381C13O1401C15O1401C16O1428C19O1433C32O1433C39O1656,,
tick,0x7ffdb20322f4,259286,0,0x0,8
tick,0x7ffdb20322f4,274746,0,0x0,8
tick,0x7ffdb20322f4,290713,0,0x0,8
tick,0x7ffdb20322f4,306736,0,0x0,8
tick,0x7ffdb20322f4,322702,0,0x0,8
tick,0x7ffdb20322f4,338224,0,0x0,8
tick,0x7ffdb20322f4,354270,0,0x0,8
tick,0x7ffdb20322f4,370264,0,0x0,8
tick,0x7ffdb20322f4,385254,0,0x0,8
tick,0x7ffdb20322f4,401284,0,0x0,8
tick,0x7ffdb20322f4,416231,0,0x0,8
tick,0x7ffdb20322f4,432323,0,0x0,8
tick,0x7ffdb20322f4,447768,0,0x0,8
tick,0x7ffdb20322f4,463764,0,0x0,8
tick,0x7ffdb20322f4,479770,0,0x0,8
tick,0x7ffdb20322f4,495817,0,0x0,8
tick,0x7ffdb20322f4,511801,0,0x0,8
tick,0x7ffdb20322f4,527845,0,0x0,8
tick,0x7ffdb20322f4,543355,0,0x0,8
tick,0x7ffdb20322f4,559347,0,0x0,8
tick,0x7ffdb20322f4,575333,0,0x0,8
tick,0x7ffdb20322f4,591313,0,0x0,8
tick,0x7ffdb20322f4,607320,0,0x0,8
tick,0x7ffdb20322f4,623391,0,0x0,8
tick,0x7ffdb20322f4,638879,0,0x0,8
tick,0x7ffdb20322f4,654864,0,0x0,8
tick,0x7ffdb20322f4,670925,0,0x0,8
tick,0x7ffdb20322f4,686912,0,0x0,8
tick,0x7ffdb20322f4,701953,0,0x0,8
tick,0x7ffdb20322f4,716900,0,0x0,8
tick,0x7ffdb20322f4,732917,0,0x0,8
tick,0x7ffdb20322f4,748498,0,0x0,8
tick,0x7ffdb20322f4,764498,0,0x0,8
tick,0x7ffdb20322f4,780582,0,0x0,8
tick,0x7ffdb20322f4,796500,0,0x0,8
tick,0x7ffdb20322f4,811660,0,0x0,8
tick,0x7ffdb20322f4,827033,0,0x0,8
tick,0x7ffdb20322f4,842466,0,0x0,8
tick,0x7ffdb20322f4,858465,0,0x0,8
tick,0x7ffdb20322f4,874491,0,0x0,8
tick,0x7ffdb20322f4,890533,0,0x0,8
tick,0x7ffdb20322f4,906474,0,0x0,8
tick,0x7ffdb20322f4,922512,0,0x0,8
tick,0x7ffdb20322f4,938111,0,0x0,8
tick,0x7ffdb20322f4,954118,0,0x0,8
tick,0x7ffdb20322f4,970096,0,0x0,8
tick,0x7ffdb20322f4,986079,0,0x0,8
tick,0x7ffdb20322f4,1002078,0,0x0,8
tick,0x7ffdb20322f4,1018102,0,0x0,8
tick,0x7ffdb20322f4,1034675,0,0x0,8
tick,0x7ffdb20322f4,1050703,0,0x0,8
tick,0x7ffdb20322f4,1066705,0,0x0,8
tick,0x7ffdb20322f4,1082722,0,0x0,8
tick,0x7ffdb20322f4,1098705,0,0x0,8
tick,0x7ffdb20322f4,1114715,0,0x0,8
tick,0x7ffdb20322f4,1130708,0,0x0,8
tick,0x7ffdb20322f4,1146214,0,0x0,8
tick,0x7ffdb20322f4,1161223,0,0x0,8
tick,0x7ffdb20322f4,1176199,0,0x0,8
tick,0x7ffdb20322f4,1192145,0,0x0,8
tick,0x7ffdb20322f4,1208166,0,0x0,8
tick,0x7ffdb20322f4,1224762,0,0x0,8
tick,0x7ffdb20322f4,1239844,0,0x0,8
tick,0x7ffdb20322f4,1255804,0,0x0,8
tick,0x7ffdb20322f4,1271773,0,0x0,8
tick,0x7ffdb20322f4,1286775,0,0x0,8
tick,0x7ffdb20322f4,1301775,0,0x0,8
tick,0x7ffdb20322f4,1317784,0,0x0,8
tick,0x7ffdb20322f4,1333832,0,0x0,8
tick,0x7ffdb20322f4,1349386,0,0x0,8
tick,0x7ffdb20322f4,1365447,0,0x0,8
tick,0x7ffdb20322f4,1381387,0,0x0,8
tick,0x7ffdb20322f4,1397395,0,0x0,8
tick,0x7ffdb20322f4,1413418,0,0x0,8
tick,0x7ffdb20322f4,1429424,0,0x0,8
tick,0x7ffdb20322f4,1444998,0,0x0,8
tick,0x7ffdb20322f4,1461034,0,0x0,8
tick,0x7ffdb20322f4,1476982,0,0x0,8
tick,0x7ffdb20322f4,1492979,0,0x0,8
tick,0x7ffdb20322f4,1508973,0,0x0,8
tick,0x7ffdb20322f4,1524561,0,0x0,8
tick,0x7ffdb20322f4,1539673,0,0x0,8
tick,0x7ffdb20322f4,1554805,0,0x0,8
tick,0x7ffdb20322f4,1570141,0,0x0,8
tick,0x7ffdb20322f4,1585370,0,0x0,8
tick,0x7ffdb20322f4,1600576,0,0x0,8
tick,0x7ffdb20322f4,1615743,0,0x0,8
tick,0x7ffdb20322f4,1630947,0,0x0,8
tick,0x7ffdb20322f4,1646199,0,0x0,8
tick,0x7ffdb20322f4,1662141,0,0x0,8
tick,0x7ffdb20322f4,1677148,0,0x0,8
tick,0x7ffdb20322f4,1693149,0,0x0,8
tick,0x7ffdb20322f4,1708151,0,0x0,8
tick,0x7ffdb20322f4,1724220,0,0x0,8
tick,0x7ffdb20322f4,1739712,0,0x0,8
tick,0x7ffdb20322f4,1755725,0,0x0,8
tick,0x7ffdb20322f4,1771735,0,0x0,8
tick,0x7ffdb20322f4,1786774,0,0x0,8
tick,0x7ffdb20322f4,1801787,0,0x0,8
tick,0x7ffdb20322f4,1818012,0,0x0,8
tick,0x7ffdb20322f4,1833827,0,0x0,8
tick,0x7ffdb20322f4,1849382,0,0x0,8
tick,0x7ffdb20322f4,1865362,0,0x0,8
tick,0x7ffdb20322f4,1881350,0,0x0,8
tick,0x7ffdb20322f4,1897413,0,0x0,8
tick,0x7ffdb20322f4,1913383,0,0x0,8
tick,0x7ffdb20322f4,1928373,0,0x0,8
tick,0x7ffdb20322f4,1943863,0,0x0,8
tick,0x7ffdb20322f4,1959887,0,0x0,8
tick,0x7ffdb20322f4,1975608,0,0x0,8
tick,0x7ffdb20322f4,1991609,0,0x0,8
tick,0x7ffdb20322f4,2007615,0,0x0,8
tick,0x7ffdb20322f4,2023665,0,0x0,8
tick,0x7ffdb20322f4,2039187,0,0x0,8
tick,0x7ffdb20322f4,2055175,0,0x0,8
tick,0x7ffdb20322f4,2071408,0,0x0,8
tick,0x7ffdb20322f4,2087231,0,0x0,8
tick,0x7ffdb20322f4,2102238,0,0x0,8
tick,0x7ffdb20322f4,2117235,0,0x0,8
tick,0x7ffdb20322f4,2133263,0,0x0,8
tick,0x7ffdb20322f4,2148938,0,0x0,8
tick,0x7ffdb20322f4,2164793,0,0x0,8
tick,0x7ffdb20322f4,2180850,0,0x0,8
tick,0x7ffdb20322f4,2196826,0,0x0,8
tick,0x7ffdb20322f4,2212831,0,0x0,8
tick,0x7ffdb20322f4,2228930,0,0x0,8
tick,0x7ffdb20322f4,2244429,0,0x0,8
tick,0x7ffdb20322f4,2260490,0,0x0,8
tick,0x7ffdb20322f4,2275412,0,0x0,8
tick,0x7ffdb20322f4,2291421,0,0x0,8
tick,0x7ffdb20322f4,2306400,0,0x0,8
tick,0x7ffdb20322f4,2322390,0,0x0,8
tick,0x7ffdb20322f4,2337982,0,0x0,8
tick,0x7ffdb20322f4,2353801,0,0x0,8
tick,0x7ffdb20322f4,2369772,0,0x0,8
tick,0x7ffdb20322f4,2384837,0,0x0,8
tick,0x7ffdb20322f4,2399763,0,0x0,8
tick,0x7ffdb20322f4,2415768,0,0x0,8
tick,0x7ffdb20322f4,2431812,0,0x0,8
tick,0x7ffdb20322f4,2447357,0,0x0,8
tick,0x7ffdb20322f4,2463390,0,0x0,8
tick,0x7ffdb20322f4,2479359,0,0x0,8
tick,0x7ffdb20322f4,2495415,0,0x0,8
tick,0x7ffdb20322f4,2511415,0,0x0,8
tick,0x7ffdb20322f4,2527408,0,0x0,8
tick,0x7ffdb20322f4,2542956,0,0x0,8
tick,0x7ffdb20322f4,2557964,0,0x0,8
tick,0x7ffdb20322f4,2573993,0,0x0,8
tick,0x7ffdb20322f4,2589039,0,0x0,8
tick,0x7ffdb20322f4,2605020,0,0x0,8
tick,0x7ffdb20322f4,2621086,0,0x0,8
tick,0x7ffdb20322f4,2636577,0,0x0,8
tick,0x7ffdb20322f4,2652613,0,0x0,8
tick,0x7ffdb20322f4,2668743,0,0x0,8
tick,0x7ffdb20322f4,2684697,0,0x0,8
tick,0x7ffdb20322f4,2700669,0,0x0,8
tick,0x7ffdb20322f4,2716610,0,0x0,8
tick,0x7ffdb20322f4,2732676,0,0x0,8
tick,0x7ffdb20322f4,2748286,0,0x0,8
tick,0x7ffdb20322f4,2764217,0,0x0,8
tick,0x7ffdb20322f4,2780277,0,0x0,8
tick,0x7ffdb20322f4,2796217,0,0x0,8
tick,0x7ffdb20322f4,2812209,0,0x0,8
tick,0x7ffdb20322f4,2828201,0,0x0,8
tick,0x7ffdb20322f4,2843756,0,0x0,8
tick,0x7ffdb20322f4,2859779,0,0x0,8
tick,0x7ffdb20322f4,2875796,0,0x0,8
tick,0x7ffdb20322f4,2891757,0,0x0,8
tick,0x7ffdb20322f4,2907743,0,0x0,8
tick,0x7ffdb20322f4,2923820,0,0x0,8
tick,0x7ffdb20322f4,2939325,0,0x0,8
tick,0x7ffdb20322f4,2955309,0,0x0,8
tick,0x7ffdb20322f4,2971334,0,0x0,8
tick,0x7ffdb20322f4,2987388,0,0x0,8
tick,0x7ffdb20322f4,3003344,0,0x0,8
tick,0x7ffdb20322f4,3019406,0,0x0,8
tick,0x7ffdb20322f4,3035366,0,0x0,8
tick,0x7ffdb20322f4,3050912,0,0x0,8
tick,0x7ffdb20322f4,3066926,0,0x0,8
tick,0x7ffdb20322f4,3082969,0,0x0,8
tick,0x7ffdb20322f4,3098968,0,0x0,8
tick,0x7ffdb20322f4,3115079,0,0x0,8
tick,0x7ffdb20322f4,3131055,0,0x0,8
tick,0x7ffdb20322f4,3146537,0,0x0,8
tick,0x7ffdb20322f4,3162610,0,0x0,8
tick,0x7ffdb20322f4,3178533,0,0x0,8
tick,0x7ffdb20322f4,3194573,0,0x0,8
tick,0x7ffdb20322f4,3210581,0,0x0,8
tick,0x7ffdb20322f4,3226573,0,0x0,8
tick,0x7ffdb20322f4,3242161,0,0x0,8
tick,0x7ffdb20322f4,3257138,0,0x0,8
tick,0x7ffdb20322f4,3273162,0,0x0,8
tick,0x7ffdb20322f4,3289201,0,0x0,8
tick,0x7ffdb20322f4,3305068,0,0x0,8
tick,0x7ffdb20322f4,3321116,0,0x0,8
tick,0x7ffdb20322f4,3336695,0,0x0,8
tick,0x7ffdb20322f4,3352801,0,0x0,8
tick,0x7ffdb20322f4,3368745,0,0x0,8
tick,0x7ffdb20322f4,3384796,0,0x0,8
tick,0x7ffdb20322f4,3400758,0,0x0,8
tick,0x7ffdb20322f4,3416718,0,0x0,8
tick,0x7ffdb20322f4,3432741,0,0x0,8
tick,0x7ffdb20322f4,3448473,0,0x0,8
tick,0x7ffdb20322f4,3464298,0,0x0,8
tick,0x7ffdb20322f4,3480301,0,0x0,8
tick,0x7ffdb20322f4,3496356,0,0x0,8
tick,0x7ffdb20322f4,3512269,0,0x0,8
tick,0x7ffdb20322f4,3528328,0,0x0,8
tick,0x7ffdb20322f4,3543889,0,0x0,8
tick,0x7ffdb20322f4,3559903,0,0x0,8
tick,0x7ffdb20322f4,3575254,0,0x0,8
tick,0x7ffdb20322f4,3591209,0,0x0,8
tick,0x7ffdb20322f4,3607195,0,0x0,8
tick,0x7ffdb20322f4,3623241,0,0x0,8
tick,0x7ffdb20322f4,3638804,0,0x0,8
tick,0x7ffdb20322f4,3654837,0,0x0,8
tick,0x7ffdb20322f4,3670792,0,0x0,8
tick,0x7ffdb20322f4,3686146,0,0x0,8
tick,0x7ffdb20322f4,3701676,0,0x0,8
tick,0x7ffdb20322f4,3717321,0,0x0,8
tick,0x7ffdb20322f4,3732587,0,0x0,8
tick,0x7ffdb20322f4,3747360,0,0x0,8
tick,0x7ffdb20322f4,3762646,0,0x0,8
tick,0x7ffdb20322f4,3777928,0,0x0,8
tick,0x7ffdb20322f4,3793646,0,0x0,8
tick,0x7ffdb20322f4,3809626,0,0x0,8
tick,0x7ffdb20322f4,3825693,0,0x0,8
tick,0x7ffdb20322f4,3841193,0,0x0,8
tick,0x7ffdb20322f4,3856215,0,0x0,8
tick,0x7ffdb20322f4,3872146,0,0x0,8
tick,0x7ffdb20322f4,3887209,0,0x0,8
tick,0x7ffdb20322f4,3903222,0,0x0,8
tick,0x7ffdb20322f4,3919220,0,0x0,8
tick,0x7ffdb20322f4,3935211,0,0x0,8
tick,0x7ffdb20322f4,3950740,0,0x0,8
tick,0x7ffdb20322f4,3966083,0,0x0,8
tick,0x7ffdb20322f4,3982175,0,0x0,8
tick,0x7ffdb20322f4,3997554,0,0x0,8
tick,0x7ffdb20322f4,4013554,0,0x0,8
tick,0x7ffdb20322f4,4029568,0,0x0,8
tick,0x7ffdb20322f4,4045049,0,0x0,8
tick,0x7ffdb20322f4,4061061,0,0x0,8
tick,0x7ffdb20322f4,4077102,0,0x0,8
tick,0x7ffdb20322f4,4093073,0,0x0,8
tick,0x7ffdb20322f4,4109106,0,0x0,8
tick,0x7ffdb20322f4,4125075,0,0x0,8
tick,0x7ffdb20322f4,4140661,0,0x0,8
tick,0x7ffdb20322f4,4156576,0,0x0,8
tick,0x7ffdb20322f4,4172587,0,0x0,8
tick,0x7ffdb20322f4,4188576,0,0x0,8
tick,0x7ffdb20322f4,4204593,0,0x0,8
tick,0x7ffdb20322f4,4220635,0,0x0,8
tick,0x7ffdb20322f4,4237098,0,0x0,8
tick,0x7ffdb20322f4,4253150,0,0x0,8
tick,0x7ffdb20322f4,4269102,0,0x0,8
tick,0x7ffdb20322f4,4285216,0,0x0,8
tick,0x7ffdb20322f4,4300187,0,0x0,8
tick,0x7ffdb20322f4,4315180,0,0x0,8
tick,0x7ffdb20322f4,4331223,0,0x0,8
tick,0x7ffdb20322f4,4346824,0,0x0,8
tick,0x7ffdb20322f4,4362875,0,0x0,8
tick,0x7ffdb20322f4,4378863,0,0x0,8
tick,0x7ffdb20322f4,4394889,0,0x0,8
tick,0x7ffdb20322f4,4410870,0,0x0,8
tick,0x7ffdb20322f4,4426826,0,0x0,8
tick,0x7ffdb20322f4,4442427,0,0x0,8
tick,0x7ffdb20322f4,4458416,0,0x0,8
tick,0x7ffdb20322f4,4473426,0,0x0,8
tick,0x7ffdb20322f4,4488349,0,0x0,8
tick,0x7ffdb20322f4,4504427,0,0x0,8
tick,0x7ffdb20322f4,4520408,0,0x0,8
tick,0x7ffdb20322f4,4536416,0,0x0,8
tick,0x7ffdb20322f4,4552067,0,0x0,8
tick,0x7ffdb20322f4,4568010,0,0x0,8
tick,0x7ffdb20322f4,4584092,0,0x0,8
tick,0x7ffdb20322f4,4599691,0,0x0,8
tick,0x7ffdb20322f4,4615719,0,0x0,8
tick,0x7ffdb20322f4,4631733,0,0x0,8
tick,0x7ffdb20322f4,4646866,0,0x0,8
tick,0x7ffdb20322f4,4661836,0,0x0,8
tick,0x7ffdb20322f4,4677932,0,0x0,8
tick,0x7ffdb20322f4,4692966,0,0x0,8
tick,0x7ffdb20322f4,4707895,0,0x0,8
tick,0x7ffdb20322f4,4722895,0,0x0,8
tick,0x7ffdb20322f4,4739134,0,0x0,8
tick,0x7ffdb20322f4,4755162,0,0x0,8
tick,0x7ffdb20322f4,4771418,0,0x0,8
tick,0x7ffdb20322f4,4787259,0,0x0,8
tick,0x7ffdb20322f4,4803181,0,0x0,8
tick,0x7ffdb20322f4,4820982,0,0x0,8
tick,0x7ffdb20322f4,4834182,0,0x0,8
tick,0x7ffdb20322f4,4849421,0,0x0,8
tick,0x7ffdb20322f4,4865405,0,0x0,8
tick,0x7ffdb20322f4,4881420,0,0x0,8
tick,0x7ffdb20322f4,4897417,0,0x0,8
tick,0x7ffdb20322f4,4913441,0,0x0,8
tick,0x7ffdb20322f4,4928418,0,0x0,8
tick,0x7ffdb20322f4,4943897,0,0x0,8
tick,0x7ffdb20322f4,4959928,0,0x0,8
tick,0x7ffdb20322f4,4975937,0,0x0,8
tick,0x7ffdb20322f4,4991938,0,0x0,8
tick,0x7ffdb20322f4,5007932,0,0x0,8
tick,0x7ffdb20322f4,5024081,0,0x0,8
tick,0x7ffdb20322f4,5039547,0,0x0,8
tick,0x7ffdb20322f4,5055525,0,0x0,8
tick,0x7ffdb20322f4,5071549,0,0x0,8
tick,0x7ffdb20322f4,5087554,0,0x0,8
tick,0x7ffdb20322f4,5103553,0,0x0,8
tick,0x7ffdb20322f4,5119618,0,0x0,8
tick,0x7ffdb20322f4,5135541,0,0x0,8
tick,0x7ffdb20322f4,5151086,0,0x0,8
tick,0x7ffdb20322f4,5166997,0,0x0,8
tick,0x7ffdb20322f4,5183034,0,0x0,8
tick,0x7ffdb20322f4,5199037,0,0x0,8
tick,0x7ffdb20322f4,5215183,0,0x0,8
tick,0x7ffdb20322f4,5231174,0,0x0,8
tick,0x7ffdb20322f4,5246632,0,0x0,8
tick,0x7ffdb20322f4,5262648,0,0x0,8
tick,0x7ffdb20322f4,5278631,0,0x0,8
tick,0x7ffdb20322f4,5294636,0,0x0,8
tick,0x7ffdb20322f4,5310627,0,0x0,8
tick,0x7ffdb20322f4,5326677,0,0x0,8
tick,0x7ffdb20322f4,5342378,0,0x0,8
tick,0x7ffdb20322f4,5358057,0,0x0,8
tick,0x7ffdb20322f4,5374086,0,0x0,8
tick,0x7ffdb20322f4,5390120,0,0x0,8
tick,0x7ffdb20322f4,5406068,0,0x0,8
tick,0x7ffdb20322f4,5422040,0,0x0,8
tick,0x7ffdb20322f4,5438615,0,0x0,8
tick,0x7ffdb20322f4,5454630,0,0x0,8
tick,0x7ffdb20322f4,5470585,0,0x0,8
tick,0x7ffdb20322f4,5486588,0,0x0,8
tick,0x7ffdb20322f4,5502590,0,0x0,8
tick,0x7ffdb20322f4,5518619,0,0x0,8
tick,0x7ffdb20322f4,5534642,0,0x0,8
tick,0x7ffdb20322f4,5550140,0,0x0,8
tick,0x7ffdb20322f4,5566093,0,0x0,8
tick,0x7ffdb20322f4,5582107,0,0x0,8
tick,0x7ffdb20322f4,5598078,0,0x0,8
tick,0x7ffdb20322f4,5614043,0,0x0,8
tick,0x7ffdb20322f4,5629290,0,0x0,8
tick,0x7ffdb20322f4,5644819,0,0x0,8
tick,0x7ffdb20322f4,5660842,0,0x0,8
tick,0x7ffdb20322f4,5676897,0,0x0,8
tick,0x7ffdb20322f4,5692831,0,0x0,8
tick,0x7ffdb20322f4,5708815,0,0x0,8
tick,0x7ffdb20322f4,5724924,0,0x0,8
tick,0x7ffdb20322f4,5740327,0,0x0,8
tick,0x7ffdb20322f4,5756335,0,0x0,8
tick,0x7ffdb20322f4,5772406,0,0x0,8
tick,0x7ffdb20322f4,5788282,0,0x0,8
tick,0x7ffdb20322f4,5804297,0,0x0,8
tick,0x7ffdb20322f4,5820324,0,0x0,8
tick,0x7ffdb20322f4,5835934,0,0x0,8
tick,0x7ffdb20322f4,5851434,0,0x0,8
tick,0x7ffdb20322f4,5866949,0,0x0,8
tick,0x7ffdb20322f4,5881969,0,0x0,8
tick,0x7ffdb20322f4,5897481,0,0x0,8
tick,0x7ffdb20322f4,5912468,0,0x0,8
tick,0x7ffdb20322f4,5927599,0,0x0,8
tick,0x7ffdb20322f4,5942359,0,0x0,8
tick,0x7ffdb20322f4,5958204,0,0x0,8
tick,0x7ffdb20322f4,5974177,0,0x0,8
tick,0x7ffdb20322f4,5990195,0,0x0,8
tick,0x7ffdb20322f4,6005637,0,0x0,8
tick,0x7ffdb20322f4,6021595,0,0x0,8
tick,0x7ffdb20322f4,6037762,0,0x0,8
tick,0x7ffdb20322f4,6053219,0,0x0,8
tick,0x7ffdb20322f4,6068243,0,0x0,8
tick,0x7ffdb20322f4,6084257,0,0x0,8
tick,0x7ffdb20322f4,6100205,0,0x0,8
tick,0x7ffdb20322f4,6116196,0,0x0,8
tick,0x7ffdb20322f4,6132226,0,0x0,8
tick,0x7ffdb20322f4,6147783,0,0x0,8
tick,0x7ffdb20322f4,6163777,0,0x0,8
tick,0x7ffdb20322f4,6178749,0,0x0,8
tick,0x7ffdb20322f4,6193773,0,0x0,8
tick,0x7ffdb20322f4,6209785,0,0x0,8
tick,0x7ffdb20322f4,6224744,0,0x0,8
tick,0x7ffdb20322f4,6240293,0,0x0,8
tick,0x7ffdb20322f4,6256359,0,0x0,8
tick,0x7ffdb20322f4,6271496,0,0x0,8
tick,0x7ffdb20322f4,6286328,0,0x0,8
tick,0x7ffdb20322f4,6302292,0,0x0,8
tick,0x7ffdb20322f4,6318279,0,0x0,8
tick,0x7ffdb20322f4,6334322,0,0x0,8
tick,0x7ffdb20322f4,6349836,0,0x0,8
tick,0x7ffdb20322f4,6365840,0,0x0,8
tick,0x7ffdb20322f4,6380877,0,0x0,8
tick,0x7ffdb20322f4,6395827,0,0x0,8
tick,0x7ffdb20322f4,6411865,0,0x0,8
tick,0x7ffdb20322f4,6427948,0,0x0,8
tick,0x7ffdb20322f4,6443446,0,0x0,8
tick,0x7ffdb20322f4,6459420,0,0x0,8
tick,0x7ffdb20322f4,6474390,0,0x0,8
tick,0x7ffdb20322f4,6490488,0,0x0,8
tick,0x7ffdb20322f4,6505434,0,0x0,8
tick,0x7ffdb20322f4,6520419,0,0x0,8
tick,0x7ffdb20322f4,6536460,0,0x0,8
tick,0x7ffdb20322f4,6551963,0,0x0,8
tick,0x7ffdb20322f4,6567979,0,0x0,8
tick,0x7ffdb20322f4,6584038,0,0x0,8
tick,0x7ffdb20322f4,6600073,0,0x0,8
tick,0x7ffdb20322f4,6614974,0,0x0,8
tick,0x7ffdb20322f4,6630005,0,0x0,8
tick,0x7ffdb20322f4,6645597,0,0x0,8
tick,0x7ffdb20322f4,6661595,0,0x0,8
tick,0x7ffdb20322f4,6677565,0,0x0,8
tick,0x7ffdb20322f4,6693630,0,0x0,8
tick,0x7ffdb20322f4,6709606,0,0x0,8
tick,0x7ffdb20322f4,6724618,0,0x0,8
tick,0x7ffdb20322f4,6740168,0,0x0,8
tick,0x7ffdb20322f4,6755175,0,0x0,8
tick,0x7ffdb20322f4,6771474,0,0x0,8
tick,0x7ffdb20322f4,6786257,0,0x0,8
tick,0x7ffdb20322f4,6802305,0,0x0,8
tick,0x7ffdb20322f4,6818283,0,0x0,8
tick,0x7ffdb20322f4,6834223,0,0x0,8
tick,0x7ffdb20322f4,6849741,0,0x0,8
tick,0x7ffdb20322f4,6864729,0,0x0,8
tick,0x7ffdb20322f4,6880768,0,0x0,8
tick,0x7ffdb20322f4,6895727,0,0x0,8
tick,0x7ffdb20322f4,6910800,0,0x0,8
tick,0x7ffdb20322f4,6926775,0,0x0,8
tick,0x7ffdb20322f4,6942426,0,0x0,8
tick,0x7ffdb20322f4,6958330,0,0x0,8
tick,0x7ffdb20322f4,6974402,0,0x0,8
tick,0x7ffdb20322f4,6989369,0,0x0,8
tick,0x7ffdb20322f4,7005352,0,0x0,8
tick,0x7ffdb20322f4,7020362,0,0x0,8
tick,0x7ffdb20322f4,7035363,0,0x0,8
tick,0x7ffdb20322f4,7050941,0,0x0,8
tick,0x7ffdb20322f4,7066937,0,0x0,8
tick,0x7ffdb20322f4,7082944,0,0x0,8
tick,0x7ffdb20322f4,7098976,0,0x0,8
tick,0x7ffdb20322f4,7115005,0,0x0,8
tick,0x7ffdb20322f4,7129972,0,0x0,8
tick,0x7ffdb20322f4,7145560,0,0x0,8
tick,0x7ffdb20322f4,7160560,0,0x0,8
tick,0x7ffdb20322f4,7176591,0,0x0,8
tick,0x7ffdb20322f4,7191527,0,0x0,8
tick,0x7ffdb20322f4,7206816,0,0x0,8
tick,0x7ffdb20322f4,7222849,0,0x0,8
tick,0x7ffdb20322f4,7239495,0,0x0,8
tick,0x7ffdb20322f4,7255455,0,0x0,8
code-creation,JS,10,7261872,0x2d4d28fbf94,359,onStreamRead node:internal/stream_base_commons:167:22,0x10fd4192b68,~
code-source-info,0x2d4d28fbf94,106,4286,6272,C0O4319C7O4335C9O4334C13O4375C16O4399C18O4404C20O4403C24O4424C26O4431C28O4430C32O4444C36O4453C37O4463C42O4478C48O4500C50O4514C52O4543C54O4550C56O4549C60O4565C62O4587C64O4604C66O4603C70O4614C80O4631C82O4665C84O4672C86O4671C90O4692C92O4740C96O4759C101O4763C107O4797C115O4813C121O4875C126O4891C128O4890C132O4931C148O4931C154O4998C159O4998C165O5021C169O5043C170O5058C174O5086C180O5127C185O5127C190O5148C192O5175C199O5187C210O5183C216O5175C221O5240C223O5251C224O5262C225O5272C230O5286C231O5293C232O5615C234O5629C236O5625C241O5774C248O5786C259O5782C265O5774C270O5823C271O5830C272O5896C277O5911C283O5930C285O5941C287O5940C292O5964C294O5970C298O5985C304O6006C306O6017C308O6016C313O6047C323O6063C327O6047C333O6232C340O6232C345O6256C352O6256C358O6271,,
code-creation,JS,10,7262000,0x2d4d28fc2b4,5,get node:net:689:16,0x9b20b493c0,~
code-source-info,0x2d4d28fc2b4,86,18958,18997,C0O18980C4O18992,,
code-creation,JS,10,7262044,0x2d4d28fc39c,35,get node:internal/streams/duplex:159:8,0x9b20b63808,~
code-source-info,0x2d4d28fc39c,95,5523,5738,C0O5544C6O5590C12O5631C13O5644C14O5673C19O5688C25O5706C30O5721C34O5731,,
code-creation,JS,10,7262092,0x2d4d28fc49c,22,get node:internal/streams/readable:130:8,0x9b20b76d78,~
code-source-info,0x2d4d28fc49c,97,3940,3981,C0O3945C4O3958C6O3957C12O3966C17O3973C21O3979,,
code-creation,JS,10,7262143,0x2d4d28fc5ac,83,Readable.push node:internal/streams/readable:385:35,0x9b20b6bf00,~
code-source-info,0x2d4d28fc5ac,97,12296,12564,C0O12319C8O12319C13O12365C18O12384C20O12398C22O12397C28O12408C30O12406C35O12421C55O12434C77O12500C82O12561,,
code-creation,JS,10,7262245,0x2d4d28fc7cc,427,readableAddChunkPushByteMode node:internal/streams/readable:461:38,0x9b20b6b028,~
code-source-info,0x2d4d28fc7cc
code-creation,JS,10,7262403,0x2d4d28fcbc4,282,addChunk node:internal/streams/readable:548:18,0x9b20b6b130,~
code-source-info,0x2d4d28fcbc
code-creation,JS,10,7262555,0x2d4d28fcfd4,471,onData node:internal/readline/emitKeypressEvents:46:18,0x2d4d28d0b70,~
code-source-info,0x2d4d28fcfd
code-creation,JS,10,7262657,0x2d4d28fd3b4,86,write node:string_decoder:94:47,0x9b20b749a0,~
code-source-info,0x2d4d28fd3b4,100,3262,3644,C0O3273C6O3307C8O3318C9O3322C14O3327C20O3356C38O3362C43O3356C44O3513C46O3523C48O3522C53O3547C63O3553C68O3547C69O3600C76O3618C80O3607C85O3641,,
code-creation,JS,10,7262736,0x2d4d28fd534,63,clearTimeout node:timers:187:22,0x1d9b7266418,~
script-source,39,node:timers,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  MathTrunc\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  SymbolDispose\x2C\x0d\n  SymbolToPrimitive\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst binding = internalBinding('timers');\x0d\nconst {\x0d\n  immediateInfo\x2C\x0d\n} = binding;\x0d\nconst L = require('internal/linkedlist');\x0d\nconst {\x0d\n  async_id_symbol\x2C\x0d\n  Timeout\x2C\x0d\n  Immediate\x2C\x0d\n  decRefCount\x2C\x0d\n  immediateInfoFields: {\x0d\n    kCount\x2C\x0d\n    kRefCount\x2C\x0d\n  }\x2C\x0d\n  kRefed\x2C\x0d\n  kHasPrimitive\x2C\x0d\n  getTimerDuration\x2C\x0d\n  timerListMap\x2C\x0d\n  timerListQueue\x2C\x0d\n  immediateQueue\x2C\x0d\n  active\x2C\x0d\n  unrefActive\x2C\x0d\n  insert\x2C\x0d\n} = require('internal/timers');\x0d\nconst {\x0d\n  promisify: { custom: customPromisify }\x2C\x0d\n  deprecate\x2C\x0d\n} = require('internal/util');\x0d\nlet debug = require('internal/util/debuglog').debuglog('timer'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { validateFunction } = require('internal/validators');\x0d\n\x0d\nlet timersPromises;\x0d\nlet timers;\x0d\n\x0d\nconst {\x0d\n  destroyHooksExist\x2C\x0d\n  // The needed emit*() functions.\x0d\n  emitDestroy\x2C\x0d\n} = require('internal/async_hooks');\x0d\n\x0d\n// This stores all the known timer async ids to allow users to clearTimeout and\x0d\n// clearInterval using those ids\x2C to match the spec and the rest of the web\x0d\n// platform.\x0d\nconst knownTimersById = { __proto__: null };\x0d\n\x0d\n// Remove a timer. Cancels the timeout and resets the relevant timer properties.\x0d\nfunction unenroll(item) {\x0d\n  if (item._destroyed)\x0d\n    return;\x0d\n\x0d\n  item._destroyed = true;\x0d\n\x0d\n  if (item[kHasPrimitive])\x0d\n    delete knownTimersById[item[async_id_symbol]];\x0d\n\x0d\n  // Fewer checks may be possible\x2C but these cover everything.\x0d\n  if (destroyHooksExist() && item[async_id_symbol] !== undefined)\x0d\n    emitDestroy(item[async_id_symbol]);\x0d\n\x0d\n  L.remove(item);\x0d\n\x0d\n  // We only delete refed lists because unrefed ones are incredibly likely\x0d\n  // to come from http and be recreated shortly after.\x0d\n  // TODO: Long-term this could instead be handled by creating an internal\x0d\n  // clearTimeout that makes it clear that the list should not be deleted.\x0d\n  // That function could then be used by http and other similar modules.\x0d\n  if (item[kRefed]) {\x0d\n    // Compliment truncation during insert().\x0d\n    const msecs = MathTrunc(item._idleTimeout);\x0d\n    const list = timerListMap[msecs];\x0d\n    if (list !== undefined && L.isEmpty(list)) {\x0d\n      debug('unenroll: list empty');\x0d\n      timerListQueue.removeAt(list.priorityQueuePosition);\x0d\n      delete timerListMap[list.msecs];\x0d\n    }\x0d\n\x0d\n    decRefCount();\x0d\n  }\x0d\n\x0d\n  // If active is called later\x2C then we want to make sure not to insert again\x0d\n  item._idleTimeout = -1;\x0d\n}\x0d\n\x0d\n// Make a regular object able to act as a timer by setting some properties.\x0d\n// This function does not start the timer\x2C see `active()`.\x0d\n// Using existing objects as timers slightly reduces object overhead.\x0d\nfunction enroll(item\x2C msecs) {\x0d\n  msecs = getTimerDuration(msecs\x2C 'msecs');\x0d\n\x0d\n  // If this item was already in a list somewhere\x0d\n  // then we should unenroll it from that\x0d\n  if (item._idleNext) unenroll(item);\x0d\n\x0d\n  L.init(item);\x0d\n  item._idleTimeout = msecs;\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Schedules the execution of a one-time `callback`\x0d\n * after `after` milliseconds.\x0d\n * @param {Function} callback\x0d\n * @param {number} [after]\x0d\n * @param {any} [arg1]\x0d\n * @param {any} [arg2]\x0d\n * @param {any} [arg3]\x0d\n * @returns {Timeout}\x0d\n */\x0d\nfunction setTimeout(callback\x2C after\x2C arg1\x2C arg2\x2C arg3) {\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  let i\x2C args;\x0d\n  switch (arguments.length) {\x0d\n    // fast cases\x0d\n    case 1:\x0d\n    case 2:\x0d\n      break;\x0d\n    case 3:\x0d\n      args = [arg1];\x0d\n      break;\x0d\n    case 4:\x0d\n      args = [arg1\x2C arg2];\x0d\n      break;\x0d\n    default:\x0d\n      args = [arg1\x2C arg2\x2C arg3];\x0d\n      for (i = 5; i < arguments.length; i++) {\x0d\n        // Extend array dynamically\x2C makes .apply run much faster in v6.0.0\x0d\n        args[i - 2] = arguments[i];\x0d\n      }\x0d\n      break;\x0d\n  }\x0d\n\x0d\n  const timeout = new Timeout(callback\x2C after\x2C args\x2C false\x2C true);\x0d\n  insert(timeout\x2C timeout._idleTimeout);\x0d\n\x0d\n  return timeout;\x0d\n}\x0d\n\x0d\nObjectDefineProperty(setTimeout\x2C customPromisify\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!timersPromises)\x0d\n      timersPromises = require('timers/promises');\x0d\n    return timersPromises.setTimeout;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n/**\x0d\n * Cancels a timeout.\x0d\n * @param {Timeout | string | number} timer\x0d\n * @returns {void}\x0d\n */\x0d\nfunction clearTimeout(timer) {\x0d\n  if (timer && timer._onTimeout) {\x0d\n    timer._onTimeout = null;\x0d\n    unenroll(timer);\x0d\n    return;\x0d\n  }\x0d\n  if (typeof timer === 'number' || typeof timer === 'string') {\x0d\n    const timerInstance = knownTimersById[timer];\x0d\n    if (timerInstance !== undefined) {\x0d\n      timerInstance._onTimeout = null;\x0d\n      unenroll(timerInstance);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Schedules repeated execution of `callback`\x0d\n * every `repeat` milliseconds.\x0d\n * @param {Function} callback\x0d\n * @param {number} [repeat]\x0d\n * @param {any} [arg1]\x0d\n * @param {any} [arg2]\x0d\n * @param {any} [arg3]\x0d\n * @returns {Timeout}\x0d\n */\x0d\nfunction setInterval(callback\x2C repeat\x2C arg1\x2C arg2\x2C arg3) {\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  let i\x2C args;\x0d\n  switch (arguments.length) {\x0d\n    // fast cases\x0d\n    case 1:\x0d\n    case 2:\x0d\n      break;\x0d\n    case 3:\x0d\n      args = [arg1];\x0d\n      break;\x0d\n    case 4:\x0d\n      args = [arg1\x2C arg2];\x0d\n      break;\x0d\n    default:\x0d\n      args = [arg1\x2C arg2\x2C arg3];\x0d\n      for (i = 5; i < arguments.length; i++) {\x0d\n        // Extend array dynamically\x2C makes .apply run much faster in v6.0.0\x0d\n        args[i - 2] = arguments[i];\x0d\n      }\x0d\n      break;\x0d\n  }\x0d\n\x0d\n  const timeout = new Timeout(callback\x2C repeat\x2C args\x2C true\x2C true);\x0d\n  insert(timeout\x2C timeout._idleTimeout);\x0d\n\x0d\n  return timeout;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Cancels an interval.\x0d\n * @param {Timeout | string | number} timer\x0d\n * @returns {void}\x0d\n */\x0d\nfunction clearInterval(timer) {\x0d\n  // clearTimeout and clearInterval can be used to clear timers created from\x0d\n  // both setTimeout and setInterval\x2C as specified by HTML Living Standard:\x0d\n  // https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-setinterval\x0d\n  clearTimeout(timer);\x0d\n}\x0d\n\x0d\nTimeout.prototype.close = function() {\x0d\n  clearTimeout(this);\x0d\n  return this;\x0d\n};\x0d\n\x0d\nTimeout.prototype[SymbolDispose] = function() {\x0d\n  clearTimeout(this);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Coerces a `Timeout` to a primitive.\x0d\n * @returns {number}\x0d\n */\x0d\nTimeout.prototype[SymbolToPrimitive] = function() {\x0d\n  const id = this[async_id_symbol];\x0d\n  if (!this[kHasPrimitive]) {\x0d\n    this[kHasPrimitive] = true;\x0d\n    knownTimersById[id] = this;\x0d\n  }\x0d\n  return id;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Schedules the immediate execution of `callback`\x0d\n * after I/O events' callbacks.\x0d\n * @param {Function} callback\x0d\n * @param {any} [arg1]\x0d\n * @param {any} [arg2]\x0d\n * @param {any} [arg3]\x0d\n * @returns {Immediate}\x0d\n */\x0d\nfunction setImmediate(callback\x2C arg1\x2C arg2\x2C arg3) {\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  let i\x2C args;\x0d\n  switch (arguments.length) {\x0d\n    // fast cases\x0d\n    case 1:\x0d\n      break;\x0d\n    case 2:\x0d\n      args = [arg1];\x0d\n      break;\x0d\n    case 3:\x0d\n      args = [arg1\x2C arg2];\x0d\n      break;\x0d\n    default:\x0d\n      args = [arg1\x2C arg2\x2C arg3];\x0d\n      for (i = 4; i < arguments.length; i++) {\x0d\n        // Extend array dynamically\x2C makes .apply run much faster in v6.0.0\x0d\n        args[i - 1] = arguments[i];\x0d\n      }\x0d\n      break;\x0d\n  }\x0d\n\x0d\n  return new Immediate(callback\x2C args);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(setImmediate\x2C customPromisify\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!timersPromises)\x0d\n      timersPromises = require('timers/promises');\x0d\n    return timersPromises.setImmediate;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n/**\x0d\n * Cancels an immediate.\x0d\n * @param {Immediate} immediate\x0d\n * @returns {void}\x0d\n */\x0d\nfunction clearImmediate(immediate) {\x0d\n  if (!immediate || immediate._destroyed)\x0d\n    return;\x0d\n\x0d\n  immediateInfo[kCount]--;\x0d\n  immediate._destroyed = true;\x0d\n\x0d\n  if (immediate[kRefed] && --immediateInfo[kRefCount] === 0) {\x0d\n    // We need to use the binding as the receiver for fast API calls.\x0d\n    binding.toggleImmediateRef(false);\x0d\n  }\x0d\n  immediate[kRefed] = null;\x0d\n\x0d\n  if (destroyHooksExist() && immediate[async_id_symbol] !== undefined) {\x0d\n    emitDestroy(immediate[async_id_symbol]);\x0d\n  }\x0d\n\x0d\n  immediate._onImmediate = null;\x0d\n\x0d\n  immediateQueue.remove(immediate);\x0d\n}\x0d\n\x0d\nImmediate.prototype[SymbolDispose] = function() {\x0d\n  clearImmediate(this);\x0d\n};\x0d\n\x0d\nmodule.exports = timers = {\x0d\n  setTimeout\x2C\x0d\n  clearTimeout\x2C\x0d\n  setImmediate\x2C\x0d\n  clearImmediate\x2C\x0d\n  setInterval\x2C\x0d\n  clearInterval\x2C\x0d\n  _unrefActive: deprecate(\x0d\n    unrefActive\x2C\x0d\n    'timers._unrefActive() is deprecated.' +\x0d\n    ' Please use timeout.refresh() instead.'\x2C\x0d\n    'DEP0127')\x2C\x0d\n  active: deprecate(\x0d\n    active\x2C\x0d\n    'timers.active() is deprecated. Please use timeout.refresh() instead.'\x2C\x0d\n    'DEP0126')\x2C\x0d\n  unenroll: deprecate(\x0d\n    unenroll\x2C\x0d\n    'timers.unenroll() is deprecated. Please use clearTimeout instead.'\x2C\x0d\n    'DEP0096')\x2C\x0d\n  enroll: deprecate(\x0d\n    enroll\x2C\x0d\n    'timers.enroll() is deprecated. Please use setTimeout instead.'\x2C\x0d\n    'DEP0095')\x2C\x0d\n};\x0d\n\x0d\nObjectDefineProperties(timers\x2C {\x0d\n  promises: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      timersPromises ??= require('timers/promises');\x0d\n      return timersPromises;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n});\x0d\n
code-source-info,0x2d4d28fd534,39,5451,5809,C0O5464C4O5483C10O5502C11O5519C15O5532C18O5532C22O5554C23O5561C24O5570C36O5659C43O5674C47O5688C49O5730C50O5755C54O5770C57O5770C62O5808,,
code-creation,JS,10,7263234,0x2d4d28fe2b4,42,charLengthAt node:internal/readline/utils:50:22,0x66313ecfc8,~
code-source-info,0x2d4d28fe2b4,120,1292,1540,C0O1314C7O1321C12O1441C14O1450C15O1459C20O1466C28O1504C30O1501C41O1537,,
code-creation,JS,10,7263360,0x2d4d28fe59c,92,onkeypress node:internal/readline/interface:263:22,0x2d4d28c3ff8,~
code-source-info,0x2d4d28fe59c,122,7537,7914,C0O7553C9O7558C11O7557C15O7568C21O7583C25O7598C31O7795C38O7826C45O7795C51O7847C57O7854C68O7870C73O7881C80O7886C82O7885C86O7899C91O7913,,
code-creation,JS,10,7263406,0x2d4d28fe6ec,5,get node:readline:346:8,0x66313e8b90,~
code-source-info,0x2d4d28fe6ec,118,8470,8511,C0O8494C4O8504,,
code-creation,JS,10,7263494,0x2d4d28fe95c,405,REPLServer.self._ttyWrite node:repl:1007:20,0xa5da63aee0,~
code-source-info,0x2d4d28fe95c
code-creation,JS,10,7263646,0x2d4d28fed44,564,clearPreview node:internal/repl/utils:174:24,0x2d4d28dd8e0,~
code-source-info,0x2d4d28fed
code-creation,JS,10,7263803,0x2d4d28ff22c,386,reverseSearch node:internal/repl/utils:705:25,0x2d4d28db7d0,~
code-source-info,0x2d4d28ff22c
code-creation,JS,10,7264081,0xa5da63d7fc,2287, node:internal/readline/interface:1056:14,0x66313f5018,~
code-source-info,0xa5da63d7fc
code-creation,JS,10,7264516,0xa5da63e6fc,5,get node:readline:256:8,0x66313e8668,~
code-source-info,0xa5da63e6fc,118,6923,6968,C0O6947C4O6961,,
code-creation,JS,10,7264581,0xa5da63e814,233, node:internal/readline/interface:622:18,0x66313f47d8,~
code-source-info,0xa5da63e
code-creation,JS,10,7264654,0xa5da63ea6c,16, node:internal/readline/interface:420:16,0x66313f4468,~
code-source-info,0xa5da63ea6c,122,11620,11696,C0O11648C2O11653C4O11652C8O11670C15O11695,,
code-creation,JS,10,7264723,0xa5da63ebbc,62, node:internal/readline/interface:890:21,0x66313f4d58,~
code-source-info,0xa5da63ebbc,122,25751,25925,C0O25773C7O25801C9O25800C20O25816C26O25822C30O25777C38O25843C40O25832C45O25875C52O25899C56O25875C61O25924,,
code-creation,JS,11,7264806,0x7ff734388780,964,getStringWidth node:internal/util/inspect:2324:43,0x1d9b724d3b0,^
code-source-info,0x7ff734388780,21,80549,81134,,,
code-creation,JS,11,7264832,0x7ff734388b80,260,lookupPublicResource node:internal/async_hooks:177:30,0x1d9b7241d18,^
code-source-info,0x7ff734388b80,14,7042,7370,,,
code-creation,JS,11,7264852,0x7ff734388cc0,116,get node:domain:64:16,0xa5da606c38,^
code-source-info,0x7ff734388cc0,126,2284,2317,,,
code-creation,JS,11,7264878,0x7ff734388d80,860,init node:domain:75:7,0xa5da606d58,^
code-source-info,0x7ff734388d80,126,2496,3464,,,
code-creation,JS,11,7264898,0x7ff734389100,156,destroy node:domain:116:10,0xa5da606e60,^
code-source-info,0x7ff734389100,126,4194,4255,,,
code-creation,JS,11,7264917,0x7ff7343891c0,316,before node:domain:97:9,0xa5da606db0,^
code-source-info,0x7ff7343891c0,126,3475,3961,,,
code-creation,JS,11,7264935,0x7ff734389340,316,after node:domain:108:8,0xa5da606e08,^
code-source-info,0x7ff734389340,126,3971,4182,,,
code-creation,JS,11,7264955,0x7ff7343894c0,104,isEmpty node:internal/fixed_queue:67:10,0x1d9b7264880,^
code-source-info,0x7ff7343894c0,37,3150,3197,,,
code-creation,JS,11,7264981,0x7ff734389580,1232,callbackTrampoline node:internal/async_hooks:118:28,0x1d9b7241bb8,^
code-source-info,0x7ff734389580,14,5308,5850,,,
code-creation,JS,11,7265000,0x7ff734389a80,108,SafeIterator node:internal/per_context/primordials:333:16,0xa4fec31e00,^
code-source-info,0x7ff734389a80,6,9855,9917,,,
code-creation,JS,10,7265251,0xa5da63f1a4,53,showCompletionPreview node:internal/repl/utils:225:33,0x2d4d28dd728,~
code-source-info,0xa5da63f1a4,127,7255,9112,C0O7255C12O7284C20O7308C24O7333C28O7333C30O7366C35O7371C40O7381C45O7371C52O9111,,
code-creation,JS,10,7265308,0xa5da63f34c,70,completer node:repl:786:21,0xa5da63a6c8,~
code-source-info,0xa5da63f34c,114,27696,27828,C0O27714C14O27737C26O27762C36O27773C45O27791C50O27791C59O27818C63O27714C69O27827,,
code-creation,JS,10,7265682,0x66313fc744,1397,complete node:repl:1321:18,0x21de9b550e8,~
code-source-info,0x66313fc744,114,43817,55041,C0O43817C27O43927C29O43927C31O43938C32O43938C34O43950C35O43950C37O44022C44O44029C50O44079C52O44079C54O44092C56O44139C69O44152C77O44212C91O44249C94O44265C99O44249C104O44212C109O44282C111O44300C114O44293C116O44310C119O44325C125O44342C127O44349C131O44380C140O44413C143O44393C151O44476C153O44494C156O44487C158O44504C160O44511C162O44539C181O44589C183O44594C190O44589C192O44631C199O44647C204O44655C209O44663C214O44631C218O44631C220O44699C230O44717C235O44699C240O44699C242O44814C258O44814C263O44877C265O44883C269O44908C272O44921C279O44936C284O44956C288O44962C294O44993C301O45008C306O45029C310O45035C316O45060C332O45064C339O45129C351O45146C356O45146C371O45179C374O45200C386O45238C391O45200C396O45255C405O45286C408O45296C413O45255C418O45328C425O45350C430O45328C435O46567C440O46577C446O46596C461O46596C468O46664C482O46701C489O46715C492O46664C499O46749C508O46782C511O46762C519O46843C521O46861C524O46854C526O46871C528O46878C530O46906C549O46956C551O46961C558O46956C560O47046C571O47057C574O47046C578O47046C580O47180C590O47198C595O47180C600O47180C602O47242C615O47242C620O47296C622O47302C626O47327C629O47338C636O47353C641O47373C645O47379C651O47410C658O47425C663O47446C667O47452C673O47477C689O47481C696O47546C708O47563C713O47563C728O47596C740O47631C745O47604C750O47657C757O47679C762O47657C767O48945C772O48955C778O48974C793O48974C800O49042C814O49079C821O49093C824O49042C831O49127C840O49160C843O49140C851O49216C857O49249C862O49291C869O49255C877O49276C884O49886C890O49893C900O49916C906O49958C910O49965C913O49952C917O49916C924O49971C937O50009C946O50029C949O50009C963O49999C967O50078C973O50085C980O50095C982O50111C987O50111C990O50144C991O50151C992O50175C994O50175C996O50184C998O50195C1002O50209C1012O50213C1019O50258C1034O50265C1039O50263C1043O50322C1049O50329C1054O50358C1064O50358C1070O50399C1077O50408C1081O50406C1085O50440C1095O50447C1100O50445C1102O50538C1106O50598C1127O50693C1129O50692C1133O50661C1138O50598C1143O50739C1148O50814C1155O50778C1162O50835C1177O50900C1182O50835C1187O50755C1191O50981C1196O51011C1201O50981C1206O51038C1212O51221C1223O51260C1229O51221C1234O51293C1244O51293C1249O51355C1256O51366C1261O51374C1271O51374C1275O51415C1280O51415C1283O51448C1284O51455C1285O51485C1287O51485C1289O51495C1300O51499C1307O51544C1322O51551C1327O51549C1329O51593C1331O51602C1333O51645C1335O51645C1337O51671C1342O51680C1353O51709C1358O51729C1368O51738C1383O51709C1388O53063C1389O53070C1390O53081C1393O53088C1396O53113,,
code-creation,JS,10,7266016,0x66313fd2bc,221,completionGroupsLoaded node:repl:1568:34,0xa5da63f650,~
code-source-info,0x66313fd2bc,114,53248,55038,C0O53248C11O53338C18O53359C28O53369C42O53414C44O53414C46O53449C57O53482C60O53449C64O53449C66O53498C78O53520C83O53498C88O54012C90O54029C96O54086C98O54086C100O54159C107O54159C112O54159C114O54179C117O54189C125O54189C130O54351C142O54373C147O54351C152O54907C156O54922C162O54926C167O54943C177O54943C181O54991C197O55007C208O55020C214O54991C220O55037,,
code-creation,JS,10,7266097,0x66313fd614,81, node:repl:1595:45,0x66313fd170,~
code-source-info,0x66313fd614,114,54391,54848,C0O54411C7O54430C12O54411C17O54489C22O54499C27O54512C34O54534C39O54512C44O54750C47O54764C54O54769C59O54793C68O54815C74O54793C80O54847,,
code-creation,JS,10,7266139,0x66313fd78c,14, node:repl:1596:33,0x66313fd4d8,~
code-source-info,0x66313fd78c,114,54437,54463,C0O54448C2O54450C13O54463,,
code-creation,JS,10,7266178,0x66313fd8d4,49, node:repl:1598:36,0x66313fd530,~
code-source-info,0x66313fd8d4,114,54541,54698,C0O54563C5O54578C10O54578C17O54603C26O54625C29O54603C34O54657C37O54667C42O54667C48O54697,,
code-creation,JS,10,7266281,0x66313fdac4,496, node:internal/repl/utils:230:26,0xa5da63f0e8,~
code-source-info,0x66313fdac
code-creation,JS,10,7266416,0x66313fdeac,125,commonPrefix node:internal/readline/utils:381:22,0x66313ed078,~
code-source-info,0x66313fdeac,120,12271,12679,C0O12298C6O12305C11O12319C13O12329C14O12350C21O12357C26O12371C27O12385C30O12389C31O12413C38O12432C41O12432C46O12413C51O12478C52O12484C56O12518C60O12525C63O12510C67O12547C69O12558C73O12552C78O12578C80O12585C86O12596C89O12589C94O12610C107O12617C112O12649C113O12567C118O12534C122O12665C124O12676,,
code-creation,JS,10,7266531,0x66313fe34c,116,getInputPreview node:internal/repl/utils:298:27,0x2d4d28dd7d8,~
code-source-info,0x66313fe34c,127,9595,12339,C0O9595C13O9737C26O9741C37O9792C46O9792C57O9832C61O9850C66O9862C76O9856C78O9879C84O9887C92O9907C109O9907C115O12338,,
code-creation,JS,10,7266602,0x66313fe584,136,sendInspectorCommand node:internal/util/inspector:48:30,0x1d9b726b700,~
script-source,47,node:internal/util/inspector,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSome\x2C\x0d\n  ArrayPrototypePushApply\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeWeakMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { validatePort } = require('internal/validators');\x0d\nconst permission = require('internal/process/permission');\x0d\n\x0d\nconst kMinPort = 1024;\x0d\nconst kMaxPort = 65535;\x0d\nconst kInspectArgRegex = /--inspect(?:-brk|-port)?|--debug-port/;\x0d\nconst kInspectMsgRegex = /Debugger listening on ws:\\/\\/\\[?(.+?)\\]?:(\\d+)\\/|For help\x2C see: https:\\/\\/nodejs\\.org\\/en\\/docs\\/inspector|Debugger attached|Waiting for the debugger to disconnect\\.\\.\\./;\x0d\n\x0d\nconst _isUsingInspector = new SafeWeakMap();\x0d\nfunction isUsingInspector(execArgv = process.execArgv) {\x0d\n  if (!_isUsingInspector.has(execArgv)) {\x0d\n    _isUsingInspector.set(execArgv\x2C\x0d\n                          ArrayPrototypeSome(execArgv\x2C (arg) => RegExpPrototypeExec(kInspectArgRegex\x2C arg) !== null) ||\x0d\n      RegExpPrototypeExec(kInspectArgRegex\x2C process.env.NODE_OPTIONS) !== null);\x0d\n  }\x0d\n  return _isUsingInspector.get(execArgv);\x0d\n}\x0d\n\x0d\nlet debugPortOffset = 1;\x0d\nfunction getInspectPort(inspectPort) {\x0d\n  if (typeof inspectPort === 'function') {\x0d\n    inspectPort = inspectPort();\x0d\n  } else if (inspectPort == null) {\x0d\n    inspectPort = process.debugPort + debugPortOffset;\x0d\n    if (inspectPort > kMaxPort)\x0d\n      inspectPort = inspectPort - kMaxPort + kMinPort - 1;\x0d\n    debugPortOffset++;\x0d\n  }\x0d\n  validatePort(inspectPort);\x0d\n\x0d\n  return inspectPort;\x0d\n}\x0d\n\x0d\nlet session;\x0d\nfunction sendInspectorCommand(cb\x2C onError) {\x0d\n  const { hasInspector } = internalBinding('config');\x0d\n  if (!hasInspector) return onError();\x0d\n  // Do not preview when the permission model is enabled\x0d\n  // because this feature require access to the inspector\x2C\x0d\n  // which is unavailable in this case.\x0d\n  if (permission.isEnabled()) return onError();\x0d\n  const inspector = require('inspector');\x0d\n  if (session === undefined) session = new inspector.Session();\x0d\n  session.connect();\x0d\n  try {\x0d\n    return cb(session);\x0d\n  } finally {\x0d\n    session.disconnect();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction isInspectorMessage(string) {\x0d\n  return isUsingInspector() && RegExpPrototypeExec(kInspectMsgRegex\x2C string) !== null;\x0d\n}\x0d\n\x0d\n// Create a special require function for the inspector command line API\x0d\nfunction installConsoleExtensions(commandLineApi) {\x0d\n  if (commandLineApi.require) { return; }\x0d\n  const { tryGetCwd } = require('internal/process/execution');\x0d\n  const CJSModule = require('internal/modules/cjs/loader').Module;\x0d\n  const { makeRequireFunction } = require('internal/modules/helpers');\x0d\n  const consoleAPIModule = new CJSModule('<inspector console>');\x0d\n  const cwd = tryGetCwd();\x0d\n  consoleAPIModule.paths = [];\x0d\n  ArrayPrototypePushApply(consoleAPIModule.paths\x2C CJSModule._nodeModulePaths(cwd));\x0d\n  ArrayPrototypePushApply(consoleAPIModule.paths\x2C CJSModule.globalPaths);\x0d\n  commandLineApi.require = makeRequireFunction(consoleAPIModule);\x0d\n}\x0d\n\x0d\n// Wrap a console implemented by Node.js with features from the VM inspector\x0d\nfunction wrapConsole(consoleFromNode) {\x0d\n  const { consoleCall\x2C console: consoleFromVM } = internalBinding('inspector');\x0d\n  for (const key of ObjectKeys(consoleFromVM)) {\x0d\n    // If global console has the same method as inspector console\x2C\x0d\n    // then wrap these two methods into one. Native wrapper will preserve\x0d\n    // the original stack.\x0d\n    if (ObjectPrototypeHasOwnProperty(consoleFromNode\x2C key)) {\x0d\n      consoleFromNode[key] = FunctionPrototypeBind(\x0d\n        consoleCall\x2C\x0d\n        consoleFromNode\x2C\x0d\n        consoleFromVM[key]\x2C\x0d\n        consoleFromNode[key]\x2C\x0d\n      );\x0d\n      ObjectDefineProperty(consoleFromNode[key]\x2C 'name'\x2C {\x0d\n        __proto__: null\x2C\x0d\n        value: key\x2C\x0d\n      });\x0d\n    } else {\x0d\n      // Add additional console APIs from the inspector\x0d\n      consoleFromNode[key] = consoleFromVM[key];\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  getInspectPort\x2C\x0d\n  installConsoleExtensions\x2C\x0d\n  isInspectorMessage\x2C\x0d\n  isUsingInspector\x2C\x0d\n  sendInspectorCommand\x2C\x0d\n  wrapConsole\x2C\x0d\n};\x0d\n
code-source-info,0x66313fe584,47,1576,2108,C0O1620C6O1620C11O1603C16O1650C18O1676C21O1686C22O1849C27O1864C32O1864C38O1884C41O1894C42O1916C48O1916C53O1941C59O1992C64O1978C69O1976C71O2006C74O2014C79O2014C86O2039C89O2046C105O2079C108O2087C113O2087C135O2107,,
code-creation,Eval,10,7267042,0x66313ff68c,5, node:inspector:1:1,0x66313ff2d0,~
script-source,134,node:inspector,'use strict';\x0d\n\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n  JSONStringify\x2C\x0d\n  SafeMap\x2C\x0d\n  SymbolDispose\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_INSPECTOR_ALREADY_ACTIVATED\x2C\x0d\n  ERR_INSPECTOR_ALREADY_CONNECTED\x2C\x0d\n  ERR_INSPECTOR_CLOSED\x2C\x0d\n  ERR_INSPECTOR_COMMAND\x2C\x0d\n  ERR_INSPECTOR_NOT_AVAILABLE\x2C\x0d\n  ERR_INSPECTOR_NOT_CONNECTED\x2C\x0d\n  ERR_INSPECTOR_NOT_ACTIVE\x2C\x0d\n  ERR_INSPECTOR_NOT_WORKER\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst { hasInspector } = internalBinding('config');\x0d\nif (!hasInspector)\x0d\n  throw new ERR_INSPECTOR_NOT_AVAILABLE();\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst { queueMicrotask } = require('internal/process/task_queues');\x0d\nconst {\x0d\n  isUint32\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst { isMainThread } = require('worker_threads');\x0d\nconst { _debugEnd } = internalBinding('process_methods');\x0d\n\x0d\nconst {\x0d\n  Connection\x2C\x0d\n  MainThreadConnection\x2C\x0d\n  open\x2C\x0d\n  url\x2C\x0d\n  isEnabled\x2C\x0d\n  waitForDebugger\x2C\x0d\n  console\x2C\x0d\n} = internalBinding('inspector');\x0d\n\x0d\nclass Session extends EventEmitter {\x0d\n  #connection = null;\x0d\n  #nextId = 1;\x0d\n  #messageCallbacks = new SafeMap();\x0d\n\x0d\n  /**\x0d\n   * Connects the session to the inspector back-end.\x0d\n   * @returns {void}\x0d\n   */\x0d\n  connect() {\x0d\n    if (this.#connection)\x0d\n      throw new ERR_INSPECTOR_ALREADY_CONNECTED('The inspector session');\x0d\n    this.#connection = new Connection((message) => this.#onMessage(message));\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Connects the session to the main thread\x0d\n   * inspector back-end.\x0d\n   * @returns {void}\x0d\n   */\x0d\n  connectToMainThread() {\x0d\n    if (isMainThread)\x0d\n      throw new ERR_INSPECTOR_NOT_WORKER();\x0d\n    if (this.#connection)\x0d\n      throw new ERR_INSPECTOR_ALREADY_CONNECTED('The inspector session');\x0d\n    this.#connection =\x0d\n      new MainThreadConnection(\x0d\n        (message) => queueMicrotask(() => this.#onMessage(message)));\x0d\n  }\x0d\n\x0d\n  #onMessage(message) {\x0d\n    const parsed = JSONParse(message);\x0d\n    try {\x0d\n      if (parsed.id) {\x0d\n        const callback = this.#messageCallbacks.get(parsed.id);\x0d\n        this.#messageCallbacks.delete(parsed.id);\x0d\n        if (callback) {\x0d\n          if (parsed.error) {\x0d\n            return callback(\x0d\n              new ERR_INSPECTOR_COMMAND(parsed.error.code\x2C parsed.error.message)\x2C\x0d\n            );\x0d\n          }\x0d\n\x0d\n          callback(null\x2C parsed.result);\x0d\n        }\x0d\n      } else {\x0d\n        this.emit(parsed.method\x2C parsed);\x0d\n        this.emit('inspectorNotification'\x2C parsed);\x0d\n      }\x0d\n    } catch (error) {\x0d\n      process.emitWarning(error);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Posts a message to the inspector back-end.\x0d\n   * @param {string} method\x0d\n   * @param {Record<unknown\x2C unknown>} [params]\x0d\n   * @param {Function} [callback]\x0d\n   * @returns {void}\x0d\n   */\x0d\n  post(method\x2C params\x2C callback) {\x0d\n    validateString(method\x2C 'method');\x0d\n    if (!callback && typeof params === 'function') {\x0d\n      callback = params;\x0d\n      params = null;\x0d\n    }\x0d\n    if (params) {\x0d\n      validateObject(params\x2C 'params');\x0d\n    }\x0d\n    if (callback) {\x0d\n      validateFunction(callback\x2C 'callback');\x0d\n    }\x0d\n\x0d\n    if (!this.#connection) {\x0d\n      throw new ERR_INSPECTOR_NOT_CONNECTED();\x0d\n    }\x0d\n    const id = this.#nextId++;\x0d\n    const message = { id\x2C method };\x0d\n    if (params) {\x0d\n      message.params = params;\x0d\n    }\x0d\n    if (callback) {\x0d\n      this.#messageCallbacks.set(id\x2C callback);\x0d\n    }\x0d\n    this.#connection.dispatch(JSONStringify(message));\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Immediately closes the session\x2C all pending\x0d\n   * message callbacks will be called with an\x0d\n   * error.\x0d\n   * @returns {void}\x0d\n   */\x0d\n  disconnect() {\x0d\n    if (!this.#connection)\x0d\n      return;\x0d\n    this.#connection.disconnect();\x0d\n    this.#connection = null;\x0d\n    const remainingCallbacks = this.#messageCallbacks.values();\x0d\n    for (const callback of remainingCallbacks) {\x0d\n      process.nextTick(callback\x2C new ERR_INSPECTOR_CLOSED());\x0d\n    }\x0d\n    this.#messageCallbacks.clear();\x0d\n    this.#nextId = 1;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Activates inspector on host and port.\x0d\n * @param {number} [port]\x0d\n * @param {string} [host]\x0d\n * @param {boolean} [wait]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction inspectorOpen(port\x2C host\x2C wait) {\x0d\n  if (isEnabled()) {\x0d\n    throw new ERR_INSPECTOR_ALREADY_ACTIVATED();\x0d\n  }\x0d\n  // inspectorOpen() currently does not typecheck its arguments and adding\x0d\n  // such checks would be a potentially breaking change. However\x2C the native\x0d\n  // open() function requires the port to fit into a 16-bit unsigned integer\x2C\x0d\n  // causing an integer overflow otherwise\x2C so we at least need to prevent that.\x0d\n  if (isUint32(port)) {\x0d\n    validateInt32(port\x2C 'port'\x2C 0\x2C 65535);\x0d\n  }\x0d\n  open(port\x2C host);\x0d\n  if (wait)\x0d\n    waitForDebugger();\x0d\n\x0d\n  return { __proto__: null\x2C [SymbolDispose]() { _debugEnd(); } };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Blocks until a client (existing or connected later)\x0d\n * has sent the `Runtime.runIfWaitingForDebugger`\x0d\n * command.\x0d\n * @returns {void}\x0d\n */\x0d\nfunction inspectorWaitForDebugger() {\x0d\n  if (!waitForDebugger())\x0d\n    throw new ERR_INSPECTOR_NOT_ACTIVE();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  open: inspectorOpen\x2C\x0d\n  close: _debugEnd\x2C\x0d\n  url\x2C\x0d\n  waitForDebugger: inspectorWaitForDebugger\x2C\x0d\n  console\x2C\x0d\n  Session\x2C\x0d\n};\x0d\n
code-source-info,0x66313ff68c,134,0,5156,C0O0C4O5156,,
code-creation,JS,10,7267322,0x66313ffe04,496, node:inspector:1:1,0x66313ff600,~
code-source-info,0x66313ffe04,134,0,5156,C0O0C91O28C97O42C103O60C109O72C115O366C118O366C123O392C128O119C134O155C140O191C146O216C152O242C157O274C163O306C169O335C175O428C178O428C183O411C188O456C190O478C192O484C197O478C198O543C201O543C206O590C209O590C214O571C220O735C223O735C228O643C234O656C240O677C246O695C252O714C258O793C261O793C266O776C272O843C275O843C280O829C286O998C289O998C294O893C300O908C306O933C312O942C317O950C323O964C329O984C393O1053C447O5009C454O5037C460O5062C466O5076C472O5101C478O5130C484O5142C490O5024C495O5155,,
code-creation,JS,10,7267379,0xa5da63fd54,41,Session node:inspector:47:36,0x66313ff9a8,~
code-source-info,0xa5da63fd54,134,1066,3945,C3O1085C12O1104C22O1130C29O1130C40O3945,,
new,MemoryChunk,0xbe69480000,262144
code-creation,Eval,10,7267548,0x2d4d28ffdac,5, node:worker_threads:1:1,0x2d4d28ffc58,~
script-source,135,node:worker_threads,'use strict';\x0d\n\x0d\nconst {\x0d\n  isMainThread\x2C\x0d\n  SHARE_ENV\x2C\x0d\n  resourceLimits\x2C\x0d\n  setEnvironmentData\x2C\x0d\n  getEnvironmentData\x2C\x0d\n  threadId\x2C\x0d\n  Worker\x2C\x0d\n} = require('internal/worker');\x0d\n\x0d\nconst {\x0d\n  MessagePort\x2C\x0d\n  MessageChannel\x2C\x0d\n  moveMessagePortToContext\x2C\x0d\n  receiveMessageOnPort\x2C\x0d\n  BroadcastChannel\x2C\x0d\n} = require('internal/worker/io');\x0d\n\x0d\nconst {\x0d\n  markAsUntransferable\x2C\x0d\n  isMarkedAsUntransferable\x2C\x0d\n} = require('internal/buffer');\x0d\n\x0d\nmodule.exports = {\x0d\n  isMainThread\x2C\x0d\n  MessagePort\x2C\x0d\n  MessageChannel\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  isMarkedAsUntransferable\x2C\x0d\n  moveMessagePortToContext\x2C\x0d\n  receiveMessageOnPort\x2C\x0d\n  resourceLimits\x2C\x0d\n  threadId\x2C\x0d\n  SHARE_ENV\x2C\x0d\n  Worker\x2C\x0d\n  parentPort: null\x2C\x0d\n  workerData: null\x2C\x0d\n  BroadcastChannel\x2C\x0d\n  setEnvironmentData\x2C\x0d\n  getEnvironmentData\x2C\x0d\n};\x0d\n
code-source-info,0x2d4d28ffdac,135,0,786,C0O0C4O786,,
code-creation,JS,10,7267634,0xbe6948115c,191, node:worker_threads:1:1,0x2d4d28ffd20,~
code-source-info,0xbe6948115c,135,0,786,C0O150C3O150C8O28C13O45C18O59C23O78C28O101C33O124C38O137C43O304C46O304C51O192C56O208C61O227C66O256C71O281C76O405C79O405C84O349C89O374C94O436C101O458C107O475C113O491C119O510C125O535C131O564C137O593C143O618C149O637C155O650C161O664C167O717C173O738C179O761C185O451C190O785,,
code-creation,Eval,10,7268081,0xbe694839bc,5, node:internal/worker:1:1,0xbe69482da0,~
script-source,136,node:internal/worker,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  AtomicsAdd\x2C\x0d\n  Float64Array\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  JSONStringify\x2C\x0d\n  MathMax\x2C\x0d\n  ObjectEntries\x2C\x0d\n  Promise\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  TypedArrayPrototypeFill\x2C\x0d\n  Uint32Array\x2C\x0d\n  globalThis: { SharedArrayBuffer }\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst assert = require('internal/assert');\x0d\nconst path = require('path');\x0d\nconst {\x0d\n  internalEventLoopUtilization\x2C\x0d\n} = require('internal/perf/event_loop_utilization');\x0d\n\x0d\nconst errorCodes = require('internal/errors').codes;\x0d\nconst {\x0d\n  ERR_WORKER_NOT_RUNNING\x2C\x0d\n  ERR_WORKER_PATH\x2C\x0d\n  ERR_WORKER_UNSERIALIZABLE_ERROR\x2C\x0d\n  ERR_WORKER_INVALID_EXEC_ARGV\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n} = errorCodes;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\nconst workerIo = require('internal/worker/io');\x0d\nconst {\x0d\n  drainMessagePort\x2C\x0d\n  receiveMessageOnPort\x2C\x0d\n  MessageChannel\x2C\x0d\n  messageTypes\x2C\x0d\n  kPort\x2C\x0d\n  kIncrementsPortRef\x2C\x0d\n  kWaitingStreams\x2C\x0d\n  kStdioWantsMoreDataCallback\x2C\x0d\n  setupPortReferencing\x2C\x0d\n  ReadableWorkerStdio\x2C\x0d\n  WritableWorkerStdio\x2C\x0d\n} = workerIo;\x0d\nconst { deserializeError } = require('internal/error_serdes');\x0d\nconst { fileURLToPath\x2C isURL\x2C pathToFileURL } = require('internal/url');\x0d\nconst { kEmptyObject } = require('internal/util');\x0d\nconst { validateArray\x2C validateString } = require('internal/validators');\x0d\nconst {\x0d\n  throwIfBuildingSnapshot\x2C\x0d\n} = require('internal/v8/startup_snapshot');\x0d\nconst {\x0d\n  ownsProcessState\x2C\x0d\n  isMainThread\x2C\x0d\n  resourceLimits: resourceLimitsRaw\x2C\x0d\n  threadId\x2C\x0d\n  Worker: WorkerImpl\x2C\x0d\n  kMaxYoungGenerationSizeMb\x2C\x0d\n  kMaxOldGenerationSizeMb\x2C\x0d\n  kCodeRangeSizeMb\x2C\x0d\n  kStackSizeMb\x2C\x0d\n  kTotalResourceLimitCount\x2C\x0d\n} = internalBinding('worker');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kPublicPort = Symbol('kPublicPort');\x0d\nconst kDispose = Symbol('kDispose');\x0d\nconst kOnExit = Symbol('kOnExit');\x0d\nconst kOnMessage = Symbol('kOnMessage');\x0d\nconst kOnCouldNotSerializeErr = Symbol('kOnCouldNotSerializeErr');\x0d\nconst kOnErrorMessage = Symbol('kOnErrorMessage');\x0d\nconst kParentSideStdio = Symbol('kParentSideStdio');\x0d\nconst kLoopStartTime = Symbol('kLoopStartTime');\x0d\nconst kIsInternal = Symbol('kIsInternal');\x0d\nconst kIsOnline = Symbol('kIsOnline');\x0d\n\x0d\nconst SHARE_ENV = SymbolFor('nodejs.worker_threads.SHARE_ENV');\x0d\nlet debug = require('internal/util/debuglog').debuglog('worker'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nconst dc = require('diagnostics_channel');\x0d\nconst workerThreadsChannel = dc.channel('worker_threads');\x0d\n\x0d\nlet cwdCounter;\x0d\n\x0d\nconst environmentData = new SafeMap();\x0d\n\x0d\n// SharedArrayBuffers can be disabled with --enable-sharedarraybuffer-per-context.\x0d\nif (isMainThread && SharedArrayBuffer !== undefined) {\x0d\n  cwdCounter = new Uint32Array(new SharedArrayBuffer(4));\x0d\n  const originalChdir = process.chdir;\x0d\n  process.chdir = function(path) {\x0d\n    AtomicsAdd(cwdCounter\x2C 0\x2C 1);\x0d\n    originalChdir(path);\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction setEnvironmentData(key\x2C value) {\x0d\n  if (value === undefined)\x0d\n    environmentData.delete(key);\x0d\n  else\x0d\n    environmentData.set(key\x2C value);\x0d\n}\x0d\n\x0d\nfunction getEnvironmentData(key) {\x0d\n  return environmentData.get(key);\x0d\n}\x0d\n\x0d\nfunction assignEnvironmentData(data) {\x0d\n  if (data === undefined) return;\x0d\n  data.forEach((value\x2C key) => {\x0d\n    environmentData.set(key\x2C value);\x0d\n  });\x0d\n}\x0d\n\x0d\nclass Worker extends EventEmitter {\x0d\n  constructor(filename\x2C options = kEmptyObject) {\x0d\n    throwIfBuildingSnapshot('Creating workers');\x0d\n    super();\x0d\n    const isInternal = arguments[2] === kIsInternal;\x0d\n    debug(\x0d\n      `[${threadId}] create new worker`\x2C\x0d\n      filename\x2C\x0d\n      options\x2C\x0d\n      `isInternal: ${isInternal}`\x2C\x0d\n    );\x0d\n    if (options.execArgv)\x0d\n      validateArray(options.execArgv\x2C 'options.execArgv');\x0d\n\x0d\n    let argv;\x0d\n    if (options.argv) {\x0d\n      validateArray(options.argv\x2C 'options.argv');\x0d\n      argv = ArrayPrototypeMap(options.argv\x2C String);\x0d\n    }\x0d\n\x0d\n    let url\x2C doEval;\x0d\n    if (isInternal) {\x0d\n      doEval = 'internal';\x0d\n      url = `node:${filename}`;\x0d\n    } else if (options.eval) {\x0d\n      if (typeof filename !== 'string') {\x0d\n        throw new ERR_INVALID_ARG_VALUE(\x0d\n          'options.eval'\x2C\x0d\n          options.eval\x2C\x0d\n          'must be false when \\'filename\\' is not a string'\x2C\x0d\n        );\x0d\n      }\x0d\n      url = null;\x0d\n      doEval = 'classic';\x0d\n    } else if (isURL(filename) && filename.protocol === 'data:') {\x0d\n      url = null;\x0d\n      doEval = 'module';\x0d\n      filename = `import ${JSONStringify(`${filename}`)}`;\x0d\n    } else {\x0d\n      doEval = false;\x0d\n      if (isURL(filename)) {\x0d\n        url = filename;\x0d\n        filename = fileURLToPath(filename);\x0d\n      } else if (typeof filename !== 'string') {\x0d\n        throw new ERR_INVALID_ARG_TYPE(\x0d\n          'filename'\x2C\x0d\n          ['string'\x2C 'URL']\x2C\x0d\n          filename\x2C\x0d\n        );\x0d\n      } else if (path.isAbsolute(filename) ||\x0d\n                 RegExpPrototypeExec(/^\\.\\.?[\\\\/]/\x2C filename) !== null) {\x0d\n        filename = path.resolve(filename);\x0d\n        url = pathToFileURL(filename);\x0d\n      } else {\x0d\n        throw new ERR_WORKER_PATH(filename);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let env;\x0d\n    if (typeof options.env === 'object' && options.env !== null) {\x0d\n      env = { __proto__: null };\x0d\n      ArrayPrototypeForEach(\x0d\n        ObjectEntries(options.env)\x2C\x0d\n        ({ 0: key\x2C 1: value }) => { env[key] = `${value}`; }\x2C\x0d\n      );\x0d\n    } else if (options.env == null) {\x0d\n      env = process.env;\x0d\n    } else if (options.env !== SHARE_ENV) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.env'\x2C\x0d\n        ['object'\x2C 'undefined'\x2C 'null'\x2C 'worker_threads.SHARE_ENV']\x2C\x0d\n        options.env);\x0d\n    }\x0d\n\x0d\n    let name = '';\x0d\n    if (options.name) {\x0d\n      validateString(options.name\x2C 'options.name');\x0d\n      name = StringPrototypeTrim(options.name);\x0d\n    }\x0d\n\x0d\n    debug('instantiating Worker.'\x2C `url: ${url}`\x2C `doEval: ${doEval}`);\x0d\n    // Set up the C++ handle for the worker\x2C as well as some internal wiring.\x0d\n    this[kHandle] = new WorkerImpl(url\x2C\x0d\n                                   env === process.env ? null : env\x2C\x0d\n                                   options.execArgv\x2C\x0d\n                                   parseResourceLimits(options.resourceLimits)\x2C\x0d\n                                   !!(options.trackUnmanagedFds ?? true)\x2C\x0d\n                                   isInternal\x2C\x0d\n                                   name);\x0d\n    if (this[kHandle].invalidExecArgv) {\x0d\n      throw new ERR_WORKER_INVALID_EXEC_ARGV(this[kHandle].invalidExecArgv);\x0d\n    }\x0d\n    if (this[kHandle].invalidNodeOptions) {\x0d\n      throw new ERR_WORKER_INVALID_EXEC_ARGV(\x0d\n        this[kHandle].invalidNodeOptions\x2C 'invalid NODE_OPTIONS env variable');\x0d\n    }\x0d\n    this[kHandle].onexit = (code\x2C customErr\x2C customErrReason) => {\x0d\n      this[kOnExit](code\x2C customErr\x2C customErrReason);\x0d\n    };\x0d\n    this[kPort] = this[kHandle].messagePort;\x0d\n    this[kPort].on('message'\x2C (data) => this[kOnMessage](data));\x0d\n    this[kPort].start();\x0d\n    this[kPort].unref();\x0d\n    this[kPort][kWaitingStreams] = 0;\x0d\n    debug(`[${threadId}] created Worker with ID ${this.threadId}`);\x0d\n\x0d\n    let stdin = null;\x0d\n    if (options.stdin)\x0d\n      stdin = new WritableWorkerStdio(this[kPort]\x2C 'stdin');\x0d\n    const stdout = new ReadableWorkerStdio(this[kPort]\x2C 'stdout');\x0d\n    if (!options.stdout) {\x0d\n      stdout[kIncrementsPortRef] = false;\x0d\n      pipeWithoutWarning(stdout\x2C process.stdout);\x0d\n    }\x0d\n    const stderr = new ReadableWorkerStdio(this[kPort]\x2C 'stderr');\x0d\n    if (!options.stderr) {\x0d\n      stderr[kIncrementsPortRef] = false;\x0d\n      pipeWithoutWarning(stderr\x2C process.stderr);\x0d\n    }\x0d\n\x0d\n    this[kParentSideStdio] = { stdin\x2C stdout\x2C stderr };\x0d\n\x0d\n    const { port1\x2C port2 } = new MessageChannel();\x0d\n    const transferList = [port2];\x0d\n    // If transferList is provided.\x0d\n    if (options.transferList)\x0d\n      ArrayPrototypePush(transferList\x2C\x0d\n                         ...new SafeArrayIterator(options.transferList));\x0d\n\x0d\n    this[kPublicPort] = port1;\x0d\n    ArrayPrototypeForEach(['message'\x2C 'messageerror']\x2C (event) => {\x0d\n      this[kPublicPort].on(event\x2C (message) => this.emit(event\x2C message));\x0d\n    });\x0d\n    setupPortReferencing(this[kPublicPort]\x2C this\x2C 'message');\x0d\n    this[kPort].postMessage({\x0d\n      argv\x2C\x0d\n      type: messageTypes.LOAD_SCRIPT\x2C\x0d\n      filename\x2C\x0d\n      doEval\x2C\x0d\n      isInternal\x2C\x0d\n      cwdCounter: cwdCounter || workerIo.sharedCwdCounter\x2C\x0d\n      workerData: options.workerData\x2C\x0d\n      environmentData\x2C\x0d\n      publicPort: port2\x2C\x0d\n      manifestURL: getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').url :\x0d\n        null\x2C\x0d\n      manifestSrc: getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').src :\x0d\n        null\x2C\x0d\n      hasStdin: !!options.stdin\x2C\x0d\n    }\x2C transferList);\x0d\n    // Use this to cache the Worker's loopStart value once available.\x0d\n    this[kLoopStartTime] = -1;\x0d\n    this[kIsOnline] = false;\x0d\n    this.performance = {\x0d\n      eventLoopUtilization: FunctionPrototypeBind(eventLoopUtilization\x2C this)\x2C\x0d\n    };\x0d\n    // Actually start the new thread now that everything is in place.\x0d\n    this[kHandle].startThread();\x0d\n\x0d\n    process.nextTick(() => process.emit('worker'\x2C this));\x0d\n    if (workerThreadsChannel.hasSubscribers) {\x0d\n      workerThreadsChannel.publish({\x0d\n        worker: this\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kOnExit](code\x2C customErr\x2C customErrReason) {\x0d\n    debug(`[${threadId}] hears end event for Worker ${this.threadId}`);\x0d\n    drainMessagePort(this[kPublicPort]);\x0d\n    drainMessagePort(this[kPort]);\x0d\n    this.removeAllListeners('message');\x0d\n    this.removeAllListeners('messageerrors');\x0d\n    this[kPublicPort].unref();\x0d\n    this[kPort].unref();\x0d\n    this[kDispose]();\x0d\n    if (customErr) {\x0d\n      debug(`[${threadId}] failing with custom error ${customErr} \\\x0d\n        and with reason ${customErrReason}`);\x0d\n      this.emit('error'\x2C new errorCodes[customErr](customErrReason));\x0d\n    }\x0d\n    this.emit('exit'\x2C code);\x0d\n    this.removeAllListeners();\x0d\n  }\x0d\n\x0d\n  [kOnCouldNotSerializeErr]() {\x0d\n    this.emit('error'\x2C new ERR_WORKER_UNSERIALIZABLE_ERROR());\x0d\n  }\x0d\n\x0d\n  [kOnErrorMessage](serialized) {\x0d\n    // This is what is called for uncaught exceptions.\x0d\n    const error = deserializeError(serialized);\x0d\n    this.emit('error'\x2C error);\x0d\n  }\x0d\n\x0d\n  [kOnMessage](message) {\x0d\n    switch (message.type) {\x0d\n      case messageTypes.UP_AND_RUNNING:\x0d\n        this[kIsOnline] = true;\x0d\n        return this.emit('online');\x0d\n      case messageTypes.COULD_NOT_SERIALIZE_ERROR:\x0d\n        return this[kOnCouldNotSerializeErr]();\x0d\n      case messageTypes.ERROR_MESSAGE:\x0d\n        return this[kOnErrorMessage](message.error);\x0d\n      case messageTypes.STDIO_PAYLOAD:\x0d\n      {\x0d\n        const { stream\x2C chunks } = message;\x0d\n        const readable = this[kParentSideStdio][stream];\x0d\n        ArrayPrototypeForEach(chunks\x2C ({ chunk\x2C encoding }) => {\x0d\n          readable.push(chunk\x2C encoding);\x0d\n        });\x0d\n        return;\x0d\n      }\x0d\n      case messageTypes.STDIO_WANTS_MORE_DATA:\x0d\n      {\x0d\n        const { stream } = message;\x0d\n        return this[kParentSideStdio][stream][kStdioWantsMoreDataCallback]();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    assert.fail(`Unknown worker message type ${message.type}`);\x0d\n  }\x0d\n\x0d\n  [kDispose]() {\x0d\n    this[kHandle].onexit = null;\x0d\n    this[kHandle] = null;\x0d\n    this[kPort] = null;\x0d\n    this[kPublicPort] = null;\x0d\n\x0d\n    const { stdout\x2C stderr } = this[kParentSideStdio];\x0d\n\x0d\n    if (!stdout.readableEnded) {\x0d\n      debug(`[${threadId}] explicitly closes stdout for ${this.threadId}`);\x0d\n      stdout.push(null);\x0d\n    }\x0d\n    if (!stderr.readableEnded) {\x0d\n      debug(`[${threadId}] explicitly closes stderr for ${this.threadId}`);\x0d\n      stderr.push(null);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  postMessage(...args) {\x0d\n    if (this[kPublicPort] === null) return;\x0d\n\x0d\n    ReflectApply(this[kPublicPort].postMessage\x2C this[kPublicPort]\x2C args);\x0d\n  }\x0d\n\x0d\n  terminate(callback) {\x0d\n    debug(`[${threadId}] terminates Worker with ID ${this.threadId}`);\x0d\n\x0d\n    this.ref();\x0d\n\x0d\n    if (typeof callback === 'function') {\x0d\n      process.emitWarning(\x0d\n        'Passing a callback to worker.terminate() is deprecated. ' +\x0d\n        'It returns a Promise instead.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0132');\x0d\n      if (this[kHandle] === null) return PromiseResolve();\x0d\n      this.once('exit'\x2C (exitCode) => callback(null\x2C exitCode));\x0d\n    }\x0d\n\x0d\n    if (this[kHandle] === null) return PromiseResolve();\x0d\n\x0d\n    this[kHandle].stopThread();\x0d\n\x0d\n    // Do not use events.once() here\x2C because the 'exit' event will always be\x0d\n    // emitted regardless of any errors\x2C and the point is to only resolve\x0d\n    // once the thread has actually stopped.\x0d\n    return new Promise((resolve) => {\x0d\n      this.once('exit'\x2C resolve);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  ref() {\x0d\n    if (this[kHandle] === null) return;\x0d\n\x0d\n    this[kHandle].ref();\x0d\n    this[kPublicPort].ref();\x0d\n  }\x0d\n\x0d\n  unref() {\x0d\n    if (this[kHandle] === null) return;\x0d\n\x0d\n    this[kHandle].unref();\x0d\n    this[kPublicPort].unref();\x0d\n  }\x0d\n\x0d\n  get threadId() {\x0d\n    if (this[kHandle] === null) return -1;\x0d\n\x0d\n    return this[kHandle].threadId;\x0d\n  }\x0d\n\x0d\n  get stdin() {\x0d\n    return this[kParentSideStdio].stdin;\x0d\n  }\x0d\n\x0d\n  get stdout() {\x0d\n    return this[kParentSideStdio].stdout;\x0d\n  }\x0d\n\x0d\n  get stderr() {\x0d\n    return this[kParentSideStdio].stderr;\x0d\n  }\x0d\n\x0d\n  get resourceLimits() {\x0d\n    if (this[kHandle] === null) return {};\x0d\n\x0d\n    return makeResourceLimits(this[kHandle].getResourceLimits());\x0d\n  }\x0d\n\x0d\n  getHeapSnapshot(options) {\x0d\n    const {\x0d\n      HeapSnapshotStream\x2C\x0d\n      getHeapSnapshotOptions\x2C\x0d\n    } = require('internal/heap_utils');\x0d\n    const optionsArray = getHeapSnapshotOptions(options);\x0d\n    const heapSnapshotTaker = this[kHandle]?.takeHeapSnapshot(optionsArray);\x0d\n    return new Promise((resolve\x2C reject) => {\x0d\n      if (!heapSnapshotTaker) return reject(new ERR_WORKER_NOT_RUNNING());\x0d\n      heapSnapshotTaker.ondone = (handle) => {\x0d\n        resolve(new HeapSnapshotStream(handle));\x0d\n      };\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * A worker which has an internal module for entry point (e.g. internal/module/esm/worker).\x0d\n * Internal workers bypass the permission model.\x0d\n */\x0d\nclass InternalWorker extends Worker {\x0d\n  constructor(filename\x2C options) {\x0d\n    super(filename\x2C options\x2C kIsInternal);\x0d\n  }\x0d\n\x0d\n  receiveMessageSync() {\x0d\n    return receiveMessageOnPort(this[kPublicPort]);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction pipeWithoutWarning(source\x2C dest) {\x0d\n  const sourceMaxListeners = source._maxListeners;\x0d\n  const destMaxListeners = dest._maxListeners;\x0d\n  source.setMaxListeners(Infinity);\x0d\n  dest.setMaxListeners(Infinity);\x0d\n\x0d\n  source.pipe(dest);\x0d\n\x0d\n  source._maxListeners = sourceMaxListeners;\x0d\n  dest._maxListeners = destMaxListeners;\x0d\n}\x0d\n\x0d\nconst resourceLimitsArray = new Float64Array(kTotalResourceLimitCount);\x0d\nfunction parseResourceLimits(obj) {\x0d\n  const ret = resourceLimitsArray;\x0d\n  TypedArrayPrototypeFill(ret\x2C -1);\x0d\n  if (typeof obj !== 'object' || obj === null) return ret;\x0d\n\x0d\n  if (typeof obj.maxOldGenerationSizeMb === 'number')\x0d\n    ret[kMaxOldGenerationSizeMb] = MathMax(obj.maxOldGenerationSizeMb\x2C 2);\x0d\n  if (typeof obj.maxYoungGenerationSizeMb === 'number')\x0d\n    ret[kMaxYoungGenerationSizeMb] = obj.maxYoungGenerationSizeMb;\x0d\n  if (typeof obj.codeRangeSizeMb === 'number')\x0d\n    ret[kCodeRangeSizeMb] = obj.codeRangeSizeMb;\x0d\n  if (typeof obj.stackSizeMb === 'number')\x0d\n    ret[kStackSizeMb] = obj.stackSizeMb;\x0d\n  return ret;\x0d\n}\x0d\n\x0d\nfunction makeResourceLimits(float64arr) {\x0d\n  return {\x0d\n    maxYoungGenerationSizeMb: float64arr[kMaxYoungGenerationSizeMb]\x2C\x0d\n    maxOldGenerationSizeMb: float64arr[kMaxOldGenerationSizeMb]\x2C\x0d\n    codeRangeSizeMb: float64arr[kCodeRangeSizeMb]\x2C\x0d\n    stackSizeMb: float64arr[kStackSizeMb]\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction eventLoopUtilization(util1\x2C util2) {\x0d\n  // TODO(trevnorris): Works to solve the thread-safe read/write issue of\x0d\n  // loopTime\x2C but has the drawback that it can't be set until the event loop\x0d\n  // has had a chance to turn. So it will be impossible to read the ELU of\x0d\n  // a worker thread immediately after it's been created.\x0d\n  if (!this[kIsOnline] || !this[kHandle]) {\x0d\n    return { idle: 0\x2C active: 0\x2C utilization: 0 };\x0d\n  }\x0d\n\x0d\n  // Cache loopStart\x2C since it's only written to once.\x0d\n  if (this[kLoopStartTime] === -1) {\x0d\n    this[kLoopStartTime] = this[kHandle].loopStartTime();\x0d\n    if (this[kLoopStartTime] === -1)\x0d\n      return { idle: 0\x2C active: 0\x2C utilization: 0 };\x0d\n  }\x0d\n\x0d\n  return internalEventLoopUtilization(\x0d\n    this[kLoopStartTime]\x2C\x0d\n    this[kHandle].loopIdleTime()\x2C\x0d\n    util1\x2C\x0d\n    util2\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ownsProcessState\x2C\x0d\n  kIsOnline\x2C\x0d\n  isMainThread\x2C\x0d\n  SHARE_ENV\x2C\x0d\n  resourceLimits:\x0d\n    !isMainThread ? makeResourceLimits(resourceLimitsRaw) : {}\x2C\x0d\n  setEnvironmentData\x2C\x0d\n  getEnvironmentData\x2C\x0d\n  assignEnvironmentData\x2C\x0d\n  threadId\x2C\x0d\n  InternalWorker\x2C\x0d\n  Worker\x2C\x0d\n};\x0d\n
code-source-info,0xbe694839bc,136,0,16878,C0O0C4O16878,,
code-creation,JS,10,7268861,0xbe6948506c,1344, node:internal/worker:1:1,0xbe69483930,~
code-source-info,0xbe6948506c
code-creation,Eval,10,7269172,0xbe694860b4,5, node:internal/perf/event_loop_utilization:1:1,0xbe69485f10,~
script-source,137,node:internal/perf/event_loop_utilization,'use strict';\x0d\n\x0d\nconst {\x0d\n  constants: {\x0d\n    NODE_PERFORMANCE_MILESTONE_LOOP_START\x2C\x0d\n  }\x2C\x0d\n  loopIdleTime\x2C\x0d\n  milestones\x2C\x0d\n} = internalBinding('performance');\x0d\n\x0d\nfunction eventLoopUtilization(util1\x2C util2) {\x0d\n  // Get the original milestone timestamps that calculated from the beginning\x0d\n  // of the process.\x0d\n  return internalEventLoopUtilization(\x0d\n    milestones[NODE_PERFORMANCE_MILESTONE_LOOP_START] / 1e6\x2C\x0d\n    loopIdleTime()\x2C\x0d\n    util1\x2C\x0d\n    util2\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction internalEventLoopUtilization(loopStart\x2C loopIdleTime\x2C util1\x2C util2) {\x0d\n  if (loopStart <= 0) {\x0d\n    return { idle: 0\x2C active: 0\x2C utilization: 0 };\x0d\n  }\x0d\n\x0d\n  if (util2) {\x0d\n    const idle = util1.idle - util2.idle;\x0d\n    const active = util1.active - util2.active;\x0d\n    return { idle\x2C active\x2C utilization: active / (idle + active) };\x0d\n  }\x0d\n\x0d\n  // Using process.hrtime() to get the time from the beginning of the process\x2C\x0d\n  // and offset it by the loopStart time (which is also calculated from the\x0d\n  // beginning of the process).\x0d\n  const now = process.hrtime();\x0d\n  const active = now[0] * 1e3 + now[1] / 1e6 - loopStart - loopIdleTime;\x0d\n\x0d\n  if (!util1) {\x0d\n    return {\x0d\n      idle: loopIdleTime\x2C\x0d\n      active\x2C\x0d\n      utilization: active / (loopIdleTime + active)\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  const idleDelta = loopIdleTime - util1.idle;\x0d\n  const activeDelta = active - util1.active;\x0d\n  const utilization = activeDelta / (idleDelta + activeDelta);\x0d\n  return {\x0d\n    idle: idleDelta\x2C\x0d\n    active: activeDelta\x2C\x0d\n    utilization\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  internalEventLoopUtilization\x2C\x0d\n  eventLoopUtilization\x2C\x0d\n};\x0d\n
code-source-info,0xbe694860b4,137,0,1587,C0O0C4O1587,,
code-creation,JS,10,7269267,0xbe69486274,85, node:internal/perf/event_loop_utilization:1:1,0xbe69486028,~
code-source-info,0xbe69486274,137,0,1587,C0O0C29O128C32O128C37O39C42O46C48O94C54O111C60O1505C67O1527C73O1560C79O1520C84O1586,,
code-creation,Eval,10,7269709,0xbe694881b4,5, node:internal/worker/io:1:1,0xbe69487d20,~
script-source,138,node:internal/worker/io,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ObjectValues\x2C\x0d\n  ReflectApply\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  kEmptyObject\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n  setOwnProperty\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  handle_onclose: handleOnCloseSymbol\x2C\x0d\n  oninit: onInitSymbol\x2C\x0d\n  no_message_symbol: noMessageSymbol\x2C\x0d\n} = internalBinding('symbols');\x0d\nconst {\x0d\n  MessagePort\x2C\x0d\n  MessageChannel\x2C\x0d\n  broadcastChannel\x2C\x0d\n  drainMessagePort\x2C\x0d\n  moveMessagePortToContext\x2C\x0d\n  receiveMessageOnPort: receiveMessageOnPort_\x2C\x0d\n  stopMessagePort\x2C\x0d\n  checkMessagePort\x2C\x0d\n  DOMException\x2C\x0d\n} = internalBinding('messaging');\x0d\nconst {\x0d\n  getEnvMessagePort\x2C\x0d\n} = internalBinding('worker');\x0d\n\x0d\nconst { Readable\x2C Writable } = require('stream');\x0d\nconst {\x0d\n  Event\x2C\x0d\n  EventTarget\x2C\x0d\n  NodeEventTarget\x2C\x0d\n  defineEventHandler\x2C\x0d\n  initNodeEventTarget\x2C\x0d\n  kCreateEvent\x2C\x0d\n  kNewListener\x2C\x0d\n  kRemoveListener\x2C\x0d\n} = require('internal/event_target');\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst kData = Symbol('kData');\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kIncrementsPortRef = Symbol('kIncrementsPortRef');\x0d\nconst kLastEventId = Symbol('kLastEventId');\x0d\nconst kName = Symbol('kName');\x0d\nconst kOrigin = Symbol('kOrigin');\x0d\nconst kOnMessage = Symbol('kOnMessage');\x0d\nconst kOnMessageError = Symbol('kOnMessageError');\x0d\nconst kPort = Symbol('kPort');\x0d\nconst kPorts = Symbol('kPorts');\x0d\nconst kWaitingStreams = Symbol('kWaitingStreams');\x0d\nconst kWritableCallbacks = Symbol('kWritableCallbacks');\x0d\nconst kSource = Symbol('kSource');\x0d\nconst kStartedReading = Symbol('kStartedReading');\x0d\nconst kStdioWantsMoreDataCallback = Symbol('kStdioWantsMoreDataCallback');\x0d\nconst kCurrentlyReceivingPorts =\x0d\n  SymbolFor('nodejs.internal.kCurrentlyReceivingPorts');\x0d\nconst kType = Symbol('kType');\x0d\n\x0d\nconst messageTypes = {\x0d\n  UP_AND_RUNNING: 'upAndRunning'\x2C\x0d\n  COULD_NOT_SERIALIZE_ERROR: 'couldNotSerializeError'\x2C\x0d\n  ERROR_MESSAGE: 'errorMessage'\x2C\x0d\n  STDIO_PAYLOAD: 'stdioPayload'\x2C\x0d\n  STDIO_WANTS_MORE_DATA: 'stdioWantsMoreData'\x2C\x0d\n  LOAD_SCRIPT: 'loadScript'\x2C\x0d\n};\x0d\n\x0d\n// We have to mess with the MessagePort prototype a bit\x2C so that a) we can make\x0d\n// it inherit from NodeEventTarget\x2C even though it is a C++ class\x2C and b) we do\x0d\n// not provide methods that are not present in the Browser and not documented\x0d\n// on our side (e.g. stopMessagePort).\x0d\nconst messagePortPrototypePropertyDescriptors = ObjectGetOwnPropertyDescriptors(MessagePort.prototype);\x0d\nconst propertiesValues = ObjectValues(messagePortPrototypePropertyDescriptors);\x0d\nfor (let i = 0; i < propertiesValues.length; i++) {\x0d\n  // We want to use null-prototype objects to not rely on globally mutable\x0d\n  // %Object.prototype%.\x0d\n  ObjectSetPrototypeOf(propertiesValues[i]\x2C null);\x0d\n}\x0d\n// Save a copy of the original set of methods as a shallow clone.\x0d\nconst MessagePortPrototype = ObjectCreate(\x0d\n  ObjectGetPrototypeOf(MessagePort.prototype)\x2C\x0d\n  messagePortPrototypePropertyDescriptors);\x0d\n// Set up the new inheritance chain.\x0d\nObjectSetPrototypeOf(MessagePort\x2C NodeEventTarget);\x0d\nObjectSetPrototypeOf(MessagePort.prototype\x2C NodeEventTarget.prototype);\x0d\n// Copy methods that are inherited from HandleWrap\x2C because\x0d\n// changing the prototype of MessagePort.prototype implicitly removed them.\x0d\nMessagePort.prototype.ref = MessagePortPrototype.ref;\x0d\nMessagePort.prototype.unref = MessagePortPrototype.unref;\x0d\nMessagePort.prototype.hasRef = function() {\x0d\n  return !!FunctionPrototypeCall(MessagePortPrototype.hasRef\x2C this);\x0d\n};\x0d\n\x0d\nfunction validateMessagePort(port\x2C name) {\x0d\n  if (!checkMessagePort(port))\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'MessagePort'\x2C port);\x0d\n}\x0d\n\x0d\nfunction isMessageEvent(value) {\x0d\n  return value != null && kData in value;\x0d\n}\x0d\n\x0d\nclass MessageEvent extends Event {\x0d\n  constructor(type\x2C {\x0d\n    data = null\x2C\x0d\n    origin = ''\x2C\x0d\n    lastEventId = ''\x2C\x0d\n    source = null\x2C\x0d\n    ports = []\x2C\x0d\n  } = kEmptyObject) {\x0d\n    super(type);\x0d\n    this[kData] = data;\x0d\n    this[kOrigin] = `${origin}`;\x0d\n    this[kLastEventId] = `${lastEventId}`;\x0d\n    this[kSource] = source;\x0d\n    this[kPorts] = [...ports];\x0d\n\x0d\n    if (this[kSource] !== null)\x0d\n      validateMessagePort(this[kSource]\x2C 'init.source');\x0d\n    for (let i = 0; i < this[kPorts].length; i++)\x0d\n      validateMessagePort(this[kPorts][i]\x2C `init.ports[${i}]`);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(MessageEvent.prototype\x2C {\x0d\n  data: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      if (!isMessageEvent(this))\x0d\n        throw new ERR_INVALID_THIS('MessageEvent');\x0d\n      return this[kData];\x0d\n    }\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    set: undefined\x2C\x0d\n  }\x2C\x0d\n  origin: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      if (!isMessageEvent(this))\x0d\n        throw new ERR_INVALID_THIS('MessageEvent');\x0d\n      return this[kOrigin];\x0d\n    }\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    set: undefined\x2C\x0d\n  }\x2C\x0d\n  lastEventId: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      if (!isMessageEvent(this))\x0d\n        throw new ERR_INVALID_THIS('MessageEvent');\x0d\n      return this[kLastEventId];\x0d\n    }\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    set: undefined\x2C\x0d\n  }\x2C\x0d\n  source: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      if (!isMessageEvent(this))\x0d\n        throw new ERR_INVALID_THIS('MessageEvent');\x0d\n      return this[kSource];\x0d\n    }\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    set: undefined\x2C\x0d\n  }\x2C\x0d\n  ports: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      if (!isMessageEvent(this))\x0d\n        throw new ERR_INVALID_THIS('MessageEvent');\x0d\n      return this[kPorts];\x0d\n    }\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    set: undefined\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nconst originalCreateEvent = EventTarget.prototype[kCreateEvent];\x0d\nObjectDefineProperty(\x0d\n  MessagePort.prototype\x2C\x0d\n  kCreateEvent\x2C\x0d\n  {\x0d\n    __proto__: null\x2C\x0d\n    value: function(data\x2C type) {\x0d\n      if (type !== 'message' && type !== 'messageerror') {\x0d\n        return ReflectApply(originalCreateEvent\x2C this\x2C arguments);\x0d\n      }\x0d\n      const ports = this[kCurrentlyReceivingPorts];\x0d\n      this[kCurrentlyReceivingPorts] = undefined;\x0d\n      return new MessageEvent(type\x2C { data\x2C ports });\x0d\n    }\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n  });\x0d\n\x0d\n// This is called from inside the `MessagePort` constructor.\x0d\nfunction oninit() {\x0d\n  initNodeEventTarget(this);\x0d\n  setupPortReferencing(this\x2C this\x2C 'message');\x0d\n  this[kCurrentlyReceivingPorts] = undefined;\x0d\n}\x0d\n\x0d\ndefineEventHandler(MessagePort.prototype\x2C 'message');\x0d\ndefineEventHandler(MessagePort.prototype\x2C 'messageerror');\x0d\n\x0d\nObjectDefineProperty(MessagePort.prototype\x2C onInitSymbol\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x2C\x0d\n  value: oninit\x2C\x0d\n});\x0d\n\x0d\nclass MessagePortCloseEvent extends Event {\x0d\n  constructor() {\x0d\n    super('close');\x0d\n  }\x0d\n}\x0d\n\x0d\n// This is called after the underlying `uv_async_t` has been closed.\x0d\nfunction onclose() {\x0d\n  this.dispatchEvent(new MessagePortCloseEvent());\x0d\n}\x0d\n\x0d\nObjectDefineProperty(MessagePort.prototype\x2C handleOnCloseSymbol\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: false\x2C\x0d\n  writable: false\x2C\x0d\n  value: onclose\x2C\x0d\n});\x0d\n\x0d\nMessagePort.prototype.close = function(cb) {\x0d\n  if (typeof cb === 'function')\x0d\n    this.once('close'\x2C cb);\x0d\n  FunctionPrototypeCall(MessagePortPrototype.close\x2C this);\x0d\n};\x0d\n\x0d\nObjectDefineProperty(MessagePort.prototype\x2C inspect.custom\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: false\x2C\x0d\n  writable: false\x2C\x0d\n  value: function inspect() {  // eslint-disable-line func-name-matching\x0d\n    let ref;\x0d\n    try {\x0d\n      // This may throw when `this` does not refer to a native object\x2C\x0d\n      // e.g. when accessing the prototype directly.\x0d\n      ref = FunctionPrototypeCall(MessagePortPrototype.hasRef\x2C this);\x0d\n    } catch { return this; }\x0d\n    return ObjectAssign({ __proto__: MessagePort.prototype }\x2C\x0d\n                        ref === undefined ? {\x0d\n                          active: false\x2C\x0d\n                        } : {\x0d\n                          active: true\x2C\x0d\n                          refed: ref\x2C\x0d\n                        }\x2C\x0d\n                        this);\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nfunction setupPortReferencing(port\x2C eventEmitter\x2C eventName) {\x0d\n  // Keep track of whether there are any workerMessage listeners:\x0d\n  // If there are some\x2C ref() the channel so it keeps the event loop alive.\x0d\n  // If there are none or all are removed\x2C unref() the channel so the worker\x0d\n  // can shutdown gracefully.\x0d\n  port.unref();\x0d\n  eventEmitter.on('newListener'\x2C function(name) {\x0d\n    if (name === eventName) newListener(eventEmitter.listenerCount(name));\x0d\n  });\x0d\n  eventEmitter.on('removeListener'\x2C function(name) {\x0d\n    if (name === eventName) removeListener(eventEmitter.listenerCount(name));\x0d\n  });\x0d\n  const origNewListener = eventEmitter[kNewListener];\x0d\n  setOwnProperty(eventEmitter\x2C kNewListener\x2C function(size\x2C type\x2C ...args) {\x0d\n    if (type === eventName) newListener(size - 1);\x0d\n    return ReflectApply(origNewListener\x2C this\x2C arguments);\x0d\n  });\x0d\n  const origRemoveListener = eventEmitter[kRemoveListener];\x0d\n  setOwnProperty(eventEmitter\x2C kRemoveListener\x2C function(size\x2C type\x2C ...args) {\x0d\n    if (type === eventName) removeListener(size);\x0d\n    return ReflectApply(origRemoveListener\x2C this\x2C arguments);\x0d\n  });\x0d\n\x0d\n  function newListener(size) {\x0d\n    if (size === 0) {\x0d\n      port.ref();\x0d\n      FunctionPrototypeCall(MessagePortPrototype.start\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function removeListener(size) {\x0d\n    if (size === 0) {\x0d\n      stopMessagePort(port);\x0d\n      port.unref();\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nclass ReadableWorkerStdio extends Readable {\x0d\n  constructor(port\x2C name) {\x0d\n    super();\x0d\n    this[kPort] = port;\x0d\n    this[kName] = name;\x0d\n    this[kIncrementsPortRef] = true;\x0d\n    this[kStartedReading] = false;\x0d\n    this.on('end'\x2C () => {\x0d\n      if (this[kStartedReading] && this[kIncrementsPortRef]) {\x0d\n        if (--this[kPort][kWaitingStreams] === 0)\x0d\n          this[kPort].unref();\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  _read() {\x0d\n    if (!this[kStartedReading] && this[kIncrementsPortRef]) {\x0d\n      this[kStartedReading] = true;\x0d\n      if (this[kPort][kWaitingStreams]++ === 0)\x0d\n        this[kPort].ref();\x0d\n    }\x0d\n\x0d\n    this[kPort].postMessage({\x0d\n      type: messageTypes.STDIO_WANTS_MORE_DATA\x2C\x0d\n      stream: this[kName]\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nclass WritableWorkerStdio extends Writable {\x0d\n  constructor(port\x2C name) {\x0d\n    super({ decodeStrings: false });\x0d\n    this[kPort] = port;\x0d\n    this[kName] = name;\x0d\n    this[kWritableCallbacks] = [];\x0d\n  }\x0d\n\x0d\n  _writev(chunks\x2C cb) {\x0d\n    this[kPort].postMessage({\x0d\n      type: messageTypes.STDIO_PAYLOAD\x2C\x0d\n      stream: this[kName]\x2C\x0d\n      chunks: ArrayPrototypeMap(chunks\x2C\x0d\n                                ({ chunk\x2C encoding }) => ({ chunk\x2C encoding }))\x2C\x0d\n    });\x0d\n    ArrayPrototypePush(this[kWritableCallbacks]\x2C cb);\x0d\n    if (this[kPort][kWaitingStreams]++ === 0)\x0d\n      this[kPort].ref();\x0d\n  }\x0d\n\x0d\n  _final(cb) {\x0d\n    this[kPort].postMessage({\x0d\n      type: messageTypes.STDIO_PAYLOAD\x2C\x0d\n      stream: this[kName]\x2C\x0d\n      chunks: [ { chunk: null\x2C encoding: '' } ]\x2C\x0d\n    });\x0d\n    cb();\x0d\n  }\x0d\n\x0d\n  [kStdioWantsMoreDataCallback]() {\x0d\n    const cbs = this[kWritableCallbacks];\x0d\n    this[kWritableCallbacks] = [];\x0d\n    ArrayPrototypeForEach(cbs\x2C (cb) => cb());\x0d\n    if ((this[kPort][kWaitingStreams] -= cbs.length) === 0)\x0d\n      this[kPort].unref();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction createWorkerStdio() {\x0d\n  const port = getEnvMessagePort();\x0d\n  port[kWaitingStreams] = 0;\x0d\n  return {\x0d\n    stdin: new ReadableWorkerStdio(port\x2C 'stdin')\x2C\x0d\n    stdout: new WritableWorkerStdio(port\x2C 'stdout')\x2C\x0d\n    stderr: new WritableWorkerStdio(port\x2C 'stderr')\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction receiveMessageOnPort(port) {\x0d\n  const message = receiveMessageOnPort_(port?.[kHandle] ?? port);\x0d\n  if (message === noMessageSymbol) return undefined;\x0d\n  return { message };\x0d\n}\x0d\n\x0d\nfunction onMessageEvent(type\x2C data) {\x0d\n  this.dispatchEvent(new MessageEvent(type\x2C { data }));\x0d\n}\x0d\n\x0d\nfunction isBroadcastChannel(value) {\x0d\n  return value?.[kType] === 'BroadcastChannel';\x0d\n}\x0d\n\x0d\nclass BroadcastChannel extends EventTarget {\x0d\n  /**\x0d\n   * @param {string} name\x0d\n   */\x0d\n  constructor(name) {\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    super();\x0d\n    this[kType] = 'BroadcastChannel';\x0d\n    this[kName] = `${name}`;\x0d\n    this[kHandle] = broadcastChannel(this[kName]);\x0d\n    this[kOnMessage] = FunctionPrototypeBind(onMessageEvent\x2C this\x2C 'message');\x0d\n    this[kOnMessageError] =\x0d\n      FunctionPrototypeBind(onMessageEvent\x2C this\x2C 'messageerror');\x0d\n    this[kHandle].on('message'\x2C this[kOnMessage]);\x0d\n    this[kHandle].on('messageerror'\x2C this[kOnMessageError]);\x0d\n  }\x0d\n\x0d\n  [inspect.custom](depth\x2C options) {\x0d\n    if (!isBroadcastChannel(this))\x0d\n      throw new ERR_INVALID_THIS('BroadcastChannel');\x0d\n    if (depth < 0)\x0d\n      return 'BroadcastChannel';\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x2C\x0d\n    };\x0d\n\x0d\n    return `BroadcastChannel ${inspect({\x0d\n      name: this[kName]\x2C\x0d\n      active: this[kHandle] !== undefined\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {string}\x0d\n   */\x0d\n  get name() {\x0d\n    if (!isBroadcastChannel(this))\x0d\n      throw new ERR_INVALID_THIS('BroadcastChannel');\x0d\n    return this[kName];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {void}\x0d\n   */\x0d\n  close() {\x0d\n    if (!isBroadcastChannel(this))\x0d\n      throw new ERR_INVALID_THIS('BroadcastChannel');\x0d\n    if (this[kHandle] === undefined)\x0d\n      return;\x0d\n    this[kHandle].off('message'\x2C this[kOnMessage]);\x0d\n    this[kHandle].off('messageerror'\x2C this[kOnMessageError]);\x0d\n    this[kOnMessage] = undefined;\x0d\n    this[kOnMessageError] = undefined;\x0d\n    this[kHandle].close();\x0d\n    this[kHandle] = undefined;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   *\x0d\n   * @param {any} message\x0d\n   * @returns {void}\x0d\n   */\x0d\n  postMessage(message) {\x0d\n    if (!isBroadcastChannel(this))\x0d\n      throw new ERR_INVALID_THIS('BroadcastChannel');\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('message');\x0d\n    if (this[kHandle] === undefined)\x0d\n      throw new DOMException('BroadcastChannel is closed.');\x0d\n    if (this[kHandle].postMessage(message) === undefined)\x0d\n      throw new DOMException('Message could not be posted.');\x0d\n  }\x0d\n\x0d\n  // The ref() method is Node.js specific and not part of the standard\x0d\n  // BroadcastChannel API definition. Typically we shouldn't extend Web\x0d\n  // Platform APIs with Node.js specific methods but ref and unref\x0d\n  // are a bit special.\x0d\n  /**\x0d\n   * @returns {BroadcastChannel}\x0d\n   */\x0d\n  ref() {\x0d\n    if (!isBroadcastChannel(this))\x0d\n      throw new ERR_INVALID_THIS('BroadcastChannel');\x0d\n    if (this[kHandle])\x0d\n      this[kHandle].ref();\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // The unref() method is Node.js specific and not part of the standard\x0d\n  // BroadcastChannel API definition. Typically we shouldn't extend Web\x0d\n  // Platform APIs with Node.js specific methods but ref and unref\x0d\n  // are a bit special.\x0d\n  /**\x0d\n   * @returns {BroadcastChannel}\x0d\n   */\x0d\n  unref() {\x0d\n    if (!isBroadcastChannel(this))\x0d\n      throw new ERR_INVALID_THIS('BroadcastChannel');\x0d\n    if (this[kHandle])\x0d\n      this[kHandle].unref();\x0d\n    return this;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(BroadcastChannel.prototype\x2C {\x0d\n  name: kEnumerableProperty\x2C\x0d\n  close: kEnumerableProperty\x2C\x0d\n  postMessage: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\ndefineEventHandler(BroadcastChannel.prototype\x2C 'message');\x0d\ndefineEventHandler(BroadcastChannel.prototype\x2C 'messageerror');\x0d\n\x0d\nmodule.exports = {\x0d\n  drainMessagePort\x2C\x0d\n  messageTypes\x2C\x0d\n  kPort\x2C\x0d\n  kIncrementsPortRef\x2C\x0d\n  kWaitingStreams\x2C\x0d\n  kStdioWantsMoreDataCallback\x2C\x0d\n  moveMessagePortToContext\x2C\x0d\n  MessagePort\x2C\x0d\n  MessageChannel\x2C\x0d\n  MessageEvent\x2C\x0d\n  receiveMessageOnPort\x2C\x0d\n  setupPortReferencing\x2C\x0d\n  ReadableWorkerStdio\x2C\x0d\n  WritableWorkerStdio\x2C\x0d\n  createWorkerStdio\x2C\x0d\n  BroadcastChannel\x2C\x0d\n};\x0d\n
code-source-info,0xbe694881b4,138,0,16035,C0O0C4O16035,,
code-creation,JS,10,7270430,0xbe6948a264,1711, node:internal/worker/io:1:1,0xbe69488128,~
code-source-info,0xbe6948a
code-creation,Eval,10,7271037,0xbe6948d664,5, node:internal/error_serdes:1:1,0xbe6948d2c0,~
script-source,139,node:internal/error_serdes,'use strict';\x0d\n\x0d\nconst Buffer = require('buffer').Buffer;\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Error\x2C\x0d\n  EvalError\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectCreate\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeToString\x2C\x0d\n  RangeError\x2C\x0d\n  ReferenceError\x2C\x0d\n  SafeSet\x2C\x0d\n  StringFromCharCode\x2C\x0d\n  StringPrototypeSubstring\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  SyntaxError\x2C\x0d\n  SymbolFor\x2C\x0d\n  TypeError\x2C\x0d\n  TypedArrayPrototypeGetBuffer\x2C\x0d\n  TypedArrayPrototypeGetByteOffset\x2C\x0d\n  TypedArrayPrototypeGetByteLength\x2C\x0d\n  URIError\x2C\x0d\n} = primordials;\x0d\nconst { inspect: { custom: customInspectSymbol } } = require('util');\x0d\n\x0d\nconst kSerializedError = 0;\x0d\nconst kSerializedObject = 1;\x0d\nconst kInspectedError = 2;\x0d\nconst kInspectedSymbol = 3;\x0d\nconst kCustomInspectedObject = 4;\x0d\n\x0d\nconst kSymbolStringLength = 'Symbol('.length;\x0d\n\x0d\nconst errors = {\x0d\n  Error\x2C TypeError\x2C RangeError\x2C URIError\x2C SyntaxError\x2C ReferenceError\x2C EvalError\x2C\x0d\n};\x0d\nconst errorConstructorNames = new SafeSet(ObjectKeys(errors));\x0d\n\x0d\nfunction TryGetAllProperties(object\x2C target = object) {\x0d\n  const all = { __proto__: null };\x0d\n  if (object === null)\x0d\n    return all;\x0d\n  ObjectAssign(all\x2C\x0d\n               TryGetAllProperties(ObjectGetPrototypeOf(object)\x2C target));\x0d\n  const keys = ObjectGetOwnPropertyNames(object);\x0d\n  ArrayPrototypeForEach(keys\x2C (key) => {\x0d\n    let descriptor;\x0d\n    try {\x0d\n      // TODO: create a null-prototype descriptor with needed properties only\x0d\n      descriptor = ObjectGetOwnPropertyDescriptor(object\x2C key);\x0d\n    } catch { return; }\x0d\n    const getter = descriptor.get;\x0d\n    if (getter && key !== '__proto__') {\x0d\n      try {\x0d\n        descriptor.value = FunctionPrototypeCall(getter\x2C target);\x0d\n        delete descriptor.get;\x0d\n        delete descriptor.set;\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n    }\x0d\n    if (key === 'cause') {\x0d\n      descriptor.value = serializeError(descriptor.value);\x0d\n      all[key] = descriptor;\x0d\n    } else if ('value' in descriptor &&\x0d\n            typeof descriptor.value !== 'function' && typeof descriptor.value !== 'symbol') {\x0d\n      all[key] = descriptor;\x0d\n    }\x0d\n  });\x0d\n  return all;\x0d\n}\x0d\n\x0d\nfunction GetConstructors(object) {\x0d\n  const constructors = [];\x0d\n\x0d\n  for (let current = object;\x0d\n    current !== null;\x0d\n    current = ObjectGetPrototypeOf(current)) {\x0d\n    const desc = ObjectGetOwnPropertyDescriptor(current\x2C 'constructor');\x0d\n    if (desc && desc.value) {\x0d\n      ObjectDefineProperty(constructors\x2C constructors.length\x2C {\x0d\n        __proto__: null\x2C\x0d\n        value: desc.value\x2C enumerable: true\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return constructors;\x0d\n}\x0d\n\x0d\nfunction GetName(object) {\x0d\n  const desc = ObjectGetOwnPropertyDescriptor(object\x2C 'name');\x0d\n  return desc && desc.value;\x0d\n}\x0d\n\x0d\nlet internalUtilInspect;\x0d\nfunction inspect(...args) {\x0d\n  if (!internalUtilInspect) {\x0d\n    internalUtilInspect = require('internal/util/inspect');\x0d\n  }\x0d\n  return internalUtilInspect.inspect(...args);\x0d\n}\x0d\n\x0d\nlet serialize;\x0d\nfunction serializeError(error) {\x0d\n  if (!serialize) serialize = require('v8').serialize;\x0d\n  if (typeof error === 'symbol') {\x0d\n    return Buffer.from(StringFromCharCode(kInspectedSymbol) + inspect(error)\x2C 'utf8');\x0d\n  }\x0d\n  try {\x0d\n    if (typeof error === 'object' &&\x0d\n        ObjectPrototypeToString(error) === '[object Error]') {\x0d\n      const constructors = GetConstructors(error);\x0d\n      for (let i = 0; i < constructors.length; i++) {\x0d\n        const name = GetName(constructors[i]);\x0d\n        if (errorConstructorNames.has(name)) {\x0d\n          const serialized = serialize({\x0d\n            constructor: name\x2C\x0d\n            properties: TryGetAllProperties(error)\x2C\x0d\n          });\x0d\n          return Buffer.concat([Buffer.from([kSerializedError])\x2C serialized]);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  try {\x0d\n    if (error != null && customInspectSymbol in error) {\x0d\n      return Buffer.from(StringFromCharCode(kCustomInspectedObject) + inspect(error)\x2C 'utf8');\x0d\n    }\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  try {\x0d\n    const serialized = serialize(error);\x0d\n    return Buffer.concat([Buffer.from([kSerializedObject])\x2C serialized]);\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  return Buffer.from(StringFromCharCode(kInspectedError) + inspect(error)\x2C 'utf8');\x0d\n}\x0d\n\x0d\nfunction fromBuffer(error) {\x0d\n  return Buffer.from(TypedArrayPrototypeGetBuffer(error)\x2C\x0d\n                     TypedArrayPrototypeGetByteOffset(error) + 1\x2C\x0d\n                     TypedArrayPrototypeGetByteLength(error) - 1);\x0d\n}\x0d\n\x0d\nlet deserialize;\x0d\nfunction deserializeError(error) {\x0d\n  if (!deserialize) deserialize = require('v8').deserialize;\x0d\n  switch (error[0]) {\x0d\n    case kSerializedError: {\x0d\n      const { constructor\x2C properties } = deserialize(error.subarray(1));\x0d\n      const ctor = errors[constructor];\x0d\n      ObjectDefineProperty(properties\x2C SymbolToStringTag\x2C {\x0d\n        __proto__: null\x2C\x0d\n        value: { __proto__: null\x2C value: 'Error'\x2C configurable: true }\x2C\x0d\n        enumerable: true\x2C\x0d\n      });\x0d\n      if ('cause' in properties && 'value' in properties.cause) {\x0d\n        properties.cause.value = deserializeError(properties.cause.value);\x0d\n      }\x0d\n      return ObjectCreate(ctor.prototype\x2C properties);\x0d\n    }\x0d\n    case kSerializedObject:\x0d\n      return deserialize(error.subarray(1));\x0d\n    case kInspectedError:\x0d\n      return fromBuffer(error).toString('utf8');\x0d\n    case kInspectedSymbol: {\x0d\n      const buf = fromBuffer(error);\x0d\n      return SymbolFor(StringPrototypeSubstring(buf.toString('utf8')\x2C kSymbolStringLength\x2C buf.length - 1));\x0d\n    }\x0d\n    case kCustomInspectedObject:\x0d\n      return {\x0d\n        __proto__: null\x2C\x0d\n        [customInspectSymbol]: () => fromBuffer(error).toString('utf8')\x2C\x0d\n      };\x0d\n  }\x0d\n  require('assert').fail('This should not happen');\x0d\n}\x0d\n\x0d\nmodule.exports = { serializeError\x2C deserializeError };\x0d\n
code-source-info,0xbe6948d664,139,0,5914,C0O0C4O5914,,
code-creation,JS,10,7271372,0xbe6948db6c,448, node:internal/error_serdes:1:1,0xbe6948d5d8,~
code-source-info,0xbe6948db6c,139,0,5914,C0O0C138O32C144O32C149O49C153O32C155O70C161O96C166O106C171O120C177O146C183O163C189O180C195O205C201O240C207O270C213O295C218O310C224O338C229O353C234O372C239O384C245O407C251O436C257O458C262O474C268O488C273O502C279O535C285O572C291O609C296O691C302O691C307O655C312O665C318O736C319O736C321O766C323O766C325O794C327O794C329O823C331O823C333O858C335O858C337O892C340O902C344O892C346O928C353O933C359O940C365O951C371O963C377O973C383O986C389O1002C395O928C397O1048C400O1060C407O1048C412O1048C414O2818C415O2818C417O3023C418O3023C420O4604C421O4604C423O5858C430O5877C436O5893C442O5873C447O5913,,
tick,0x7ff7b34646b1,7271543,0,0x0,3,0x7ff734383eb2,0x7ff734383c87,0xbe694852df,0x7ff734383f77,0x7ff734383c87,0xbe6948115f,0x7ff734383f77,0x7ff734383c87,0x66313fff09,0x7ff734383f77,0x7ff734383c87,0x66313fe5b4,0x66313fe3b9,0x2d4d28e0c2c,0x2d4d28fea50,0x2d4d28fe5ab,0x7ff73438f2ef,0x2d4d28cb559,0x2d4d28d3c7d,0x7ff75418d90d,0x2d4d28fd0c3,0x7ff73438f2ef,0x2d4d28cb559,0x2d4d28fcc3f,0x2d4d28fc96a,0x2d4d28fc5e3,0x2d4d28fc033,0x2d4d28f5464
code-creation,JS,10,7271795,0xbe6948f404,62,Session node:inspector:47:1,0x66313ff7f0,~
code-source-info,0xbe6948f404,134,1031,1031,C0O1031C5O1031C29O1031C61O1031,,
code-creation,JS,10,7271891,0xbe69490004,72,connect node:inspector:56:10,0x66313ff848,~
code-source-info,0xbe69490004,134,1247,1437,C0O1247C9O1257C16O1266C21O1286C33O1292C38O1286C39O1359C51O1382C61O1378C66O1376C71O1436,,
code-creation,JS,10,7272126,0xbe69490254,61, node:internal/repl/utils:306:26,0x66313fe200,~
code-source-info,0xbe69490254,127,9928,12281,C0O9928C9O9950C12O9958C29O10006C42O10094C54O9958C60O12280,,
code-creation,JS,10,7272215,0xbe69490554,189,post node:inspector:108:7,0x66313ff8f8,~
code-source-info,0xbe69490554,134,2747,3417,C0O2781C10O2781C15O2820C25O2876C28O2902C31O2929C35O2950C45O2950C50O2996C54O3019C64O3019C69O3073C71O3083C76O3105C83O3111C88O3105C89O3169C92O3173C101O3181C108O3206C115O3208C121O3212C128O3227C132O3248C134O3263C138O3285C142O3308C144O3313C148O3331C153O3331C159O3362C161O3367C165O3379C174O3388C177O3388C182O3379C188O3416,,
code-creation,JS,10,7272618,0xbe69490d0c,24, node:inspector:59:39,0xbe6948ff40,~
code-source-info,0xbe69490d0c,134,1393,1430,C0O1421C7O1411C18O1421C23O1430,,
code-creation,JS,10,7272689,0xbe69490ee4,193,#onMessage node:inspector:77:13,0x66313ff798,~
code-source-info,0xbe69490ee4,134,1893,2539,C0O1925C7O1925C15O1974C21O2006C23O2011C27O2029C32O2040C37O2029C43O2054C45O2059C49O2077C54O2091C59O2083C64O2105C68O2143C74O2165C78O2201C81O2230C86O2236C91O2249C96O2255C103O2197C109O2172C113O2280C114O2307C116O2329C121O2307C128O2379C133O2391C138O2379C144O2422C152O2422C171O2500C176O2508C184O2508C192O2538,,
code-creation,JS,10,7272831,0xbe6949177c,315, node:internal/repl/utils:312:10,0xbe69490128,~
code-source-info,0xbe6949177c,127,10121,12272,C0O10152C4O10176C9O10176C13O10204C14O10211C15O10240C20O10280C26O10314C37O10329C40O10344C49O10351C52O10329C58O10314C65O10590C71O10638C78O10648C83O10695C90O10705C95O10894C102O10904C111O10951C125O10970C131O11008C140O11008C147O11057C153O11382C165O11413C170O11420C181O11450C187O11477C192O11502C196O11534C207O11558C210O11382C216O11586C219O11594C237O11821C251O11870C259O11904C268O11905C283O11594C290O12194C297O12216C303O12246C308O12194C314O12271,,
code-creation,JS,10,7272979,0xbe69491b7c,604,inputPreviewCallback node:internal/repl/utils:392:34,0x2d4d28e0a78,~
code-source-info,0xbe69491b7c
code-creation,JS,10,7273116,0xbe69492004,215,disconnect node:inspector:141:13,0x66313ff950,~
code-source-info,0xbe69492004,134,3579,3942,C0O3589C2O3599C7O3619C8O3626C9O3632C11O3637C15O3649C20O3649C24O3668C28O3685C32O3725C34O3730C38O3748C43O3748C48O3786C65O3774C93O3774C96O3815C101O3823C110O3846C113O3842C119O3823C125O3763C189O3883C191O3888C195O3906C200O3906C204O3920C209O3933C214O3941,,
code-creation,JS,10,7273261,0xbe6949233c,71,maybeReadMore node:internal/streams/readable:855:23,0x9b20b6b340,~
code-source-info,0xbe6949233c,97,27416,27606,C0O27437C2O27448C4O27447C10O27459C15O27474C17O27472C20O27456C26O27489C31O27514C34O27520C40O27531C43O27528C47O27550C50O27558C64O27558C70O27605,,
code-creation,JS,10,7273335,0xbe69492494,46,canPushMore node:internal/streams/readable:540:21,0x9b20b6b0d8,~
code-source-info,0xbe69492494,97,16703,17019,C0O16911C2O16925C4O16924C10O16935C12O16933C17O16943C22O16964C27O16979C31O16971C36O17002C42O17009C45O17016,,
code-creation,JS,10,7273418,0xbe6949263c,141,maybeReadMore_ node:internal/streams/readable:862:24,0x9b20b6b398,~
code-source-info,0xbe6949263c,97,27633,29474,C0O29129C2O29092C4O29091C10O29103C15O29114C17O29112C20O29100C25O29123C30O29149C35O29164C39O29156C46O29199C52O29210C54O29208C59O29220C64O29235C70O29242C75O29276C80O29289C88O29289C92O29332C99O29332C104O29364C108O29354C113O29425C115O29078C119O29440C122O29446C128O29458C130O29457C135O29454C140O29473,,
tick,0x7ffdb20322f4,7287443,0,0x0,8
tick,0x7ffdb20322f4,7303448,0,0x0,8
tick,0x7ffdb20322f4,7318907,0,0x0,8
tick,0x7ffdb20322f4,7333925,0,0x0,8
tick,0x7ffdb20322f4,7349437,0,0x0,8
tick,0x7ffdb20322f4,7365458,0,0x0,8
tick,0x7ffdb20322f4,7381426,0,0x0,8
tick,0x7ffdb20322f4,7396413,0,0x0,8
tick,0x7ffdb20322f4,7411447,0,0x0,8
tick,0x7ffdb20322f4,7427199,0,0x0,8
tick,0x7ffdb20322f4,7442654,0,0x0,8
tick,0x7ffdb20322f4,7457647,0,0x0,8
tick,0x7ffdb20322f4,7472645,0,0x0,8
tick,0x7ffdb20322f4,7488665,0,0x0,8
tick,0x7ffdb20322f4,7503678,0,0x0,8
tick,0x7ffdb20322f4,7519749,0,0x0,8
tick,0x7ffdb20322f4,7535686,0,0x0,8
tick,0x7ffdb20322f4,7551287,0,0x0,8
tick,0x7ffdb20322f4,7567297,0,0x0,8
tick,0x7ffdb20322f4,7582342,0,0x0,8
tick,0x7ffdb20322f4,7598291,0,0x0,8
tick,0x7ffdb20322f4,7613262,0,0x0,8
tick,0x7ffdb20322f4,7629367,0,0x0,8
tick,0x7ffdb20322f4,7644902,0,0x0,8
tick,0x7ffdb20322f4,7660107,0,0x0,8
tick,0x7ffdb20322f4,7676131,0,0x0,8
tick,0x7ffdb20322f4,7691125,0,0x0,8
tick,0x7ffdb20322f4,7707084,0,0x0,8
code-creation,RegExp,3,7709827,0x7ff734390700,824,^[0-9A-Za-z]$
code-creation,RegExp,3,7709961,0x7ff734390a80,1232,\\r?\\n|\\r(?!\\n)
code-creation,RegExp,3,7710228,0x7ff734390f80,1140,^\\s*\\.(\\w*)$
code-creation,JS,10,7710310,0xbe694929b4,43, node:repl:1573:47,0x66313fd118,~
code-source-info,0xbe694929b4,114,53538,54002,C0O53582C7O53603C12O53582C18O53906C24O53927C33O53946C36O53927C42O54001,,
code-creation,JS,10,7710355,0xbe69492afc,30, node:repl:1574:59,0xbe694928f0,~
code-source-info,0xbe69492afc,114,53610,53876,C0O53736C11O53783C14O53783C21O53835C24O53743C29O53865,,
code-creation,JS,10,7710428,0xbe69492c74,102,getPreviewPos node:internal/repl/utils:160:25,0x2d4d28dd678,~
code-source-info,0xbe69492c74,127,4936,5170,C0O4965C3O4970C11O4993C16O4993C25O5012C34O4970C40O5044C43O5049C48O5054C56O5070C60O5061C68O5091C73O5091C82O5132C89O5141C95O5153C101O5165,,
code-creation,JS,10,7710473,0xbe69492de4,8,getPrompt node:internal/readline/interface:366:12,0x66313f42b0,~
code-source-info,0xbe69492de4,122,10370,10406,C0O10380C2O10392C4O10391C7O10401,,
new,MemoryChunk,0x7ff7343c0000,262144
code-creation,JS,11,7710881,0x7ff7343c3040,4460,onwrite node:internal/streams/writable:607:17,0x9b20b7f690,^
code-source-info,0x7ff7343c3040,102,19028,21680,,,
code-creation,JS,11,7710904,0x7ff734389b40,40, node:internal/per_context/primordials:339:21,0xa4fec32050,^
code-source-info,0x7ff734389b40,6,9996,10027,,,
code-creation,JS,11,7710944,0x7ff7343c4200,2116, node:internal/readline/interface:981:19,0x66313f4f10,^
code-source-info,0x7ff7343c4200,122,28507,29462,,,
code-creation,JS,11,7710967,0x7ff734389bc0,88, node:repl:1596:33,0x66313fd4d8,^
code-source-info,0x7ff734389bc0,114,54437,54463,,,
code-creation,JS,11,7711007,0x7ff734389c40,960,debuglog node:internal/util/debuglog:76:18,0x1d9b724da38,^
code-source-info,0x7ff734389c40,22,2403,3452,,,
code-creation,JS,11,7711028,0x7ff73438a040,316,createWriteWrap node:internal/stream_base_commons:109:25,0x10fd4192a08,^
code-source-info,0x7ff73438a040,106,2834,3059,,,
code-creation,JS,11,7711108,0x7ff7343c4a80,2688,writeOrBuffer node:internal/streams/writable:540:23,0x9b20b7f588,^
code-source-info,0x7ff7343c4a80,102,16957,18154,,,
code-creation,JS,11,7711132,0x7ff73438a1c0,696,afterWriteDispatched node:internal/stream_base_commons:155:30,0x10fd4192b10,^
code-source-info,0x7ff73438a1c0,106,3973,4261,,,
code-creation,JS,11,7711152,0x7ff73438a4c0,312,writeGeneric node:internal/stream_base_commons:147:22,0x10fd4192ab8,^
code-source-info,0x7ff73438a4c0,106,3750,3940,,,
code-creation,JS,11,7711179,0x7ff73438a640,1528,Socket._writeGeneric node:net:921:42,0x9b20b49da8,^
code-source-info,0x7ff73438a640,86,24907,25845,,,
code-creation,JS,11,7711197,0x7ff73438ac80,148,Socket._write node:net:963:35,0x9b20b49f00,^
code-source-info,0x7ff73438ac80,86,25990,26065,,,
code-creation,JS,10,7711286,0xbe69493ef4,191,moveCursor node:internal/readline/callbacks:61:20,0x66313eb8f8,~
code-source-info,0xbe69493ef4,119,1289,1807,C0O1321C4O1356C12O1356C17O1406C24O1430C28O1436C30O1448C36O1484C39O1492C46O1492C52O1523C53O1535C54O1557C57O1566C58O1573C63O1585C65O1593C68O1596C74O1599C77O1596C91O1617C92O1624C97O1636C99O1644C102O1647C106O1647C118O1667C119O1674C124O1686C126O1694C129O1697C135O1700C138O1697C152O1718C153O1725C158O1737C160O1745C163O1748C167O1748C179O1782C184O1782C190O1804,,
code-creation,JS,10,7711363,0xbe69494104,44,isCursorAtInputEnd node:internal/repl/utils:168:30,0x2d4d28dd6d0,~
code-source-info,0xbe69494104,127,5203,5366,C0O5247C3O5247C7O5221C12O5232C17O5286C22O5306C26O5291C31O5336C36O5356C40O5341C43O5361,,
code-creation,JS,11,7711479,0x7ff73438ad40,1800, node:internal/validators:240:3,0x1d9b72433b8,^
code-source-info,0x7ff73438ad40,15,6822,7870,,,
code-creation,JS,11,7711518,0x7ff7343c5540,2672,_write node:internal/streams/writable:445:16,0x9b20b7f530,^
code-source-info,0x7ff7343c5540,102,14300,15715,,,
code-creation,JS,11,7711539,0x7ff73438b480,276,Writable.write node:internal/streams/writable:496:36,0x10fd41811b8,^
code-source-info,0x7ff73438b480,102,15754,15944,,,
code-creation,JS,11,7711559,0x7ff73438b5c0,324,stripVTControlCharacters node:internal/util/inspect:2411:34,0x1d9b724d440,^
code-source-info,0x7ff73438b5c0,21,83688,83786,,,
tick,0x7ffdb20322f4,7723252,0,0x0,8
tick,0x7ffdb20322f4,7739264,0,0x0,8
tick,0x7ffdb20322f4,7754652,0,0x0,8
tick,0x7ffdb20322f4,7770654,0,0x0,8
tick,0x7ffdb20322f4,7786649,0,0x0,8
tick,0x7ffdb20322f4,7801594,0,0x0,8
tick,0x7ffdb20322f4,7817647,0,0x0,8
tick,0x7ffdb20322f4,7832698,0,0x0,8
tick,0x7ffdb20322f4,7848248,0,0x0,8
tick,0x7ffdb20322f4,7864252,0,0x0,8
tick,0x7ffdb20322f4,7880238,0,0x0,8
tick,0x7ffdb20322f4,7896236,0,0x0,8
tick,0x7ffdb20322f4,7912218,0,0x0,8
tick,0x7ffdb20322f4,7928338,0,0x0,8
tick,0x7ffdb20322f4,7943869,0,0x0,8
code-creation,RegExp,3,7949721,0x7ff734391440,800,^[A-Z]$
code-creation,JS,10,7949852,0xbe6949495c,90,clearLine node:internal/readline/callbacks:95:19,0x66313eb950,~
code-source-info,0xbe6949495c,119,1981,2379,C0O2010C4O2045C12O2045C17O2095C25O2147C31O2183C34O2191C41O2191C47O2222C48O2234C49O2263C50O2267C57O2273C62O2301C69O2307C75O2325C78O2354C83O2354C89O2376,,
tick,0x7ffdb20322f4,7959844,0,0x0,8
tick,0x7ffdb20322f4,7975829,0,0x0,8
tick,0x7ffdb20322f4,7991865,0,0x0,8
tick,0x7ffdb20322f4,8007135,0,0x0,8
tick,0x7ffdb20322f4,8022538,0,0x0,8
tick,0x7ffdb20322f4,8037972,0,0x0,8
tick,0x7ffdb20322f4,8053728,0,0x0,8
tick,0x7ffdb20322f4,8068906,0,0x0,8
tick,0x7ffdb20322f4,8084075,0,0x0,8
code-creation,JS,11,8093219,0x7ff73438b740,388,getCursorPos node:internal/readline/interface:1022:15,0x66313f4f68,^
code-source-info,0x7ff73438b740,122,29661,29822,,,
code-creation,JS,11,8093293,0x7ff73438b900,112,isEmpty node:internal/fixed_queue:95:10,0x1d9b7264b58,^
code-source-info,0x7ff73438b900,37,3731,3773,,,
code-creation,JS,11,8093325,0x7ff7343c6000,212,newAsyncId node:internal/async_hooks:417:20,0x1d9b7242348,^
code-source-info,0x7ff7343c6000,14,14984,15037,,,
code-creation,JS,11,8093347,0x7ff7343c6100,296,shift node:internal/fixed_queue:108:8,0x1d9b7264c08,^
code-source-info,0x7ff7343c6100,37,4061,4320,,,
code-creation,JS,11,8093387,0x7ff7343ce000,2248,processTicksAndRejections node:internal/process/task_queues:67:35,0x1d9b7263650,^
code-source-info,0x7ff7343ce000,35,1545,2522,,,
code-creation,JS,11,8093409,0x7ff7343c6280,232,get columns node:internal/readline/interface:348:14,0x66313f4200,^
code-source-info,0x7ff7343c6280,122,9988,10092,,,
code-creation,JS,11,8093429,0x7ff7343c63c0,308, node:repl:1574:59,0xbe694928f0,^
code-source-info,0x7ff7343c63c0,114,53610,53876,,,
code-creation,JS,11,8093448,0x7ff7343c6540,224,setHasTickScheduled node:internal/process/task_queues:51:29,0x1d9b72635a0,^
code-source-info,0x7ff7343c6540,35,1137,1197,,,
code-creation,JS,11,8093468,0x7ff7343c6640,376,shift node:internal/fixed_queue:80:8,0x1d9b7264988,^
code-source-info,0x7ff7343c6640,37,3379,3596,,,
code-creation,JS,11,8093486,0x7ff7343c6800,56,get node:readline:334:8,0x66313e8ae0,^
code-source-info,0x7ff7343c6800,118,8267,8313,,,
tick,0x7ffdb20322f4,8099505,0,0x0,8
tick,0x7ffdb20322f4,8115088,0,0x0,8
tick,0x7ffdb20322f4,8130115,0,0x0,8
tick,0x7ffdb20322f4,8145665,0,0x0,8
tick,0x7ffdb20322f4,8161656,0,0x0,8
tick,0x7ffdb20322f4,8177714,0,0x0,8
tick,0x7ffdb20322f4,8193679,0,0x0,8
tick,0x7ffdb20322f4,8208647,0,0x0,8
tick,0x7ffdb20322f4,8224651,0,0x0,8
tick,0x7ffdb20322f4,8240162,0,0x0,8
tick,0x7ffdb20322f4,8256230,0,0x0,8
tick,0x7ffdb20322f4,8272227,0,0x0,8
tick,0x7ffdb20322f4,8288222,0,0x0,8
tick,0x7ffdb20322f4,8303193,0,0x0,8
tick,0x7ffdb20322f4,8318164,0,0x0,8
tick,0x7ffdb20322f4,8333821,0,0x0,8
tick,0x7ffdb20322f4,8349455,0,0x0,8
tick,0x7ffdb20322f4,8365473,0,0x0,8
new,MemoryChunk,0x7ff734400000,262144
code-move,0x7ff7343c3040,0x7ff734403040
code-move,0x7ff7343c4200,0x7ff734404200
code-move,0x7ff7343c4a80,0x7ff734404a80
code-move,0x7ff7343c5540,0x7ff734405540
code-move,0x7ff7343c6000,0x7ff734406000
code-move,0x7ff7343c6100,0x7ff734406100
code-move,0x7ff7343c6280,0x7ff734406280
code-move,0x7ff7343c63c0,0x7ff7344063c0
code-move,0x7ff7343c6540,0x7ff734406540
code-move,0x7ff7343c6640,0x7ff734406640
code-move,0x7ff7343c6800,0x7ff734406800
code-move,0x7ff7343ce000,0x7ff734406880
code-move,0x7ff734383040,0x7ff734407180
code-move,0x7ff734383a40,0x7ff734407b80
code-move,0x7ff734383cc0,0x7ff734407e00
code-move,0x7ff734384180,0x7ff7344082c0
code-move,0x7ff734384380,0x7ff7344084c0
code-move,0x7ff7343844c0,0x7ff734408600
code-move,0x7ff734384700,0x7ff734408840
code-move,0x7ff734384900,0x7ff734408a40
code-move,0x7ff7343849c0,0x7ff734408b00
code-move,0x7ff734384a80,0x7ff734408bc0
code-move,0x7ff734384bc0,0x7ff734408d00
code-move,0x7ff734384cc0,0x7ff734408e00
code-move,0x7ff734384e00,0x7ff734408f40
code-move,0x7ff734385040,0x7ff734409100
code-move,0x7ff734385540,0x7ff734409240
code-move,0x7ff7343856c0,0x7ff7344093c0
code-move,0x7ff734385780,0x7ff734409480
code-move,0x7ff734385900,0x7ff734409600
code-move,0x7ff734385a40,0x7ff734409740
code-move,0x7ff734385b80,0x7ff734409880
code-move,0x7ff734386000,0x7ff734409b00
code-move,0x7ff734386100,0x7ff734409c00
code-move,0x7ff7343863c0,0x7ff734409dc0
code-move,0x7ff734386500,0x7ff734409f00
code-move,0x7ff7343865c0,0x7ff734409fc0
new,MemoryChunk,0x16e264c0000,262144
code-move,0x7ff734386840,0x7ff73440a240
code-move,0x7ff734386f80,0x7ff73440a980
code-move,0x7ff734387040,0x7ff73440aa40
code-move,0x7ff734387200,0x7ff73440ac00
code-move,0x7ff7343872c0,0x7ff73440acc0
code-move,0x7ff734387880,0x7ff73440b280
code-move,0x7ff734387c80,0x7ff73440b680
code-move,0x7ff734387f00,0x7ff73440b900
code-move,0x7ff734388100,0x7ff73440bb00
code-move,0x7ff7343881c0,0x7ff73440bbc0
code-move,0x7ff734388240,0x7ff73440bc40
code-move,0x7ff734388780,0x7ff73440c180
code-move,0x7ff734388b80,0x7ff73440c580
code-move,0x7ff734388cc0,0x7ff73440c6c0
code-move,0x7ff734388d80,0x7ff73440c780
code-move,0x7ff734389100,0x7ff73440cb00
code-move,0x7ff7343891c0,0x7ff73440cbc0
code-move,0x7ff734389340,0x7ff73440cd40
code-move,0x7ff7343894c0,0x7ff73440cec0
code-move,0x7ff734389580,0x7ff73440cf80
code-move,0x7ff734389a80,0x7ff73440d480
code-move,0x7ff734389b40,0x7ff73440d540
code-move,0x7ff734389bc0,0x7ff73440d5c0
code-move,0x7ff734389c40,0x7ff73440d640
code-move,0x7ff73438a040,0x7ff73440da40
code-move,0x7ff73438a1c0,0x7ff73440dbc0
code-move,0x7ff73438a4c0,0x7ff73440dec0
code-move,0x7ff73438a640,0x7ff73440e040
code-move,0x7ff73438ac80,0x7ff73440e680
code-move,0x7ff73438ad40,0x7ff73440e740
code-move,0x7ff73438b480,0x7ff73440ee80
code-move,0x7ff73438b5c0,0x7ff73440efc0
code-move,0x7ff73438b740,0x7ff73440f140
code-move,0x7ff73438b900,0x7ff73440f300
code-move,0x7ff73438ba40,0x7ff73440f3c0
code-move,0x7ff73438d040,0x7ff7344109c0
code-move,0x7ff73438da80,0x7ff734411400
code-move,0x7ff73438e2c0,0x7ff734411c40
code-move,0x7ff73438eb40,0x7ff7344124c0
code-move,0x7ff73438f600,0x7ff734412f80
code-move,0x7ff734390300,0x7ff734413c80
code-move,0x7ff734390700,0x7ff734414080
code-move,0x7ff734390a80,0x7ff734414400
code-move,0x7ff734390f80,0x7ff734414900
code-move,0x7ff734391440,0x7ff734414dc0
delete,MemoryChunk,0x7ff7343c0000
delete,MemoryChunk,0x7ff734380000
delete,MemoryChunk,0x162abf80000
delete,MemoryChunk,0x28bc73c0000
delete,MemoryChunk,0x19224300000
delete,MemoryChunk,0x17371400000
tick,0x7ffdb20322f4,8381447,0,0x0,8
tick,0x7ffdb20322f4,8396446,0,0x0,8
tick,0x7ffdb20322f4,8412436,0,0x0,8
tick,0x7ffdb20322f4,8427482,0,0x0,8
tick,0x7ffdb20322f4,8442967,0,0x0,8
tick,0x7ffdb20322f4,8458978,0,0x0,8
tick,0x7ffdb20322f4,8475014,0,0x0,8
tick,0x7ffdb20322f4,8491010,0,0x0,8
tick,0x7ffdb20322f4,8506992,0,0x0,8
tick,0x7ffdb20322f4,8521974,0,0x0,8
tick,0x7ffdb20322f4,8537005,0,0x0,8
tick,0x7ffdb20322f4,8552586,0,0x0,8
tick,0x7ffdb20322f4,8568590,0,0x0,8
tick,0x7ffdb20322f4,8583600,0,0x0,8
code-creation,JS,10,8591343,0xa5da6078ec,5,get node:readline:280:8,0x66313e87c8,~
code-source-info,0xa5da6078ec,118,7325,7368,C0O7349C4O7361,,
code-creation,JS,10,8591448,0xa5da607a0c,164, node:internal/readline/interface:755:16,0x66313f4990,~
code-source-info,0xa5da607a0c,122,21488,21969,C0O21507C6O21514C11O21526C16O21531C22O21538C27O21552C29O21557C31O21556C35O21575C40O21586C45O21569C51O21693C56O21713C61O21724C66O21693C72O21740C74O21761C77O21787C84O21801C91O21808C95O21761C104O21857C109O21868C114O21881C119O21886C124O21831C129O21820C132O21750C136O21904C143O21919C146O21916C150O21936C152O21941C154O21940C158O21954C163O21968,,
code-creation,JS,10,8591529,0xa5da607bf4,73,charLengthLeft node:internal/readline/utils:39:24,0x66313ecf70,~
code-source-info,0xa5da607bf4,120,1019,1267,C0O1033C1O1039C6O1050C7O1059C8O1063C10O1070C17O1084C22O1118C26O1084C34O1126C36O1123C43O1162C48O1196C52O1162C60O1204C62O1201C67O1237C69O1246C70O1255C72O1264,,
code-creation,JS,11,8591774,0x7ff734415100,1328,handleWriteReq node:internal/stream_base_commons:45:24,0x10fd4192958,^
code-source-info,0x7ff734415100,106,1221,2086,,,
code-creation,JS,11,8591808,0x7ff734415680,144,initHooksExist node:internal/async_hooks:478:24,0x1d9b72425b0,^
code-source-info,0x7ff734415680,14,16722,16756,,,
code-creation,JS,11,8591829,0x7ff734415740,332,emitInitScript node:internal/async_hooks:495:24,0x1d9b7242710,^
code-source-info,0x7ff734415740,14,16996,17392,,,
code-creation,JS,11,8591854,0x7ff7344158c0,1104,pushAsyncContext node:internal/async_hooks:539:26,0x1d9b72428c8,^
code-source-info,0x7ff7344158c0,14,18097,18652,,,
code-creation,JS,11,8591873,0x7ff734415d40,324,emitBeforeScript node:internal/async_hooks:509:26,0x1d9b7242768,^
code-source-info,0x7ff734415d40,14,17423,17579,,,
code-creation,JS,11,8591891,0x7ff734415ec0,144,destroyHooksExist node:internal/async_hooks:486:27,0x1d9b7242660,^
code-source-info,0x7ff734415ec0,14,16849,16886,,,
code-creation,JS,11,8591910,0x7ff734415f80,144,enabledHooksExist node:internal/async_hooks:474:27,0x1d9b7242558,^
code-source-info,0x7ff734415f80,14,16660,16695,,,
code-creation,JS,11,8591940,0x7ff734416040,1200,popAsyncContext node:internal/async_hooks:553:25,0x1d9b7242920,^
code-source-info,0x7ff734416040,14,18745,19347,,,
code-creation,JS,11,8593029,0x7ff734416540,328,emitDestroyScript node:internal/async_hooks:525:27,0x1d9b7242818,^
code-source-info,0x7ff734416540,14,17742,17931,,,
code-creation,JS,11,8593062,0x7ff7344166c0,300,isEnabled node:internal/process/permission:16:12,0x1d9b725d818,^
code-source-info,0x7ff7344166c0,29,339,580,,,
code-creation,JS,11,8593083,0x7ff734416840,204,get node:internal/bootstrap/node:100:8,0xa4fec3e6c0,^
code-source-info,0x7ff734416840,12,3932,3981,,,
code-creation,JS,11,8593102,0x7ff734416940,312,getDefaultTriggerAsyncId node:internal/async_hooks:433:34,0x1d9b72423f8,^
code-source-info,0x7ff734416940,14,15459,15722,,,
code-creation,JS,11,8593121,0x7ff734416ac0,200,isFull node:internal/fixed_queue:71:9,0x1d9b72648d8,^
code-source-info,0x7ff734416ac0,37,3209,3272,,,
code-creation,JS,11,8593139,0x7ff734416bc0,268,push node:internal/fixed_queue:75:7,0x1d9b7264930,^
code-source-info,0x7ff734416bc0,37,3282,3368,,,
code-creation,JS,11,8593158,0x7ff734416d00,384,push node:internal/fixed_queue:99:7,0x1d9b7264bb0,^
code-source-info,0x7ff734416d00,37,3783,4050,,,
code-creation,JS,11,8593199,0x7ff73441d100,2404,nextTick node:internal/process/task_queues:103:18,0x1d9b72636a8,^
code-source-info,0x7ff73441d100,35,2687,3575,,,
tick,0x7ffdb20322f4,8599584,0,0x0,8
tick,0x7ffdb20322f4,8614611,0,0x0,8
tick,0x7ffdb20322f4,8630650,0,0x0,8
tick,0x7ffdb20322f4,8646123,0,0x0,8
tick,0x7ffdb20322f4,8662152,0,0x0,8
tick,0x7ffdb20322f4,8678007,0,0x0,8
tick,0x7ffdb20322f4,8694057,0,0x0,8
tick,0x7ffdb20322f4,8710006,0,0x0,8
tick,0x7ffdb20322f4,8725992,0,0x0,8
code-creation,JS,11,8727288,0x7ff734416ec0,1468,showPreview node:internal/repl/utils:366:23,0x2d4d28dd938,^
code-source-info,0x7ff734416ec0,127,12365,15468,,,
code-creation,JS,11,8727332,0x7ff7344174c0,292,emitAfterScript node:internal/async_hooks:517:25,0x1d9b72427c0,^
code-source-info,0x7ff7344174c0,14,17609,17710,,,
code-creation,JS,11,8727354,0x7ff734417640,384, node:repl:1598:36,0x66313fd530,^
code-source-info,0x7ff734417640,114,54541,54698,,,
code-creation,JS,11,8727372,0x7ff734417800,136, node:internal/per_context/primordials:388:32,0xa4fec328f0,^
code-source-info,0x7ff734417800,6,11647,11708,,,
code-creation,JS,11,8727401,0x7ff7344178c0,1588,cursorTo node:internal/readline/callbacks:33:18,0x66313eb8a0,^
code-source-info,0x7ff7344178c0,119,509,1200,,,
code-creation,JS,11,8727420,0x7ff734417f40,108,getPrompt node:internal/readline/interface:366:12,0x66313f42b0,^
code-source-info,0x7ff734417f40,122,10370,10406,,,
code-creation,JS,11,8727445,0x7ff734418000,684,defaultPrepareStackTrace node:internal/errors:95:34,0xa4fec39458,^
code-source-info,0x7ff734418000,10,2429,2879,,,
code-creation,JS,11,8727463,0x7ff734418300,132,ErrorPrepareStackTrace node:internal/errors:162:32,0xa4fec3a070,^
code-source-info,0x7ff734418300,10,5076,5146,,,
code-creation,JS,11,8727584,0x7ff73441dac0,5360,Readable.read node:internal/streams/readable:645:35,0x9b20b6c150,^
code-source-info,0x7ff73441dac0,97,19996,24802,,,
code-creation,JS,11,8727633,0x7ff73441f000,3320,onData node:internal/readline/emitKeypressEvents:46:18,0x2d4d28d0b70,^
code-source-info,0x7ff73441f000,121,1075,2397,,,
tick,0x7ffdb20322f4,8741553,0,0x0,8
tick,0x7ffdb20322f4,8757581,0,0x0,8
tick,0x7ffdb20322f4,8773586,0,0x0,8
tick,0x7ffdb20322f4,8788950,0,0x0,8
tick,0x7ffdb20322f4,8804962,0,0x0,8
tick,0x7ffdb20322f4,8820020,0,0x0,8
tick,0x7ffdb20322f4,8835984,0,0x0,8
tick,0x7ffdb20322f4,8851560,0,0x0,8
tick,0x7ffdb20322f4,8867535,0,0x0,8
tick,0x7ffdb20322f4,8882550,0,0x0,8
tick,0x7ffdb20322f4,8897521,0,0x0,8
tick,0x7ffdb20322f4,8913532,0,0x0,8
tick,0x7ffdb20322f4,8929544,0,0x0,8
tick,0x7ffdb20322f4,8945040,0,0x0,8
tick,0x7ffdb20322f4,8961102,0,0x0,8
tick,0x7ffdb20322f4,8977071,0,0x0,8
new,MemoryChunk,0x1b906ac0000,262144
new,MemoryChunk,0x796fa00000,262144
new,MemoryChunk,0x36f6bf00000,262144
new,MemoryChunk,0x17116b40000,262144
new,MemoryChunk,0x39123e00000,262144
code-move,0xa5da604ddc,0x39123e05aec
sfi-move,0xa5da606a28,0x39123e06fe0
sfi-move,0xa5da606a80,0x39123e07038
sfi-move,0xa5da606ad8,0x39123e07090
sfi-move,0xa5da606b30,0x39123e070d0
sfi-move,0xa5da606b88,0x39123e07128
sfi-move,0xa5da606be0,0x39123e07180
sfi-move,0xa5da606c38,0x39123e071d8
sfi-move,0xa5da606cc8,0x39123e07250
sfi-move,0xa5da606d58,0x39123e072e0
sfi-move,0xa5da606db0,0x39123e07320
sfi-move,0xa5da606e08,0x39123e07360
sfi-move,0xa5da606e60,0x39123e073a0
sfi-move,0xa5da606eb8,0x39123e073e0
sfi-move,0xa5da606f50,0x39123e07478
sfi-move,0xa5da606fa8,0x39123e074b8
sfi-move,0xa5da607000,0x39123e07510
sfi-move,0xa5da607058,0x39123e07550
sfi-move,0xa5da6070b0,0x39123e07590
sfi-move,0xa5da607148,0x39123e07628
sfi-move,0xa5da6071d8,0x39123e076a0
sfi-move,0xa5da607268,0x39123e07718
sfi-move,0xa5da6072f8,0x39123e07790
sfi-move,0xa5da607388,0x39123e07820
sfi-move,0xa5da607418,0x39123e07898
sfi-move,0xa5da6074d8,0x39123e07958
sfi-move,0xa5da607590,0x39123e07a10
sfi-move,0xa5da607620,0x39123e07a88
code-move,0xa5da6078ec,0x39123e07b94
code-move,0xa5da607a0c,0x39123e07c9c
code-move,0xa5da607bf4,0x39123e07e84
code-move,0xa5da608634,0x39123e085e4
code-move,0xa5da608f54,0x39123e08e74
code-move,0xa5da6090e4,0x39123e09004
code-move,0xa5da609264,0x39123e09144
code-move,0xa5da60a77c,0x39123e0a65c
code-move,0xa5da60aa94,0x39123e0a974
code-move,0xa5da60ad1c,0x39123e0abfc
sfi-move,0xa5da60d8b8,0x39123e0c240
sfi-move,0xa5da60d948,0x39123e0c2d0
sfi-move,0xa5da60da10,0x39123e0c310
sfi-move,0xa5da60dac8,0x39123e0c350
sfi-move,0xa5da60eef8,0x39123e0cae0
sfi-move,0xa5da60ef50,0x39123e0cb38
sfi-move,0xa5da60f028,0x39123e0cb78
sfi-move,0xa5da60f080,0x39123e0cbd0
sfi-move,0xa5da60fa60,0x39123e0cf00
sfi-move,0xa5da60fab8,0x39123e0cf58
code-move,0xa5da60ffd4,0x39123e0d194
code-move,0xa5da6110dc,0x39123e0e29c
code-move,0xa5da611504,0x39123e0e6c4
code-move,0xa5da61178c,0x39123e0e94c
code-move,0xa5da61188c,0x39123e0ea4c
sfi-move,0xa5da6120b0,0x39123e0f258
code-move,0xa5da612184,0x39123e0f32c
code-move,0xa5da612374,0x39123e0f504
sfi-move,0xa5da636760,0x39123e11430
code-move,0xa5da636acc,0x39123e1159c
code-move,0xa5da63705c,0x39123e11724
code-move,0xa5da63736c,0x39123e11a34
code-move,0xa5da63764c,0x39123e11d14
sfi-move,0xa5da637890,0x39123e11f58
code-move,0xa5da63796c,0x39123e12034
code-move,0xa5da637b64,0x39123e1219c
code-move,0xa5da637dac,0x39123e122c4
code-move,0xa5da637f4c,0x39123e12464
code-move,0xa5da6381b4,0x39123e126cc
code-move,0xa5da638534,0x39123e128f4
code-move,0xa5da638bb4,0x39123e12f74
code-move,0xa5da638fcc,0x39123e1338c
code-move,0xa5da639cdc,0x39123e13cf4
code-move,0xa5da63a10c,0x39123e14124
new,MemoryChunk,0xd6cc500000,262144
sfi-move,0xa5da63a5b8,0x39123e14580
sfi-move,0xa5da63a610,0x39123e145d8
sfi-move,0xa5da63a668,0x39123e14630
sfi-move,0xa5da63a6c8,0x39123e14690
sfi-move,0xa5da63a720,0x39123e146d0
sfi-move,0xa5da63a778,0x39123e14728
sfi-move,0xa5da63a7d0,0x39123e14780
sfi-move,0xa5da63a8a0,0x39123e14850
sfi-move,0xa5da63a8f8,0x39123e148a8
sfi-move,0xa5da63a9c8,0x39123e14978
sfi-move,0xa5da63aa20,0x39123e149d0
sfi-move,0xa5da63aaf0,0x39123e14aa0
sfi-move,0xa5da63ab48,0x39123e14af8
code-move,0x66313c1e6c,0xd6cc514a94
sfi-move,0xa5da63ac18,0x39123e14bc8
sfi-move,0xa5da63ac70,0x39123e14c20
sfi-move,0xa5da63acc8,0x39123e14c78
sfi-move,0xa5da63ad20,0x39123e14cd0
sfi-move,0xa5da63ad78,0x39123e14d28
sfi-move,0xa5da63add0,0x39123e14d80
sfi-move,0xa5da63ae28,0x39123e14dd8
sfi-move,0xa5da63ae88,0x39123e14e38
sfi-move,0xa5da63aee0,0x39123e14e90
code-move,0x66313d2d7c,0xd6cc5230d4
code-move,0xa5da63b59c,0x39123e15534
code-move,0x66313d4984,0xd6cc5249d4
sfi-move,0xa5da63c298,0x39123e16230
sfi-move,0xa5da63c370,0x39123e16308
code-move,0xa5da63c4bc,0x39123e16454
code-move,0xa5da63d75c,0x39123e176f4
code-move,0xa5da63d7fc,0x39123e17794
code-move,0xa5da63e6fc,0x39123e18604
sfi-move,0x66313dd688,0xd6cc52c400
sfi-move,0x66313dd6e0,0xd6cc52c458
sfi-move,0x66313dd738,0xd6cc52c4b0
code-move,0xa5da63e814,0x39123e1871c
code-move,0xa5da63ea6c,0x39123e18974
sfi-move,0x66313dd790,0xd6cc52c508
sfi-move,0x66313dd810,0xd6cc52c588
sfi-move,0x66313dd868,0xd6cc52c5e0
sfi-move,0x66313dd8c0,0xd6cc52c638
sfi-move,0x66313dd918,0xd6cc52c690
sfi-move,0x66313dd970,0xd6cc52c6e8
sfi-move,0x66313dd9c8,0xd6cc52c740
sfi-move,0x66313dda20,0xd6cc52c798
sfi-move,0x66313dda78,0xd6cc52c7f0
sfi-move,0x66313ddad0,0xd6cc52c848
sfi-move,0x66313ddb28,0xd6cc52c8a0
sfi-move,0x66313ddb80,0xd6cc52c8f8
sfi-move,0x66313ddd18,0xd6cc52ca90
code-move,0xa5da63ebbc,0x39123e18ac4
sfi-move,0xa5da63f0e8,0x39123e18ff0
code-move,0xa5da63f1a4,0x39123e19094
code-move,0xa5da63f34c,0x39123e1923c
sfi-move,0xa5da63f650,0x39123e19530
sfi-move,0xa5da63f6a8,0x39123e19588
sfi-move,0xa5da63f700,0x39123e195e0
sfi-move,0xa5da63f758,0x39123e19638
sfi-move,0xa5da63f7b0,0x39123e19690
sfi-move,0xa5da63f808,0x39123e196e8
code-move,0xa5da63fd54,0x39123e19b44
sfi-move,0x66313ddeb0,0xd6cc52cc28
sfi-move,0x66313ddf48,0xd6cc52ccc0
sfi-move,0x9b20b49128,0x39123e1e180
sfi-move,0x9b20b491b8,0x39123e1e210
sfi-move,0x66313ddfe0,0xd6cc52cd58
sfi-move,0x66313de078,0xd6cc52cdf0
sfi-move,0x66313de110,0xd6cc52ce88
sfi-move,0x66313de1a8,0xd6cc52cf20
sfi-move,0x9b20b49248,0x39123e1e2a0
sfi-move,0x9b20b492a0,0x39123e1e2f8
sfi-move,0x9b20b49330,0x39123e1e388
sfi-move,0x9b20b493c0,0x39123e1e418
sfi-move,0x9b20b49450,0x39123e1e490
sfi-move,0x9b20b494e0,0x39123e1e4f0
sfi-move,0x66313de340,0xd6cc52d0b8
sfi-move,0x66313de458,0xd6cc52d1d0
sfi-move,0x66313de4f0,0xd6cc52d268
sfi-move,0x66313de588,0xd6cc52d300
sfi-move,0x66313de6a0,0xd6cc52d418
sfi-move,0x66313de738,0xd6cc52d4b0
sfi-move,0x66313de850,0xd6cc52d5c8
sfi-move,0x66313de8e0,0xd6cc52d640
sfi-move,0x66313de978,0xd6cc52d6d8
sfi-move,0x9b20b49570,0x39123e1e568
sfi-move,0x9b20b49608,0x39123e1e600
sfi-move,0x9b20b49698,0x39123e1e660
sfi-move,0x9b20b49728,0x39123e1e6d8
sfi-move,0x9b20b497b8,0x39123e1e738
sfi-move,0x9b20b49850,0x39123e1e7d0
sfi-move,0x9b20b498e8,0x39123e1e868
sfi-move,0x9b20b49978,0x39123e1e8f8
sfi-move,0x9b20b49a10,0x39123e1e990
sfi-move,0x9b20b49a68,0x39123e1e9e8
sfi-move,0x9b20b49ac0,0x39123e1ea40
sfi-move,0x9b20b49b18,0x39123e1ea98
sfi-move,0x9b20b49b70,0x39123e1eaf0
sfi-move,0x9b20b49c08,0x39123e1eb88
sfi-move,0x9b20b49c60,0x39123e1ebe0
sfi-move,0x9b20b49cb8,0x39123e1ec38
sfi-move,0x9b20b49d10,0x39123e1ec90
sfi-move,0x66313dea10,0xd6cc52d770
sfi-move,0x66313deaa8,0xd6cc52d808
sfi-move,0x66313deb40,0xd6cc52d8a0
sfi-move,0x66313debd0,0xd6cc52d918
sfi-move,0x66313dec68,0xd6cc52d9b0
sfi-move,0x66313ded00,0xd6cc52da48
sfi-move,0x66313ded98,0xd6cc52dae0
sfi-move,0x66313dee30,0xd6cc52db78
sfi-move,0x66313deec8,0xd6cc52dc10
sfi-move,0x66313def60,0xd6cc52dca8
sfi-move,0x66313deff8,0xd6cc52dd40
sfi-move,0x66313df110,0xd6cc52de58
sfi-move,0x66313df228,0xd6cc52df70
sfi-move,0x9b20b49da8,0x39123e1ed28
sfi-move,0x9b20b49e70,0x39123e1eda8
sfi-move,0x9b20b49f00,0x39123e1ee38
sfi-move,0x9b20b49f90,0x39123e1eeb0
sfi-move,0x9b20b49fe8,0x39123e1ef08
sfi-move,0x9b20b4a040,0x39123e1ef60
sfi-move,0x9b20b4a0d0,0x39123e1eff0
sfi-move,0x9b20b4a128,0x39123e1f048
sfi-move,0x9b20b4a1b8,0x39123e1f0c0
sfi-move,0x9b20b4a248,0x39123e1f138
sfi-move,0x9b20b4a2d8,0x39123e1f1c8
sfi-move,0x9b20b4a368,0x39123e1f258
sfi-move,0x9b20b4a3f8,0x39123e1f2e8
sfi-move,0x66313df340,0xd6cc52e088
sfi-move,0x66313df3d8,0xd6cc52e120
sfi-move,0x66313df4f0,0xd6cc52e238
sfi-move,0x66313df588,0xd6cc52e2d0
sfi-move,0x66313df6a0,0xd6cc52e3e8
sfi-move,0x66313df738,0xd6cc52e480
sfi-move,0x66313df7d0,0xd6cc52e518
sfi-move,0x66313df868,0xd6cc52e5b0
sfi-move,0x66313df900,0xd6cc52e648
sfi-move,0x66313dfa18,0xd6cc52e760
sfi-move,0x9b20b4a4c0,0x39123e1f3b0
sfi-move,0x9b20b4a578,0x39123e1f450
sfi-move,0x9b20b4a610,0x39123e1f4e8
sfi-move,0x9b20b4a6a8,0x39123e1f580
sfi-move,0x9b20b4a740,0x39123e1f618
sfi-move,0x9b20b4a798,0x39123e1f670
sfi-move,0x9b20b4a7f0,0x39123e1f6c8
sfi-move,0x9b20b4a848,0x39123e1f708
sfi-move,0x9b20b4a8a0,0x39123e1f748
sfi-move,0x66313dfaa8,0xd6cc52e7d8
sfi-move,0x66313dfb40,0xd6cc52e870
sfi-move,0x66313e4b68,0xd6cc531ad0
sfi-move,0x66313e4bc0,0xd6cc531b10
sfi-move,0x66313e4c18,0xd6cc531b50
sfi-move,0x66313e4c70,0xd6cc531b90
sfi-move,0x66313e4cc8,0xd6cc531bd0
sfi-move,0x9b20b4a938,0x39123e1f7e0
sfi-move,0x9b20b4a9c8,0x39123e1f858
sfi-move,0x9b20b4aa58,0x39123e1f8d0
sfi-move,0x9b20b4ab28,0x39123e1f948
sfi-move,0x9b20b4aba8,0x39123e1f9c8
sfi-move,0x9b20b4e578,0x39123e20808
sfi-move,0x9b20b4e5d0,0x39123e20860
sfi-move,0x9b20b4e628,0x39123e208b8
sfi-move,0x9b20b4e680,0x39123e20910
sfi-move,0x9b20b4e6d8,0x39123e20968
sfi-move,0x9b20b4e730,0x39123e209c0
sfi-move,0x9b20b509e8,0x39123e20fe0
sfi-move,0x9b20b50a40,0x39123e21038
sfi-move,0x9b20b50b00,0x39123e210f8
sfi-move,0x9b20b50b58,0x39123e21150
sfi-move,0x9b20b50bb0,0x39123e211a8
sfi-move,0x9b20b50c08,0x39123e21200
sfi-move,0x9b20b50c88,0x39123e21280
sfi-move,0x66313e4d20,0xd6cc531c10
sfi-move,0x66313e4d78,0xd6cc531c50
sfi-move,0x66313e4dd0,0xd6cc531ca8
sfi-move,0x66313e4e28,0xd6cc531d00
sfi-move,0x66313e4e80,0xd6cc531d40
sfi-move,0x66313e4ed8,0xd6cc531d98
sfi-move,0x66313e4f30,0xd6cc531df0
sfi-move,0x66313e4f88,0xd6cc531e48
sfi-move,0x66313e4fe0,0xd6cc531e88
sfi-move,0x66313e5038,0xd6cc531ee0
sfi-move,0x66313e5090,0xd6cc531f20
sfi-move,0x9b20b50d08,0x39123e21300
sfi-move,0x9b20b50d60,0x39123e21358
sfi-move,0x9b20b50db8,0x39123e213b0
sfi-move,0x9b20b50e38,0x39123e21430
sfi-move,0x66313e82a0,0xd6cc5333c0
sfi-move,0x66313e82f8,0xd6cc533400
sfi-move,0x66313e8350,0xd6cc533458
sfi-move,0x66313e83a8,0xd6cc5334b0
sfi-move,0x66313e8400,0xd6cc533508
sfi-move,0x66313e8458,0xd6cc533560
sfi-move,0x66313e84b0,0xd6cc5335a0
sfi-move,0x66313e8508,0xd6cc5335f8
sfi-move,0x66313e8560,0xd6cc533638
sfi-move,0x66313e85b8,0xd6cc533690
sfi-move,0x66313e8610,0xd6cc5336d0
sfi-move,0x66313e8668,0xd6cc533728
sfi-move,0x66313e86c0,0xd6cc533768
sfi-move,0x66313e8718,0xd6cc5337c0
sfi-move,0x66313e8770,0xd6cc533818
sfi-move,0x66313e87c8,0xd6cc533870
sfi-move,0x66313e8820,0xd6cc5338b0
sfi-move,0x66313e8878,0xd6cc533908
sfi-move,0x66313e88d0,0xd6cc533960
sfi-move,0x66313e8928,0xd6cc5339b8
sfi-move,0x66313e8980,0xd6cc533a10
sfi-move,0x66313e89d8,0xd6cc533a68
sfi-move,0x66313e8a30,0xd6cc533ac0
sfi-move,0x66313e8a88,0xd6cc533b18
sfi-move,0x66313e8ae0,0xd6cc533b70
sfi-move,0x66313e8b38,0xd6cc533bb0
sfi-move,0x66313e8b90,0xd6cc533c08
sfi-move,0x66313e8be8,0xd6cc533c48
sfi-move,0x66313e8c40,0xd6cc533ca0
sfi-move,0x66313e8c98,0xd6cc533cf8
sfi-move,0x66313e8cf0,0xd6cc533d50
sfi-move,0x66313e8d48,0xd6cc533da8
sfi-move,0x66313e8da0,0xd6cc533e00
sfi-move,0x66313e8df8,0xd6cc533e58
sfi-move,0x66313e8e50,0xd6cc533eb0
sfi-move,0x66313e8ea8,0xd6cc533f08
sfi-move,0x66313e8f00,0xd6cc533f60
sfi-move,0x66313e8f58,0xd6cc533fb8
sfi-move,0x66313e8fb0,0xd6cc534010
sfi-move,0x66313e9008,0xd6cc534068
sfi-move,0x66313e9060,0xd6cc5340c0
sfi-move,0x66313e90b8,0xd6cc534118
sfi-move,0x66313e9110,0xd6cc534170
sfi-move,0x66313e9168,0xd6cc5341c8
sfi-move,0x66313eb8a0,0xd6cc5348f8
sfi-move,0x66313eb8f8,0xd6cc534938
sfi-move,0x66313eb950,0xd6cc534978
sfi-move,0x66313eb9a8,0xd6cc5349b8
sfi-move,0x66313ecf18,0xd6cc534e00
sfi-move,0x66313ecf70,0xd6cc534e40
sfi-move,0x66313ecfc8,0xd6cc534e80
sfi-move,0x66313ed020,0xd6cc534ec0
sfi-move,0x66313ed078,0xd6cc534f00
code-move,0x66313ed71c,0xd6cc53517c
sfi-move,0x66313ef138,0xd6cc536728
sfi-move,0x66313f40d0,0xd6cc538348
sfi-move,0x66313f4188,0xd6cc538388
sfi-move,0x66313f4200,0xd6cc5383e8
sfi-move,0x66313f4258,0xd6cc538428
sfi-move,0x66313f42b0,0xd6cc538468
sfi-move,0x66313f4308,0xd6cc5384a8
sfi-move,0x66313f4360,0xd6cc5384e8
sfi-move,0x66313f43b8,0xd6cc538528
sfi-move,0x66313f4410,0xd6cc538580
sfi-move,0x66313f4468,0xd6cc5385d8
sfi-move,0x66313f44c0,0xd6cc538618
sfi-move,0x66313f4518,0xd6cc538670
sfi-move,0x66313f4570,0xd6cc5386b0
sfi-move,0x66313f45c8,0xd6cc538708
sfi-move,0x66313f4620,0xd6cc538748
sfi-move,0x66313f4678,0xd6cc5387a0
sfi-move,0x66313f46d0,0xd6cc5387e0
sfi-move,0x66313f4728,0xd6cc538820
sfi-move,0x66313f4780,0xd6cc538878
sfi-move,0x66313f47d8,0xd6cc5388d0
sfi-move,0x66313f4830,0xd6cc538910
sfi-move,0x66313f4888,0xd6cc538968
sfi-move,0x66313f48e0,0xd6cc5389c0
sfi-move,0x66313f4938,0xd6cc538a18
sfi-move,0x66313f4990,0xd6cc538a70
sfi-move,0x66313f49e8,0xd6cc538ab0
sfi-move,0x66313f4a40,0xd6cc538b08
sfi-move,0x66313f4a98,0xd6cc538b60
sfi-move,0x66313f4af0,0xd6cc538bb8
sfi-move,0x66313f4b48,0xd6cc538c10
sfi-move,0x66313f4ba0,0xd6cc538c68
sfi-move,0x66313f4bf8,0xd6cc538cc0
sfi-move,0x66313f4c50,0xd6cc538d18
sfi-move,0x66313f4ca8,0xd6cc538d70
sfi-move,0x66313f4d00,0xd6cc538dc8
sfi-move,0x66313f4d58,0xd6cc538e20
sfi-move,0x66313f4db0,0xd6cc538e60
sfi-move,0x66313f4e08,0xd6cc538eb8
sfi-move,0x66313f4e60,0xd6cc538f10
sfi-move,0x66313f4eb8,0xd6cc538f68
sfi-move,0x66313f4f10,0xd6cc538fc0
sfi-move,0x66313f4f68,0xd6cc539000
sfi-move,0x66313f4fc0,0xd6cc539040
sfi-move,0x66313f5018,0xd6cc539098
sfi-move,0x66313f5070,0xd6cc5390d8
sfi-move,0x66313f9518,0xd6cc53a700
sfi-move,0x66313f9570,0xd6cc53a758
sfi-move,0x66313f95c8,0xd6cc53a7b0
sfi-move,0x66313fa3e8,0xd6cc53abf0
sfi-move,0x66313fa440,0xd6cc53ac48
sfi-move,0x66313fa498,0xd6cc53aca0
sfi-move,0x66313fa4f0,0xd6cc53acf8
sfi-move,0x66313fa548,0xd6cc53ad50
sfi-move,0x66313fa5a0,0xd6cc53ada8
sfi-move,0x66313fa5f8,0xd6cc53ae00
sfi-move,0x66313fa650,0xd6cc53ae58
code-move,0x66313fabb4,0xd6cc53aee4
code-move,0x66313fc744,0xd6cc53baa4
sfi-move,0x66313fd118,0xd6cc53c478
sfi-move,0x66313fd170,0xd6cc53c4b8
code-move,0x66313fd2bc,0xd6cc53c5ec
sfi-move,0x66313fd4d8,0xd6cc53c808
sfi-move,0x66313fd530,0xd6cc53c848
code-move,0x66313fd614,0xd6cc53c914
code-move,0x66313fd78c,0xd6cc53ca8c
code-move,0x66313fd8d4,0xd6cc53cbd4
code-move,0x66313fdac4,0xd6cc53cdc4
code-move,0x66313fdeac,0xd6cc53d1ac
sfi-move,0x66313fe200,0xd6cc53d500
sfi-move,0x66313fe258,0xd6cc53d540
code-move,0x66313fe34c,0xd6cc53d634
code-move,0x66313fe584,0xd6cc53d86c
sfi-move,0x9b20b50e90,0x39123e21488
sfi-move,0x9b20b50f10,0x39123e21508
sfi-move,0x9b20b50f90,0x39123e21588
sfi-move,0x9b20b53498,0x39123e22028
sfi-move,0x9b20b534f0,0x39123e22080
sfi-move,0x9b20b53548,0x39123e220d8
sfi-move,0x9b20b535a0,0x39123e22130
sfi-move,0x9b20b535f8,0x39123e22188
sfi-move,0x9b20b53650,0x39123e221e0
sfi-move,0x9b20b536a8,0x39123e22238
sfi-move,0x9b20b53700,0x39123e22290
sfi-move,0x9b20b53758,0x39123e222e8
sfi-move,0x9b20b537b0,0x39123e22340
sfi-move,0x9b20b53808,0x39123e22398
sfi-move,0x9b20b53860,0x39123e223f0
sfi-move,0x9b20b538d8,0x39123e22468
sfi-move,0x9b20b53950,0x39123e224e0
sfi-move,0x9b20b539a8,0x39123e22538
sfi-move,0x9b20b53a00,0x39123e22590
sfi-move,0x9b20b53a58,0x39123e225e8
sfi-move,0x9b20b53ab0,0x39123e22640
sfi-move,0x9b20b53b08,0x39123e22698
sfi-move,0x9b20b53b60,0x39123e226f0
sfi-move,0x9b20b53bb8,0x39123e22748
sfi-move,0x9b20b53c10,0x39123e227a0
sfi-move,0x9b20b53c68,0x39123e227f8
sfi-move,0x66313ff6c0,0xd6cc53e1f8
sfi-move,0x66313ff740,0xd6cc53e278
sfi-move,0x66313ff798,0xd6cc53e2d0
sfi-move,0x66313ff7f0,0xd6cc53e310
sfi-move,0x66313ff848,0xd6cc53e350
sfi-move,0x66313ff8a0,0xd6cc53e390
sfi-move,0x66313ff8f8,0xd6cc53e3e8
sfi-move,0x66313ff950,0xd6cc53e428
sfi-move,0x66313ff9a8,0xd6cc53e468
sfi-move,0x9b20b53cc0,0x39123e22850
sfi-move,0x9b20b53d18,0x39123e228a8
sfi-move,0x9b20b53db0,0x39123e22940
sfi-move,0x9b20b53e28,0x39123e229b8
sfi-move,0x9b20b53e80,0x39123e22a10
sfi-move,0x9b20b53ed8,0x39123e22a68
sfi-move,0x9b20b53f30,0x39123e22ac0
sfi-move,0x9b20b53f88,0x39123e22b18
code-move,0x9b20b5550c,0x39123e22bbc
sfi-move,0x10fd4181128,0xd6cc53e4c0
sfi-move,0x10fd41811b8,0xd6cc53e550
sfi-move,0x10fd4181248,0xd6cc53e5c8
sfi-move,0x10fd41812d8,0xd6cc53e658
sfi-move,0x10fd4181368,0xd6cc53e6e8
sfi-move,0x10fd41813c0,0xd6cc53e740
sfi-move,0x10fd4181450,0xd6cc53e7d0
sfi-move,0x10fd41814e0,0xd6cc53e848
sfi-move,0x10fd4181538,0xd6cc53e8a0
sfi-move,0x10fd4181590,0xd6cc53e8f8
sfi-move,0x10fd41815e8,0xd6cc53e950
sfi-move,0x10fd4181640,0xd6cc53e9a8
sfi-move,0x10fd4181698,0xd6cc53ea00
sfi-move,0x10fd41816f0,0xd6cc53ea58
sfi-move,0x10fd4181748,0xd6cc53eab0
sfi-move,0x10fd41817a0,0xd6cc53eb08
sfi-move,0x10fd41817f8,0xd6cc53eb60
sfi-move,0x10fd4181850,0xd6cc53ebb8
sfi-move,0x10fd41818a8,0xd6cc53ec10
sfi-move,0x10fd4181900,0xd6cc53ec68
sfi-move,0x10fd4181958,0xd6cc53ecc0
sfi-move,0x10fd41819b0,0xd6cc53ed18
sfi-move,0x10fd4181a80,0xd6cc53ede8
sfi-move,0x10fd4181b10,0xd6cc53ee78
sfi-move,0x10fd4181ba8,0xd6cc53ef10
sfi-move,0x10fd4181c40,0xd6cc53efa8
sfi-move,0x9b20b55dd0,0x39123e231d8
sfi-move,0x9b20b55e28,0x39123e23230
code-move,0x9b20b55fdc,0x39123e233e4
sfi-move,0x9b20b59e00,0x39123e26320
sfi-move,0x9b20b59e58,0x39123e26378
sfi-move,0x9b20b59eb0,0x39123e263d0
sfi-move,0x9b20b59f08,0x39123e26428
sfi-move,0x9b20b59f60,0x39123e26480
sfi-move,0x9b20b5b868,0x39123e26ce0
sfi-move,0x9b20b5b8c0,0x39123e26d38
sfi-move,0x9b20b5b918,0x39123e26d90
sfi-move,0x9b20b5b970,0x39123e26de8
sfi-move,0x9b20b5b9c8,0x39123e26e40
sfi-move,0x9b20b5ba20,0x39123e26e98
sfi-move,0x9b20b5ba78,0x39123e26ef0
sfi-move,0x9b20b5bad0,0x39123e26f48
sfi-move,0x9b20b5bb28,0x39123e26fa0
sfi-move,0x9b20b5bb80,0x39123e26ff8
sfi-move,0x9b20b5bbd8,0x39123e27050
sfi-move,0x9b20b5bc30,0x39123e270a8
sfi-move,0x9b20b5bc88,0x39123e27100
sfi-move,0x9b20b5bce0,0x39123e27158
sfi-move,0x9b20b5bd38,0x39123e271b0
sfi-move,0x9b20b5bd90,0x39123e27208
sfi-move,0x9b20b5bde8,0x39123e27260
sfi-move,0x9b20b5be40,0x39123e272b8
sfi-move,0x9b20b5be98,0x39123e27310
sfi-move,0x9b20b5bef0,0x39123e27368
sfi-move,0x9b20b5bf48,0x39123e273c0
sfi-move,0x9b20b5bfa0,0x39123e27418
sfi-move,0x9b20b5bff8,0x39123e27470
sfi-move,0x9b20b5c050,0x39123e274c8
sfi-move,0x9b20b5c0a8,0x39123e27520
sfi-move,0x9b20b5c100,0x39123e27578
sfi-move,0x9b20b5e930,0x39123e28860
sfi-move,0x9b20b603b8,0x39123e28f18
sfi-move,0x9b20b60410,0x39123e28f70
sfi-move,0x9b20b60468,0x39123e28fc8
sfi-move,0x9b20b604c0,0x39123e29020
sfi-move,0x9b20b60518,0x39123e29078
sfi-move,0x9b20b60570,0x39123e290d0
sfi-move,0x9b20b605c8,0x39123e29128
sfi-move,0x9b20b60620,0x39123e29180
sfi-move,0x9b20b606d0,0x39123e29230
sfi-move,0x9b20b61e80,0x39123e29810
sfi-move,0x9b20b61ed8,0x39123e29868
sfi-move,0x9b20b61f58,0x39123e298e8
sfi-move,0x9b20b61fd8,0x39123e29968
sfi-move,0x9b20b62030,0x39123e299c0
sfi-move,0x9b20b62088,0x39123e29a18
sfi-move,0x9b20b620e0,0x39123e29a70
sfi-move,0x9b20b62138,0x39123e29ab0
sfi-move,0x9b20b62190,0x39123e29b08
sfi-move,0x10fd4181cd0,0xd6cc53f038
sfi-move,0x10fd41848e0,0xd6cc53f7e8
sfi-move,0x10fd4184938,0xd6cc53f828
sfi-move,0x9b20b621e8,0x39123e29b60
sfi-move,0x9b20b62268,0x39123e29be0
sfi-move,0x9b20b622c0,0x39123e29c38
sfi-move,0x9b20b62318,0x39123e29c90
sfi-move,0x9b20b62370,0x39123e29ce8
sfi-move,0x9b20b63758,0x39123e2a3b8
sfi-move,0x9b20b637b0,0x39123e2a3f8
sfi-move,0x9b20b63808,0x39123e2a450
sfi-move,0x9b20b63860,0x39123e2a490
sfi-move,0x9b20b638b8,0x39123e2a4e8
sfi-move,0x9b20b63948,0x39123e2a578
sfi-move,0x9b20b639d8,0x39123e2a5f0
new,MemoryChunk,0xdd9f3c0000,262144
sfi-move,0x9b20b64a70,0x39123e2a8e8
sfi-move,0x9b20b64ac8,0x39123e2a928
sfi-move,0x9b20b64b20,0x39123e2a980
sfi-move,0x10fd4188f18,0xdd9f3c4638
sfi-move,0x10fd418a000,0xdd9f3c4ac8
sfi-move,0x10fd418a058,0xdd9f3c4b20
sfi-move,0x10fd418a0b0,0xdd9f3c4b78
sfi-move,0x10fd418a108,0xdd9f3c4bd0
sfi-move,0x10fd418a1a0,0xdd9f3c4c68
sfi-move,0x10fd418a230,0xdd9f3c4cf8
sfi-move,0x9b20b64bf8,0x39123e2aa40
sfi-move,0x9b20b6ae70,0x39123e2cee0
sfi-move,0x9b20b6aec8,0x39123e2cf20
sfi-move,0x9b20b6af20,0x39123e2cf60
sfi-move,0x9b20b6af78,0x39123e2cfb8
sfi-move,0x9b20b6afd0,0x39123e2d010
sfi-move,0x9b20b6b028,0x39123e2d068
sfi-move,0x9b20b6b080,0x39123e2d0a8
sfi-move,0x9b20b6b0d8,0x39123e2d100
sfi-move,0x9b20b6b130,0x39123e2d140
sfi-move,0x9b20b6b188,0x39123e2d180
sfi-move,0x9b20b6b1e0,0x39123e2d1d8
sfi-move,0x9b20b6b238,0x39123e2d218
sfi-move,0x9b20b6b290,0x39123e2d270
sfi-move,0x9b20b6b2e8,0x39123e2d2c8
sfi-move,0x9b20b6b340,0x39123e2d320
sfi-move,0x9b20b6b398,0x39123e2d360
sfi-move,0x9b20b6b3f0,0x39123e2d3a0
sfi-move,0x9b20b6b470,0x39123e2d420
sfi-move,0x9b20b6b4c8,0x39123e2d478
sfi-move,0x9b20b6b520,0x39123e2d4d0
sfi-move,0x9b20b6b578,0x39123e2d510
sfi-move,0x9b20b6b5d0,0x39123e2d550
sfi-move,0x9b20b6b628,0x39123e2d590
sfi-move,0x9b20b6b680,0x39123e2d5e8
sfi-move,0x9b20b6b708,0x39123e2d670
sfi-move,0x9b20b6b760,0x39123e2d6c8
sfi-move,0x9b20b6b7b8,0x39123e2d720
sfi-move,0x9b20b6b810,0x39123e2d778
sfi-move,0x9b20b6b868,0x39123e2d7d0
sfi-move,0x9b20b6b918,0x39123e2d828
sfi-move,0x9b20b6b970,0x39123e2d880
sfi-move,0x9b20b6b9c8,0x39123e2d8d8
sfi-move,0x9b20b6ba20,0x39123e2d918
sfi-move,0x9b20b6ba78,0x39123e2d970
sfi-move,0x9b20b6bad0,0x39123e2d9c8
sfi-move,0x9b20b6bb28,0x39123e2da20
sfi-move,0x9b20b6bb80,0x39123e2da78
sfi-move,0x9b20b6bbd8,0x39123e2dad0
sfi-move,0x9b20b6bc30,0x39123e2db28
sfi-move,0x9b20b6bc88,0x39123e2db68
sfi-move,0x9b20b6bce0,0x39123e2dbc0
sfi-move,0x9b20b6bd38,0x39123e2dc18
sfi-move,0x9b20b6bdd0,0x39123e2dcb0
sfi-move,0x9b20b6be68,0x39123e2dd48
sfi-move,0x9b20b6bf00,0x39123e2dde0
sfi-move,0x9b20b6bf90,0x39123e2de58
sfi-move,0x9b20b6c020,0x39123e2dee8
sfi-move,0x9b20b6c0b8,0x39123e2df80
sfi-move,0x9b20b6c150,0x39123e2e018
sfi-move,0x9b20b6c1e0,0x39123e2e090
sfi-move,0x9b20b6c270,0x39123e2e120
sfi-move,0x9b20b6c370,0x39123e2e220
sfi-move,0x9b20b6c400,0x39123e2e2b0
sfi-move,0x9b20b6c490,0x39123e2e310
sfi-move,0x9b20b6c528,0x39123e2e390
sfi-move,0x9b20b6c5c0,0x39123e2e428
sfi-move,0x9b20b6c650,0x39123e2e4a0
sfi-move,0x9b20b6c6e0,0x39123e2e518
sfi-move,0x9b20b6c770,0x39123e2e5a8
sfi-move,0x9b20b6c808,0x39123e2e640
sfi-move,0x9b20b6c8a0,0x39123e2e6d8
sfi-move,0x9b20b6c8f8,0x39123e2e730
sfi-move,0x9b20b6c950,0x39123e2e788
sfi-move,0x9b20b6ca20,0x39123e2e858
sfi-move,0x9b20b6caf0,0x39123e2e928
sfi-move,0x9b20b6cbc0,0x39123e2e9f8
sfi-move,0x9b20b6cc90,0x39123e2eac8
sfi-move,0x9b20b6cd60,0x39123e2eb80
sfi-move,0x9b20b6ce30,0x39123e2ec50
sfi-move,0x9b20b6ce88,0x39123e2eca8
sfi-move,0x9b20b6cee0,0x39123e2ed00
sfi-move,0x9b20b6cf38,0x39123e2ed58
sfi-move,0x9b20b6cf90,0x39123e2edb0
sfi-move,0x9b20b6cfe8,0x39123e2ee08
sfi-move,0x9b20b6d040,0x39123e2ee60
sfi-move,0x9b20b6d098,0x39123e2eeb8
sfi-move,0x9b20b6d0f0,0x39123e2ef10
sfi-move,0x9b20b6d148,0x39123e2ef68
sfi-move,0x9b20b6d1a0,0x39123e2efc0
sfi-move,0x9b20b6d1f8,0x39123e2f018
sfi-move,0x9b20b6d288,0x39123e2f0a8
sfi-move,0x9b20b6d318,0x39123e2f138
sfi-move,0x9b20b6d3a8,0x39123e2f1c8
sfi-move,0x9b20b70200,0x39123e2fc38
sfi-move,0x9b20b70258,0x39123e2fc90
sfi-move,0x9b20b702b0,0x39123e2fce8
sfi-move,0x9b20b70cd0,0x39123e30158
sfi-move,0x9b20b70d28,0x39123e30198
sfi-move,0x9b20b70d80,0x39123e301d8
sfi-move,0x9b20b70dd8,0x39123e30230
code-move,0x9b20b7132c,0x39123e30444
sfi-move,0x9b20b748f0,0x39123e33368
sfi-move,0x9b20b74948,0x39123e333a8
sfi-move,0x9b20b749a0,0x39123e333e8
sfi-move,0x9b20b749f8,0x39123e33428
sfi-move,0x9b20b74a50,0x39123e33480
sfi-move,0x9b20b74aa8,0x39123e334d8
sfi-move,0x9b20b74b00,0x39123e33530
sfi-move,0x9b20b74b58,0x39123e33588
sfi-move,0x9b20b761b0,0x39123e339e8
sfi-move,0x9b20b76d78,0x39123e33ba0
sfi-move,0x9b20b76dd0,0x39123e33be0
sfi-move,0x10fd418ac68,0xdd9f3c50c8
sfi-move,0x10fd418acc0,0xdd9f3c5120
sfi-move,0x10fd418b5e0,0xdd9f3c5508
sfi-move,0x9b20b7f350,0x39123e39290
sfi-move,0x9b20b7f428,0x39123e392e8
sfi-move,0x10fd418da10,0xdd9f3c7838
sfi-move,0x10fd418dca0,0xdd9f3c7a40
sfi-move,0x10fd418dfb0,0xdd9f3c7cc0
sfi-move,0x9b20b7f480,0x39123e39328
sfi-move,0x9b20b7f4d8,0x39123e39368
sfi-move,0x10fd418f8a0,0xdd9f3c9428
sfi-move,0x10fd418f918,0xdd9f3c94a0
sfi-move,0x10fd418f990,0xdd9f3c9518
sfi-move,0x9b20b7f530,0x39123e393c0
sfi-move,0x9b20b7f588,0x39123e39400
sfi-move,0x10fd418fa08,0xdd9f3c9590
sfi-move,0x10fd418fa80,0xdd9f3c9608
sfi-move,0x10fd418faf8,0xdd9f3c9680
sfi-move,0x10fd418fb70,0xdd9f3c96f8
sfi-move,0x10fd418fbe8,0xdd9f3c9770
sfi-move,0x10fd418fc60,0xdd9f3c97e8
sfi-move,0x10fd418fcd8,0xdd9f3c9860
sfi-move,0x10fd418fd50,0xdd9f3c98d8
sfi-move,0x10fd418fdc8,0xdd9f3c9950
sfi-move,0x10fd418fea0,0xdd9f3c99e0
sfi-move,0x10fd418ff78,0xdd9f3c9ab8
sfi-move,0x10fd418fff0,0xdd9f3c9b30
sfi-move,0x10fd4190068,0xdd9f3c9ba8
sfi-move,0x10fd41900e0,0xdd9f3c9c20
sfi-move,0x10fd4190158,0xdd9f3c9c98
sfi-move,0x10fd41901d0,0xdd9f3c9d10
sfi-move,0x10fd4190248,0xdd9f3c9d88
sfi-move,0x10fd41902c0,0xdd9f3c9e00
sfi-move,0x10fd4190338,0xdd9f3c9e78
sfi-move,0x10fd41903b0,0xdd9f3c9ef0
sfi-move,0x10fd4190470,0xdd9f3c9f68
sfi-move,0x10fd4190580,0xdd9f3ca078
sfi-move,0x10fd4190800,0xdd9f3ca2b0
sfi-move,0x10fd41910a0,0xdd9f3caa98
sfi-move,0x10fd4191118,0xdd9f3cab10
sfi-move,0x10fd4191190,0xdd9f3cab88
sfi-move,0x10fd4191208,0xdd9f3cac00
sfi-move,0x10fd4191280,0xdd9f3cac78
sfi-move,0x10fd41912f8,0xdd9f3cacf0
sfi-move,0x10fd41913b8,0xdd9f3cadb0
sfi-move,0x10fd4191778,0xdd9f3cafe8
sfi-move,0x10fd4192958,0xdd9f3cb708
sfi-move,0x10fd41929b0,0xdd9f3cb748
sfi-move,0x10fd4192a08,0xdd9f3cb7a0
sfi-move,0x10fd4192a60,0xdd9f3cb7e0
sfi-move,0x10fd4192ab8,0xdd9f3cb838
sfi-move,0x10fd4192b10,0xdd9f3cb878
sfi-move,0x10fd4192b68,0xdd9f3cb8b8
sfi-move,0x10fd4192bc0,0xdd9f3cb8f8
sfi-move,0x10fd4192c18,0xdd9f3cb950
sfi-move,0x10fd4194ff8,0xdd9f3cc780
sfi-move,0x10fd4195050,0xdd9f3cc7d8
sfi-move,0x10fd41950a8,0xdd9f3cc830
sfi-move,0x10fd4195100,0xdd9f3cc888
sfi-move,0x10fd4195158,0xdd9f3cc8e0
sfi-move,0x10fd41951b0,0xdd9f3cc920
sfi-move,0x10fd4195208,0xdd9f3cc978
sfi-move,0x10fd4195260,0xdd9f3cc9d0
sfi-move,0x10fd41952b8,0xdd9f3cca28
sfi-move,0x10fd4195310,0xdd9f3cca80
sfi-move,0x10fd4195368,0xdd9f3ccad8
sfi-move,0x10fd41953c0,0xdd9f3ccb18
sfi-move,0x10fd4195418,0xdd9f3ccb58
sfi-move,0x10fd4195470,0xdd9f3ccb98
sfi-move,0x10fd41954c8,0xdd9f3ccbf0
sfi-move,0x10fd4195520,0xdd9f3ccc48
sfi-move,0x9b20b7f5e0,0x39123e39440
sfi-move,0x9b20b7f638,0x39123e39498
sfi-move,0x9b20b7f690,0x39123e394f0
sfi-move,0x9b20b7f6e8,0x39123e39530
sfi-move,0x9b20b7f740,0x39123e39570
sfi-move,0x9b20b7f798,0x39123e395b0
sfi-move,0x9b20b7f7f0,0x39123e39608
sfi-move,0x9b20b7f848,0x39123e39660
sfi-move,0x9b20b7f8a0,0x39123e396b8
sfi-move,0x9b20b7f8f8,0x39123e39710
sfi-move,0x10fd4195560,0xdd9f3ccc88
sfi-move,0x10fd41955b8,0xdd9f3ccce0
sfi-move,0x10fd4195610,0xdd9f3ccd38
sfi-move,0x10fd4195668,0xdd9f3ccd90
sfi-move,0x10fd41956c0,0xdd9f3ccde8
sfi-move,0x10fd4195740,0xdd9f3cce68
sfi-move,0x10fd4195798,0xdd9f3ccec0
sfi-move,0x10fd41957f0,0xdd9f3ccf18
sfi-move,0x10fd4195848,0xdd9f3ccf70
sfi-move,0x10fd41958a0,0xdd9f3ccfb0
sfi-move,0x10fd41958f8,0xdd9f3cd008
sfi-move,0x10fd4195950,0xdd9f3cd060
sfi-move,0x10fd41959a8,0xdd9f3cd0b8
sfi-move,0x10fd4195a00,0xdd9f3cd110
sfi-move,0x10fd4195a80,0xdd9f3cd190
sfi-move,0x10fd4195ad8,0xdd9f3cd1e8
sfi-move,0x10fd4195b30,0xdd9f3cd240
sfi-move,0x10fd4195b88,0xdd9f3cd298
sfi-move,0x10fd4195be0,0xdd9f3cd2f0
sfi-move,0x10fd4195c38,0xdd9f3cd348
sfi-move,0x10fd4195c90,0xdd9f3cd3a0
sfi-move,0x10fd4195ce8,0xdd9f3cd3f8
sfi-move,0x10fd4195d78,0xdd9f3cd488
sfi-move,0x10fd4196dc0,0xdd9f3cd5a8
code-move,0x10fd4196e74,0xdd9f3cd65c
code-move,0x10fd4197794,0xdd9f3cdcb4
code-move,0x10fd4198aa4,0xdd9f3cee4c
code-move,0x10fd4198bd4,0xdd9f3cef7c
code-move,0x10fd4198d24,0xdd9f3cf0cc
code-move,0x10fd4198f9c,0xdd9f3cf344
code-move,0x10fd41990fc,0xdd9f3cf4a4
sfi-move,0x9b20b7f950,0x39123e39768
sfi-move,0x9b20b7f9a8,0x39123e397c0
sfi-move,0x9b20b7fa00,0x39123e39818
sfi-move,0x9b20b7fa58,0x39123e39870
sfi-move,0x9b20b7fab0,0x39123e398c8
sfi-move,0x9b20b7fb08,0x39123e39920
sfi-move,0x9b20b7fb60,0x39123e39960
sfi-move,0x9b20b7fbb8,0x39123e399a0
sfi-move,0x9b20b7fc10,0x39123e399f8
sfi-move,0x9b20b7fc68,0x39123e39a50
sfi-move,0x9b20b7fcc0,0x39123e39aa8
sfi-move,0x10fd419b998,0xdd9f3d06b8
sfi-move,0x10fd419b9f0,0xdd9f3d0710
sfi-move,0x10fd419ba48,0xdd9f3d0768
sfi-move,0x10fd419baa0,0xdd9f3d07c0
sfi-move,0x10fd419baf8,0xdd9f3d0818
sfi-move,0x10fd419bb50,0xdd9f3d0870
sfi-move,0x10fd419bba8,0xdd9f3d08c8
sfi-move,0x10fd419bc00,0xdd9f3d0920
sfi-move,0x10fd419bc58,0xdd9f3d0978
sfi-move,0x10fd419bcb0,0xdd9f3d09d0
sfi-move,0x9b20b7fd18,0x39123e39b00
sfi-move,0x9b20b7fd70,0x39123e39b40
sfi-move,0x9b20b7fdc8,0x39123e39b98
sfi-move,0x9b20b7fe20,0x39123e39bf0
sfi-move,0x9b20b7fe78,0x39123e39c48
sfi-move,0x9b20b7fed0,0x39123e39ca0
sfi-move,0x9b20b7ff28,0x39123e39cf8
sfi-move,0x9b20b7ff80,0x39123e39d50
sfi-move,0x10fd419bd08,0xdd9f3d0a28
sfi-move,0x10fd419bd60,0xdd9f3d0a80
sfi-move,0x10fd419bdb8,0xdd9f3d0ad8
sfi-move,0x10fd419be10,0xdd9f3d0b30
sfi-move,0x10fd419be68,0xdd9f3d0b88
sfi-move,0x10fd419bec0,0xdd9f3d0be0
sfi-move,0x10fd419bf18,0xdd9f3d0c38
sfi-move,0x10fd419bf70,0xdd9f3d0c90
sfi-move,0x10fd419bfc8,0xdd9f3d0ce8
sfi-move,0x10fd419c020,0xdd9f3d0d40
sfi-move,0x10fd419c078,0xdd9f3d0d98
sfi-move,0x10fd419c0d0,0xdd9f3d0df0
sfi-move,0x10fd419c128,0xdd9f3d0e48
sfi-move,0x10fd419c180,0xdd9f3d0ea0
sfi-move,0x10fd419c1d8,0xdd9f3d0ef8
sfi-move,0x10fd419c258,0xdd9f3d0f78
sfi-move,0x10fd419c2b0,0xdd9f3d0fd0
sfi-move,0x10fd419c308,0xdd9f3d1028
sfi-move,0x10fd419c360,0xdd9f3d1080
sfi-move,0x10fd419c3b8,0xdd9f3d10d8
code-move,0x21de9b45e6c,0x39123e3ea8c
code-move,0x21de9b46204,0x39123e3ed84
code-move,0x21de9b46904,0x39123e3f404
code-move,0x21de9b46bac,0x39123e3f674
code-move,0x21de9b46d54,0x39123e3f81c
code-move,0x21de9b46f34,0x39123e3f9fc
code-move,0x21de9b472cc,0x39123e3fcc4
code-move,0x10fd419d8a4,0xdd9f3d11ec
sfi-move,0x10fd419e698,0xdd9f3d1910
sfi-move,0x10fd419e6f0,0xdd9f3d1968
sfi-move,0x10fd419e748,0xdd9f3d19c0
sfi-move,0x10fd419e7a0,0xdd9f3d1a18
sfi-move,0x10fd419e810,0xdd9f3d1a88
sfi-move,0x10fd419e888,0xdd9f3d1b00
sfi-move,0x10fd419e900,0xdd9f3d1b78
sfi-move,0x10fd419e978,0xdd9f3d1bf0
sfi-move,0x10fd419e9d0,0xdd9f3d1c48
sfi-move,0x10fd419ea28,0xdd9f3d1ca0
sfi-move,0x10fd419ea80,0xdd9f3d1cf8
sfi-move,0x10fd419eaf8,0xdd9f3d1d70
sfi-move,0x10fd419eb50,0xdd9f3d1dc8
code-move,0x21de9b474e4,0x2d4d28ffc6c
code-move,0x21de9b4792c,0x2d4d28f88ac
code-move,0x21de9b47cbc,0x2d4d28d91b4
code-move,0x21de9b47e3c,0x2d4d28c92ac
sfi-move,0x10fd41a6af8,0xdd9f3d8530
sfi-move,0x10fd41a6c00,0xdd9f3d85f0
sfi-move,0x10fd41a6c78,0xdd9f3d8668
sfi-move,0x10fd41a6d38,0xdd9f3d86e0
sfi-move,0x10fd41a7d10,0xdd9f3d8de0
sfi-move,0x10fd41a7d68,0xdd9f3d8e38
sfi-move,0x10fd41a7dc0,0xdd9f3d8e78
code-move,0x10fd41a906c,0xdd9f3d98f4
sfi-move,0x21de9b47f58,0x2d4d28f6d80
sfi-move,0x21de9b47fb0,0x2d4d28f6568
code-move,0x10fd41a9c5c,0xdd9f3da4e4
sfi-move,0x10fd41aa348,0xdd9f3dabd0
code-move,0x10fd41aa5cc,0xdd9f3dae54
sfi-move,0x10fd41ab008,0xdd9f3db890
code-move,0x10fd41ab1b4,0xdd9f3dba3c
code-move,0x10fd41ab43c,0xdd9f3dbcc4
code-move,0x21de9b480e4,0x39123e3fedc
code-move,0x21de9b48354,0x2d4d28fffd4
code-move,0x21de9b48464,0x2d4d28de22c
code-move,0x21de9b48e8c,0x2d4d28c9b6c
code-move,0x21de9b4928c,0x2d4d28ffa0c
code-move,0x21de9b494d4,0x2d4d28fa214
code-move,0x21de9b49784,0x2d4d28f68f4
code-move,0x10fd41ac5e4,0xdd9f3dcc74
code-move,0x10fd41aca2c,0xdd9f3dd0ac
code-move,0x10fd41acd34,0xdd9f3dd3b4
code-move,0x10fd41ad1ac,0xdd9f3dd82c
code-move,0x10fd41ad5dc,0xdd9f3ddc4c
code-move,0x10fd41ad6d4,0xdd9f3ddd44
code-move,0x10fd41ad98c,0xdd9f3ddffc
code-move,0x10fd41add04,0xdd9f3de374
code-move,0x10fd41addec,0xdd9f3de45c
code-move,0x10fd41aded4,0xdd9f3de544
code-move,0x21de9b49fb4,0x2d4d28f72bc
code-move,0x21de9b4a824,0x2d4d28f6cb4
code-move,0x21de9b4a91c,0x2d4d28c579c
code-move,0x21de9b4add4,0x2d4d28c98dc
code-move,0x21de9b4aec4,0x2d4d28cc5ac
code-move,0x21de9b4afbc,0x2d4d28c9154
code-move,0x10fd41ae174,0xdd9f3de7e4
code-move,0x10fd41ae4ec,0xdd9f3deb5c
code-move,0x10fd41ae724,0xdd9f3ded94
code-move,0x10fd41af45c,0xdd9f3dfacc
code-move,0x10fd41af57c,0xdd9f3dfbec
code-move,0x10fd41af6b4,0xdd9f3dfd24
code-move,0x10fd41af7d4,0xdd9f3dfe44
code-move,0x10fd41af91c,0xdd9f3dff8c
sfi-move,0x10fd41b0390,0xdd9f3e0980
sfi-move,0x10fd41b0408,0xdd9f3e09f8
sfi-move,0x10fd41b04c8,0xdd9f3e0a70
code-move,0x10fd41b0754,0xdd9f3e0cfc
code-move,0x10fd41b089c,0xdd9f3e0e44
code-move,0x10fd41b0a24,0xdd9f3e0fcc
sfi-move,0x10fd41b0ed0,0xdd9f3e11e0
sfi-move,0x10fd41b0f28,0xdd9f3e1238
sfi-move,0x10fd41b0f80,0xdd9f3e1278
code-move,0x10fd41b16e4,0xdd9f3e17a4
sfi-move,0x10fd41b1a18,0xdd9f3e1ad8
code-move,0x10fd41b1afc,0xdd9f3e1bbc
new,MemoryChunk,0x1ebb7640000,262144
code-move,0x10fd41b1da4,0xdd9f3e1e4c
code-move,0x21de9b4c494,0x1ebb7642584
code-move,0x21de9b4c6bc,0x1ebb764268c
code-move,0x21de9b4c7a4,0x1ebb7642774
code-move,0x21de9b4c8ac,0x1ebb764287c
code-move,0x21de9b4c9e4,0x1ebb76429b4
code-move,0x10fd41b45fc,0xdd9f3e46a4
code-move,0x10fd41b46f4,0xdd9f3e479c
sfi-move,0x10fd41b4b00,0xdd9f3e4ba8
sfi-move,0x10fd41b4b58,0xdd9f3e4c00
code-move,0x10fd41b4de4,0xdd9f3e4e8c
sfi-move,0x10fd41b73c0,0xdd9f3e6390
sfi-move,0x10fd41b7418,0xdd9f3e63e8
code-move,0x21de9b4caec,0x1ebb7642abc
code-move,0x21de9b4cc44,0x1ebb7642c14
code-move,0x21de9b4ce1c,0x1ebb7642dec
sfi-move,0x21de9b4dab8,0x1ebb7643760
sfi-move,0x21de9b54ca8,0x1ebb7646058
sfi-move,0x21de9b54d00,0x1ebb76460b0
sfi-move,0x21de9b54e80,0x1ebb7646168
sfi-move,0x21de9b54ed8,0x1ebb76461a8
sfi-move,0x21de9b54f30,0x1ebb7646200
sfi-move,0x10fd41b7470,0xdd9f3e6440
sfi-move,0x10fd41b74c8,0xdd9f3e6498
sfi-move,0x10fd41b7520,0xdd9f3e64f0
sfi-move,0x10fd41b7578,0xdd9f3e6548
sfi-move,0x10fd41b75d0,0xdd9f3e65a0
sfi-move,0x10fd41b7628,0xdd9f3e65f8
sfi-move,0x21de9b54f88,0x1ebb7646258
sfi-move,0x21de9b54fe0,0x1ebb76462b0
sfi-move,0x21de9b55038,0x1ebb7646308
sfi-move,0x21de9b55090,0x1ebb7646360
sfi-move,0x21de9b550e8,0x1ebb76463b8
sfi-move,0x21de9b55190,0x1ebb76463f8
sfi-move,0x21de9b551e8,0x1ebb7646450
sfi-move,0x21de9b55240,0x1ebb76464a8
sfi-move,0x21de9b55298,0x1ebb7646500
sfi-move,0x10fd41b7680,0xdd9f3e6650
sfi-move,0x10fd41b76d8,0xdd9f3e66a8
sfi-move,0x10fd41b7730,0xdd9f3e6700
sfi-move,0x10fd41b7788,0xdd9f3e6758
sfi-move,0x10fd41b77e0,0xdd9f3e67b0
sfi-move,0x10fd41b7838,0xdd9f3e67f0
sfi-move,0x10fd41b7890,0xdd9f3e6848
sfi-move,0x10fd41b78e8,0xdd9f3e68a0
sfi-move,0x10fd41b7940,0xdd9f3e68f8
sfi-move,0x21de9b552f0,0x1ebb7646558
sfi-move,0x21de9b553a8,0x1ebb7646598
sfi-move,0x21de9b55508,0x1ebb76465f0
sfi-move,0x21de9b55560,0x1ebb7646648
sfi-move,0x21de9b555b8,0x1ebb76466a0
sfi-move,0x21de9b55610,0x1ebb76466f8
sfi-move,0x21de9b55668,0x1ebb7646738
sfi-move,0x21de9b556c0,0x1ebb7646778
sfi-move,0x21de9b55718,0x1ebb76467d0
sfi-move,0x10fd41b79d8,0xdd9f3e6990
sfi-move,0x10fd41b7a70,0xdd9f3e6a28
sfi-move,0x10fd41b7b08,0xdd9f3e6ac0
sfi-move,0x10fd41b7ba0,0xdd9f3e6b58
sfi-move,0x10fd41b7c38,0xdd9f3e6bf0
sfi-move,0x10fd41b7cd0,0xdd9f3e6c88
sfi-move,0x10fd41b7d68,0xdd9f3e6d20
sfi-move,0x10fd41b7e00,0xdd9f3e6db8
sfi-move,0x10fd41b7e98,0xdd9f3e6e50
sfi-move,0x10fd41b7f30,0xdd9f3e6ee8
sfi-move,0x10fd41b7fc8,0xdd9f3e6f80
sfi-move,0x10fd41b8060,0xdd9f3e7018
sfi-move,0x10fd41b80f8,0xdd9f3e70b0
sfi-move,0x10fd41b9168,0xdd9f3e74b0
sfi-move,0x10fd41b92c0,0xdd9f3e7608
sfi-move,0x10fd41b9418,0xdd9f3e7760
sfi-move,0x10fd41b9570,0xdd9f3e78b8
sfi-move,0x10fd41b96c8,0xdd9f3e7a10
sfi-move,0x21de9b557b0,0x1ebb7646850
sfi-move,0x21de9b55848,0x1ebb76468d0
sfi-move,0x21de9b558e0,0x1ebb7646950
sfi-move,0x21de9b55938,0x1ebb7646990
sfi-move,0x21de9b559d0,0x1ebb7646a28
sfi-move,0x21de9b55a68,0x1ebb7646ac0
sfi-move,0x21de9b55b00,0x1ebb7646b40
sfi-move,0x21de9b55b90,0x1ebb7646bd0
sfi-move,0x21de9b55c78,0x1ebb7646c60
sfi-move,0x10fd41b9820,0xdd9f3e7b68
sfi-move,0x10fd41b9978,0xdd9f3e7cc0
sfi-move,0x10fd41b9ad0,0xdd9f3e7e18
sfi-move,0x10fd41b9c28,0xdd9f3e7f70
sfi-move,0x10fd41b9d80,0xdd9f3e80c8
sfi-move,0x10fd41b9ed8,0xdd9f3e8220
sfi-move,0x10fd41ba030,0xdd9f3e8378
sfi-move,0x10fd41ba188,0xdd9f3e84d0
sfi-move,0x21de9b55d60,0x1ebb7646cf0
sfi-move,0x10fd41ba2f0,0xdd9f3e8638
code-move,0x10fd41bbe3c,0xdd9f3e9f8c
code-move,0x10fd41bbf8c,0xdd9f3ea0dc
code-move,0x125aa7816fc,0xdd9f3ec9d4
sfi-move,0x21de9b6d488,0x1ebb764e6e0
sfi-move,0x21de9b6d4e0,0x1ebb764e738
sfi-move,0x21de9b6d538,0x1ebb764e790
sfi-move,0x21de9b6d640,0x1ebb764e7e8
code-move,0x125aa78333c,0xdd9f3ee46c
code-move,0x125aa783634,0xdd9f3ee764
code-move,0x125aa78371c,0xdd9f3ee84c
code-move,0x125aa783a84,0xdd9f3eebb4
code-move,0x125aa78632c,0xdd9f3f145c
code-move,0x125aa7867f4,0xdd9f3f1924
sfi-move,0x125aa787728,0xdd9f3f27d8
code-move,0x125aa78789c,0xdd9f3f294c
sfi-move,0x125aa789268,0xdd9f3f4318
sfi-move,0x125aa7892c0,0xdd9f3f4358
sfi-move,0x125aa789318,0xdd9f3f43b0
sfi-move,0x125aa789370,0xdd9f3f4408
code-move,0x125aa78955c,0xdd9f3f45f4
sfi-move,0x21de9b6d698,0x1ebb764e840
sfi-move,0x21de9b6d6f0,0x1ebb764e898
sfi-move,0x21de9b6d748,0x1ebb764e8d8
sfi-move,0x21de9b6d7a0,0x1ebb764e930
sfi-move,0x21de9b6d7f8,0x1ebb764e988
sfi-move,0x21de9b6d878,0x1ebb764ea08
sfi-move,0x21de9b6d8f8,0x1ebb764ea88
sfi-move,0x21de9b6d950,0x1ebb764eae0
sfi-move,0x21de9b6d9a8,0x1ebb764eb38
sfi-move,0x21de9b6da00,0x1ebb764eb90
sfi-move,0x21de9b6da58,0x1ebb764ebe8
sfi-move,0x21de9b6db08,0x1ebb764ec40
sfi-move,0x21de9b6db60,0x1ebb764ec98
sfi-move,0x21de9b6dbb8,0x1ebb764ecf0
sfi-move,0x21de9b6dc10,0x1ebb764ed48
sfi-move,0x21de9b6dc68,0x1ebb764eda0
sfi-move,0x21de9b6dcc0,0x1ebb764edf8
sfi-move,0x21de9b6dd18,0x1ebb764ee50
sfi-move,0x21de9b6dd70,0x1ebb764eea8
sfi-move,0x21de9b6ddc8,0x1ebb764ef00
sfi-move,0x21de9b6de20,0x1ebb764ef58
sfi-move,0x21de9b6de78,0x1ebb764efb0
sfi-move,0x21de9b6ded0,0x1ebb764f008
sfi-move,0x21de9b6df28,0x1ebb764f060
code-move,0x125aa789994,0xdd9f3f4884
code-move,0x125aa789b34,0xdd9f3f4a04
code-move,0x125aa789c8c,0xdd9f3f4b5c
code-move,0x125aa78a514,0xdd9f3f5144
code-move,0x125aa78a6ac,0xdd9f3f52b4
code-move,0x125aa78b604,0xdd9f3f620c
code-move,0x125aa78b884,0xdd9f3f648c
code-move,0x125aa78b9cc,0xdd9f3f65d4
sfi-move,0x21de9b6df80,0x1ebb764f0b8
sfi-move,0x21de9b6dfd8,0x1ebb764f110
sfi-move,0x21de9b6e030,0x1ebb764f168
sfi-move,0x21de9b6e088,0x1ebb764f1c0
sfi-move,0x21de9b6e0e0,0x1ebb764f218
sfi-move,0x21de9b6e138,0x1ebb764f270
sfi-move,0x21de9b6e190,0x1ebb764f2c8
sfi-move,0x21de9b6e1e8,0x1ebb764f320
sfi-move,0x21de9b6e2c0,0x1ebb764f360
sfi-move,0x125aa78eb78,0xdd9f3f9768
code-move,0x125aa78ec84,0xdd9f3f9874
code-move,0x125aa78efbc,0xdd9f3f9bac
sfi-move,0x125aa78f1b0,0xdd9f3f9da0
sfi-move,0x125aa78f228,0xdd9f3f9e18
code-move,0x125aa78f3f4,0xdd9f3f9fe4
sfi-move,0x21de9b6e318,0x1ebb764f3b8
sfi-move,0x21de9b6e370,0x1ebb764f410
sfi-move,0x21de9b6e3c8,0x1ebb764f468
sfi-move,0x21de9b6e420,0x1ebb764f4c0
sfi-move,0x21de9b6e478,0x1ebb764f518
sfi-move,0x21de9b6e548,0x1ebb764f5e8
sfi-move,0x21de9b6e618,0x1ebb764f6b8
sfi-move,0x21de9b6e6e8,0x1ebb764f750
sfi-move,0x21de9b6e7b8,0x1ebb764f808
code-move,0x125aa78f8c4,0xdd9f3fa49c
code-move,0x125aa78fa94,0xdd9f3fa66c
code-move,0x125aa78fc74,0xdd9f3fa84c
sfi-move,0x125aa78fe60,0xdd9f3faa20
sfi-move,0x125aa78feb8,0xdd9f3faa78
code-move,0x125aa78ffe4,0xdd9f3fab8c
sfi-move,0x125aa790578,0xdd9f3fb120
code-move,0x125aa790684,0xdd9f3fb214
sfi-move,0x21de9b6e888,0x1ebb764f8d8
sfi-move,0x21de9b6e958,0x1ebb764f9a8
sfi-move,0x21de9b6ea28,0x1ebb764fa78
sfi-move,0x21de9b6eaf8,0x1ebb764fb48
sfi-move,0x21de9b6ebc8,0x1ebb764fc18
sfi-move,0x21de9b6ec20,0x1ebb764fc70
sfi-move,0x21de9b6ec78,0x1ebb764fcc8
sfi-move,0x21de9b6ecd0,0x1ebb764fd20
sfi-move,0x21de9b6ed28,0x1ebb764fd78
sfi-move,0x21de9b6edc0,0x1ebb764fe10
sfi-move,0x125aa790b60,0xdd9f3fb688
sfi-move,0x125aa790bb8,0xdd9f3fb6e0
code-move,0x125aa790f24,0xdd9f3fba34
code-move,0x125aa791364,0xdd9f3fbe74
code-move,0x125aa7914dc,0xdd9f3fbfec
code-move,0x125aa7916bc,0xdd9f3fc1cc
code-move,0x125aa792344,0xdd9f3fce54
sfi-move,0x21de9b6ee48,0x1ebb764fe80
sfi-move,0x21de9b6eee0,0x1ebb764ff18
sfi-move,0x21de9b6ef78,0x1ebb764ffb0
sfi-move,0x21de9b6f010,0x1ebb7650048
sfi-move,0x21de9b6f0a8,0x1ebb76500e0
sfi-move,0x21de9b6f140,0x1ebb7650178
sfi-move,0x21de9b6f1d8,0x1ebb7650210
sfi-move,0x21de9b6f270,0x1ebb76502a8
sfi-move,0x21de9b6f300,0x1ebb7650320
sfi-move,0x21de9b6f398,0x1ebb76503b8
sfi-move,0x21de9b6f3f0,0x1ebb7650410
sfi-move,0x21de9b6f488,0x1ebb76504a8
sfi-move,0x21de9b6f520,0x1ebb7650540
sfi-move,0x21de9b6f5b8,0x1ebb76505d8
sfi-move,0x21de9b6f650,0x1ebb7650670
sfi-move,0x21de9b6f6e8,0x1ebb7650708
sfi-move,0x21de9b6f778,0x1ebb7650780
sfi-move,0x21de9b6f810,0x1ebb7650818
sfi-move,0x21de9b6f8a8,0x1ebb76508b0
sfi-move,0x21de9b6f940,0x1ebb7650948
sfi-move,0x21de9b6f9d8,0x1ebb76509e0
sfi-move,0x21de9b6fa70,0x1ebb7650a78
sfi-move,0x21de9b6fb08,0x1ebb7650b10
sfi-move,0x21de9b6fba0,0x1ebb7650ba8
sfi-move,0x21de9b6fc38,0x1ebb7650c40
sfi-move,0x21de9b6fcd0,0x1ebb7650cd8
sfi-move,0x21de9b6fd68,0x1ebb7650d70
sfi-move,0x21de9b6fe00,0x1ebb7650e08
sfi-move,0x21de9b6fe98,0x1ebb7650ea0
sfi-move,0x21de9b6ff30,0x1ebb7650f38
sfi-move,0x21de9b6ffc8,0x1ebb7650fd0
sfi-move,0x21de9b70060,0x1ebb7651068
sfi-move,0x21de9b700f8,0x1ebb7651100
sfi-move,0x21de9b70190,0x1ebb7651198
sfi-move,0x21de9b70228,0x1ebb7651230
sfi-move,0x21de9b702c0,0x1ebb76512c8
sfi-move,0x21de9b70358,0x1ebb7651360
sfi-move,0x21de9b703f0,0x1ebb76513f8
sfi-move,0x21de9b70488,0x1ebb7651490
sfi-move,0x21de9b70520,0x1ebb7651528
sfi-move,0x21de9b705b8,0x1ebb76515c0
sfi-move,0x21de9b70650,0x1ebb7651658
sfi-move,0x21de9b706e8,0x1ebb76516f0
sfi-move,0x21de9b70780,0x1ebb7651788
sfi-move,0x21de9b70818,0x1ebb7651820
sfi-move,0x21de9b708b0,0x1ebb76518b8
sfi-move,0x21de9b70948,0x1ebb7651950
sfi-move,0x21de9b709e0,0x1ebb76519e8
sfi-move,0x21de9b70a78,0x1ebb7651a80
sfi-move,0x21de9b70b10,0x1ebb7651b18
sfi-move,0x21de9b70ba8,0x1ebb7651bb0
sfi-move,0x21de9b70c40,0x1ebb7651c48
sfi-move,0x21de9b70cd8,0x1ebb7651ce0
sfi-move,0x21de9b70d70,0x1ebb7651d78
sfi-move,0x21de9b70e08,0x1ebb7651e10
sfi-move,0x21de9b70ea0,0x1ebb7651ea8
sfi-move,0x21de9b70f38,0x1ebb7651f40
code-move,0x125aa793734,0xdd9f3fe244
sfi-move,0x21de9b70fd0,0x1ebb7651fd8
sfi-move,0x21de9b71068,0x1ebb7652070
sfi-move,0x21de9b71100,0x1ebb7652108
sfi-move,0x21de9b71198,0x1ebb76521a0
sfi-move,0x21de9b71230,0x1ebb7652238
sfi-move,0x21de9b712c8,0x1ebb76522d0
sfi-move,0x21de9b71360,0x1ebb7652368
sfi-move,0x21de9b713f8,0x1ebb7652400
sfi-move,0x21de9b71490,0x1ebb7652498
sfi-move,0x21de9b71528,0x1ebb7652530
sfi-move,0x21de9b715c0,0x1ebb76525c8
sfi-move,0x21de9b71658,0x1ebb7652660
sfi-move,0x21de9b716f0,0x1ebb76526f8
sfi-move,0x21de9b71788,0x1ebb7652790
sfi-move,0x21de9b71820,0x1ebb7652828
sfi-move,0x21de9b718b8,0x1ebb76528c0
new,MemoryChunk,0x3229fdc0000,262144
sfi-move,0x21de9b71950,0x1ebb7652958
sfi-move,0x21de9b719e8,0x1ebb76529f0
sfi-move,0x21de9b71a80,0x1ebb7652a88
sfi-move,0x21de9b71b18,0x1ebb7652b20
sfi-move,0x21de9b71bb0,0x1ebb7652bb8
code-move,0x125aa7978d4,0x3229fdc5234
sfi-move,0x125aa797ba0,0x3229fdc54e0
code-move,0x125aa797c74,0x3229fdc55b4
sfi-move,0x21de9b71c48,0x1ebb7652c50
code-move,0x125aa798a54,0x3229fdc6394
code-move,0x125aa798c14,0x3229fdc6554
code-move,0x125aa799184,0x3229fdc69c4
code-move,0x125aa799594,0x3229fdc6dbc
sfi-move,0x21de9b71ce0,0x1ebb7652ce8
sfi-move,0x21de9b71d78,0x1ebb7652d80
sfi-move,0x21de9b71e10,0x1ebb7652e18
sfi-move,0x21de9b71ea8,0x1ebb7652eb0
sfi-move,0x21de9b71f40,0x1ebb7652f48
sfi-move,0x21de9b71f98,0x1ebb7652f88
sfi-move,0x21de9b72028,0x1ebb7653000
sfi-move,0x21de9b720c0,0x1ebb7653098
sfi-move,0x21de9b72158,0x1ebb7653130
sfi-move,0x21de9b721f0,0x1ebb76531c8
sfi-move,0x21de9b72288,0x1ebb7653260
sfi-move,0x21de9b72320,0x1ebb76532f8
sfi-move,0x21de9b723b8,0x1ebb7653390
sfi-move,0x21de9b72550,0x1ebb7653528
sfi-move,0x21de9b72628,0x1ebb7653600
sfi-move,0x21de9b72700,0x1ebb76536d8
sfi-move,0x21de9b727d8,0x1ebb76537b0
sfi-move,0x21de9b728b0,0x1ebb7653888
sfi-move,0x21de9b72a48,0x1ebb7653a20
sfi-move,0x21de9b72b20,0x1ebb7653af8
sfi-move,0x21de9b72bf8,0x1ebb7653bd0
sfi-move,0x21de9b72cd0,0x1ebb7653ca8
sfi-move,0x21de9b72da8,0x1ebb7653d80
sfi-move,0x21de9b72e40,0x1ebb7653e18
sfi-move,0x21de9b72ed8,0x1ebb7653eb0
sfi-move,0x21de9b72f70,0x1ebb7653f48
sfi-move,0x21de9b73008,0x1ebb7653fe0
sfi-move,0x21de9b730a0,0x1ebb7654078
sfi-move,0x21de9b73138,0x1ebb7654110
sfi-move,0x21de9b731d0,0x1ebb76541a8
sfi-move,0x21de9b73268,0x1ebb7654240
sfi-move,0x21de9b73300,0x1ebb76542d8
sfi-move,0x21de9b73398,0x1ebb7654370
sfi-move,0x21de9b73430,0x1ebb7654408
sfi-move,0x21de9b734c8,0x1ebb76544a0
sfi-move,0x21de9b73560,0x1ebb7654538
sfi-move,0x21de9b735f8,0x1ebb76545d0
sfi-move,0x21de9b73690,0x1ebb7654668
sfi-move,0x21de9b73728,0x1ebb7654700
sfi-move,0x21de9b737c0,0x1ebb7654798
sfi-move,0x21de9b73858,0x1ebb7654830
sfi-move,0x21de9b738f0,0x1ebb76548c8
sfi-move,0x21de9b73988,0x1ebb7654960
sfi-move,0x21de9b73a20,0x1ebb76549f8
sfi-move,0x21de9b73ab8,0x1ebb7654a90
sfi-move,0x21de9b73b50,0x1ebb7654b28
sfi-move,0x21de9b73be8,0x1ebb7654bc0
sfi-move,0x21de9b73c80,0x1ebb7654c58
sfi-move,0x21de9b73d18,0x1ebb7654cf0
sfi-move,0x21de9b73db0,0x1ebb7654d88
sfi-move,0x21de9b73e48,0x1ebb7654e20
sfi-move,0x21de9b73ee0,0x1ebb7654eb8
sfi-move,0x21de9b73f78,0x1ebb7654f50
sfi-move,0x21de9b74010,0x1ebb7654fe8
sfi-move,0x21de9b740a8,0x1ebb7655080
sfi-move,0x21de9b74140,0x1ebb7655118
sfi-move,0x21de9b741d8,0x1ebb76551b0
sfi-move,0x21de9b74270,0x1ebb7655248
sfi-move,0x21de9b74308,0x1ebb76552e0
sfi-move,0x21de9b743a0,0x1ebb7655378
sfi-move,0x21de9b74438,0x1ebb7655410
sfi-move,0x21de9b744d0,0x1ebb76554a8
sfi-move,0x21de9b74568,0x1ebb7655540
sfi-move,0x21de9b74600,0x1ebb76555d8
sfi-move,0x21de9b74698,0x1ebb7655670
sfi-move,0x21de9b74730,0x1ebb7655708
sfi-move,0x21de9b747c8,0x1ebb76557a0
sfi-move,0x21de9b74860,0x1ebb7655838
sfi-move,0x21de9b748f8,0x1ebb76558d0
sfi-move,0x21de9b74988,0x1ebb7655948
sfi-move,0x21de9b74a20,0x1ebb76559e0
sfi-move,0x21de9b74a78,0x1ebb7655a38
sfi-move,0x21de9b74b10,0x1ebb7655ad0
sfi-move,0x21de9b74ba8,0x1ebb7655b68
sfi-move,0x21de9b74c40,0x1ebb7655c00
sfi-move,0x21de9b74cd8,0x1ebb7655c98
sfi-move,0x21de9b74d70,0x1ebb7655d30
sfi-move,0x21de9b74e08,0x1ebb7655dc8
sfi-move,0x21de9b74ea0,0x1ebb7655e60
sfi-move,0x21de9b74f38,0x1ebb7655ef8
sfi-move,0x21de9b74f90,0x1ebb7655f50
sfi-move,0x21de9b75028,0x1ebb7655fe8
sfi-move,0x21de9b750c0,0x1ebb7656080
sfi-move,0x21de9b75158,0x1ebb7656118
sfi-move,0x21de9b751f0,0x1ebb76561b0
sfi-move,0x21de9b75288,0x1ebb7656248
sfi-move,0x21de9b752e0,0x1ebb76562a0
sfi-move,0x21de9b75338,0x1ebb76562f8
sfi-move,0x21de9b75390,0x1ebb7656350
sfi-move,0x21de9b753e8,0x1ebb76563a8
sfi-move,0x21de9b75440,0x1ebb7656400
sfi-move,0x21de9b75498,0x1ebb7656458
sfi-move,0x21de9b754f0,0x1ebb76564b0
sfi-move,0x21de9b75548,0x1ebb7656508
sfi-move,0x21de9b755a0,0x1ebb7656560
sfi-move,0x21de9b755f8,0x1ebb76565b8
sfi-move,0x21de9b75690,0x1ebb7656650
sfi-move,0x21de9b75728,0x1ebb76566e8
sfi-move,0x21de9b757c0,0x1ebb7656780
sfi-move,0x21de9b75858,0x1ebb7656818
code-move,0x125aa799734,0x3229fdc6f5c
sfi-move,0x21de9b758f0,0x1ebb76568b0
sfi-move,0x21de9b75988,0x1ebb7656948
sfi-move,0x21de9b75a20,0x1ebb76569e0
sfi-move,0x125aa7998e0,0x3229fdc7108
sfi-move,0x125aa799938,0x3229fdc7160
sfi-move,0x21de9b75ab8,0x1ebb7656a78
sfi-move,0x21de9b75b50,0x1ebb7656b10
sfi-move,0x21de9b75be8,0x1ebb7656ba8
code-move,0x125aa799a3c,0x3229fdc7264
code-move,0x125aa799d7c,0x3229fdc757c
code-move,0x125aa799f9c,0x3229fdc779c
sfi-move,0x21de9b75c80,0x1ebb7656c40
sfi-move,0x21de9b75d18,0x1ebb7656cd8
sfi-move,0x21de9b75db0,0x1ebb7656d70
sfi-move,0x21de9b75e48,0x1ebb7656e08
code-move,0x125aa79a0dc,0x3229fdc78dc
code-move,0x125aa79a614,0x3229fdc7e14
code-move,0x125aa79a77c,0x3229fdc7f7c
sfi-move,0x21de9b75ee0,0x1ebb7656ea0
sfi-move,0x21de9b75f78,0x1ebb7656f38
sfi-move,0x21de9b76010,0x1ebb7656fd0
sfi-move,0x21de9b760a8,0x1ebb7657068
sfi-move,0x21de9b76140,0x1ebb7657100
sfi-move,0x21de9b761d8,0x1ebb7657198
code-move,0x125aa79a924,0x3229fdc8124
sfi-move,0x21de9b76270,0x1ebb7657230
sfi-move,0x21de9b76308,0x1ebb76572c8
sfi-move,0x21de9b763a0,0x1ebb7657360
sfi-move,0x21de9b76438,0x1ebb76573f8
sfi-move,0x21de9b764d0,0x1ebb7657490
code-move,0x125aa79dca4,0x3229fdcb4a4
sfi-move,0x21de9b76568,0x1ebb7657528
sfi-move,0x21de9b76600,0x1ebb76575c0
sfi-move,0x21de9b76698,0x1ebb7657658
code-move,0x125aa79e0b4,0x3229fdcb814
sfi-move,0x21de9b76730,0x1ebb76576f0
sfi-move,0x21de9b767c8,0x1ebb7657788
sfi-move,0x21de9b76860,0x1ebb7657820
code-move,0x125aa79efcc,0x3229fdcc6dc
code-move,0x125aa79f3f4,0x3229fdcca3c
sfi-move,0x21de9b768f8,0x1ebb76578b8
code-move,0x125aa7a2a1c,0x3229fdd0064
code-move,0x125aa7a2b1c,0x3229fdd0164
sfi-move,0x21de9b76990,0x1ebb7657950
sfi-move,0x21de9b76a28,0x1ebb76579e8
sfi-move,0x21de9b76ac0,0x1ebb7657a80
code-move,0x125aa7a2d4c,0x3229fdd02bc
sfi-move,0x21de9b76b58,0x1ebb7657b18
code-move,0x125aa7a5034,0x3229fdd25a4
code-move,0x125aa7a51a4,0x3229fdd2714
sfi-move,0x21de9b76bf0,0x1ebb7657bb0
sfi-move,0x21de9b76c88,0x1ebb7657c48
sfi-move,0x21de9b76d20,0x1ebb7657ce0
code-move,0x125aa7a5d0c,0x3229fdd327c
code-move,0x125aa7a5ec4,0x3229fdd3434
code-move,0x125aa7a5f8c,0x3229fdd34fc
sfi-move,0x21de9b76db8,0x1ebb7657d78
sfi-move,0x21de9b76e50,0x1ebb7657e10
sfi-move,0x21de9b76ee8,0x1ebb7657ea8
sfi-move,0x21de9b76f80,0x1ebb7657f40
sfi-move,0x21de9b77018,0x1ebb7657fd8
sfi-move,0x21de9b770b0,0x1ebb7658070
sfi-move,0x21de9b77148,0x1ebb7658108
sfi-move,0x21de9b771e0,0x1ebb76581a0
sfi-move,0x21de9b77278,0x1ebb7658238
sfi-move,0x21de9b77310,0x1ebb76582d0
sfi-move,0x21de9b773a8,0x1ebb7658368
sfi-move,0x21de9b77440,0x1ebb7658400
sfi-move,0x21de9b774d8,0x1ebb7658498
sfi-move,0x21de9b77570,0x1ebb7658530
sfi-move,0x21de9b77608,0x1ebb76585c8
sfi-move,0x21de9b776a0,0x1ebb7658660
sfi-move,0x21de9b77738,0x1ebb76586f8
sfi-move,0x21de9b777d0,0x1ebb7658790
sfi-move,0x21de9b77868,0x1ebb7658828
sfi-move,0x21de9b77900,0x1ebb76588c0
sfi-move,0x21de9b77998,0x1ebb7658958
sfi-move,0x21de9b77a30,0x1ebb76589f0
sfi-move,0x21de9b77ac8,0x1ebb7658a88
sfi-move,0x21de9b77b60,0x1ebb7658b20
sfi-move,0x21de9b77bb8,0x1ebb7658b78
sfi-move,0x21de9b77c40,0x1ebb7658be8
sfi-move,0x21de9b77cd8,0x1ebb7658c60
sfi-move,0x21de9b77d98,0x1ebb7658d20
sfi-move,0x21de9b77e30,0x1ebb7658d98
sfi-move,0x21de9b77ec8,0x1ebb7658e10
sfi-move,0x21de9b77f60,0x1ebb7658ea8
sfi-move,0x21de9b77ff8,0x1ebb7658f40
sfi-move,0x21de9b78090,0x1ebb7658fd8
sfi-move,0x21de9b78128,0x1ebb7659050
sfi-move,0x21de9b781c0,0x1ebb76590e8
sfi-move,0x21de9b78258,0x1ebb7659180
sfi-move,0x21de9b782f0,0x1ebb7659218
sfi-move,0x21de9b78388,0x1ebb76592b0
sfi-move,0x21de9b78420,0x1ebb7659348
sfi-move,0x21de9b784b8,0x1ebb76593e0
sfi-move,0x21de9b78550,0x1ebb7659478
sfi-move,0x21de9b785e8,0x1ebb7659510
sfi-move,0x21de9b78680,0x1ebb76595a8
sfi-move,0x21de9b78718,0x1ebb7659640
sfi-move,0x21de9b787b0,0x1ebb76596d8
sfi-move,0x21de9b78848,0x1ebb7659770
sfi-move,0x21de9b788e0,0x1ebb76597e8
sfi-move,0x21de9b78978,0x1ebb7659880
sfi-move,0x21de9b78a08,0x1ebb76598f8
sfi-move,0x21de9b78aa0,0x1ebb7659990
sfi-move,0x21de9b78b38,0x1ebb7659a28
sfi-move,0x21de9b78bd0,0x1ebb7659ac0
sfi-move,0x21de9b78c68,0x1ebb7659b58
sfi-move,0x21de9b78d00,0x1ebb7659bf0
sfi-move,0x21de9b78d98,0x1ebb7659c88
sfi-move,0x21de9b78e30,0x1ebb7659d20
sfi-move,0x21de9b78ec8,0x1ebb7659db8
sfi-move,0x21de9b78f60,0x1ebb7659e50
sfi-move,0x21de9b78ff8,0x1ebb7659ee8
sfi-move,0x21de9b79090,0x1ebb7659f60
code-move,0x125aa7a609c,0x3229fdd35ec
code-move,0x125aa7a628c,0x3229fdd37dc
code-move,0x125aa7a63ac,0x3229fdd38fc
sfi-move,0x125aa7a68d8,0x3229fdd3b20
sfi-move,0x125aa7a6950,0x3229fdd3b80
sfi-move,0x125aa7a8db0,0x3229fdd45f0
sfi-move,0x125aa7a8e08,0x3229fdd4630
sfi-move,0x125aa7a8e60,0x3229fdd4670
sfi-move,0x125aa7a8eb8,0x3229fdd46b0
sfi-move,0x125aa7a8f10,0x3229fdd46f0
sfi-move,0x125aa7a8f68,0x3229fdd4748
sfi-move,0x125aa7a8fc0,0x3229fdd47a0
sfi-move,0x125aa7a9018,0x3229fdd47f8
sfi-move,0x125aa7a9070,0x3229fdd4838
sfi-move,0x125aa7a90c8,0x3229fdd4878
sfi-move,0x125aa7a9120,0x3229fdd48d0
sfi-move,0x125aa7a9178,0x3229fdd4928
sfi-move,0x125aa7a91d0,0x3229fdd4980
sfi-move,0x125aa7a9228,0x3229fdd49d8
sfi-move,0x125aa7a9280,0x3229fdd4a30
sfi-move,0x125aa7a92d8,0x3229fdd4a88
sfi-move,0x125aa7a9330,0x3229fdd4ae0
sfi-move,0x125aa7a9388,0x3229fdd4b38
sfi-move,0x125aa7a93e0,0x3229fdd4b90
sfi-move,0x125aa7a9438,0x3229fdd4be8
sfi-move,0x125aa7a9490,0x3229fdd4c40
sfi-move,0x125aa7a94e8,0x3229fdd4c98
sfi-move,0x125aa7a9540,0x3229fdd4cf0
sfi-move,0x125aa7a9598,0x3229fdd4d30
sfi-move,0x125aa7a95d8,0x3229fdd4d70
sfi-move,0x125aa7a9630,0x3229fdd4dc8
sfi-move,0x125aa7a9688,0x3229fdd4e20
sfi-move,0x125aa7a96e0,0x3229fdd4e78
sfi-move,0x125aa7a9738,0x3229fdd4ed0
sfi-move,0x125aa7a9790,0x3229fdd4f28
sfi-move,0x125aa7a97e8,0x3229fdd4f80
sfi-move,0x125aa7a9840,0x3229fdd4fd8
sfi-move,0x125aa7a9898,0x3229fdd5030
code-move,0x125aa7aa38c,0x3229fdd50ec
code-move,0x125aa7aa43c,0x3229fdd519c
code-move,0x125aa7aaf74,0x3229fdd5964
sfi-move,0x125aa7ab4c8,0x3229fdd5e70
sfi-move,0x125aa7ab520,0x3229fdd5ec8
code-move,0x125aa7ab654,0x3229fdd5ffc
code-move,0x125aa7acbdc,0x3229fdd7584
code-move,0x125aa7acd14,0x3229fdd76bc
code-move,0x125aa7acf1c,0x3229fdd787c
code-move,0x125aa7ad14c,0x3229fdd7aac
sfi-move,0x125aa7adac8,0x3229fdd7e70
sfi-move,0x125aa7adb20,0x3229fdd7ec8
sfi-move,0x125aa7adb78,0x3229fdd7f20
sfi-move,0x125aa7adbd0,0x3229fdd7f60
sfi-move,0x125aa7adc28,0x3229fdd7fb8
sfi-move,0x125aa7adc80,0x3229fdd8010
sfi-move,0x125aa7adcd8,0x3229fdd8068
sfi-move,0x125aa7add30,0x3229fdd80c0
sfi-move,0x125aa7add88,0x3229fdd8100
sfi-move,0x125aa7adde0,0x3229fdd8158
sfi-move,0x125aa7ade38,0x3229fdd81b0
sfi-move,0x125aa7aee48,0x3229fdd85e8
sfi-move,0x125aa7aeea0,0x3229fdd8640
code-move,0x125aa7afd44,0x3229fdd8ddc
code-move,0x125aa7b03a4,0x3229fdd943c
code-move,0x125aa7b047c,0x3229fdd9514
code-move,0x125aa7b068c,0x3229fdd9724
sfi-move,0x125aa7b25d8,0x3229fdd9fd0
sfi-move,0x125aa7b2630,0x3229fdda028
sfi-move,0x125aa7b2688,0x3229fdda080
sfi-move,0x125aa7b26e0,0x3229fdda0d8
sfi-move,0x125aa7b2738,0x3229fdda130
sfi-move,0x125aa7b2790,0x3229fdda188
sfi-move,0x125aa7b27e8,0x3229fdda1e0
sfi-move,0x125aa7b2840,0x3229fdda238
sfi-move,0x125aa7b2898,0x3229fdda290
sfi-move,0x125aa7b2920,0x3229fdda318
sfi-move,0x125aa7b29a0,0x3229fdda398
sfi-move,0x125aa7b29f8,0x3229fdda3f0
sfi-move,0x125aa7b2a50,0x3229fdda448
sfi-move,0x125aa7b2aa8,0x3229fdda4a0
sfi-move,0x125aa7b2b00,0x3229fdda4f8
sfi-move,0x125aa7b2b58,0x3229fdda550
sfi-move,0x125aa7b2bb0,0x3229fdda5a8
sfi-move,0x125aa7b2c48,0x3229fdda640
code-move,0x125aa7b3934,0x3229fddaa64
code-move,0x125aa7b3a34,0x3229fddab64
sfi-move,0x125aa7b3ad8,0x3229fddabb8
code-move,0x125aa7b400c,0x3229fddaef4
code-move,0x125aa7b4154,0x3229fddb024
code-move,0x125aa7b426c,0x3229fddb13c
sfi-move,0x125aa7b4378,0x3229fddb248
code-move,0x125aa7b445c,0x3229fddb32c
sfi-move,0x125aa7b50e8,0x3229fddbf98
code-move,0x125aa7b533c,0x3229fddc1ec
code-move,0x125aa7b55ec,0x3229fddc49c
sfi-move,0x125aa7b6108,0x3229fddc860
sfi-move,0x125aa7b6160,0x3229fddc8b8
sfi-move,0x125aa7b61b8,0x3229fddc8f8
sfi-move,0x125aa7b6210,0x3229fddc938
sfi-move,0x125aa7b62a8,0x3229fddc9b8
sfi-move,0x125aa7b6340,0x3229fddca50
sfi-move,0x125aa7b63d8,0x3229fddcae8
sfi-move,0x125aa7b6470,0x3229fddcb80
sfi-move,0x125aa7b6508,0x3229fddcc18
sfi-move,0x125aa7b65a0,0x3229fddccb0
sfi-move,0x125aa7becf8,0x3229fddf9b0
sfi-move,0x125aa7bed50,0x3229fddfa08
sfi-move,0x125aa7beda8,0x3229fddfa60
sfi-move,0x125aa7bee00,0x3229fddfaa0
sfi-move,0x125aa7bee58,0x3229fddfaf8
sfi-move,0x125aa7beeb0,0x3229fddfb50
sfi-move,0x125aa7bef08,0x3229fddfba8
sfi-move,0x125aa7bef60,0x3229fddfc00
sfi-move,0x125aa7befb8,0x3229fddfc58
sfi-move,0x125aa7bf010,0x3229fddfcb0
sfi-move,0x125aa7bf068,0x3229fddfd08
sfi-move,0x125aa7bf0c0,0x3229fddfd60
sfi-move,0x125aa7bf118,0x3229fddfda0
sfi-move,0x125aa7bf170,0x3229fddfdf8
sfi-move,0x125aa7bf1c8,0x3229fddfe38
sfi-move,0x125aa7bf220,0x3229fddfe90
sfi-move,0x125aa7bf278,0x3229fddfee8
sfi-move,0x125aa7bf2d0,0x3229fddff28
sfi-move,0x125aa7bf380,0x3229fddff80
sfi-move,0x125aa7bf3d8,0x3229fddffd8
sfi-move,0x125aa7bf430,0x3229fde0030
sfi-move,0x125aa7bf488,0x3229fde0088
sfi-move,0x125aa7bf4e0,0x3229fde00e0
sfi-move,0x125aa7bf590,0x3229fde0190
sfi-move,0x125aa7bf638,0x3229fde0238
sfi-move,0x125aa7bf690,0x3229fde0290
sfi-move,0x125aa7bf6e8,0x3229fde02e8
sfi-move,0x125aa7bf768,0x3229fde0368
sfi-move,0x125aa7bf7c0,0x3229fde03c0
sfi-move,0x125aa7bf818,0x3229fde0418
sfi-move,0x125aa7bf870,0x3229fde0470
sfi-move,0x125aa7bf8c8,0x3229fde04c8
sfi-move,0x125aa7bf920,0x3229fde0520
sfi-move,0x125aa7bf978,0x3229fde0578
sfi-move,0x125aa7bf9d0,0x3229fde05d0
sfi-move,0x125aa7bfa28,0x3229fde0628
sfi-move,0x125aa7bfa80,0x3229fde0680
sfi-move,0x125aa7bfad8,0x3229fde06d8
sfi-move,0x125aa7bfb58,0x3229fde0758
sfi-move,0x125aa7bfbd8,0x3229fde07d8
sfi-move,0x125aa7bfc30,0x3229fde0830
sfi-move,0x125aa7bfce0,0x3229fde0888
sfi-move,0x125aa7bfd38,0x3229fde08e0
sfi-move,0x125aa7bfd90,0x3229fde0920
sfi-move,0x125aa7bfe20,0x3229fde09b0
sfi-move,0x125aa7bfeb8,0x3229fde0a48
sfi-move,0x125aa7bff50,0x3229fde0ae0
delete,MemoryChunk,0xa5da600000
delete,MemoryChunk,0x9b20b40000
delete,MemoryChunk,0x21de9b40000
delete,MemoryChunk,0x16e264c0000
delete,MemoryChunk,0x66313c0000
delete,MemoryChunk,0x10fd4180000
delete,MemoryChunk,0x125aa780000
delete,MemoryChunk,0x8385f40000
delete,MemoryChunk,0x1361a700000
delete,MemoryChunk,0x1e02b780000
delete,MemoryChunk,0x34cdacc0000
tick,0x7ffdb20322f4,8993032,0,0x0,8
tick,0x7ffdb20322f4,9008091,0,0x0,8
tick,0x7ffdb20322f4,9024085,0,0x0,8
tick,0x7ffdb20322f4,9039102,0,0x0,8
tick,0x7ffdb20322f4,9054599,0,0x0,8
tick,0x7ffdb20322f4,9070617,0,0x0,8
tick,0x7ffdb20322f4,9086639,0,0x0,8
tick,0x7ffdb20322f4,9102638,0,0x0,8
tick,0x7ffdb20322f4,9117831,0,0x0,8
tick,0x7ffdb20322f4,9132874,0,0x0,8
tick,0x7ffdb20322f4,9148420,0,0x0,8
tick,0x7ffdb20322f4,9164456,0,0x0,8
tick,0x7ffdb20322f4,9179375,0,0x0,8
tick,0x7ffdb20322f4,9194385,0,0x0,8
tick,0x7ffdb20322f4,9210392,0,0x0,8
tick,0x7ffdb20322f4,9226346,0,0x0,8
tick,0x7ffdb20322f4,9241945,0,0x0,8
tick,0x7ffdb20322f4,9257962,0,0x0,8
tick,0x7ffdb20322f4,9273965,0,0x0,8
tick,0x7ffdb20322f4,9289970,0,0x0,8
tick,0x7ffdb20322f4,9306096,0,0x0,8
tick,0x7ffdb20322f4,9321942,0,0x0,8
tick,0x7ffdb20322f4,9337959,0,0x0,8
tick,0x7ffdb20322f4,9353574,0,0x0,8
tick,0x7ffdb20322f4,9369543,0,0x0,8
code-creation,JS,10,9382111,0xbe69489f6c,5,get node:readline:262:8,0xd6cc533768,~
code-source-info,0xbe69489f6c,118,7027,7071,C0O7051C4O7064,,
code-creation,JS,10,9382194,0xbe6948a13c,77,Interface._tabComplete node:readline:435:44,0xd6cc5341c8,~
code-source-info,0xbe6948a13c,118,10509,10997,C0O10509C13O10679C16O10684C21O10684C25O10711C35O10737C45O10751C50O10711C56O10763C59O10768C64O10778C69O10768C76O10996,,
code-creation,JS,10,9382323,0xdd9f3fe394,74, node:readline:440:26,0xbe6948a068,~
code-source-info,0xdd9f3fe394,118,10786,10992,C0O10809C3O10814C8O10814C12O10831C16O10849C19O10854C31O10894C34O10894C43O10854C48O10918C49O10925C50O10940C57O10945C59O10944C66O10959C73O10991,,
code-creation,JS,10,9382482,0xdd9f3fe70c,499, node:internal/readline/interface:663:18,0xd6cc538968,~
code-source-info,0xdd9f3fe70c
code-creation,JS,10,9382605,0xdd9f3feb64,7, node:internal/readline/interface:672:41,0xdd9f3fe558,~
code-source-info,0xdd9f3feb64,122,18796,18811,C0O18805C2O18805C6O18811,,
code-creation,JS,11,9382843,0x7ff7344183c0,10768,complete node:repl:1321:18,0x1ebb76463b8,^
code-source-info,0x7ff7344183c0,114,43817,55041,,,
code-creation,JS,11,9382877,0x7ff73441ae00,508,Socket.read node:net:766:33,0x39123e1e6d8,^
code-source-info,0x7ff73441ae00,86,20928,21112,,,
code-creation,JS,11,9382898,0x7ff73441b040,292,FastBuffer node:internal/buffer:960:14,0x1d9b7258888,^
code-source-info,0x7ff73441b040,25,27335,27426,,,
code-creation,JS,11,9382926,0x7ff73441b1c0,1900,completionGroupsLoaded node:repl:1568:34,0x39123e19530,^
code-source-info,0x7ff73441b1c0,114,53248,55038,,,
code-creation,JS,11,9383299,0x7ff73441b980,1116,#onMessage node:inspector:77:13,0xd6cc53e2d0,^
code-source-info,0x7ff73441b980,134,1893,2539,,,
code-creation,JS,11,9383329,0x7ff73441be00,448,completer node:repl:786:21,0x39123e14690,^
code-source-info,0x7ff73441be00,114,27696,27828,,,
code-creation,JS,11,9383350,0x7ff73441c000,380, node:repl:1573:47,0xd6cc53c478,^
code-source-info,0x7ff73441c000,114,53538,54002,,,
code-creation,JS,11,9383371,0x7ff73441c1c0,496,showCompletionPreview node:internal/repl/utils:225:33,0x2d4d28dd728,^
code-source-info,0x7ff73441c1c0,127,7255,9112,,,
code-creation,JS,11,9383392,0x7ff73441c400,520,connect node:inspector:56:10,0xd6cc53e350,^
code-source-info,0x7ff73441c400,134,1247,1437,,,
code-creation,JS,11,9383426,0x7ff73441c640,1924, node:internal/repl/utils:312:10,0xbe69490128,^
code-source-info,0x7ff73441c640,127,10121,12272,,,
code-creation,JS,11,9383511,0x7ff73441fd40,952,sendInspectorCommand node:internal/util/inspector:48:30,0x1d9b726b700,^
code-source-info,0x7ff73441fd40,47,1576,2108,,,
code-creation,JS,11,9383534,0x7ff734420140,120, node:inspector:59:39,0xbe6948ff40,^
code-source-info,0x7ff734420140,134,1393,1430,,,
code-creation,JS,11,9383558,0x7ff734420200,1152,post node:inspector:108:7,0xd6cc53e3e8,^
code-source-info,0x7ff734420200,134,2747,3417,,,
code-creation,JS,11,9383578,0x7ff7344206c0,404, node:internal/repl/utils:306:26,0xd6cc53d500,^
code-source-info,0x7ff7344206c0,127,9928,12281,,,
code-creation,JS,11,9383605,0x7ff734420880,1432,disconnect node:inspector:141:13,0xd6cc53e428,^
code-source-info,0x7ff734420880,134,3579,3942,,,
code-creation,JS,11,9383738,0x7ff734427d40,4444,processPromiseRejections node:internal/process/promises:221:34,0x1d9b7264228,^
code-source-info,0x7ff734427d40,36,6925,10162,,,
code-creation,JS,11,9383772,0x7ff734420e40,972,getInputPreview node:internal/repl/utils:298:27,0x2d4d28dd7d8,^
code-source-info,0x7ff734420e40,127,9595,12339,,,
code-creation,JS,11,9383795,0x7ff734421240,856,Socket._read node:net:705:34,0x39123e1e490,^
code-source-info,0x7ff734421240,86,19369,19693,,,
tick,0x7ffdb20322f4,9385552,0,0x0,8
tick,0x7ffdb20322f4,9401569,0,0x0,8
tick,0x7ffdb20322f4,9417571,0,0x0,8
tick,0x7ffdb20322f4,9433668,0,0x0,8
tick,0x7ffdb20322f4,9449597,0,0x0,8
tick,0x7ffdb20322f4,9465568,0,0x0,8
tick,0x7ffdb20322f4,9481609,0,0x0,8
tick,0x7ffdb20322f4,9497587,0,0x0,8
tick,0x7ffdb20322f4,9513647,0,0x0,8
tick,0x7ffdb20322f4,9529653,0,0x0,8
tick,0x7ffdb20322f4,9545200,0,0x0,8
tick,0x7ffdb20322f4,9561210,0,0x0,8
tick,0x7ffdb20322f4,9577228,0,0x0,8
tick,0x7ffdb20322f4,9593216,0,0x0,8
tick,0x7ffdb20322f4,9609268,0,0x0,8
tick,0x7ffdb20322f4,9625299,0,0x0,8
tick,0x7ffdb20322f4,9641774,0,0x0,8
code-creation,JS,10,9654200,0x3229fdead2c,5,get node:readline:316:8,0xd6cc533a68,~
code-source-info,0x3229fdead2c,118,7963,8000,C0O7987C4O7993,,
code-creation,JS,10,9654272,0x3229fdeae24,59, node:internal/readline/interface:882:10,0xd6cc538dc8,~
code-source-info,0x3229fdeae24,122,25574,25727,C0O25597C2O25602C4O25601C8O25614C13O25623C15O25628C20O25640C24O25651C26O25656C31O25668C35O25684C40O25684C44O25702C46O25707C48O25706C52O25715C58O25726,,
code-creation,JS,10,9654313,0x3229fdeaf54,5,get node:readline:238:8,0xd6cc533638,~
code-source-info,0x3229fdeaf54,118,6614,6657,C0O6638C4O6650,,
code-creation,JS,10,9654377,0x3229fdeb0a4,247, node:internal/readline/interface:440:16,0xd6cc5386b0,~
code-source-info,0x3229fdeb0a
code-creation,JS,10,9654468,0x3229fdeb31c,23,repl.clearLine node:internal/repl/utils:504:20,0x2d4d28ddac0,~
code-source-info,0x3229fdeb31c,127,17068,17181,C0O17081C4O17105C10O17119C15O17119C18O17145C19O17169C22O17180,,
code-creation,JS,10,9654511,0x3229fdeb44c,53,clearLine node:internal/readline/interface:874:12,0xd6cc538d70,~
code-source-info,0x3229fdeb44c,122,25415,25561,C0O25425C2O25430C4O25429C8O25444C11O25443C14O25442C19O25460C21O25465C23O25464C30O25480C35O25495C37O25505C41O25516C42O25528C46O25538C47O25552C52O25560,,
code-creation,JS,10,9654550,0x3229fdeb57c,5,get node:readline:340:8,0xd6cc533bb0,~
code-source-info,0x3229fdeb57c,118,8371,8414,C0O8395C4O8407,,
code-creation,JS,10,9654594,0x3229fdeb6b4,77,repl._moveCursor node:internal/repl/utils:490:22,0x2d4d28dda28,~
code-source-info,0x3229fdeb6b4,127,16495,16811,C0O16532C3O16537C8O16550C13O16550C17O16579C19O16597C26O16609C31O16614C35O16602C43O16645C53O16682C57O16738C59O16751C65O16778C70O16751C76O16810,,
code-creation,JS,10,9654657,0x3229fdeb894,155, node:internal/readline/interface:1030:16,0xd6cc539040,~
code-source-info,0x3229fdeb894,122,29958,30525,C0O29970C1O29977C6O29993C7O30000C8O30033C13O30033C18O30054C25O30069C28O30066C32O30110C38O30117C43O30131C44O30143C50O30169C55O30183C60O30188C64O30176C69O30224C74O30229C78O30217C82O30271C87O30271C92O30349C97O30365C101O30354C106O30405C111O30419C115O30410C119O30432C124O30448C134O30432C141O30492C143O30497C145O30496C149O30510C154O30524,,
code-creation,JS,10,9654917,0x3229fdec044,5,get node:readline:226:8,0xd6cc5335a0,~
code-source-info,0x3229fdec044,118,6410,6449,C0O6434C4O6442,,
code-creation,JS,10,9654986,0x3229fdec13c,63, node:internal/readline/interface:409:12,0xd6cc538580,~
code-source-info,0x3229fdec13c,122,11359,11601,C0O11373C2O11382C4O11381C9O11422C11O11426C15O11454C19O11478C23O11498C30O11513C32O11512C36O11498C41O11534C47O11570C55O11570C62O11600,,
code-creation,JS,10,9655131,0x3229fdec574,536,onLine node:repl:880:34,0x39123e14dd8,~
code-source-info,0x3229fdec
code-creation,JS,10,9655241,0x3229fdec97c,10, node:repl:142:64,0x1ebb76465f0,~
code-source-info,0x3229fdec97c,114,4561,4588,C0O4574C2O4580C9O4587,,
code-creation,JS,10,9655346,0x3229fdeca8c,50,_parseREPLKeyword node:repl:828:29,0x39123e146d0,~
code-source-info,0x3229fdeca8c,114,28830,29002,C0O28870C7O28878C11O28894C13O28912C20O28929C34O28944C41O28912C46O28959C47O28971C48O28984C49O28997,,
code-creation,JS,10,9655415,0x3229fdecd9c,133,action node:repl:1770:21,0x2d4d28daa00,~
code-source-info,0x3229fdecd9c,114,59620,60263,C0O59620C12O59646C23O59665C29O59681C34O59665C39O59646C44O59726C55O59749C58O59767C63O59749C69O59726C73O59726C75O59815C82O59837C87O59815C92O60122C95O60127C100O60134C110O60187C114O60134C119O60235C122O60240C127O60240C132O60262,,
code-creation,JS,10,9655470,0x3229fdecf84,5, node:repl:1773:34,0x3229fdecc38,~
code-source-info,0x3229fdecf84,114,59774,59795,C0O59789C4O59795,,
code-creation,JS,10,9655532,0x3229fded0ac,104, node:repl:1775:36,0x3229fdecc90,~
code-source-info,0x3229fded0ac,114,59844,60112,C0O59877C3O59882C10O59890C14O59933C26O59960C29O59985C33O59978C36O59992C40O59933C46O60020C51O60024C56O60035C62O60055C66O60049C84O60079C87O60084C92O60091C97O60091C103O60111,,
code-creation,JS,10,9657091,0x3229fded294,54,online node:internal/repl/history:127:18,0x2d4d28e11e0,~
code-source-info,0x3229fded294,128,3402,3559,C0O3416C4O3431C8O3446C14O3466C24O3466C28O3501C42O3534C45O3509C50O3507C53O3558,,
code-creation,JS,10,9657187,0x3229fded504,221,setTimeout node:timers:142:20,0x1d9b7266368,~
code-source-info,0x3229fded504,39,4427,5093,C0O4427C2O4468C10O4468C15O4517C17O4520C19O4547C54O4609C56O4636C65O4644C74O4658C76O4685C85O4693C94O4699C103O4713C105O4741C114O4749C123O4755C132O4761C139O4780C142O4801C146O4789C151O4902C153O4909C159O4925C162O4914C166O4810C171O4775C175O4946C177O4979C197O4979C203O5031C208O5055C213O5031C218O5075C220O5090,,
code-creation,JS,10,9657314,0x3229fded92c,180,Timeout node:internal/timers:165:14,0xa4fec3f5c0,~
script-source,13,node:internal/timers,'use strict';\x0d\n\x0d\n// HOW and WHY the timers implementation works the way it does.\x0d\n//\x0d\n// Timers are crucial to Node.js. Internally\x2C any TCP I/O connection creates a\x0d\n// timer so that we can time out of connections. Additionally\x2C many user\x0d\n// libraries and applications also use timers. As such there may be a\x0d\n// significantly large amount of timeouts scheduled at any given time.\x0d\n// Therefore\x2C it is very important that the timers implementation is performant\x0d\n// and efficient.\x0d\n//\x0d\n// Note: It is suggested you first read through the lib/internal/linkedlist.js\x0d\n// linked list implementation\x2C since timers depend on it extensively. It can be\x0d\n// somewhat counter-intuitive at first\x2C as it is not actually a class. Instead\x2C\x0d\n// it is a set of helpers that operate on an existing object.\x0d\n//\x0d\n// In order to be as performant as possible\x2C the architecture and data\x0d\n// structures are designed so that they are optimized to handle the following\x0d\n// use cases as efficiently as possible:\x0d\n\x0d\n// - Adding a new timer. (insert)\x0d\n// - Removing an existing timer. (remove)\x0d\n// - Handling a timer timing out. (timeout)\x0d\n//\x0d\n// Whenever possible\x2C the implementation tries to make the complexity of these\x0d\n// operations as close to constant-time as possible.\x0d\n// (So that performance is not impacted by the number of scheduled timers.)\x0d\n//\x0d\n// Object maps are kept which contain linked lists keyed by their duration in\x0d\n// milliseconds.\x0d\n//\x0d\n/* eslint-disable node-core/non-ascii-character */\x0d\n//\x0d\n// \u2554\u2550\u2550\u2550\u2550 > Object Map\x0d\n// \u2551\x0d\n// \u2560\u2550\u2550\x0d\n// \u2551 lists: { '40': { }\x2C '320': { etc } } (keys of millisecond duration)\x0d\n// \u255a\u2550\u2550          \u250c\u2500\u2500\u2500\u2500\u2518\x0d\n//              \u2502\x0d\n// \u2554\u2550\u2550          \u2502\x0d\n// \u2551 TimersList { _idleNext: { }\x2C _idlePrev: (self) }\x0d\n// \u2551         \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\x0d\n// \u2551    \u2554\u2550\u2550  \u2502                              ^\x0d\n// \u2551    \u2551    { _idleNext: { }\x2C  _idlePrev: { }\x2C _onTimeout: (callback) }\x0d\n// \u2551    \u2551      \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\x0d\n// \u2551    \u2551      \u2502                                  ^\x0d\n// \u2551    \u2551      { _idleNext: { etc }\x2C  _idlePrev: { }\x2C _onTimeout: (callback) }\x0d\n// \u2560\u2550\u2550  \u2560\u2550\u2550\x0d\n// \u2551    \u2551\x0d\n// \u2551    \u255a\u2550\u2550\u2550\u2550 >  Actual JavaScript timeouts\x0d\n// \u2551\x0d\n// \u255a\u2550\u2550\u2550\u2550 > Linked List\x0d\n//\x0d\n/* eslint-enable node-core/non-ascii-character */\x0d\n//\x0d\n// With this\x2C virtually constant-time insertion (append)\x2C removal\x2C and timeout\x0d\n// is possible in the JavaScript layer. Any one list of timers is able to be\x0d\n// sorted by just appending to it because all timers within share the same\x0d\n// duration. Therefore\x2C any timer added later will always have been scheduled to\x0d\n// timeout later\x2C thus only needing to be appended.\x0d\n// Removal from an object-property linked list is also virtually constant-time\x0d\n// as can be seen in the lib/internal/linkedlist.js implementation.\x0d\n// Timeouts only need to process any timers currently due to expire\x2C which will\x0d\n// always be at the beginning of the list for reasons stated above. Any timers\x0d\n// after the first one encountered that does not yet need to timeout will also\x0d\n// always be due to timeout at a later time.\x0d\n//\x0d\n// Less-than constant time operations are thus contained in two places:\x0d\n// The PriorityQueue \u2014 an efficient binary heap implementation that does all\x0d\n// operations in worst-case O(log n) time \u2014 which manages the order of expiring\x0d\n// Timeout lists and the object map lookup of a specific list by the duration of\x0d\n// timers within (or creation of a new list). However\x2C these operations combined\x0d\n// have shown to be trivial in comparison to other timers architectures.\x0d\n\x0d\nconst {\x0d\n  MathMax\x2C\x0d\n  MathTrunc\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  ReflectApply\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst binding = internalBinding('timers');\x0d\nconst {\x0d\n  immediateInfo\x2C\x0d\n  timeoutInfo\x2C\x0d\n} = binding;\x0d\n\x0d\nconst {\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  newAsyncId\x2C\x0d\n  initHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  // The needed emit*() functions.\x0d\n  emitInit\x2C\x0d\n  emitBefore\x2C\x0d\n  emitAfter\x2C\x0d\n  emitDestroy\x2C\x0d\n} = require('internal/async_hooks');\x0d\n\x0d\n// Symbols for storing async id state.\x0d\nconst async_id_symbol = Symbol('asyncId');\x0d\nconst trigger_async_id_symbol = Symbol('triggerId');\x0d\n\x0d\nconst kHasPrimitive = Symbol('kHasPrimitive');\x0d\n\x0d\nconst {\x0d\n  ERR_OUT_OF_RANGE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n  validateNumber\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst L = require('internal/linkedlist');\x0d\nconst PriorityQueue = require('internal/priority_queue');\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\nlet debug = require('internal/util/debuglog').debuglog('timer'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\n// *Must* match Environment::ImmediateInfo::Fields in src/env.h.\x0d\nconst kCount = 0;\x0d\nconst kRefCount = 1;\x0d\nconst kHasOutstanding = 2;\x0d\n\x0d\n// Timeout values > TIMEOUT_MAX are set to 1.\x0d\nconst TIMEOUT_MAX = 2 ** 31 - 1;\x0d\n\x0d\nlet timerListId = NumberMIN_SAFE_INTEGER;\x0d\n\x0d\nconst kRefed = Symbol('refed');\x0d\n\x0d\nlet nextExpiry = Infinity;\x0d\n// timeoutInfo is an Int32Array that contains the reference count of Timeout\x0d\n// objects at index 0. This is a TypedArray so that GetActiveResourcesInfo() in\x0d\n// `src/node_process_methods.cc` is able to access this value without crossing\x0d\n// the JS-C++ boundary\x2C which is slow at the time of writing.\x0d\ntimeoutInfo[0] = 0;\x0d\n\x0d\n// This is a priority queue with a custom sorting function that first compares\x0d\n// the expiry times of two lists and if they're the same then compares their\x0d\n// individual IDs to determine which list was created first.\x0d\nconst timerListQueue = new PriorityQueue(compareTimersLists\x2C setPosition);\x0d\n\x0d\n// Object map containing linked lists of timers\x2C keyed and sorted by their\x0d\n// duration in milliseconds.\x0d\n//\x0d\n// - key = time in milliseconds\x0d\n// - value = linked list\x0d\nconst timerListMap = { __proto__: null };\x0d\n\x0d\nfunction initAsyncResource(resource\x2C type) {\x0d\n  const asyncId = resource[async_id_symbol] = newAsyncId();\x0d\n  const triggerAsyncId =\x0d\n    resource[trigger_async_id_symbol] = getDefaultTriggerAsyncId();\x0d\n  if (initHooksExist())\x0d\n    emitInit(asyncId\x2C type\x2C triggerAsyncId\x2C resource);\x0d\n}\x0d\nclass Timeout {\x0d\n  // Timer constructor function.\x0d\n  // The entire prototype is defined in lib/timers.js\x0d\n  constructor(callback\x2C after\x2C args\x2C isRepeat\x2C isRefed) {\x0d\n    after *= 1; // Coalesce to number or NaN\x0d\n    if (!(after >= 1 && after <= TIMEOUT_MAX)) {\x0d\n      if (after > TIMEOUT_MAX) {\x0d\n        process.emitWarning(`${after} does not fit into` +\x0d\n                            ' a 32-bit signed integer.' +\x0d\n                            '\\nTimeout duration was set to 1.'\x2C\x0d\n                            'TimeoutOverflowWarning');\x0d\n      }\x0d\n      after = 1; // Schedule on next tick\x2C follows browser behavior\x0d\n    }\x0d\n\x0d\n    this._idleTimeout = after;\x0d\n    this._idlePrev = this;\x0d\n    this._idleNext = this;\x0d\n    this._idleStart = null;\x0d\n    // This must be set to null first to avoid function tracking\x0d\n    // on the hidden class\x2C revisit in V8 versions after 6.2\x0d\n    this._onTimeout = null;\x0d\n    this._onTimeout = callback;\x0d\n    this._timerArgs = args;\x0d\n    this._repeat = isRepeat ? after : null;\x0d\n    this._destroyed = false;\x0d\n\x0d\n    if (isRefed)\x0d\n      incRefCount();\x0d\n    this[kRefed] = isRefed;\x0d\n    this[kHasPrimitive] = false;\x0d\n\x0d\n    initAsyncResource(this\x2C 'Timeout');\x0d\n  }\x0d\n\x0d\n  // Make sure the linked list only shows the minimal necessary information.\x0d\n  [inspect.custom](_\x2C options) {\x0d\n    return inspect(this\x2C {\x0d\n      ...options\x2C\x0d\n      // Only inspect one level.\x0d\n      depth: 0\x2C\x0d\n      // It should not recurse.\x0d\n      customInspect: false\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  refresh() {\x0d\n    if (this[kRefed])\x0d\n      active(this);\x0d\n    else\x0d\n      unrefActive(this);\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  unref() {\x0d\n    if (this[kRefed]) {\x0d\n      this[kRefed] = false;\x0d\n      if (!this._destroyed)\x0d\n        decRefCount();\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  ref() {\x0d\n    if (!this[kRefed]) {\x0d\n      this[kRefed] = true;\x0d\n      if (!this._destroyed)\x0d\n        incRefCount();\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  hasRef() {\x0d\n    return this[kRefed];\x0d\n  }\x0d\n}\x0d\n\x0d\nclass TimersList {\x0d\n  constructor(expiry\x2C msecs) {\x0d\n    this._idleNext = this; // Create the list with the linkedlist properties to\x0d\n    this._idlePrev = this; // Prevent any unnecessary hidden class changes.\x0d\n    this.expiry = expiry;\x0d\n    this.id = timerListId++;\x0d\n    this.msecs = msecs;\x0d\n    this.priorityQueuePosition = null;\x0d\n  }\x0d\n\x0d\n  // Make sure the linked list only shows the minimal necessary information.\x0d\n  [inspect.custom](_\x2C options) {\x0d\n    return inspect(this\x2C {\x0d\n      ...options\x2C\x0d\n      // Only inspect one level.\x0d\n      depth: 0\x2C\x0d\n      // It should not recurse.\x0d\n      customInspect: false\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n// A linked list for storing `setImmediate()` requests\x0d\nclass ImmediateList {\x0d\n  constructor() {\x0d\n    this.head = null;\x0d\n    this.tail = null;\x0d\n  }\x0d\n\x0d\n  // Appends an item to the end of the linked list\x2C adjusting the current tail's\x0d\n  // next pointer and the item's previous pointer where applicable\x0d\n  append(item) {\x0d\n    if (this.tail !== null) {\x0d\n      this.tail._idleNext = item;\x0d\n      item._idlePrev = this.tail;\x0d\n    } else {\x0d\n      this.head = item;\x0d\n    }\x0d\n    this.tail = item;\x0d\n  }\x0d\n\x0d\n  // Removes an item from the linked list\x2C adjusting the pointers of adjacent\x0d\n  // items and the linked list's head or tail pointers as necessary\x0d\n  remove(item) {\x0d\n    if (item._idleNext) {\x0d\n      item._idleNext._idlePrev = item._idlePrev;\x0d\n    }\x0d\n\x0d\n    if (item._idlePrev) {\x0d\n      item._idlePrev._idleNext = item._idleNext;\x0d\n    }\x0d\n\x0d\n    if (item === this.head)\x0d\n      this.head = item._idleNext;\x0d\n    if (item === this.tail)\x0d\n      this.tail = item._idlePrev;\x0d\n\x0d\n    item._idleNext = null;\x0d\n    item._idlePrev = null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Create a single linked list instance only once at startup\x0d\nconst immediateQueue = new ImmediateList();\x0d\n\x0d\nfunction incRefCount() {\x0d\n  if (timeoutInfo[0]++ === 0) {\x0d\n    // We need to use the binding as the receiver for fast API calls.\x0d\n    binding.toggleTimerRef(true);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction decRefCount() {\x0d\n  if (--timeoutInfo[0] === 0) {\x0d\n    // We need to use the binding as the receiver for fast API calls.\x0d\n    binding.toggleTimerRef(false);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Schedule or re-schedule a timer.\x0d\n// The item must have been enroll()'d first.\x0d\nfunction active(item) {\x0d\n  insertGuarded(item\x2C true);\x0d\n}\x0d\n\x0d\n// Internal APIs that need timeouts should use `unrefActive()` instead of\x0d\n// `active()` so that they do not unnecessarily keep the process open.\x0d\nfunction unrefActive(item) {\x0d\n  insertGuarded(item\x2C false);\x0d\n}\x0d\n\x0d\n// The underlying logic for scheduling or re-scheduling a timer.\x0d\n//\x0d\n// Appends a timer onto the end of an existing timers list\x2C or creates a new\x0d\n// list if one does not already exist for the specified timeout duration.\x0d\nfunction insertGuarded(item\x2C refed\x2C start) {\x0d\n  const msecs = item._idleTimeout;\x0d\n  if (msecs < 0 || msecs === undefined)\x0d\n    return;\x0d\n\x0d\n  insert(item\x2C msecs\x2C start);\x0d\n\x0d\n  const isDestroyed = item._destroyed;\x0d\n  if (isDestroyed || !item[async_id_symbol]) {\x0d\n    item._destroyed = false;\x0d\n    initAsyncResource(item\x2C 'Timeout');\x0d\n  }\x0d\n\x0d\n  if (isDestroyed) {\x0d\n    if (refed)\x0d\n      incRefCount();\x0d\n  } else if (refed === !item[kRefed]) {\x0d\n    if (refed)\x0d\n      incRefCount();\x0d\n    else\x0d\n      decRefCount();\x0d\n  }\x0d\n  item[kRefed] = refed;\x0d\n}\x0d\n\x0d\n// We need to use the binding as the receiver for fast API calls.\x0d\nfunction insert(item\x2C msecs\x2C start = binding.getLibuvNow()) {\x0d\n  // Truncate so that accuracy of sub-millisecond timers is not assumed.\x0d\n  msecs = MathTrunc(msecs);\x0d\n  item._idleStart = start;\x0d\n\x0d\n  // Use an existing list if there is one\x2C otherwise we need to make a new one.\x0d\n  let list = timerListMap[msecs];\x0d\n  if (list === undefined) {\x0d\n    debug('no %d list was found in insert\x2C creating a new one'\x2C msecs);\x0d\n    const expiry = start + msecs;\x0d\n    timerListMap[msecs] = list = new TimersList(expiry\x2C msecs);\x0d\n    timerListQueue.insert(list);\x0d\n\x0d\n    if (nextExpiry > expiry) {\x0d\n      // We need to use the binding as the receiver for fast API calls.\x0d\n      binding.scheduleTimer(msecs);\x0d\n      nextExpiry = expiry;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  L.append(list\x2C item);\x0d\n}\x0d\n\x0d\nfunction setUnrefTimeout(callback\x2C after) {\x0d\n  // Type checking identical to setTimeout()\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  const timer = new Timeout(callback\x2C after\x2C undefined\x2C false\x2C false);\x0d\n  insert(timer\x2C timer._idleTimeout);\x0d\n\x0d\n  return timer;\x0d\n}\x0d\n\x0d\n// Type checking used by timers.enroll() and Socket#setTimeout()\x0d\nfunction getTimerDuration(msecs\x2C name) {\x0d\n  validateNumber(msecs\x2C name);\x0d\n  if (msecs < 0 || !NumberIsFinite(msecs)) {\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C 'a non-negative finite number'\x2C msecs);\x0d\n  }\x0d\n\x0d\n  // Ensure that msecs fits into signed int32\x0d\n  if (msecs > TIMEOUT_MAX) {\x0d\n    process.emitWarning(`${msecs} does not fit into a 32-bit signed integer.` +\x0d\n                        `\\nTimer duration was truncated to ${TIMEOUT_MAX}.`\x2C\x0d\n                        'TimeoutOverflowWarning');\x0d\n    return TIMEOUT_MAX;\x0d\n  }\x0d\n\x0d\n  return msecs;\x0d\n}\x0d\n\x0d\nfunction compareTimersLists(a\x2C b) {\x0d\n  const expiryDiff = a.expiry - b.expiry;\x0d\n  if (expiryDiff === 0) {\x0d\n    if (a.id < b.id)\x0d\n      return -1;\x0d\n    if (a.id > b.id)\x0d\n      return 1;\x0d\n  }\x0d\n  return expiryDiff;\x0d\n}\x0d\n\x0d\nfunction setPosition(node\x2C pos) {\x0d\n  node.priorityQueuePosition = pos;\x0d\n}\x0d\n\x0d\nfunction getTimerCallbacks(runNextTicks) {\x0d\n  // If an uncaught exception was thrown during execution of immediateQueue\x2C\x0d\n  // this queue will store all remaining Immediates that need to run upon\x0d\n  // resolution of all error handling (if process is still alive).\x0d\n  const outstandingQueue = new ImmediateList();\x0d\n\x0d\n  function processImmediate() {\x0d\n    const queue = outstandingQueue.head !== null ?\x0d\n      outstandingQueue : immediateQueue;\x0d\n    let immediate = queue.head;\x0d\n\x0d\n    // Clear the linked list early in case new `setImmediate()`\x0d\n    // calls occur while immediate callbacks are executed\x0d\n    if (queue !== outstandingQueue) {\x0d\n      queue.head = queue.tail = null;\x0d\n      immediateInfo[kHasOutstanding] = 1;\x0d\n    }\x0d\n\x0d\n    let prevImmediate;\x0d\n    let ranAtLeastOneImmediate = false;\x0d\n    while (immediate !== null) {\x0d\n      if (ranAtLeastOneImmediate)\x0d\n        runNextTicks();\x0d\n      else\x0d\n        ranAtLeastOneImmediate = true;\x0d\n\x0d\n      // It's possible for this current Immediate to be cleared while executing\x0d\n      // the next tick queue above\x2C which means we need to use the previous\x0d\n      // Immediate's _idleNext which is guaranteed to not have been cleared.\x0d\n      if (immediate._destroyed) {\x0d\n        outstandingQueue.head = immediate = prevImmediate._idleNext;\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      // TODO(RaisinTen): Destroy and unref the Immediate after _onImmediate()\x0d\n      // gets executed\x2C just like how Timeouts work.\x0d\n      immediate._destroyed = true;\x0d\n\x0d\n      immediateInfo[kCount]--;\x0d\n      if (immediate[kRefed])\x0d\n        immediateInfo[kRefCount]--;\x0d\n      immediate[kRefed] = null;\x0d\n\x0d\n      prevImmediate = immediate;\x0d\n\x0d\n      const asyncId = immediate[async_id_symbol];\x0d\n      emitBefore(asyncId\x2C immediate[trigger_async_id_symbol]\x2C immediate);\x0d\n\x0d\n      try {\x0d\n        const argv = immediate._argv;\x0d\n        if (!argv)\x0d\n          immediate._onImmediate();\x0d\n        else\x0d\n          immediate._onImmediate(...argv);\x0d\n      } finally {\x0d\n        immediate._onImmediate = null;\x0d\n\x0d\n        if (destroyHooksExist())\x0d\n          emitDestroy(asyncId);\x0d\n\x0d\n        outstandingQueue.head = immediate = immediate._idleNext;\x0d\n      }\x0d\n\x0d\n      emitAfter(asyncId);\x0d\n    }\x0d\n\x0d\n    if (queue === outstandingQueue)\x0d\n      outstandingQueue.head = null;\x0d\n    immediateInfo[kHasOutstanding] = 0;\x0d\n  }\x0d\n\x0d\n\x0d\n  function processTimers(now) {\x0d\n    debug('process timer lists %d'\x2C now);\x0d\n    nextExpiry = Infinity;\x0d\n\x0d\n    let list;\x0d\n    let ranAtLeastOneList = false;\x0d\n    while ((list = timerListQueue.peek()) != null) {\x0d\n      if (list.expiry > now) {\x0d\n        nextExpiry = list.expiry;\x0d\n        return timeoutInfo[0] > 0 ? nextExpiry : -nextExpiry;\x0d\n      }\x0d\n      if (ranAtLeastOneList)\x0d\n        runNextTicks();\x0d\n      else\x0d\n        ranAtLeastOneList = true;\x0d\n      listOnTimeout(list\x2C now);\x0d\n    }\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  function listOnTimeout(list\x2C now) {\x0d\n    const msecs = list.msecs;\x0d\n\x0d\n    debug('timeout callback %d'\x2C msecs);\x0d\n\x0d\n    let ranAtLeastOneTimer = false;\x0d\n    let timer;\x0d\n    while ((timer = L.peek(list)) != null) {\x0d\n      const diff = now - timer._idleStart;\x0d\n\x0d\n      // Check if this loop iteration is too early for the next timer.\x0d\n      // This happens if there are more timers scheduled for later in the list.\x0d\n      if (diff < msecs) {\x0d\n        list.expiry = MathMax(timer._idleStart + msecs\x2C now + 1);\x0d\n        list.id = timerListId++;\x0d\n        timerListQueue.percolateDown(1);\x0d\n        debug('%d list wait because diff is %d'\x2C msecs\x2C diff);\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      if (ranAtLeastOneTimer)\x0d\n        runNextTicks();\x0d\n      else\x0d\n        ranAtLeastOneTimer = true;\x0d\n\x0d\n      // The actual logic for when a timeout happens.\x0d\n      L.remove(timer);\x0d\n\x0d\n      const asyncId = timer[async_id_symbol];\x0d\n\x0d\n      if (!timer._onTimeout) {\x0d\n        if (!timer._destroyed) {\x0d\n          timer._destroyed = true;\x0d\n\x0d\n          if (timer[kRefed])\x0d\n            timeoutInfo[0]--;\x0d\n\x0d\n          if (destroyHooksExist())\x0d\n            emitDestroy(asyncId);\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      emitBefore(asyncId\x2C timer[trigger_async_id_symbol]\x2C timer);\x0d\n\x0d\n      let start;\x0d\n      if (timer._repeat) {\x0d\n        // We need to use the binding as the receiver for fast API calls.\x0d\n        start = binding.getLibuvNow();\x0d\n      }\x0d\n\x0d\n      try {\x0d\n        const args = timer._timerArgs;\x0d\n        if (args === undefined)\x0d\n          timer._onTimeout();\x0d\n        else\x0d\n          ReflectApply(timer._onTimeout\x2C timer\x2C args);\x0d\n      } finally {\x0d\n        if (timer._repeat && timer._idleTimeout !== -1) {\x0d\n          timer._idleTimeout = timer._repeat;\x0d\n          insert(timer\x2C timer._idleTimeout\x2C start);\x0d\n        } else if (!timer._idleNext && !timer._idlePrev && !timer._destroyed) {\x0d\n          timer._destroyed = true;\x0d\n\x0d\n          if (timer[kRefed])\x0d\n            timeoutInfo[0]--;\x0d\n\x0d\n          if (destroyHooksExist())\x0d\n            emitDestroy(asyncId);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      emitAfter(asyncId);\x0d\n    }\x0d\n\x0d\n    // If `L.peek(list)` returned nothing\x2C the list was either empty or we have\x0d\n    // called all of the timer timeouts.\x0d\n    // As such\x2C we can remove the list from the object map and\x0d\n    // the PriorityQueue.\x0d\n    debug('%d list empty'\x2C msecs);\x0d\n\x0d\n    // The current list may have been removed and recreated since the reference\x0d\n    // to `list` was created. Make sure they're the same instance of the list\x0d\n    // before destroying.\x0d\n    if (list === timerListMap[msecs]) {\x0d\n      delete timerListMap[msecs];\x0d\n      timerListQueue.shift();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    processImmediate\x2C\x0d\n    processTimers\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nclass Immediate {\x0d\n  constructor(callback\x2C args) {\x0d\n    this._idleNext = null;\x0d\n    this._idlePrev = null;\x0d\n    this._onImmediate = callback;\x0d\n    this._argv = args;\x0d\n    this._destroyed = false;\x0d\n    this[kRefed] = false;\x0d\n\x0d\n    initAsyncResource(this\x2C 'Immediate');\x0d\n\x0d\n    this.ref();\x0d\n    immediateInfo[kCount]++;\x0d\n\x0d\n    immediateQueue.append(this);\x0d\n  }\x0d\n\x0d\n  ref() {\x0d\n    if (this[kRefed] === false) {\x0d\n      this[kRefed] = true;\x0d\n\x0d\n      if (immediateInfo[kRefCount]++ === 0) {\x0d\n        // We need to use the binding as the receiver for fast API calls.\x0d\n        binding.toggleImmediateRef(true);\x0d\n      }\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  unref() {\x0d\n    if (this[kRefed] === true) {\x0d\n      this[kRefed] = false;\x0d\n      if (--immediateInfo[kRefCount] === 0) {\x0d\n        // We need to use the binding as the receiver for fast API calls.\x0d\n        binding.toggleImmediateRef(false);\x0d\n      }\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  hasRef() {\x0d\n    return !!this[kRefed];\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  TIMEOUT_MAX\x2C\x0d\n  kTimeout: Symbol('timeout')\x2C // For hiding Timeouts on other internals.\x0d\n  async_id_symbol\x2C\x0d\n  trigger_async_id_symbol\x2C\x0d\n  Timeout\x2C\x0d\n  Immediate\x2C\x0d\n  kRefed\x2C\x0d\n  kHasPrimitive\x2C\x0d\n  initAsyncResource\x2C\x0d\n  setUnrefTimeout\x2C\x0d\n  getTimerDuration\x2C\x0d\n  immediateQueue\x2C\x0d\n  getTimerCallbacks\x2C\x0d\n  immediateInfoFields: {\x0d\n    kCount\x2C\x0d\n    kRefCount\x2C\x0d\n    kHasOutstanding\x2C\x0d\n  }\x2C\x0d\n  active\x2C\x0d\n  unrefActive\x2C\x0d\n  insert\x2C\x0d\n  timerListMap\x2C\x0d\n  timerListQueue\x2C\x0d\n  decRefCount\x2C\x0d\n  incRefCount\x2C\x0d\n};\x0d\n
code-source-info,0x3229fded92c,13,6107,7172,C0O6157C7O6203C9O6215C16O6232C18O6229C23O6255C25O6267C27O6265C32O6291C35O6299C42O6314C52O6340C58O6399C65O6299C71O6538C75O6614C77O6632C81O6646C83O6661C87O6674C89O6689C93O6702C94O6718C98O6859C99O6875C103O6888C105O6904C109O6921C111O6937C115O6950C120O6965C127O6963C131O6995C132O7011C136O7027C140O7047C143O7047C146O7067C148O7072C153O7080C157O7096C159O7101C163O7116C167O7132C173O7132C179O7171,,
tick,0x7ffdb1fb16a3,9658468,0,0x0,3,0x7ff7b3cb6490,0x3229fded5c9,0x3229fded2c1,0x7ff734412dd1,0x2d4d28cb559,0x3229fdec173,0x3229fdeae58,0x39123e17daa,0x2d4d28fea3a,0x2d4d28fe5ab,0x7ff734412c6f,0x2d4d28cb559,0x2d4d28d3c47,0x7ff75418d90d,0x7ff73441f61d,0x7ff734412c6f,0x2d4d28cb559,0x2d4d28fcc3f,0x2d4d28fc96a,0x2d4d28fc5e3,0x2d4d28fc033,0x7ff73440d313
code-creation,JS,10,9658517,0x3229fdef3dc,45,incRefCount node:internal/timers:305:21,0xa4fec3fa58,~
code-source-info,0x3229fdef3dc,13,9727,9878,C0O9735C16O9753C21O9756C26O9841C31O9849C38O9849C44O9877,,
code-creation,JS,10,9658575,0x3229fdef5a4,76,initAsyncResource node:internal/timers:155:27,0xa4fec3f568,~
code-source-info,0x3229fdef5a4,13,5728,5986,C0O5766C2O5775C7O5794C10O5794C14O5792C21O5839C23O5848C28O5875C31O5875C35O5873C42O5906C47O5910C52O5933C69O5933C75O5985,,
code-creation,JS,10,9658664,0x3229fdef884,167,insert node:internal/timers:361:16,0xa4fec3fc10,~
code-source-info,0x3229fdef884,13,11262,12007,C12O11284C15O11292C20O11292C29O11386C34O11394C39O11415C41O11431C45O11537C52O11549C56O11561C58O11592C66O11592C71O11680C73O11686C77O11700C82O11733C93O11729C99O11720C103O11765C108O11780C113O11780C118O11801C125O11816C130O11908C135O11916C140O11916C145O11945C147O11956C149O11983C154O11985C159O11985C166O12006,,
code-creation,JS,10,9658761,0x3229fdefa6c,10, node:internal/timers:120:65,0xa4fec3f1f8,~
code-source-info,0x3229fdefa6c,13,4504,4531,C0O4517C2O4523C9O4530,,
code-creation,JS,10,9658800,0x3229fdefb8c,48,TimersList node:internal/timers:241:14,0xa4fec3f7d0,~
code-source-info,0x3229fdefb8c,13,7971,8273,C0O7994C2O8009C6O8075C8O8090C12O8152C14O8164C18O8179C27O8200C31O8187C35O8209C37O8220C41O8234C42O8261C47O8272,,
code-creation,JS,10,9658873,0x3229fdeff5c,63,insert node:internal/priority_queue:26:9,0x1d9b7248b90,~
script-source,20,node:internal/priority_queue,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n} = primordials;\x0d\n\x0d\n// The PriorityQueue is a basic implementation of a binary heap that accepts\x0d\n// a custom sorting function via its constructor. This function is passed\x0d\n// the two nodes to compare\x2C similar to the native Array#sort. Crucially\x0d\n// this enables priority queues that are based on a comparison of more than\x0d\n// just a single criteria.\x0d\n\x0d\nmodule.exports = class PriorityQueue {\x0d\n  #compare = (a\x2C b) => a - b;\x0d\n  #heap = new Array(64);\x0d\n  #setPosition;\x0d\n  #size = 0;\x0d\n\x0d\n  constructor(comparator\x2C setPosition) {\x0d\n    if (comparator !== undefined)\x0d\n      this.#compare = comparator;\x0d\n    if (setPosition !== undefined)\x0d\n      this.#setPosition = setPosition;\x0d\n  }\x0d\n\x0d\n  insert(value) {\x0d\n    const heap = this.#heap;\x0d\n    const pos = ++this.#size;\x0d\n    heap[pos] = value;\x0d\n\x0d\n    if (heap.length === pos)\x0d\n      heap.length *= 2;\x0d\n\x0d\n    this.percolateUp(pos);\x0d\n  }\x0d\n\x0d\n  peek() {\x0d\n    return this.#heap[1];\x0d\n  }\x0d\n\x0d\n  peekBottom() {\x0d\n    return this.#heap[this.#size];\x0d\n  }\x0d\n\x0d\n  percolateDown(pos) {\x0d\n    const compare = this.#compare;\x0d\n    const setPosition = this.#setPosition;\x0d\n    const heap = this.#heap;\x0d\n    const size = this.#size;\x0d\n    const item = heap[pos];\x0d\n\x0d\n    while (pos * 2 <= size) {\x0d\n      let childIndex = pos * 2 + 1;\x0d\n      if (childIndex > size || compare(heap[pos * 2]\x2C heap[childIndex]) < 0)\x0d\n        childIndex = pos * 2;\x0d\n      const child = heap[childIndex];\x0d\n      if (compare(item\x2C child) <= 0)\x0d\n        break;\x0d\n      if (setPosition !== undefined)\x0d\n        setPosition(child\x2C pos);\x0d\n      heap[pos] = child;\x0d\n      pos = childIndex;\x0d\n    }\x0d\n    heap[pos] = item;\x0d\n    if (setPosition !== undefined)\x0d\n      setPosition(item\x2C pos);\x0d\n  }\x0d\n\x0d\n  percolateUp(pos) {\x0d\n    const heap = this.#heap;\x0d\n    const compare = this.#compare;\x0d\n    const setPosition = this.#setPosition;\x0d\n    const item = heap[pos];\x0d\n\x0d\n    while (pos > 1) {\x0d\n      const parent = heap[pos / 2 | 0];\x0d\n      if (compare(parent\x2C item) <= 0)\x0d\n        break;\x0d\n      heap[pos] = parent;\x0d\n      if (setPosition !== undefined)\x0d\n        setPosition(parent\x2C pos);\x0d\n      pos = pos / 2 | 0;\x0d\n    }\x0d\n    heap[pos] = item;\x0d\n    if (setPosition !== undefined)\x0d\n      setPosition(item\x2C pos);\x0d\n  }\x0d\n\x0d\n  removeAt(pos) {\x0d\n    const heap = this.#heap;\x0d\n    const size = --this.#size;\x0d\n    heap[pos] = heap[size + 1];\x0d\n    heap[size + 1] = undefined;\x0d\n\x0d\n    if (size > 0 && pos <= size) {\x0d\n      if (pos > 1 && this.#compare(heap[pos / 2 | 0]\x2C heap[pos]) > 0)\x0d\n        this.percolateUp(pos);\x0d\n      else\x0d\n        this.percolateDown(pos);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const heap = this.#heap;\x0d\n    const value = heap[1];\x0d\n    if (value === undefined)\x0d\n      return;\x0d\n\x0d\n    this.removeAt(1);\x0d\n\x0d\n    return value;\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x3229fdeff5c,20,723,909,C0O751C2O756C6O780C9O786C15O787C22O799C24O809C28O834C35O841C40O857C47O869C51O887C56O887C62O908,,
code-creation,JS,10,9659066,0x3229fdf0414,103,percolateUp node:internal/priority_queue:69:14,0x1d9b7248cf0,~
code-source-info,0x3229fdf0414,20,1725,2220,C0O1751C2O1756C6O1784C8O1789C12O1824C14O1829C18O1861C20O1865C24O1890C26O1890C31O1919C33O1928C36O1932C39O1923C43O1949C50O1971C55O1986C57O2000C59O2010C63O2027C67O2067C72O2100C74O2110C77O2114C82O1879C86O2131C88O2141C92O2154C96O2192C102O2219,,
code-creation,JS,10,9659122,0x3229fdf059c,8,setPosition node:internal/timers:423:21,0xa4fec3fd70,~
code-source-info,0x3229fdf059c,13,13132,13185,C0O13149C2O13176C7O13184,,
code-creation,JS,10,9659167,0x3229fdf0684,52,append node:internal/linkedlist:30:16,0x1d9b7248588,~
script-source,19,node:internal/linkedlist,'use strict';\x0d\n\x0d\nfunction init(list) {\x0d\n  list._idleNext = list;\x0d\n  list._idlePrev = list;\x0d\n  return list;\x0d\n}\x0d\n\x0d\n// Show the most idle item.\x0d\nfunction peek(list) {\x0d\n  if (list._idlePrev === list) return null;\x0d\n  return list._idlePrev;\x0d\n}\x0d\n\x0d\n// Remove an item from its list.\x0d\nfunction remove(item) {\x0d\n  if (item._idleNext) {\x0d\n    item._idleNext._idlePrev = item._idlePrev;\x0d\n  }\x0d\n\x0d\n  if (item._idlePrev) {\x0d\n    item._idlePrev._idleNext = item._idleNext;\x0d\n  }\x0d\n\x0d\n  item._idleNext = null;\x0d\n  item._idlePrev = null;\x0d\n}\x0d\n\x0d\n// Remove an item from its list and place at the end.\x0d\nfunction append(list\x2C item) {\x0d\n  if (item._idleNext || item._idlePrev) {\x0d\n    remove(item);\x0d\n  }\x0d\n\x0d\n  // Items are linked  with _idleNext -> (older) and _idlePrev -> (newer).\x0d\n  // Note: This linkage (next being older) may seem counter-intuitive at first.\x0d\n  item._idleNext = list._idleNext;\x0d\n  item._idlePrev = list;\x0d\n\x0d\n  // The list _idleNext points to tail (newest) and _idlePrev to head (oldest).\x0d\n  list._idleNext._idlePrev = item;\x0d\n  list._idleNext = item;\x0d\n}\x0d\n\x0d\nfunction isEmpty(list) {\x0d\n  return list._idleNext === list;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  init\x2C\x0d\n  peek\x2C\x0d\n  remove\x2C\x0d\n  append\x2C\x0d\n  isEmpty\x2C\x0d\n};\x0d\n
code-source-info,0x3229fdf0684,19,587,1037,C0O614C6O632C12O650C15O650C19O853C23O846C27O867C29O882C33O981C40O1001C44O1012C46O1027C51O1036,,
code-creation,JS,10,9659269,0x3229fdf097c,50,remove node:internal/linkedlist:16:16,0x1d9b7248530,~
code-source-info,0x3229fdf097c,19,290,513,C0O311C6O334C11O361C15O354C19O391C25O414C30O441C34O434C38O462C39O477C43O488C44O503C49O512,,
tick,0x7ffdb20322f4,9672801,0,0x0,8
tick,0x7ffdb20322f4,9687860,0,0x0,8
code-creation,JS,10,9687986,0x3229fdf0b7c,134,processTimers node:internal/timers:499:25,0xa4fec3ffa8,~
code-source-info,0x3229fdf0b7c,13,15533,16019,C0O15546C10O15546C15O15589C23O15600C31O15623C33O15658C35O15708C42O15700C47O15700C55O15735C62O15742C67O15778C71O15771C75O15795C83O15813C88O15817C103O15836C105O15848C106O15865C110O15897C113O15897C118O15934C120O15967C123O15967C128O15670C132O16005C133O16014,,
code-creation,JS,10,9688141,0x3229fdf0d04,12,peek node:internal/priority_queue:37:7,0x1d9b7248be8,~
code-source-info,0x3229fdf0d04,20,919,955,C0O929C2O941C8O946C11O950,,
code-creation,JS,10,9688330,0x3229fdf0fdc,585,listOnTimeout node:internal/timers:519:25,0x1d9b7241128,~
code-source-info,0x3229fdf0fdc
code-creation,JS,10,9688561,0x3229fdf1424,19,peek node:internal/linkedlist:10:14,0x1d9b72484d8,~
code-source-info,0x3229fdf1424,19,155,237,C0O176C7O186C12O196C13O208C14O224C18O234,,
code-creation,JS,10,9688770,0x3229fdf1594,32,shift node:internal/priority_queue:103:8,0x1d9b7248da0,~
code-source-info,0x3229fdf1594,20,2579,2737,C0O2602C2O2607C6O2633C8O2637C12O2647C14O2679C15O2686C16O2699C24O2699C29O2719C31O2732,,
code-creation,JS,10,9688872,0x3229fdf16a4,128,removeAt node:internal/priority_queue:89:11,0x1d9b7248d48,~
code-source-info,0x3229fdf16a4,20,2234,2568,C0O2260C2O2265C6O2290C9O2296C15O2297C22O2309C24O2331C27O2325C30O2319C34O2342C36O2352C41O2357C45O2377C46O2386C53O2397C58O2415C60O2423C67O2435C73O2453C76O2457C79O2448C85O2467C92O2443C99O2474C104O2493C109O2493C116O2537C121O2537C127O2567,,
tick,0x7ffdb20322f4,9703934,0,0x0,8
tick,0x7ffdb20322f4,9719937,0,0x0,8
tick,0x7ffdb20322f4,9735998,0,0x0,8
tick,0x7ffdb20322f4,9751592,0,0x0,8
tick,0x7ffdb20322f4,9767548,0,0x0,8
tick,0x7ffdb20322f4,9783531,0,0x0,8
tick,0x7ffdb20322f4,9799559,0,0x0,8
tick,0x7ffdb20322f4,9815523,0,0x0,8
tick,0x7ffdb20322f4,9831752,0,0x0,8
tick,0x7ffdb20322f4,9847158,0,0x0,8
tick,0x7ffdb20322f4,9863151,0,0x0,8
tick,0x7ffdb20322f4,9879193,0,0x0,8
tick,0x7ffdb20322f4,9895164,0,0x0,8
tick,0x7ffdb20322f4,9911140,0,0x0,8
tick,0x7ffdb20322f4,9927156,0,0x0,8
tick,0x7ffdb20322f4,9942677,0,0x0,8
tick,0x7ffdb20322f4,9958730,0,0x0,8
tick,0x7ffdb20322f4,9974725,0,0x0,8
tick,0x7ffdb20322f4,9990763,0,0x0,8
tick,0x7ffdb20322f4,10006708,0,0x0,8
tick,0x7ffdb20322f4,10022682,0,0x0,8
tick,0x7ffdb20322f4,10038721,0,0x0,8
tick,0x7ffdb20322f4,10054370,0,0x0,8
tick,0x7ffdb20322f4,10069281,0,0x0,8
tick,0x7ffdb20322f4,10085313,0,0x0,8
tick,0x7ffdb20322f4,10101288,0,0x0,8
tick,0x7ffdb20322f4,10117309,0,0x0,8
tick,0x7ffdb20322f4,10133262,0,0x0,8
tick,0x7ffdb20322f4,10148771,0,0x0,8
tick,0x7ffdb20322f4,10164048,0,0x0,8
tick,0x7ffdb20322f4,10179460,0,0x0,8
tick,0x7ffdb20322f4,10195018,0,0x0,8
tick,0x7ffdb20322f4,10210493,0,0x0,8
tick,0x7ffdb20322f4,10225931,0,0x0,8
tick,0x7ffdb20322f4,10240851,0,0x0,8
tick,0x7ffdb20322f4,10256443,0,0x0,8
tick,0x7ffdb20322f4,10272376,0,0x0,8
tick,0x7ffdb20322f4,10288030,0,0x0,8
tick,0x7ffdb20322f4,10303934,0,0x0,8
tick,0x7ffdb20322f4,10319935,0,0x0,8
tick,0x7ffdb20322f4,10335950,0,0x0,8
tick,0x7ffdb20322f4,10351514,0,0x0,8
tick,0x7ffdb20322f4,10367067,0,0x0,8
tick,0x7ffdb20322f4,10382074,0,0x0,8
tick,0x7ffdb20322f4,10398048,0,0x0,8
tick,0x7ffdb20322f4,10413082,0,0x0,8
tick,0x7ffdb20322f4,10428045,0,0x0,8
tick,0x7ffdb20322f4,10443656,0,0x0,8
tick,0x7ffdb20322f4,10459568,0,0x0,8
tick,0x7ffdb20322f4,10475575,0,0x0,8
tick,0x7ffdb20322f4,10490612,0,0x0,8
tick,0x7ffdb20322f4,10505600,0,0x0,8
tick,0x7ffdb20322f4,10521578,0,0x0,8
tick,0x7ffdb20322f4,10537633,0,0x0,8
tick,0x7ffdb20322f4,10553197,0,0x0,8
tick,0x7ffdb20322f4,10569196,0,0x0,8
tick,0x7ffdb20322f4,10584174,0,0x0,8
tick,0x7ffdb20322f4,10600195,0,0x0,8
tick,0x7ffdb20322f4,10615321,0,0x0,8
tick,0x7ffdb20322f4,10631364,0,0x0,8
tick,0x7ffdb20322f4,10646845,0,0x0,8
tick,0x7ffdb20322f4,10662835,0,0x0,8
tick,0x7ffdb20322f4,10678838,0,0x0,8
tick,0x7ffdb20322f4,10694869,0,0x0,8
tick,0x7ffdb20322f4,10709867,0,0x0,8
tick,0x7ffdb20322f4,10724877,0,0x0,8
tick,0x7ffdb20322f4,10740887,0,0x0,8
tick,0x7ffdb20322f4,10756465,0,0x0,8
tick,0x7ffdb20322f4,10771542,0,0x0,8
tick,0x7ffdb20322f4,10787368,0,0x0,8
tick,0x7ffdb20322f4,10803053,0,0x0,8
tick,0x7ffdb20322f4,10819104,0,0x0,8
tick,0x7ffdb20322f4,10835096,0,0x0,8
tick,0x7ffdb20322f4,10850685,0,0x0,8
tick,0x7ffdb20322f4,10866697,0,0x0,8
tick,0x7ffdb20322f4,10882654,0,0x0,8
tick,0x7ffdb20322f4,10898690,0,0x0,8
tick,0x7ffdb20322f4,10914834,0,0x0,8
tick,0x7ffdb20322f4,10930761,0,0x0,8
tick,0x7ffdb20322f4,10946256,0,0x0,8
tick,0x7ffdb20322f4,10962287,0,0x0,8
tick,0x7ffdb20322f4,10977283,0,0x0,8
tick,0x7ffdb20322f4,10993273,0,0x0,8
tick,0x7ffdb20322f4,11008293,0,0x0,8
tick,0x7ffdb20322f4,11023267,0,0x0,8
tick,0x7ffdb20322f4,11038357,0,0x0,8
tick,0x7ffdb20322f4,11054419,0,0x0,8
tick,0x7ffdb20322f4,11070524,0,0x0,8
tick,0x7ffdb20322f4,11086393,0,0x0,8
tick,0x7ffdb20322f4,11101435,0,0x0,8
tick,0x7ffdb20322f4,11117400,0,0x0,8
tick,0x7ffdb20322f4,11132376,0,0x0,8
tick,0x7ffdb20322f4,11147903,0,0x0,8
tick,0x7ffdb20322f4,11163913,0,0x0,8
tick,0x7ffdb20322f4,11179927,0,0x0,8
tick,0x7ffdb20322f4,11195915,0,0x0,8
tick,0x7ffdb20322f4,11211951,0,0x0,8
tick,0x7ffdb20322f4,11226913,0,0x0,8
tick,0x7ffdb20322f4,11241955,0,0x0,8
tick,0x7ffdb20322f4,11257486,0,0x0,8
tick,0x7ffdb20322f4,11272516,0,0x0,8
tick,0x7ffdb20322f4,11288454,0,0x0,8
tick,0x7ffdb20322f4,11304522,0,0x0,8
tick,0x7ffdb20322f4,11320516,0,0x0,8
tick,0x7ffdb20322f4,11336497,0,0x0,8
tick,0x7ffdb20322f4,11351613,0,0x0,8
tick,0x7ffdb20322f4,11367144,0,0x0,8
tick,0x7ffdb20322f4,11383178,0,0x0,8
tick,0x7ffdb20322f4,11399152,0,0x0,8
tick,0x7ffdb20322f4,11415207,0,0x0,8
tick,0x7ffdb20322f4,11431194,0,0x0,8
tick,0x7ffdb20322f4,11446657,0,0x0,8
tick,0x7ffdb20322f4,11462653,0,0x0,8
tick,0x7ffdb20322f4,11478653,0,0x0,8
tick,0x7ffdb20322f4,11494692,0,0x0,8
tick,0x7ffdb20322f4,11510649,0,0x0,8
tick,0x7ffdb20322f4,11525774,0,0x0,8
tick,0x7ffdb20322f4,11540699,0,0x0,8
tick,0x7ffdb20322f4,11556209,0,0x0,8
tick,0x7ffdb20322f4,11572217,0,0x0,8
tick,0x7ffdb20322f4,11588419,0,0x0,8
tick,0x7ffdb20322f4,11603698,0,0x0,8
tick,0x7ffdb20322f4,11618674,0,0x0,8
tick,0x7ffdb20322f4,11633683,0,0x0,8
tick,0x7ffdb20322f4,11649288,0,0x0,8
tick,0x7ffdb20322f4,11665312,0,0x0,8
tick,0x7ffdb20322f4,11681285,0,0x0,8
tick,0x7ffdb20322f4,11697299,0,0x0,8
tick,0x7ffdb20322f4,11712969,0,0x0,8
tick,0x7ffdb20322f4,11728946,0,0x0,8
tick,0x7ffdb20322f4,11744416,0,0x0,8
tick,0x7ffdb20322f4,11760527,0,0x0,8
tick,0x7ffdb20322f4,11775441,0,0x0,8
tick,0x7ffdb20322f4,11790500,0,0x0,8
tick,0x7ffdb20322f4,11806453,0,0x0,8
tick,0x7ffdb20322f4,11822596,0,0x0,8
tick,0x7ffdb20322f4,11838448,0,0x0,8
tick,0x7ffdb20322f4,11854070,0,0x0,8
tick,0x7ffdb20322f4,11870061,0,0x0,8
tick,0x7ffdb20322f4,11886050,0,0x0,8
tick,0x7ffdb20322f4,11902071,0,0x0,8
tick,0x7ffdb20322f4,11918045,0,0x0,8
tick,0x7ffdb20322f4,11934044,0,0x0,8
tick,0x7ffdb20322f4,11949635,0,0x0,8
tick,0x7ffdb20322f4,11965635,0,0x0,8
tick,0x7ffdb20322f4,11981625,0,0x0,8
tick,0x7ffdb20322f4,11997657,0,0x0,8
tick,0x7ffdb20322f4,12013637,0,0x0,8
tick,0x7ffdb20322f4,12029698,0,0x0,8
tick,0x7ffdb20322f4,12045245,0,0x0,8
tick,0x7ffdb20322f4,12061259,0,0x0,8
tick,0x7ffdb20322f4,12077256,0,0x0,8
tick,0x7ffdb20322f4,12093220,0,0x0,8
tick,0x7ffdb20322f4,12109242,0,0x0,8
tick,0x7ffdb20322f4,12125228,0,0x0,8
tick,0x7ffdb20322f4,12141332,0,0x0,8
tick,0x7ffdb20322f4,12157035,0,0x0,8
tick,0x7ffdb20322f4,12172970,0,0x0,8
tick,0x7ffdb20322f4,12188984,0,0x0,8
tick,0x7ffdb20322f4,12203981,0,0x0,8
tick,0x7ffdb20322f4,12218976,0,0x0,8
tick,0x7ffdb20322f4,12235083,0,0x0,8
tick,0x7ffdb20322f4,12250590,0,0x0,8
tick,0x7ffdb20322f4,12266358,0,0x0,8
tick,0x7ffdb20322f4,12282390,0,0x0,8
tick,0x7ffdb20322f4,12297324,0,0x0,8
tick,0x7ffdb20322f4,12313317,0,0x0,8
tick,0x7ffdb20322f4,12328659,0,0x0,8
tick,0x7ffdb20322f4,12344288,0,0x0,8
tick,0x7ffdb20322f4,12359543,0,0x0,8
tick,0x7ffdb20322f4,12374961,0,0x0,8
tick,0x7ffdb20322f4,12390507,0,0x0,8
tick,0x7ffdb20322f4,12405684,0,0x0,8
tick,0x7ffdb20322f4,12421246,0,0x0,8
tick,0x7ffdb20322f4,12437230,0,0x0,8
tick,0x7ffdb20322f4,12452921,0,0x0,8
tick,0x7ffdb20322f4,12468868,0,0x0,8
tick,0x7ffdb20322f4,12484913,0,0x0,8
tick,0x7ffdb20322f4,12500941,0,0x0,8
tick,0x7ffdb20322f4,12515850,0,0x0,8
tick,0x7ffdb20322f4,12531042,0,0x0,8
tick,0x7ffdb20322f4,12546473,0,0x0,8
tick,0x7ffdb20322f4,12562521,0,0x0,8
tick,0x7ffdb20322f4,12578477,0,0x0,8
tick,0x7ffdb20322f4,12594479,0,0x0,8
tick,0x7ffdb20322f4,12610473,0,0x0,8
tick,0x7ffdb20322f4,12626495,0,0x0,8
tick,0x7ffdb20322f4,12642523,0,0x0,8
tick,0x7ffdb20322f4,12658092,0,0x0,8
tick,0x7ffdb20322f4,12674110,0,0x0,8
tick,0x7ffdb20322f4,12690105,0,0x0,8
tick,0x7ffdb20322f4,12706117,0,0x0,8
tick,0x7ffdb20322f4,12722121,0,0x0,8
tick,0x7ffdb20322f4,12738016,0,0x0,8
tick,0x7ffdb20322f4,12753595,0,0x0,8
tick,0x7ffdb20322f4,12769144,0,0x0,8
tick,0x7ffdb20322f4,12785129,0,0x0,8
tick,0x7ffdb20322f4,12801131,0,0x0,8
tick,0x7ffdb20322f4,12817130,0,0x0,8
tick,0x7ffdb20322f4,12833126,0,0x0,8
tick,0x7ffdb20322f4,12848775,0,0x0,8
tick,0x7ffdb20322f4,12864736,0,0x0,8
tick,0x7ffdb20322f4,12880742,0,0x0,8
tick,0x7ffdb20322f4,12896867,0,0x0,8
tick,0x7ffdb20322f4,12912735,0,0x0,8
tick,0x7ffdb20322f4,12928826,0,0x0,8
tick,0x7ffdb20322f4,12945322,0,0x0,8
tick,0x7ffdb20322f4,12961328,0,0x0,8
tick,0x7ffdb20322f4,12976337,0,0x0,8
tick,0x7ffdb20322f4,12991308,0,0x0,8
tick,0x7ffdb20322f4,13007330,0,0x0,8
tick,0x7ffdb20322f4,13022346,0,0x0,8
tick,0x7ffdb20322f4,13037387,0,0x0,8
tick,0x7ffdb20322f4,13052917,0,0x0,8
tick,0x7ffdb20322f4,13068965,0,0x0,8
tick,0x7ffdb20322f4,13084955,0,0x0,8
tick,0x7ffdb20322f4,13099963,0,0x0,8
tick,0x7ffdb20322f4,13114954,0,0x0,8
tick,0x7ffdb20322f4,13130987,0,0x0,8
tick,0x7ffdb20322f4,13146529,0,0x0,8
tick,0x7ffdb20322f4,13162471,0,0x0,8
tick,0x7ffdb20322f4,13177600,0,0x0,8
tick,0x7ffdb20322f4,13192529,0,0x0,8
tick,0x7ffdb20322f4,13208535,0,0x0,8
tick,0x7ffdb20322f4,13224531,0,0x0,8
tick,0x7ffdb20322f4,13239654,0,0x0,8
tick,0x7ffdb20322f4,13255088,0,0x0,8
tick,0x7ffdb20322f4,13271172,0,0x0,8
tick,0x7ffdb20322f4,13287126,0,0x0,8
tick,0x7ffdb20322f4,13302144,0,0x0,8
tick,0x7ffdb20322f4,13317116,0,0x0,8
tick,0x7ffdb20322f4,13332184,0,0x0,8
tick,0x7ffdb20322f4,13347742,0,0x0,8
tick,0x7ffdb20322f4,13363719,0,0x0,8
tick,0x7ffdb20322f4,13379791,0,0x0,8
tick,0x7ffdb20322f4,13395756,0,0x0,8
tick,0x7ffdb20322f4,13411750,0,0x0,8
tick,0x7ffdb20322f4,13427732,0,0x0,8
tick,0x7ffdb20322f4,13443798,0,0x0,8
tick,0x7ffdb20322f4,13459346,0,0x0,8
tick,0x7ffdb20322f4,13475302,0,0x0,8
tick,0x7ffdb20322f4,13491345,0,0x0,8
tick,0x7ffdb20322f4,13507409,0,0x0,8
tick,0x7ffdb20322f4,13523387,0,0x0,8
tick,0x7ffdb20322f4,13538666,0,0x0,8
tick,0x7ffdb20322f4,13554319,0,0x0,8
tick,0x7ffdb20322f4,13569284,0,0x0,8
tick,0x7ffdb20322f4,13585293,0,0x0,8
tick,0x7ffdb20322f4,13601229,0,0x0,8
tick,0x7ffdb20322f4,13617273,0,0x0,8
tick,0x7ffdb20322f4,13632324,0,0x0,8
tick,0x7ffdb20322f4,13647868,0,0x0,8
tick,0x7ffdb20322f4,13663909,0,0x0,8
tick,0x7ffdb20322f4,13679874,0,0x0,8
tick,0x7ffdb20322f4,13695912,0,0x0,8
tick,0x7ffdb20322f4,13711843,0,0x0,8
tick,0x7ffdb20322f4,13727915,0,0x0,8
tick,0x7ffdb20322f4,13742992,0,0x0,8
tick,0x7ffdb20322f4,13758452,0,0x0,8
tick,0x7ffdb20322f4,13774445,0,0x0,8
tick,0x7ffdb20322f4,13790533,0,0x0,8
tick,0x7ffdb20322f4,13806411,0,0x0,8
tick,0x7ffdb20322f4,13822424,0,0x0,8
tick,0x7ffdb20322f4,13838439,0,0x0,8
tick,0x7ffdb20322f4,13854020,0,0x0,8
tick,0x7ffdb20322f4,13870052,0,0x0,8
tick,0x7ffdb20322f4,13886066,0,0x0,8
tick,0x7ffdb20322f4,13902065,0,0x0,8
tick,0x7ffdb20322f4,13918012,0,0x0,8
tick,0x7ffdb20322f4,13934054,0,0x0,8
tick,0x7ffdb20322f4,13949647,0,0x0,8
tick,0x7ffdb20322f4,13965644,0,0x0,8
tick,0x7ffdb20322f4,13981644,0,0x0,8
tick,0x7ffdb20322f4,13996646,0,0x0,8
tick,0x7ffdb20322f4,14012663,0,0x0,8
tick,0x7ffdb20322f4,14027631,0,0x0,8
tick,0x7ffdb20322f4,14043619,0,0x0,8
tick,0x7ffdb20322f4,14059225,0,0x0,8
tick,0x7ffdb20322f4,14075223,0,0x0,8
tick,0x7ffdb20322f4,14091218,0,0x0,8
tick,0x7ffdb20322f4,14107230,0,0x0,8
tick,0x7ffdb20322f4,14123221,0,0x0,8
tick,0x7ffdb20322f4,14139256,0,0x0,8
tick,0x7ffdb20322f4,14155066,0,0x0,8
tick,0x7ffdb20322f4,14170847,0,0x0,8
tick,0x7ffdb20322f4,14186903,0,0x0,8
tick,0x7ffdb20322f4,14202850,0,0x0,8
tick,0x7ffdb20322f4,14218828,0,0x0,8
tick,0x7ffdb20322f4,14234869,0,0x0,8
tick,0x7ffdb20322f4,14250430,0,0x0,8
tick,0x7ffdb20322f4,14266438,0,0x0,8
tick,0x7ffdb20322f4,14282450,0,0x0,8
tick,0x7ffdb20322f4,14298402,0,0x0,8
tick,0x7ffdb20322f4,14314380,0,0x0,8
tick,0x7ffdb20322f4,14330409,0,0x0,8
tick,0x7ffdb20322f4,14346422,0,0x0,8
tick,0x7ffdb20322f4,14362003,0,0x0,8
tick,0x7ffdb20322f4,14378021,0,0x0,8
tick,0x7ffdb20322f4,14394079,0,0x0,8
tick,0x7ffdb20322f4,14410001,0,0x0,8
tick,0x7ffdb20322f4,14426011,0,0x0,8
tick,0x7ffdb20322f4,14442063,0,0x0,8
tick,0x7ffdb20322f4,14457564,0,0x0,8
tick,0x7ffdb20322f4,14472573,0,0x0,8
tick,0x7ffdb20322f4,14488595,0,0x0,8
tick,0x7ffdb20322f4,14504208,0,0x0,8
tick,0x7ffdb20322f4,14519831,0,0x0,8
tick,0x7ffdb20322f4,14535263,0,0x0,8
tick,0x7ffdb20322f4,14550441,0,0x0,8
tick,0x7ffdb20322f4,14565581,0,0x0,8
tick,0x7ffdb20322f4,14581096,0,0x0,8
tick,0x7ffdb20322f4,14596415,0,0x0,8
tick,0x7ffdb20322f4,14611775,0,0x0,8
tick,0x7ffdb20322f4,14627519,0,0x0,8
tick,0x7ffdb20322f4,14643448,0,0x0,8
tick,0x7ffdb20322f4,14659000,0,0x0,8
tick,0x7ffdb20322f4,14675051,0,0x0,8
tick,0x7ffdb20322f4,14690970,0,0x0,8
tick,0x7ffdb20322f4,14706963,0,0x0,8
tick,0x7ffdb20322f4,14723000,0,0x0,8
tick,0x7ffdb20322f4,14738976,0,0x0,8
tick,0x7ffdb20322f4,14754541,0,0x0,8
tick,0x7ffdb20322f4,14770578,0,0x0,8
tick,0x7ffdb20322f4,14786597,0,0x0,8
tick,0x7ffdb20322f4,14802768,0,0x0,8
tick,0x7ffdb20322f4,14818682,0,0x0,8
tick,0x7ffdb20322f4,14834692,0,0x0,8
tick,0x7ffdb20322f4,14850268,0,0x0,8
tick,0x7ffdb20322f4,14866188,0,0x0,8
tick,0x7ffdb20322f4,14881187,0,0x0,8
tick,0x7ffdb20322f4,14896225,0,0x0,8
tick,0x7ffdb20322f4,14912193,0,0x0,8
tick,0x7ffdb20322f4,14928186,0,0x0,8
tick,0x7ffdb20322f4,14944195,0,0x0,8
tick,0x7ffdb20322f4,14959822,0,0x0,8
tick,0x7ffdb20322f4,14975791,0,0x0,8
tick,0x7ffdb20322f4,14991861,0,0x0,8
tick,0x7ffdb20322f4,15007817,0,0x0,8
tick,0x7ffdb20322f4,15023796,0,0x0,8
tick,0x7ffdb20322f4,15039832,0,0x0,8
tick,0x7ffdb20322f4,15055364,0,0x0,8
tick,0x7ffdb20322f4,15071415,0,0x0,8
tick,0x7ffdb20322f4,15087399,0,0x0,8
tick,0x7ffdb20322f4,15103431,0,0x0,8
tick,0x7ffdb20322f4,15119422,0,0x0,8
tick,0x7ffdb20322f4,15135432,0,0x0,8
tick,0x7ffdb20322f4,15151033,0,0x0,8
tick,0x7ffdb20322f4,15167033,0,0x0,8
tick,0x7ffdb20322f4,15183026,0,0x0,8
tick,0x7ffdb20322f4,15199034,0,0x0,8
tick,0x7ffdb20322f4,15215039,0,0x0,8
tick,0x7ffdb20322f4,15231016,0,0x0,8
tick,0x7ffdb20322f4,15247586,0,0x0,8
tick,0x7ffdb20322f4,15263650,0,0x0,8
tick,0x7ffdb20322f4,15279637,0,0x0,8
tick,0x7ffdb20322f4,15295626,0,0x0,8
tick,0x7ffdb20322f4,15311623,0,0x0,8
tick,0x7ffdb20322f4,15327632,0,0x0,8
tick,0x7ffdb20322f4,15343659,0,0x0,8
tick,0x7ffdb20322f4,15359205,0,0x0,8
tick,0x7ffdb20322f4,15375244,0,0x0,8
tick,0x7ffdb20322f4,15391312,0,0x0,8
tick,0x7ffdb20322f4,15407209,0,0x0,8
tick,0x7ffdb20322f4,15423229,0,0x0,8
tick,0x7ffdb20322f4,15439234,0,0x0,8
tick,0x7ffdb20322f4,15454804,0,0x0,8
tick,0x7ffdb20322f4,15470808,0,0x0,8
tick,0x7ffdb20322f4,15486887,0,0x0,8
tick,0x7ffdb20322f4,15502854,0,0x0,8
tick,0x7ffdb20322f4,15518903,0,0x0,8
tick,0x7ffdb20322f4,15534861,0,0x0,8
tick,0x7ffdb20322f4,15550430,0,0x0,8
tick,0x7ffdb20322f4,15566429,0,0x0,8
tick,0x7ffdb20322f4,15582453,0,0x0,8
tick,0x7ffdb20322f4,15598457,0,0x0,8
tick,0x7ffdb20322f4,15614489,0,0x0,8
tick,0x7ffdb20322f4,15630477,0,0x0,8
tick,0x7ffdb20322f4,15646452,0,0x0,8
tick,0x7ffdb20322f4,15662107,0,0x0,8
tick,0x7ffdb20322f4,15678032,0,0x0,8
tick,0x7ffdb20322f4,15694063,0,0x0,8
tick,0x7ffdb20322f4,15710032,0,0x0,8
tick,0x7ffdb20322f4,15726121,0,0x0,8
tick,0x7ffdb20322f4,15742125,0,0x0,8
tick,0x7ffdb20322f4,15757658,0,0x0,8
tick,0x7ffdb20322f4,15772654,0,0x0,8
tick,0x7ffdb20322f4,15788605,0,0x0,8
tick,0x7ffdb20322f4,15804614,0,0x0,8
tick,0x7ffdb20322f4,15819842,0,0x0,8
tick,0x7ffdb20322f4,15834931,0,0x0,8
tick,0x7ffdb20322f4,15850488,0,0x0,8
tick,0x7ffdb20322f4,15866436,0,0x0,8
tick,0x7ffdb20322f4,15882450,0,0x0,8
tick,0x7ffdb20322f4,15898438,0,0x0,8
tick,0x7ffdb20322f4,15913414,0,0x0,8
tick,0x7ffdb20322f4,15929438,0,0x0,8
tick,0x7ffdb20322f4,15944549,0,0x0,8
tick,0x7ffdb20322f4,15960029,0,0x0,8
tick,0x7ffdb20322f4,15976027,0,0x0,8
tick,0x7ffdb20322f4,15992076,0,0x0,8
tick,0x7ffdb20322f4,16008052,0,0x0,8
tick,0x7ffdb20322f4,16024035,0,0x0,8
tick,0x7ffdb20322f4,16040045,0,0x0,8
tick,0x7ffdb20322f4,16055657,0,0x0,8
tick,0x7ffdb20322f4,16071733,0,0x0,8
tick,0x7ffdb20322f4,16086897,0,0x0,8
tick,0x7ffdb20322f4,16101662,0,0x0,8
tick,0x7ffdb20322f4,16117652,0,0x0,8
tick,0x7ffdb20322f4,16133649,0,0x0,8
tick,0x7ffdb20322f4,16149224,0,0x0,8
tick,0x7ffdb20322f4,16165267,0,0x0,8
tick,0x7ffdb20322f4,16181242,0,0x0,8
tick,0x7ffdb20322f4,16197265,0,0x0,8
tick,0x7ffdb20322f4,16213280,0,0x0,8
tick,0x7ffdb20322f4,16229299,0,0x0,8
tick,0x7ffdb20322f4,16245286,0,0x0,8
tick,0x7ffdb20322f4,16261136,0,0x0,8
tick,0x7ffdb20322f4,16277146,0,0x0,8
tick,0x7ffdb20322f4,16293179,0,0x0,8
tick,0x7ffdb20322f4,16309097,0,0x0,8
tick,0x7ffdb20322f4,16325126,0,0x0,8
tick,0x7ffdb20322f4,16341157,0,0x0,8
tick,0x7ffdb20322f4,16356696,0,0x0,8
tick,0x7ffdb20322f4,16372684,0,0x0,8
tick,0x7ffdb20322f4,16388653,0,0x0,8
tick,0x7ffdb20322f4,16404686,0,0x0,8
tick,0x7ffdb20322f4,16420766,0,0x0,8
tick,0x7ffdb20322f4,16436737,0,0x0,8
tick,0x7ffdb20322f4,16452291,0,0x0,8
tick,0x7ffdb20322f4,16468287,0,0x0,8
tick,0x7ffdb20322f4,16484283,0,0x0,8
tick,0x7ffdb20322f4,16500341,0,0x0,8
tick,0x7ffdb20322f4,16516407,0,0x0,8
tick,0x7ffdb20322f4,16532375,0,0x0,8
tick,0x7ffdb20322f4,16548422,0,0x0,8
tick,0x7ffdb20322f4,16563941,0,0x0,8
tick,0x7ffdb20322f4,16579923,0,0x0,8
tick,0x7ffdb20322f4,16595202,0,0x0,8
tick,0x7ffdb20322f4,16611269,0,0x0,8
tick,0x7ffdb20322f4,16627218,0,0x0,8
tick,0x7ffdb20322f4,16643161,0,0x0,8
tick,0x7ffdb20322f4,16658680,0,0x0,8
tick,0x7ffdb20322f4,16674099,0,0x0,8
tick,0x7ffdb20322f4,16689751,0,0x0,8
tick,0x7ffdb20322f4,16704579,0,0x0,8
tick,0x7ffdb20322f4,16720058,0,0x0,8
tick,0x7ffdb20322f4,16735463,0,0x0,8
tick,0x7ffdb20322f4,16750466,0,0x0,8
tick,0x7ffdb20322f4,16765748,0,0x0,8
tick,0x7ffdb20322f4,16781437,0,0x0,8
tick,0x7ffdb20322f4,16796364,0,0x0,8
tick,0x7ffdb20322f4,16812371,0,0x0,8
tick,0x7ffdb20322f4,16828372,0,0x0,8
tick,0x7ffdb20322f4,16843598,0,0x0,8
tick,0x7ffdb20322f4,16859173,0,0x0,8
tick,0x7ffdb20322f4,16875189,0,0x0,8
tick,0x7ffdb20322f4,16891248,0,0x0,8
tick,0x7ffdb20322f4,16907170,0,0x0,8
tick,0x7ffdb20322f4,16923182,0,0x0,8
tick,0x7ffdb20322f4,16939309,0,0x0,8
tick,0x7ffdb20322f4,16954768,0,0x0,8
tick,0x7ffdb20322f4,16970797,0,0x0,8
tick,0x7ffdb20322f4,16986790,0,0x0,8
tick,0x7ffdb20322f4,17002769,0,0x0,8
tick,0x7ffdb20322f4,17018788,0,0x0,8
tick,0x7ffdb20322f4,17034774,0,0x0,8
tick,0x7ffdb20322f4,17050462,0,0x0,8
tick,0x7ffdb20322f4,17066352,0,0x0,8
tick,0x7ffdb20322f4,17082374,0,0x0,8
tick,0x7ffdb20322f4,17098439,0,0x0,8
tick,0x7ffdb20322f4,17114358,0,0x0,8
tick,0x7ffdb20322f4,17130400,0,0x0,8
tick,0x7ffdb20322f4,17146376,0,0x0,8
tick,0x7ffdb20322f4,17161916,0,0x0,8
tick,0x7ffdb20322f4,17177965,0,0x0,8
tick,0x7ffdb20322f4,17193890,0,0x0,8
tick,0x7ffdb20322f4,17209925,0,0x0,8
tick,0x7ffdb20322f4,17224903,0,0x0,8
tick,0x7ffdb20322f4,17239951,0,0x0,8
tick,0x7ffdb20322f4,17255515,0,0x0,8
tick,0x7ffdb20322f4,17271547,0,0x0,8
tick,0x7ffdb20322f4,17287539,0,0x0,8
tick,0x7ffdb20322f4,17303550,0,0x0,8
tick,0x7ffdb20322f4,17319545,0,0x0,8
tick,0x7ffdb20322f4,17335532,0,0x0,8
tick,0x7ffdb20322f4,17351103,0,0x0,8
tick,0x7ffdb20322f4,17367107,0,0x0,8
tick,0x7ffdb20322f4,17383139,0,0x0,8
tick,0x7ffdb20322f4,17399143,0,0x0,8
tick,0x7ffdb20322f4,17415125,0,0x0,8
tick,0x7ffdb20322f4,17431166,0,0x0,8
tick,0x7ffdb20322f4,17447142,0,0x0,8
tick,0x7ffdb20322f4,17462686,0,0x0,8
tick,0x7ffdb20322f4,17478685,0,0x0,8
tick,0x7ffdb20322f4,17494733,0,0x0,8
tick,0x7ffdb20322f4,17509729,0,0x0,8
tick,0x7ffdb20322f4,17525744,0,0x0,8
tick,0x7ffdb20322f4,17540867,0,0x0,8
tick,0x7ffdb20322f4,17556331,0,0x0,8
tick,0x7ffdb20322f4,17572301,0,0x0,8
tick,0x7ffdb20322f4,17588277,0,0x0,8
tick,0x7ffdb20322f4,17604333,0,0x0,8
tick,0x7ffdb20322f4,17620414,0,0x0,8
tick,0x7ffdb20322f4,17636380,0,0x0,8
tick,0x7ffdb20322f4,17651876,0,0x0,8
tick,0x7ffdb20322f4,17667899,0,0x0,8
tick,0x7ffdb20322f4,17683888,0,0x0,8
tick,0x7ffdb20322f4,17699938,0,0x0,8
tick,0x7ffdb20322f4,17715939,0,0x0,8
tick,0x7ffdb20322f4,17731849,0,0x0,8
tick,0x7ffdb20322f4,17747929,0,0x0,8
tick,0x7ffdb20322f4,17763494,0,0x0,8
tick,0x7ffdb20322f4,17779478,0,0x0,8
tick,0x7ffdb20322f4,17795478,0,0x0,8
tick,0x7ffdb20322f4,17811527,0,0x0,8
tick,0x7ffdb20322f4,17827469,0,0x0,8
tick,0x7ffdb20322f4,17843527,0,0x0,8
tick,0x7ffdb20322f4,17859609,0,0x0,8
tick,0x7ffdb20322f4,17875612,0,0x0,8
tick,0x7ffdb20322f4,17891618,0,0x0,8
tick,0x7ffdb20322f4,17907608,0,0x0,8
tick,0x7ffdb20322f4,17923632,0,0x0,8
tick,0x7ffdb20322f4,17939606,0,0x0,8
tick,0x7ffdb20322f4,17955153,0,0x0,8
tick,0x7ffdb20322f4,17971128,0,0x0,8
tick,0x7ffdb20322f4,17987135,0,0x0,8
tick,0x7ffdb20322f4,18003205,0,0x0,8
tick,0x7ffdb20322f4,18019196,0,0x0,8
tick,0x7ffdb20322f4,18035215,0,0x0,8
tick,0x7ffdb20322f4,18051206,0,0x0,8
tick,0x7ffdb20322f4,18066689,0,0x0,8
tick,0x7ffdb20322f4,18082762,0,0x0,8
tick,0x7ffdb20322f4,18098722,0,0x0,8
tick,0x7ffdb20322f4,18114649,0,0x0,8
tick,0x7ffdb20322f4,18129691,0,0x0,8
tick,0x7ffdb20322f4,18144695,0,0x0,8
tick,0x7ffdb20322f4,18160253,0,0x0,8
tick,0x7ffdb20322f4,18176245,0,0x0,8
tick,0x7ffdb20322f4,18192284,0,0x0,8
tick,0x7ffdb20322f4,18208259,0,0x0,8
tick,0x7ffdb20322f4,18224257,0,0x0,8
tick,0x7ffdb20322f4,18240367,0,0x0,8
tick,0x7ffdb20322f4,18255859,0,0x0,8
tick,0x7ffdb20322f4,18271799,0,0x0,8
tick,0x7ffdb20322f4,18286825,0,0x0,8
tick,0x7ffdb20322f4,18301807,0,0x0,8
tick,0x7ffdb20322f4,18317777,0,0x0,8
tick,0x7ffdb20322f4,18333836,0,0x0,8
tick,0x7ffdb20322f4,18349896,0,0x0,8
tick,0x7ffdb20322f4,18365405,0,0x0,8
tick,0x7ffdb20322f4,18381398,0,0x0,8
tick,0x7ffdb20322f4,18396418,0,0x0,8
tick,0x7ffdb20322f4,18411427,0,0x0,8
tick,0x7ffdb20322f4,18427384,0,0x0,8
tick,0x7ffdb20322f4,18443449,0,0x0,8
tick,0x7ffdb20322f4,18458945,0,0x0,8
tick,0x7ffdb20322f4,18474209,0,0x0,8
tick,0x7ffdb20322f4,18489194,0,0x0,8
tick,0x7ffdb20322f4,18505170,0,0x0,8
tick,0x7ffdb20322f4,18521222,0,0x0,8
tick,0x7ffdb20322f4,18537258,0,0x0,8
tick,0x7ffdb20322f4,18552861,0,0x0,8
tick,0x7ffdb20322f4,18568796,0,0x0,8
tick,0x7ffdb20322f4,18584812,0,0x0,8
tick,0x7ffdb20322f4,18600833,0,0x0,8
tick,0x7ffdb20322f4,18616805,0,0x0,8
tick,0x7ffdb20322f4,18632830,0,0x0,8
tick,0x7ffdb20322f4,18648831,0,0x0,8
tick,0x7ffdb20322f4,18664327,0,0x0,8
tick,0x7ffdb20322f4,18679417,0,0x0,8
tick,0x7ffdb20322f4,18695407,0,0x0,8
tick,0x7ffdb20322f4,18711431,0,0x0,8
tick,0x7ffdb20322f4,18727426,0,0x0,8
tick,0x7ffdb20322f4,18743441,0,0x0,8
tick,0x7ffdb20322f4,18759019,0,0x0,8
tick,0x7ffdb20322f4,18774988,0,0x0,8
tick,0x7ffdb20322f4,18790965,0,0x0,8
tick,0x7ffdb20322f4,18806998,0,0x0,8
tick,0x7ffdb20322f4,18822451,0,0x0,8
tick,0x7ffdb20322f4,18837710,0,0x0,8
tick,0x7ffdb20322f4,18853249,0,0x0,8
tick,0x7ffdb20322f4,18868406,0,0x0,8
tick,0x7ffdb20322f4,18883891,0,0x0,8
tick,0x7ffdb20322f4,18899052,0,0x0,8
tick,0x7ffdb20322f4,18914409,0,0x0,8
tick,0x7ffdb20322f4,18930011,0,0x0,8
tick,0x7ffdb20322f4,18945675,0,0x0,8
tick,0x7ffdb20322f4,18961223,0,0x0,8
tick,0x7ffdb20322f4,18977217,0,0x0,8
tick,0x7ffdb20322f4,18993215,0,0x0,8
tick,0x7ffdb20322f4,19008218,0,0x0,8
tick,0x7ffdb20322f4,19024219,0,0x0,8
tick,0x7ffdb20322f4,19039125,0,0x0,8
tick,0x7ffdb20322f4,19054653,0,0x0,8
tick,0x7ffdb20322f4,19070639,0,0x0,8
tick,0x7ffdb20322f4,19086873,0,0x0,8
tick,0x7ffdb20322f4,19101684,0,0x0,8
tick,0x7ffdb20322f4,19116629,0,0x0,8
tick,0x7ffdb20322f4,19132666,0,0x0,8
tick,0x7ffdb20322f4,19148207,0,0x0,8
tick,0x7ffdb20322f4,19163766,0,0x0,8
tick,0x7ffdb20322f4,19179789,0,0x0,8
tick,0x7ffdb20322f4,19195829,0,0x0,8
tick,0x7ffdb20322f4,19211744,0,0x0,8
tick,0x7ffdb20322f4,19227784,0,0x0,8
tick,0x7ffdb20322f4,19243795,0,0x0,8
tick,0x7ffdb20322f4,19259325,0,0x0,8
tick,0x7ffdb20322f4,19275319,0,0x0,8
tick,0x7ffdb20322f4,19291338,0,0x0,8
tick,0x7ffdb20322f4,19307352,0,0x0,8
tick,0x7ffdb20322f4,19323322,0,0x0,8
tick,0x7ffdb20322f4,19339379,0,0x0,8
tick,0x7ffdb20322f4,19354949,0,0x0,8
tick,0x7ffdb20322f4,19370962,0,0x0,8
tick,0x7ffdb20322f4,19387027,0,0x0,8
tick,0x7ffdb20322f4,19402942,0,0x0,8
tick,0x7ffdb20322f4,19418980,0,0x0,8
tick,0x7ffdb20322f4,19434913,0,0x0,8
tick,0x7ffdb20322f4,19450940,0,0x0,8
tick,0x7ffdb20322f4,19466464,0,0x0,8
tick,0x7ffdb20322f4,19482536,0,0x0,8
tick,0x7ffdb20322f4,19498464,0,0x0,8
tick,0x7ffdb20322f4,19514494,0,0x0,8
tick,0x7ffdb20322f4,19530474,0,0x0,8
tick,0x7ffdb20322f4,19546464,0,0x0,8
tick,0x7ffdb20322f4,19562036,0,0x0,8
tick,0x7ffdb20322f4,19577954,0,0x0,8
tick,0x7ffdb20322f4,19593358,0,0x0,8
tick,0x7ffdb20322f4,19609313,0,0x0,8
tick,0x7ffdb20322f4,19625295,0,0x0,8
tick,0x7ffdb20322f4,19641436,0,0x0,8
tick,0x7ffdb20322f4,19656917,0,0x0,8
tick,0x7ffdb20322f4,19673004,0,0x0,8
tick,0x7ffdb20322f4,19688862,0,0x0,8
tick,0x7ffdb20322f4,19704985,0,0x0,8
tick,0x7ffdb20322f4,19720921,0,0x0,8
tick,0x7ffdb20322f4,19736919,0,0x0,8
tick,0x7ffdb20322f4,19752551,0,0x0,8
tick,0x7ffdb20322f4,19768528,0,0x0,8
tick,0x7ffdb20322f4,19784528,0,0x0,8
tick,0x7ffdb20322f4,19800567,0,0x0,8
tick,0x7ffdb20322f4,19815629,0,0x0,8
tick,0x7ffdb20322f4,19830537,0,0x0,8
tick,0x7ffdb20322f4,19846520,0,0x0,8
tick,0x7ffdb20322f4,19862066,0,0x0,8
tick,0x7ffdb20322f4,19878067,0,0x0,8
tick,0x7ffdb20322f4,19894041,0,0x0,8
tick,0x7ffdb20322f4,19909497,0,0x0,8
tick,0x7ffdb20322f4,19925487,0,0x0,8
tick,0x7ffdb20322f4,19941502,0,0x0,8
tick,0x7ffdb20322f4,19957098,0,0x0,8
tick,0x7ffdb20322f4,19973159,0,0x0,8
tick,0x7ffdb20322f4,19989069,0,0x0,8
tick,0x7ffdb20322f4,20005115,0,0x0,8
tick,0x7ffdb20322f4,20021146,0,0x0,8
tick,0x7ffdb20322f4,20037104,0,0x0,8
tick,0x7ffdb20322f4,20052712,0,0x0,8
tick,0x7ffdb20322f4,20068604,0,0x0,8
tick,0x7ffdb20322f4,20084671,0,0x0,8
tick,0x7ffdb20322f4,20100625,0,0x0,8
tick,0x7ffdb20322f4,20116641,0,0x0,8
tick,0x7ffdb20322f4,20132635,0,0x0,8
tick,0x7ffdb20322f4,20148644,0,0x0,8
tick,0x7ffdb20322f4,20164142,0,0x0,8
tick,0x7ffdb20322f4,20180149,0,0x0,8
tick,0x7ffdb20322f4,20195966,0,0x0,8
tick,0x7ffdb20322f4,20211981,0,0x0,8
tick,0x7ffdb20322f4,20227977,0,0x0,8
tick,0x7ffdb20322f4,20244024,0,0x0,8
tick,0x7ffdb20322f4,20259517,0,0x0,8
tick,0x7ffdb20322f4,20275503,0,0x0,8
tick,0x7ffdb20322f4,20291485,0,0x0,8
tick,0x7ffdb20322f4,20307485,0,0x0,8
tick,0x7ffdb20322f4,20323480,0,0x0,8
tick,0x7ffdb20322f4,20338569,0,0x0,8
tick,0x7ffdb20322f4,20354069,0,0x0,8
tick,0x7ffdb20322f4,20370048,0,0x0,8
tick,0x7ffdb20322f4,20386070,0,0x0,8
tick,0x7ffdb20322f4,20402082,0,0x0,8
tick,0x7ffdb20322f4,20418127,0,0x0,8
tick,0x7ffdb20322f4,20434059,0,0x0,8
tick,0x7ffdb20322f4,20450106,0,0x0,8
tick,0x7ffdb20322f4,20465597,0,0x0,8
tick,0x7ffdb20322f4,20481576,0,0x0,8
tick,0x7ffdb20322f4,20497605,0,0x0,8
tick,0x7ffdb20322f4,20513616,0,0x0,8
tick,0x7ffdb20322f4,20529625,0,0x0,8
tick,0x7ffdb20322f4,20545655,0,0x0,8
tick,0x7ffdb20322f4,20561142,0,0x0,8
tick,0x7ffdb20322f4,20577136,0,0x0,8
tick,0x7ffdb20322f4,20593133,0,0x0,8
tick,0x7ffdb20322f4,20608392,0,0x0,8
tick,0x7ffdb20322f4,20623493,0,0x0,8
tick,0x7ffdb20322f4,20639574,0,0x0,8
tick,0x7ffdb20322f4,20655641,0,0x0,8
tick,0x7ffdb20322f4,20671776,0,0x0,8
tick,0x7ffdb20322f4,20687646,0,0x0,8
tick,0x7ffdb20322f4,20703679,0,0x0,8
tick,0x7ffdb20322f4,20719708,0,0x0,8
tick,0x7ffdb20322f4,20735635,0,0x0,8
tick,0x7ffdb20322f4,20751722,0,0x0,8
tick,0x7ffdb20322f4,20767267,0,0x0,8
tick,0x7ffdb20322f4,20783353,0,0x0,8
tick,0x7ffdb20322f4,20799320,0,0x0,8
tick,0x7ffdb20322f4,20815174,0,0x0,8
tick,0x7ffdb20322f4,20831110,0,0x0,8
tick,0x7ffdb20322f4,20847151,0,0x0,8
tick,0x7ffdb20322f4,20862733,0,0x0,8
tick,0x7ffdb20322f4,20878792,0,0x0,8
tick,0x7ffdb20322f4,20893700,0,0x0,8
tick,0x7ffdb20322f4,20909731,0,0x0,8
tick,0x7ffdb20322f4,20924825,0,0x0,8
tick,0x7ffdb20322f4,20940847,0,0x0,8
tick,0x7ffdb20322f4,20956879,0,0x0,8
tick,0x7ffdb20322f4,20972904,0,0x0,8
tick,0x7ffdb20322f4,20988030,0,0x0,8
tick,0x7ffdb20322f4,21002809,0,0x0,8
tick,0x7ffdb20322f4,21018041,0,0x0,8
tick,0x7ffdb20322f4,21033481,0,0x0,8
tick,0x7ffdb20322f4,21048750,0,0x0,8
tick,0x7ffdb20322f4,21064062,0,0x0,8
tick,0x7ffdb20322f4,21079245,0,0x0,8
tick,0x7ffdb20322f4,21094739,0,0x0,8
tick,0x7ffdb20322f4,21110541,0,0x0,8
tick,0x7ffdb20322f4,21126442,0,0x0,8
tick,0x7ffdb20322f4,21142562,0,0x0,8
tick,0x7ffdb20322f4,21158448,0,0x0,8
tick,0x7ffdb20322f4,21174502,0,0x0,8
tick,0x7ffdb20322f4,21190438,0,0x0,8
tick,0x7ffdb20322f4,21206426,0,0x0,8
tick,0x7ffdb20322f4,21222405,0,0x0,8
tick,0x7ffdb20322f4,21237726,0,0x0,8
tick,0x7ffdb20322f4,21253346,0,0x0,8
tick,0x7ffdb20322f4,21268328,0,0x0,8
tick,0x7ffdb20322f4,21284361,0,0x0,8
tick,0x7ffdb20322f4,21300356,0,0x0,8
tick,0x7ffdb20322f4,21316340,0,0x0,8
tick,0x7ffdb20322f4,21332413,0,0x0,8
tick,0x7ffdb20322f4,21348372,0,0x0,8
tick,0x7ffdb20322f4,21363946,0,0x0,8
tick,0x7ffdb20322f4,21379955,0,0x0,8
tick,0x7ffdb20322f4,21395963,0,0x0,8
tick,0x7ffdb20322f4,21411952,0,0x0,8
tick,0x7ffdb20322f4,21427955,0,0x0,8
tick,0x7ffdb20322f4,21444030,0,0x0,8
tick,0x7ffdb20322f4,21459528,0,0x0,8
tick,0x7ffdb20322f4,21475540,0,0x0,8
tick,0x7ffdb20322f4,21491556,0,0x0,8
tick,0x7ffdb20322f4,21507619,0,0x0,8
tick,0x7ffdb20322f4,21523555,0,0x0,8
tick,0x7ffdb20322f4,21539598,0,0x0,8
tick,0x7ffdb20322f4,21555215,0,0x0,8
tick,0x7ffdb20322f4,21571123,0,0x0,8
tick,0x7ffdb20322f4,21587138,0,0x0,8
tick,0x7ffdb20322f4,21603164,0,0x0,8
tick,0x7ffdb20322f4,21619147,0,0x0,8
tick,0x7ffdb20322f4,21634159,0,0x0,8
tick,0x7ffdb20322f4,21649196,0,0x0,8
tick,0x7ffdb20322f4,21664763,0,0x0,8
tick,0x7ffdb20322f4,21680731,0,0x0,8
tick,0x7ffdb20322f4,21696763,0,0x0,8
tick,0x7ffdb20322f4,21712815,0,0x0,8
tick,0x7ffdb20322f4,21728577,0,0x0,8
tick,0x7ffdb20322f4,21744580,0,0x0,8
tick,0x7ffdb20322f4,21760164,0,0x0,8
tick,0x7ffdb20322f4,21775114,0,0x0,8
tick,0x7ffdb20322f4,21791155,0,0x0,8
tick,0x7ffdb20322f4,21806150,0,0x0,8
tick,0x7ffdb20322f4,21822142,0,0x0,8
tick,0x7ffdb20322f4,21838225,0,0x0,8
tick,0x7ffdb20322f4,21853718,0,0x0,8
tick,0x7ffdb20322f4,21869770,0,0x0,8
tick,0x7ffdb20322f4,21885779,0,0x0,8
tick,0x7ffdb20322f4,21901768,0,0x0,8
tick,0x7ffdb20322f4,21917729,0,0x0,8
tick,0x7ffdb20322f4,21933748,0,0x0,8
tick,0x7ffdb20322f4,21949850,0,0x0,8
tick,0x7ffdb20322f4,21965425,0,0x0,8
tick,0x7ffdb20322f4,21981442,0,0x0,8
tick,0x7ffdb20322f4,21997446,0,0x0,8
tick,0x7ffdb20322f4,22013430,0,0x0,8
tick,0x7ffdb20322f4,22029411,0,0x0,8
tick,0x7ffdb20322f4,22045466,0,0x0,8
tick,0x7ffdb20322f4,22061009,0,0x0,8
tick,0x7ffdb20322f4,22076983,0,0x0,8
tick,0x7ffdb20322f4,22093077,0,0x0,8
tick,0x7ffdb20322f4,22108980,0,0x0,8
tick,0x7ffdb20322f4,22124975,0,0x0,8
tick,0x7ffdb20322f4,22141016,0,0x0,8
tick,0x7ffdb20322f4,22157121,0,0x0,8
tick,0x7ffdb20322f4,22173033,0,0x0,8
tick,0x7ffdb20322f4,22189002,0,0x0,8
tick,0x7ffdb20322f4,22205110,0,0x0,8
tick,0x7ffdb20322f4,22221035,0,0x0,8
tick,0x7ffdb20322f4,22237048,0,0x0,8
tick,0x7ffdb20322f4,22253142,0,0x0,8
tick,0x7ffdb20322f4,22268669,0,0x0,8
tick,0x7ffdb20322f4,22284655,0,0x0,8
tick,0x7ffdb20322f4,22300639,0,0x0,8
tick,0x7ffdb20322f4,22316612,0,0x0,8
tick,0x7ffdb20322f4,22332620,0,0x0,8
tick,0x7ffdb20322f4,22348672,0,0x0,8
tick,0x7ffdb20322f4,22364213,0,0x0,8
tick,0x7ffdb20322f4,22379896,0,0x0,8
tick,0x7ffdb20322f4,22394827,0,0x0,8
tick,0x7ffdb20322f4,22410798,0,0x0,8
tick,0x7ffdb20322f4,22426894,0,0x0,8
tick,0x7ffdb20322f4,22442884,0,0x0,8
tick,0x7ffdb20322f4,22458336,0,0x0,8
tick,0x7ffdb20322f4,22473344,0,0x0,8
tick,0x7ffdb20322f4,22489385,0,0x0,8
tick,0x7ffdb20322f4,22504390,0,0x0,8
tick,0x7ffdb20322f4,22520412,0,0x0,8
tick,0x7ffdb20322f4,22536382,0,0x0,8
tick,0x7ffdb20322f4,22552416,0,0x0,8
tick,0x7ffdb20322f4,22567947,0,0x0,8
tick,0x7ffdb20322f4,22583964,0,0x0,8
tick,0x7ffdb20322f4,22599962,0,0x0,8
tick,0x7ffdb20322f4,22615977,0,0x0,8
tick,0x7ffdb20322f4,22631942,0,0x0,8
tick,0x7ffdb20322f4,22648081,0,0x0,8
tick,0x7ffdb20322f4,22663539,0,0x0,8
tick,0x7ffdb20322f4,22679504,0,0x0,8
tick,0x7ffdb20322f4,22695558,0,0x0,8
tick,0x7ffdb20322f4,22711554,0,0x0,8
tick,0x7ffdb20322f4,22727538,0,0x0,8
tick,0x7ffdb20322f4,22743570,0,0x0,8
tick,0x7ffdb20322f4,22759109,0,0x0,8
tick,0x7ffdb20322f4,22775084,0,0x0,8
tick,0x7ffdb20322f4,22791093,0,0x0,8
tick,0x7ffdb20322f4,22807110,0,0x0,8
tick,0x7ffdb20322f4,22823071,0,0x0,8
tick,0x7ffdb20322f4,22839066,0,0x0,8
tick,0x7ffdb20322f4,22854617,0,0x0,8
tick,0x7ffdb20322f4,22870607,0,0x0,8
tick,0x7ffdb20322f4,22886620,0,0x0,8
tick,0x7ffdb20322f4,22902617,0,0x0,8
tick,0x7ffdb20322f4,22918631,0,0x0,8
tick,0x7ffdb20322f4,22934619,0,0x0,8
tick,0x7ffdb20322f4,22950667,0,0x0,8
tick,0x7ffdb20322f4,22966329,0,0x0,8
tick,0x7ffdb20322f4,22982320,0,0x0,8
tick,0x7ffdb20322f4,22998437,0,0x0,8
tick,0x7ffdb20322f4,23013328,0,0x0,8
tick,0x7ffdb20322f4,23028276,0,0x0,8
tick,0x7ffdb20322f4,23044378,0,0x0,8
tick,0x7ffdb20322f4,23059891,0,0x0,8
tick,0x7ffdb20322f4,23075897,0,0x0,8
tick,0x7ffdb20322f4,23091899,0,0x0,8
tick,0x7ffdb20322f4,23107888,0,0x0,8
tick,0x7ffdb20322f4,23123831,0,0x0,8
tick,0x7ffdb20322f4,23139870,0,0x0,8
tick,0x7ffdb20322f4,23155231,0,0x0,8
tick,0x7ffdb20322f4,23170334,0,0x0,8
tick,0x7ffdb20322f4,23185712,0,0x0,8
tick,0x7ffdb20322f4,23201250,0,0x0,8
tick,0x7ffdb20322f4,23216650,0,0x0,8
tick,0x7ffdb20322f4,23231871,0,0x0,8
tick,0x7ffdb20322f4,23247099,0,0x0,8
tick,0x7ffdb20322f4,23262454,0,0x0,8
tick,0x7ffdb20322f4,23278068,0,0x0,8
tick,0x7ffdb20322f4,23293128,0,0x0,8
tick,0x7ffdb20322f4,23309049,0,0x0,8
tick,0x7ffdb20322f4,23325098,0,0x0,8
tick,0x7ffdb20322f4,23341102,0,0x0,8
tick,0x7ffdb20322f4,23356653,0,0x0,8
tick,0x7ffdb20322f4,23372627,0,0x0,8
tick,0x7ffdb20322f4,23388635,0,0x0,8
tick,0x7ffdb20322f4,23404574,0,0x0,8
tick,0x7ffdb20322f4,23420564,0,0x0,8
tick,0x7ffdb20322f4,23436666,0,0x0,8
tick,0x7ffdb20322f4,23452635,0,0x0,8
tick,0x7ffdb20322f4,23468108,0,0x0,8
tick,0x7ffdb20322f4,23484180,0,0x0,8
tick,0x7ffdb20322f4,23500132,0,0x0,8
tick,0x7ffdb20322f4,23516160,0,0x0,8
tick,0x7ffdb20322f4,23532131,0,0x0,8
tick,0x7ffdb20322f4,23548198,0,0x0,8
tick,0x7ffdb20322f4,23563726,0,0x0,8
tick,0x7ffdb20322f4,23579728,0,0x0,8
tick,0x7ffdb20322f4,23595808,0,0x0,8
tick,0x7ffdb20322f4,23611518,0,0x0,8
tick,0x7ffdb20322f4,23627413,0,0x0,8
tick,0x7ffdb20322f4,23643505,0,0x0,8
tick,0x7ffdb20322f4,23659010,0,0x0,8
tick,0x7ffdb20322f4,23674948,0,0x0,8
tick,0x7ffdb20322f4,23690956,0,0x0,8
tick,0x7ffdb20322f4,23707026,0,0x0,8
tick,0x7ffdb20322f4,23722971,0,0x0,8
tick,0x7ffdb20322f4,23738900,0,0x0,8
tick,0x7ffdb20322f4,23755427,0,0x0,8
tick,0x7ffdb20322f4,23771521,0,0x0,8
tick,0x7ffdb20322f4,23787471,0,0x0,8
tick,0x7ffdb20322f4,23803450,0,0x0,8
tick,0x7ffdb20322f4,23819500,0,0x0,8
tick,0x7ffdb20322f4,23835493,0,0x0,8
tick,0x7ffdb20322f4,23851458,0,0x0,8
tick,0x7ffdb20322f4,23867028,0,0x0,8
tick,0x7ffdb20322f4,23883037,0,0x0,8
tick,0x7ffdb20322f4,23899017,0,0x0,8
tick,0x7ffdb20322f4,23915076,0,0x0,8
tick,0x7ffdb20322f4,23930017,0,0x0,8
tick,0x7ffdb20322f4,23945027,0,0x0,8
tick,0x7ffdb20322f4,23960601,0,0x0,8
tick,0x7ffdb20322f4,23975603,0,0x0,8
tick,0x7ffdb20322f4,23991087,0,0x0,8
tick,0x7ffdb20322f4,24007089,0,0x0,8
tick,0x7ffdb20322f4,24023073,0,0x0,8
tick,0x7ffdb20322f4,24039050,0,0x0,8
tick,0x7ffdb20322f4,24054099,0,0x0,8
tick,0x7ffdb20322f4,24069630,0,0x0,8
tick,0x7ffdb20322f4,24085640,0,0x0,8
tick,0x7ffdb20322f4,24101659,0,0x0,8
tick,0x7ffdb20322f4,24117708,0,0x0,8
tick,0x7ffdb20322f4,24133628,0,0x0,8
tick,0x7ffdb20322f4,24149660,0,0x0,8
tick,0x7ffdb20322f4,24165072,0,0x0,8
tick,0x7ffdb20322f4,24181136,0,0x0,8
tick,0x7ffdb20322f4,24196078,0,0x0,8
tick,0x7ffdb20322f4,24211065,0,0x0,8
tick,0x7ffdb20322f4,24227058,0,0x0,8
tick,0x7ffdb20322f4,24243082,0,0x0,8
tick,0x7ffdb20322f4,24258644,0,0x0,8
tick,0x7ffdb20322f4,24274632,0,0x0,8
tick,0x7ffdb20322f4,24290687,0,0x0,8
tick,0x7ffdb20322f4,24306582,0,0x0,8
tick,0x7ffdb20322f4,24322620,0,0x0,8
tick,0x7ffdb20322f4,24338642,0,0x0,8
tick,0x7ffdb20322f4,24354656,0,0x0,8
tick,0x7ffdb20322f4,24370157,0,0x0,8
tick,0x7ffdb20322f4,24384899,0,0x0,8
tick,0x7ffdb20322f4,24400877,0,0x0,8
tick,0x7ffdb20322f4,24416887,0,0x0,8
tick,0x7ffdb20322f4,24432872,0,0x0,8
tick,0x7ffdb20322f4,24448147,0,0x0,8
tick,0x7ffdb20322f4,24463630,0,0x0,8
tick,0x7ffdb20322f4,24479623,0,0x0,8
tick,0x7ffdb20322f4,24495605,0,0x0,8
tick,0x7ffdb20322f4,24511644,0,0x0,8
tick,0x7ffdb20322f4,24527655,0,0x0,8
tick,0x7ffdb20322f4,24543692,0,0x0,8
tick,0x7ffdb20322f4,24559208,0,0x0,8
tick,0x7ffdb20322f4,24575214,0,0x0,8
tick,0x7ffdb20322f4,24591209,0,0x0,8
tick,0x7ffdb20322f4,24607224,0,0x0,8
tick,0x7ffdb20322f4,24623206,0,0x0,8
tick,0x7ffdb20322f4,24639189,0,0x0,8
tick,0x7ffdb20322f4,24654268,0,0x0,8
tick,0x7ffdb20322f4,24669796,0,0x0,8
tick,0x7ffdb20322f4,24685850,0,0x0,8
tick,0x7ffdb20322f4,24701793,0,0x0,8
tick,0x7ffdb20322f4,24717809,0,0x0,8
tick,0x7ffdb20322f4,24733787,0,0x0,8
tick,0x7ffdb20322f4,24749827,0,0x0,8
tick,0x7ffdb20322f4,24765400,0,0x0,8
tick,0x7ffdb20322f4,24781426,0,0x0,8
tick,0x7ffdb20322f4,24797432,0,0x0,8
tick,0x7ffdb20322f4,24813421,0,0x0,8
tick,0x7ffdb20322f4,24829497,0,0x0,8
tick,0x7ffdb20322f4,24844481,0,0x0,8
tick,0x7ffdb20322f4,24860044,0,0x0,8
tick,0x7ffdb20322f4,24876079,0,0x0,8
tick,0x7ffdb20322f4,24892093,0,0x0,8
tick,0x7ffdb20322f4,24908032,0,0x0,8
tick,0x7ffdb20322f4,24924087,0,0x0,8
tick,0x7ffdb20322f4,24940065,0,0x0,8
tick,0x7ffdb20322f4,24956074,0,0x0,8
tick,0x7ffdb20322f4,24971610,0,0x0,8
tick,0x7ffdb20322f4,24987639,0,0x0,8
tick,0x7ffdb20322f4,25003628,0,0x0,8
tick,0x7ffdb20322f4,25019157,0,0x0,8
tick,0x7ffdb20322f4,25035028,0,0x0,8
tick,0x7ffdb20322f4,25051102,0,0x0,8
tick,0x7ffdb20322f4,25066575,0,0x0,8
tick,0x7ffdb20322f4,25082656,0,0x0,8
tick,0x7ffdb20322f4,25098633,0,0x0,8
tick,0x7ffdb20322f4,25114637,0,0x0,8
tick,0x7ffdb20322f4,25130584,0,0x0,8
tick,0x7ffdb20322f4,25146608,0,0x0,8
tick,0x7ffdb20322f4,25162224,0,0x0,8
tick,0x7ffdb20322f4,25178212,0,0x0,8
tick,0x7ffdb20322f4,25194334,0,0x0,8
tick,0x7ffdb20322f4,25210208,0,0x0,8
tick,0x7ffdb20322f4,25226210,0,0x0,8
tick,0x7ffdb20322f4,25242290,0,0x0,8
tick,0x7ffdb20322f4,25257718,0,0x0,8
tick,0x7ffdb20322f4,25272725,0,0x0,8
tick,0x7ffdb20322f4,25288717,0,0x0,8
tick,0x7ffdb20322f4,25303706,0,0x0,8
tick,0x7ffdb20322f4,25319313,0,0x0,8
tick,0x7ffdb20322f4,25334517,0,0x0,8
tick,0x7ffdb20322f4,25350123,0,0x0,8
tick,0x7ffdb20322f4,25365251,0,0x0,8
tick,0x7ffdb20322f4,25380935,0,0x0,8
tick,0x7ffdb20322f4,25396246,0,0x0,8
tick,0x7ffdb20322f4,25411722,0,0x0,8
tick,0x7ffdb20322f4,25426721,0,0x0,8
tick,0x7ffdb20322f4,25442357,0,0x0,8
tick,0x7ffdb20322f4,25457829,0,0x0,8
tick,0x7ffdb20322f4,25472857,0,0x0,8
tick,0x7ffdb20322f4,25488810,0,0x0,8
tick,0x7ffdb20322f4,25504841,0,0x0,8
tick,0x7ffdb20322f4,25520859,0,0x0,8
tick,0x7ffdb20322f4,25536963,0,0x0,8
tick,0x7ffdb20322f4,25552943,0,0x0,8
tick,0x7ffdb20322f4,25568709,0,0x0,8
tick,0x7ffdb20322f4,25584463,0,0x0,8
tick,0x7ffdb20322f4,25600543,0,0x0,8
tick,0x7ffdb20322f4,25616475,0,0x0,8
tick,0x7ffdb20322f4,25632534,0,0x0,8
tick,0x7ffdb20322f4,25648509,0,0x0,8
tick,0x7ffdb20322f4,25664048,0,0x0,8
tick,0x7ffdb20322f4,25680094,0,0x0,8
tick,0x7ffdb20322f4,25696080,0,0x0,8
tick,0x7ffdb20322f4,25712070,0,0x0,8
tick,0x7ffdb20322f4,25728051,0,0x0,8
tick,0x7ffdb20322f4,25743085,0,0x0,8
tick,0x7ffdb20322f4,25758663,0,0x0,8
tick,0x7ffdb20322f4,25774678,0,0x0,8
tick,0x7ffdb20322f4,25790642,0,0x0,8
tick,0x7ffdb20322f4,25806511,0,0x0,8
tick,0x7ffdb20322f4,25822544,0,0x0,8
tick,0x7ffdb20322f4,25837505,0,0x0,8
tick,0x7ffdb20322f4,25853563,0,0x0,8
tick,0x7ffdb20322f4,25869133,0,0x0,8
tick,0x7ffdb20322f4,25885103,0,0x0,8
tick,0x7ffdb20322f4,25901100,0,0x0,8
tick,0x7ffdb20322f4,25917125,0,0x0,8
tick,0x7ffdb20322f4,25933137,0,0x0,8
tick,0x7ffdb20322f4,25949125,0,0x0,8
tick,0x7ffdb20322f4,25964749,0,0x0,8
tick,0x7ffdb20322f4,25980751,0,0x0,8
tick,0x7ffdb20322f4,25996725,0,0x0,8
tick,0x7ffdb20322f4,26012733,0,0x0,8
tick,0x7ffdb20322f4,26028793,0,0x0,8
tick,0x7ffdb20322f4,26044158,0,0x0,8
tick,0x7ffdb20322f4,26059724,0,0x0,8
tick,0x7ffdb20322f4,26074702,0,0x0,8
tick,0x7ffdb20322f4,26090762,0,0x0,8
tick,0x7ffdb20322f4,26106732,0,0x0,8
tick,0x7ffdb20322f4,26122706,0,0x0,8
tick,0x7ffdb20322f4,26138723,0,0x0,8
tick,0x7ffdb20322f4,26154761,0,0x0,8
tick,0x7ffdb20322f4,26170316,0,0x0,8
tick,0x7ffdb20322f4,26186245,0,0x0,8
tick,0x7ffdb20322f4,26202276,0,0x0,8
tick,0x7ffdb20322f4,26218246,0,0x0,8
tick,0x7ffdb20322f4,26234263,0,0x0,8
tick,0x7ffdb20322f4,26250293,0,0x0,8
tick,0x7ffdb20322f4,26265819,0,0x0,8
tick,0x7ffdb20322f4,26281792,0,0x0,8
tick,0x7ffdb20322f4,26297781,0,0x0,8
tick,0x7ffdb20322f4,26313734,0,0x0,8
tick,0x7ffdb20322f4,26329782,0,0x0,8
tick,0x7ffdb20322f4,26345836,0,0x0,8
tick,0x7ffdb20322f4,26361345,0,0x0,8
tick,0x7ffdb20322f4,26377358,0,0x0,8
tick,0x7ffdb20322f4,26393360,0,0x0,8
tick,0x7ffdb20322f4,26409388,0,0x0,8
tick,0x7ffdb20322f4,26425361,0,0x0,8
tick,0x7ffdb20322f4,26441390,0,0x0,8
tick,0x7ffdb20322f4,26456938,0,0x0,8
tick,0x7ffdb20322f4,26472941,0,0x0,8
tick,0x7ffdb20322f4,26488952,0,0x0,8
tick,0x7ffdb20322f4,26504962,0,0x0,8
tick,0x7ffdb20322f4,26521091,0,0x0,8
tick,0x7ffdb20322f4,26536938,0,0x0,8
tick,0x7ffdb20322f4,26552953,0,0x0,8
tick,0x7ffdb20322f4,26568443,0,0x0,8
tick,0x7ffdb20322f4,26584449,0,0x0,8
tick,0x7ffdb20322f4,26600487,0,0x0,8
tick,0x7ffdb20322f4,26615455,0,0x0,8
tick,0x7ffdb20322f4,26630476,0,0x0,8
tick,0x7ffdb20322f4,26646492,0,0x0,8
tick,0x7ffdb20322f4,26662059,0,0x0,8
tick,0x7ffdb20322f4,26678069,0,0x0,8
tick,0x7ffdb20322f4,26693120,0,0x0,8
tick,0x7ffdb20322f4,26708071,0,0x0,8
tick,0x7ffdb20322f4,26724043,0,0x0,8
tick,0x7ffdb20322f4,26740038,0,0x0,8
tick,0x7ffdb20322f4,26756026,0,0x0,8
tick,0x7ffdb20322f4,26771525,0,0x0,8
tick,0x7ffdb20322f4,26787593,0,0x0,8
tick,0x7ffdb20322f4,26802540,0,0x0,8
tick,0x7ffdb20322f4,26817573,0,0x0,8
tick,0x7ffdb20322f4,26833565,0,0x0,8
tick,0x7ffdb20322f4,26849607,0,0x0,8
tick,0x7ffdb20322f4,26865105,0,0x0,8
tick,0x7ffdb20322f4,26881154,0,0x0,8
tick,0x7ffdb20322f4,26897140,0,0x0,8
tick,0x7ffdb20322f4,26913120,0,0x0,8
tick,0x7ffdb20322f4,26929116,0,0x0,8
tick,0x7ffdb20322f4,26945167,0,0x0,8
tick,0x7ffdb20322f4,26960732,0,0x0,8
tick,0x7ffdb20322f4,26976724,0,0x0,8
tick,0x7ffdb20322f4,26992703,0,0x0,8
tick,0x7ffdb20322f4,27008772,0,0x0,8
tick,0x7ffdb20322f4,27023731,0,0x0,8
tick,0x7ffdb20322f4,27039727,0,0x0,8
tick,0x7ffdb20322f4,27054685,0,0x0,8
tick,0x7ffdb20322f4,27070710,0,0x0,8
tick,0x7ffdb20322f4,27086704,0,0x0,8
tick,0x7ffdb20322f4,27102713,0,0x0,8
tick,0x7ffdb20322f4,27118726,0,0x0,8
tick,0x7ffdb20322f4,27134738,0,0x0,8
tick,0x7ffdb20322f4,27150748,0,0x0,8
tick,0x7ffdb20322f4,27166311,0,0x0,8
tick,0x7ffdb20322f4,27182301,0,0x0,8
tick,0x7ffdb20322f4,27198279,0,0x0,8
tick,0x7ffdb20322f4,27214308,0,0x0,8
tick,0x7ffdb20322f4,27230307,0,0x0,8
tick,0x7ffdb20322f4,27246408,0,0x0,8
tick,0x7ffdb20322f4,27261917,0,0x0,8
tick,0x7ffdb20322f4,27276897,0,0x0,8
tick,0x7ffdb20322f4,27293011,0,0x0,8
tick,0x7ffdb20322f4,27308881,0,0x0,8
tick,0x7ffdb20322f4,27324928,0,0x0,8
tick,0x7ffdb20322f4,27340927,0,0x0,8
tick,0x7ffdb20322f4,27357573,0,0x0,8
tick,0x7ffdb20322f4,27373443,0,0x0,8
tick,0x7ffdb20322f4,27389439,0,0x0,8
tick,0x7ffdb20322f4,27405387,0,0x0,8
tick,0x7ffdb20322f4,27421434,0,0x0,8
tick,0x7ffdb20322f4,27437450,0,0x0,8
tick,0x7ffdb20322f4,27453399,0,0x0,8
tick,0x7ffdb20322f4,27469506,0,0x0,8
tick,0x7ffdb20322f4,27485113,0,0x0,8
tick,0x7ffdb20322f4,27500362,0,0x0,8
tick,0x7ffdb20322f4,27515742,0,0x0,8
tick,0x7ffdb20322f4,27530870,0,0x0,8
tick,0x7ffdb20322f4,27546219,0,0x0,8
tick,0x7ffdb20322f4,27561443,0,0x0,8
tick,0x7ffdb20322f4,27576761,0,0x0,8
tick,0x7ffdb20322f4,27592864,0,0x0,8
tick,0x7ffdb20322f4,27608578,0,0x0,8
tick,0x7ffdb20322f4,27624614,0,0x0,8
tick,0x7ffdb20322f4,27640479,0,0x0,8
tick,0x7ffdb20322f4,27656560,0,0x0,8
tick,0x7ffdb20322f4,27672069,0,0x0,8
tick,0x7ffdb20322f4,27688103,0,0x0,8
tick,0x7ffdb20322f4,27704142,0,0x0,8
tick,0x7ffdb20322f4,27720113,0,0x0,8
tick,0x7ffdb20322f4,27736145,0,0x0,8
tick,0x7ffdb20322f4,27752195,0,0x0,8
tick,0x7ffdb20322f4,27767724,0,0x0,8
tick,0x7ffdb20322f4,27783633,0,0x0,8
tick,0x7ffdb20322f4,27799673,0,0x0,8
tick,0x7ffdb20322f4,27815686,0,0x0,8
tick,0x7ffdb20322f4,27831675,0,0x0,8
tick,0x7ffdb20322f4,27847687,0,0x0,8
tick,0x7ffdb20322f4,27863307,0,0x0,8
tick,0x7ffdb20322f4,27879391,0,0x0,8
tick,0x7ffdb20322f4,27895376,0,0x0,8
tick,0x7ffdb20322f4,27911371,0,0x0,8
tick,0x7ffdb20322f4,27927347,0,0x0,8
tick,0x7ffdb20322f4,27943401,0,0x0,8
tick,0x7ffdb20322f4,27959056,0,0x0,8
tick,0x7ffdb20322f4,27974939,0,0x0,8
tick,0x7ffdb20322f4,27990807,0,0x0,8
tick,0x7ffdb20322f4,28006774,0,0x0,8
tick,0x7ffdb20322f4,28022727,0,0x0,8
tick,0x7ffdb20322f4,28037817,0,0x0,8
tick,0x7ffdb20322f4,28053800,0,0x0,8
tick,0x7ffdb20322f4,28069270,0,0x0,8
tick,0x7ffdb20322f4,28084456,0,0x0,8
tick,0x7ffdb20322f4,28100460,0,0x0,8
tick,0x7ffdb20322f4,28115391,0,0x0,8
tick,0x7ffdb20322f4,28131531,0,0x0,8
tick,0x7ffdb20322f4,28147537,0,0x0,8
tick,0x7ffdb20322f4,28162944,0,0x0,8
tick,0x7ffdb20322f4,28178946,0,0x0,8
tick,0x7ffdb20322f4,28194971,0,0x0,8
tick,0x7ffdb20322f4,28210965,0,0x0,8
tick,0x7ffdb20322f4,28226002,0,0x0,8
tick,0x7ffdb20322f4,28241978,0,0x0,8
tick,0x7ffdb20322f4,28257000,0,0x0,8
tick,0x7ffdb20322f4,28272542,0,0x0,8
tick,0x7ffdb20322f4,28288567,0,0x0,8
tick,0x7ffdb20322f4,28303523,0,0x0,8
tick,0x7ffdb20322f4,28319543,0,0x0,8
tick,0x7ffdb20322f4,28334544,0,0x0,8
tick,0x7ffdb20322f4,28349560,0,0x0,8
tick,0x7ffdb20322f4,28365044,0,0x0,8
tick,0x7ffdb20322f4,28381116,0,0x0,8
tick,0x7ffdb20322f4,28397071,0,0x0,8
tick,0x7ffdb20322f4,28413111,0,0x0,8
tick,0x7ffdb20322f4,28429130,0,0x0,8
tick,0x7ffdb20322f4,28444099,0,0x0,8
tick,0x7ffdb20322f4,28459582,0,0x0,8
tick,0x7ffdb20322f4,28475637,0,0x0,8
tick,0x7ffdb20322f4,28490703,0,0x0,8
tick,0x7ffdb20322f4,28505666,0,0x0,8
tick,0x7ffdb20322f4,28521624,0,0x0,8
tick,0x7ffdb20322f4,28537631,0,0x0,8
tick,0x7ffdb20322f4,28553588,0,0x0,8
tick,0x7ffdb20322f4,28568892,0,0x0,8
tick,0x7ffdb20322f4,28584906,0,0x0,8
tick,0x7ffdb20322f4,28600901,0,0x0,8
tick,0x7ffdb20322f4,28616920,0,0x0,8
tick,0x7ffdb20322f4,28632906,0,0x0,8
tick,0x7ffdb20322f4,28648910,0,0x0,8
tick,0x7ffdb20322f4,28664461,0,0x0,8
tick,0x7ffdb20322f4,28680530,0,0x0,8
tick,0x7ffdb20322f4,28696442,0,0x0,8
tick,0x7ffdb20322f4,28712493,0,0x0,8
tick,0x7ffdb20322f4,28727459,0,0x0,8
tick,0x7ffdb20322f4,28742472,0,0x0,8
tick,0x7ffdb20322f4,28758454,0,0x0,8
tick,0x7ffdb20322f4,28774032,0,0x0,8
tick,0x7ffdb20322f4,28790007,0,0x0,8
tick,0x7ffdb20322f4,28806027,0,0x0,8
tick,0x7ffdb20322f4,28822001,0,0x0,8
tick,0x7ffdb20322f4,28837981,0,0x0,8
tick,0x7ffdb20322f4,28854015,0,0x0,8
tick,0x7ffdb20322f4,28869598,0,0x0,8
tick,0x7ffdb20322f4,28884543,0,0x0,8
tick,0x7ffdb20322f4,28900591,0,0x0,8
tick,0x7ffdb20322f4,28915574,0,0x0,8
tick,0x7ffdb20322f4,28930630,0,0x0,8
tick,0x7ffdb20322f4,28945654,0,0x0,8
tick,0x7ffdb20322f4,28961151,0,0x0,8
tick,0x7ffdb20322f4,28977100,0,0x0,8
tick,0x7ffdb20322f4,28992061,0,0x0,8
tick,0x7ffdb20322f4,29007071,0,0x0,8
tick,0x7ffdb20322f4,29023044,0,0x0,8
tick,0x7ffdb20322f4,29039060,0,0x0,8
tick,0x7ffdb20322f4,29055089,0,0x0,8
tick,0x7ffdb20322f4,29070618,0,0x0,8
tick,0x7ffdb20322f4,29086665,0,0x0,8
tick,0x7ffdb20322f4,29102613,0,0x0,8
tick,0x7ffdb20322f4,29118626,0,0x0,8
tick,0x7ffdb20322f4,29133613,0,0x0,8
tick,0x7ffdb20322f4,29148690,0,0x0,8
tick,0x7ffdb20322f4,29164240,0,0x0,8
tick,0x7ffdb20322f4,29179212,0,0x0,8
tick,0x7ffdb20322f4,29195202,0,0x0,8
tick,0x7ffdb20322f4,29211229,0,0x0,8
tick,0x7ffdb20322f4,29226203,0,0x0,8
tick,0x7ffdb20322f4,29241203,0,0x0,8
tick,0x7ffdb20322f4,29257248,0,0x0,8
tick,0x7ffdb20322f4,29273090,0,0x0,8
tick,0x7ffdb20322f4,29288869,0,0x0,8
tick,0x7ffdb20322f4,29304825,0,0x0,8
tick,0x7ffdb20322f4,29320834,0,0x0,8
tick,0x7ffdb20322f4,29336825,0,0x0,8
tick,0x7ffdb20322f4,29352826,0,0x0,8
tick,0x7ffdb20322f4,29367949,0,0x0,8
tick,0x7ffdb20322f4,29382976,0,0x0,8
tick,0x7ffdb20322f4,29399086,0,0x0,8
tick,0x7ffdb20322f4,29414963,0,0x0,8
tick,0x7ffdb20322f4,29429970,0,0x0,8
tick,0x7ffdb20322f4,29446057,0,0x0,8
tick,0x7ffdb20322f4,29461503,0,0x0,8
tick,0x7ffdb20322f4,29477483,0,0x0,8
tick,0x7ffdb20322f4,29493487,0,0x0,8
tick,0x7ffdb20322f4,29509476,0,0x0,8
tick,0x7ffdb20322f4,29524489,0,0x0,8
tick,0x7ffdb20322f4,29539489,0,0x0,8
tick,0x7ffdb20322f4,29555531,0,0x0,8
tick,0x7ffdb20322f4,29571136,0,0x0,8
tick,0x7ffdb20322f4,29586201,0,0x0,8
tick,0x7ffdb20322f4,29602149,0,0x0,8
tick,0x7ffdb20322f4,29617089,0,0x0,8
tick,0x7ffdb20322f4,29633079,0,0x0,8
tick,0x7ffdb20322f4,29648734,0,0x0,8
tick,0x7ffdb20322f4,29663741,0,0x0,8
tick,0x7ffdb20322f4,29679144,0,0x0,8
tick,0x7ffdb20322f4,29693990,0,0x0,8
tick,0x7ffdb20322f4,29709142,0,0x0,8
tick,0x7ffdb20322f4,29724385,0,0x0,8
tick,0x7ffdb20322f4,29739567,0,0x0,8
tick,0x7ffdb20322f4,29754879,0,0x0,8
tick,0x7ffdb20322f4,29770962,0,0x0,8
tick,0x7ffdb20322f4,29785974,0,0x0,8
tick,0x7ffdb20322f4,29801982,0,0x0,8
tick,0x7ffdb20322f4,29816991,0,0x0,8
tick,0x7ffdb20322f4,29833041,0,0x0,8
tick,0x7ffdb20322f4,29849035,0,0x0,8
tick,0x7ffdb20322f4,29864620,0,0x0,8
tick,0x7ffdb20322f4,29880648,0,0x0,8
tick,0x7ffdb20322f4,29895905,0,0x0,8
tick,0x7ffdb20322f4,29911903,0,0x0,8
tick,0x7ffdb20322f4,29927919,0,0x0,8
tick,0x7ffdb20322f4,29943851,0,0x0,8
tick,0x7ffdb20322f4,29958884,0,0x0,8
tick,0x7ffdb20322f4,29974471,0,0x0,8
tick,0x7ffdb20322f4,29990482,0,0x0,8
tick,0x7ffdb20322f4,30006475,0,0x0,8
tick,0x7ffdb20322f4,30022426,0,0x0,8
tick,0x7ffdb20322f4,30037450,0,0x0,8
tick,0x7ffdb20322f4,30053438,0,0x0,8
tick,0x7ffdb20322f4,30068964,0,0x0,8
tick,0x7ffdb20322f4,30085001,0,0x0,8
tick,0x7ffdb20322f4,30100999,0,0x0,8
tick,0x7ffdb20322f4,30116293,0,0x0,8
tick,0x7ffdb20322f4,30132286,0,0x0,8
tick,0x7ffdb20322f4,30148323,0,0x0,8
tick,0x7ffdb20322f4,30163878,0,0x0,8
tick,0x7ffdb20322f4,30178847,0,0x0,8
tick,0x7ffdb20322f4,30194904,0,0x0,8
tick,0x7ffdb20322f4,30209848,0,0x0,8
tick,0x7ffdb20322f4,30225855,0,0x0,8
tick,0x7ffdb20322f4,30241812,0,0x0,8
tick,0x7ffdb20322f4,30257834,0,0x0,8
tick,0x7ffdb20322f4,30272924,0,0x0,8
tick,0x7ffdb20322f4,30287956,0,0x0,8
tick,0x7ffdb20322f4,30302985,0,0x0,8
tick,0x7ffdb20322f4,30317930,0,0x0,8
tick,0x7ffdb20322f4,30333924,0,0x0,8
tick,0x7ffdb20322f4,30350036,0,0x0,8
tick,0x7ffdb20322f4,30365551,0,0x0,8
tick,0x7ffdb20322f4,30381536,0,0x0,8
tick,0x7ffdb20322f4,30397578,0,0x0,8
tick,0x7ffdb20322f4,30412551,0,0x0,8
tick,0x7ffdb20322f4,30428543,0,0x0,8
tick,0x7ffdb20322f4,30443556,0,0x0,8
tick,0x7ffdb20322f4,30460068,0,0x0,8
tick,0x7ffdb20322f4,30476123,0,0x0,8
tick,0x7ffdb20322f4,30492137,0,0x0,8
tick,0x7ffdb20322f4,30508192,0,0x0,8
tick,0x7ffdb20322f4,30523138,0,0x0,8
tick,0x7ffdb20322f4,30539095,0,0x0,8
tick,0x7ffdb20322f4,30554128,0,0x0,8
tick,0x7ffdb20322f4,30569750,0,0x0,8
tick,0x7ffdb20322f4,30584723,0,0x0,8
tick,0x7ffdb20322f4,30599694,0,0x0,8
tick,0x7ffdb20322f4,30615734,0,0x0,8
tick,0x7ffdb20322f4,30631731,0,0x0,8
tick,0x7ffdb20322f4,30647762,0,0x0,8
tick,0x7ffdb20322f4,30663319,0,0x0,8
tick,0x7ffdb20322f4,30679342,0,0x0,8
tick,0x7ffdb20322f4,30695383,0,0x0,8
tick,0x7ffdb20322f4,30710325,0,0x0,8
tick,0x7ffdb20322f4,30726342,0,0x0,8
tick,0x7ffdb20322f4,30741398,0,0x0,8
tick,0x7ffdb20322f4,30757433,0,0x0,8
tick,0x7ffdb20322f4,30772925,0,0x0,8
tick,0x7ffdb20322f4,30788021,0,0x0,8
tick,0x7ffdb20322f4,30802925,0,0x0,8
tick,0x7ffdb20322f4,30818982,0,0x0,8
tick,0x7ffdb20322f4,30834924,0,0x0,8
tick,0x7ffdb20322f4,30850953,0,0x0,8
tick,0x7ffdb20322f4,30866510,0,0x0,8
tick,0x7ffdb20322f4,30882513,0,0x0,8
tick,0x7ffdb20322f4,30898540,0,0x0,8
tick,0x7ffdb20322f4,30914506,0,0x0,8
tick,0x7ffdb20322f4,30930514,0,0x0,8
tick,0x7ffdb20322f4,30946571,0,0x0,8
tick,0x7ffdb20322f4,30962137,0,0x0,8
tick,0x7ffdb20322f4,30978227,0,0x0,8
tick,0x7ffdb20322f4,30994122,0,0x0,8
tick,0x7ffdb20322f4,31010143,0,0x0,8
tick,0x7ffdb20322f4,31025115,0,0x0,8
tick,0x7ffdb20322f4,31040184,0,0x0,8
tick,0x7ffdb20322f4,31056247,0,0x0,8
tick,0x7ffdb20322f4,31071767,0,0x0,8
tick,0x7ffdb20322f4,31086643,0,0x0,8
tick,0x7ffdb20322f4,31102670,0,0x0,8
tick,0x7ffdb20322f4,31118690,0,0x0,8
tick,0x7ffdb20322f4,31134640,0,0x0,8
tick,0x7ffdb20322f4,31150686,0,0x0,8
tick,0x7ffdb20322f4,31166156,0,0x0,8
tick,0x7ffdb20322f4,31182159,0,0x0,8
tick,0x7ffdb20322f4,31198134,0,0x0,8
tick,0x7ffdb20322f4,31214135,0,0x0,8
tick,0x7ffdb20322f4,31230206,0,0x0,8
tick,0x7ffdb20322f4,31246213,0,0x0,8
tick,0x7ffdb20322f4,31261775,0,0x0,8
tick,0x7ffdb20322f4,31277796,0,0x0,8
tick,0x7ffdb20322f4,31293757,0,0x0,8
tick,0x7ffdb20322f4,31309764,0,0x0,8
tick,0x7ffdb20322f4,31325775,0,0x0,8
tick,0x7ffdb20322f4,31341775,0,0x0,8
tick,0x7ffdb20322f4,31357787,0,0x0,8
tick,0x7ffdb20322f4,31373373,0,0x0,8
tick,0x7ffdb20322f4,31388357,0,0x0,8
tick,0x7ffdb20322f4,31404475,0,0x0,8
tick,0x7ffdb20322f4,31420350,0,0x0,8
tick,0x7ffdb20322f4,31436377,0,0x0,8
tick,0x7ffdb20322f4,31452402,0,0x0,8
tick,0x7ffdb20322f4,31467883,0,0x0,8
tick,0x7ffdb20322f4,31483988,0,0x0,8
tick,0x7ffdb20322f4,31499916,0,0x0,8
tick,0x7ffdb20322f4,31515922,0,0x0,8
tick,0x7ffdb20322f4,31531913,0,0x0,8
tick,0x7ffdb20322f4,31547909,0,0x0,8
tick,0x7ffdb20322f4,31563416,0,0x0,8
tick,0x7ffdb20322f4,31579458,0,0x0,8
tick,0x7ffdb20322f4,31595443,0,0x0,8
tick,0x7ffdb20322f4,31611468,0,0x0,8
tick,0x7ffdb20322f4,31627443,0,0x0,8
tick,0x7ffdb20322f4,31643391,0,0x0,8
tick,0x7ffdb20322f4,31659444,0,0x0,8
tick,0x7ffdb20322f4,31675003,0,0x0,8
tick,0x7ffdb20322f4,31691007,0,0x0,8
tick,0x7ffdb20322f4,31706999,0,0x0,8
tick,0x7ffdb20322f4,31722980,0,0x0,8
tick,0x7ffdb20322f4,31738962,0,0x0,8
tick,0x7ffdb20322f4,31755109,0,0x0,8
tick,0x7ffdb20322f4,31770610,0,0x0,8
tick,0x7ffdb20322f4,31786564,0,0x0,8
tick,0x7ffdb20322f4,31802561,0,0x0,8
tick,0x7ffdb20322f4,31817819,0,0x0,8
tick,0x7ffdb20322f4,31833238,0,0x0,8
tick,0x7ffdb20322f4,31848581,0,0x0,8
tick,0x7ffdb20322f4,31864017,0,0x0,8
tick,0x7ffdb20322f4,31879569,0,0x0,8
tick,0x7ffdb20322f4,31894978,0,0x0,8
tick,0x7ffdb20322f4,31910033,0,0x0,8
tick,0x7ffdb20322f4,31925622,0,0x0,8
tick,0x7ffdb20322f4,31941688,0,0x0,8
tick,0x7ffdb20322f4,31956816,0,0x0,8
tick,0x7ffdb20322f4,31972412,0,0x0,8
tick,0x7ffdb20322f4,31988356,0,0x0,8
tick,0x7ffdb20322f4,32004395,0,0x0,8
tick,0x7ffdb20322f4,32020385,0,0x0,8
tick,0x7ffdb20322f4,32036359,0,0x0,8
tick,0x7ffdb20322f4,32052378,0,0x0,8
tick,0x7ffdb20322f4,32067920,0,0x0,8
tick,0x7ffdb20322f4,32083994,0,0x0,8
tick,0x7ffdb20322f4,32099914,0,0x0,8
tick,0x7ffdb20322f4,32115931,0,0x0,8
tick,0x7ffdb20322f4,32131945,0,0x0,8
tick,0x7ffdb20322f4,32147949,0,0x0,8
tick,0x7ffdb20322f4,32163737,0,0x0,8
tick,0x7ffdb20322f4,32179742,0,0x0,8
tick,0x7ffdb20322f4,32194764,0,0x0,8
tick,0x7ffdb20322f4,32210721,0,0x0,8
tick,0x7ffdb20322f4,32225843,0,0x0,8
tick,0x7ffdb20322f4,32240731,0,0x0,8
tick,0x7ffdb20322f4,32256751,0,0x0,8
tick,0x7ffdb20322f4,32272286,0,0x0,8
tick,0x7ffdb20322f4,32287782,0,0x0,8
tick,0x7ffdb20322f4,32303736,0,0x0,8
tick,0x7ffdb20322f4,32318717,0,0x0,8
tick,0x7ffdb20322f4,32334759,0,0x0,8
tick,0x7ffdb20322f4,32349846,0,0x0,8
tick,0x7ffdb20322f4,32365381,0,0x0,8
tick,0x7ffdb20322f4,32381382,0,0x0,8
tick,0x7ffdb20322f4,32397091,0,0x0,8
tick,0x7ffdb20322f4,32413207,0,0x0,8
tick,0x7ffdb20322f4,32428099,0,0x0,8
tick,0x7ffdb20322f4,32444148,0,0x0,8
tick,0x7ffdb20322f4,32459133,0,0x0,8
tick,0x7ffdb20322f4,32474447,0,0x0,8
tick,0x7ffdb20322f4,32490539,0,0x0,8
tick,0x7ffdb20322f4,32505536,0,0x0,8
tick,0x7ffdb20322f4,32521546,0,0x0,8
tick,0x7ffdb20322f4,32536526,0,0x0,8
tick,0x7ffdb20322f4,32552577,0,0x0,8
tick,0x7ffdb20322f4,32568142,0,0x0,8
tick,0x7ffdb20322f4,32584145,0,0x0,8
tick,0x7ffdb20322f4,32599127,0,0x0,8
tick,0x7ffdb20322f4,32614125,0,0x0,8
tick,0x7ffdb20322f4,32630204,0,0x0,8
tick,0x7ffdb20322f4,32646134,0,0x0,8
tick,0x7ffdb20322f4,32662117,0,0x0,8
tick,0x7ffdb20322f4,32677340,0,0x0,8
tick,0x7ffdb20322f4,32692384,0,0x0,8
tick,0x7ffdb20322f4,32708325,0,0x0,8
tick,0x7ffdb20322f4,32724383,0,0x0,8
tick,0x7ffdb20322f4,32740315,0,0x0,8
tick,0x7ffdb20322f4,32756410,0,0x0,8
tick,0x7ffdb20322f4,32771991,0,0x0,8
tick,0x7ffdb20322f4,32788036,0,0x0,8
tick,0x7ffdb20322f4,32803998,0,0x0,8
tick,0x7ffdb20322f4,32819955,0,0x0,8
tick,0x7ffdb20322f4,32836002,0,0x0,8
tick,0x7ffdb20322f4,32852055,0,0x0,8
tick,0x7ffdb20322f4,32867543,0,0x0,8
tick,0x7ffdb20322f4,32883585,0,0x0,8
tick,0x7ffdb20322f4,32899558,0,0x0,8
tick,0x7ffdb20322f4,32915556,0,0x0,8
tick,0x7ffdb20322f4,32931545,0,0x0,8
tick,0x7ffdb20322f4,32946630,0,0x0,8
tick,0x7ffdb20322f4,32961604,0,0x0,8
tick,0x7ffdb20322f4,32977143,0,0x0,8
tick,0x7ffdb20322f4,32993204,0,0x0,8
tick,0x7ffdb20322f4,33009199,0,0x0,8
tick,0x7ffdb20322f4,33025136,0,0x0,8
tick,0x7ffdb20322f4,33041151,0,0x0,8
tick,0x7ffdb20322f4,33057193,0,0x0,8
tick,0x7ffdb20322f4,33072726,0,0x0,8
tick,0x7ffdb20322f4,33088984,0,0x0,8
tick,0x7ffdb20322f4,33104703,0,0x0,8
tick,0x7ffdb20322f4,33120728,0,0x0,8
tick,0x7ffdb20322f4,33136697,0,0x0,8
tick,0x7ffdb20322f4,33152759,0,0x0,8
tick,0x7ffdb20322f4,33168337,0,0x0,8
tick,0x7ffdb20322f4,33183738,0,0x0,8
tick,0x7ffdb20322f4,33198720,0,0x0,8
tick,0x7ffdb20322f4,33214713,0,0x0,8
tick,0x7ffdb20322f4,33230733,0,0x0,8
tick,0x7ffdb20322f4,33246693,0,0x0,8
tick,0x7ffdb20322f4,33262771,0,0x0,8
tick,0x7ffdb20322f4,33278074,0,0x0,8
tick,0x7ffdb20322f4,33293988,0,0x0,8
tick,0x7ffdb20322f4,33309987,0,0x0,8
tick,0x7ffdb20322f4,33325994,0,0x0,8
tick,0x7ffdb20322f4,33342008,0,0x0,8
tick,0x7ffdb20322f4,33358060,0,0x0,8
tick,0x7ffdb20322f4,33373605,0,0x0,8
tick,0x7ffdb20322f4,33389602,0,0x0,8
tick,0x7ffdb20322f4,33405615,0,0x0,8
tick,0x7ffdb20322f4,33421620,0,0x0,8
tick,0x7ffdb20322f4,33437683,0,0x0,8
tick,0x7ffdb20322f4,33453681,0,0x0,8
tick,0x7ffdb20322f4,33469121,0,0x0,8
tick,0x7ffdb20322f4,33485162,0,0x0,8
tick,0x7ffdb20322f4,33501194,0,0x0,8
tick,0x7ffdb20322f4,33517195,0,0x0,8
tick,0x7ffdb20322f4,33533165,0,0x0,8
tick,0x7ffdb20322f4,33549177,0,0x0,8
tick,0x7ffdb20322f4,33565301,0,0x0,8
tick,0x7ffdb20322f4,33581234,0,0x0,8
tick,0x7ffdb20322f4,33597396,0,0x0,8
tick,0x7ffdb20322f4,33613310,0,0x0,8
tick,0x7ffdb20322f4,33629268,0,0x0,8
tick,0x7ffdb20322f4,33645285,0,0x0,8
tick,0x7ffdb20322f4,33661299,0,0x0,8
tick,0x7ffdb20322f4,33676880,0,0x0,8
tick,0x7ffdb20322f4,33692916,0,0x0,8
tick,0x7ffdb20322f4,33708883,0,0x0,8
tick,0x7ffdb20322f4,33724896,0,0x0,8
tick,0x7ffdb20322f4,33740536,0,0x0,8
tick,0x7ffdb20322f4,33756485,0,0x0,8
tick,0x7ffdb20322f4,33772035,0,0x0,8
tick,0x7ffdb20322f4,33788049,0,0x0,8
tick,0x7ffdb20322f4,33804018,0,0x0,8
tick,0x7ffdb20322f4,33820112,0,0x0,8
tick,0x7ffdb20322f4,33836034,0,0x0,8
tick,0x7ffdb20322f4,33852051,0,0x0,8
tick,0x7ffdb20322f4,33867623,0,0x0,8
tick,0x7ffdb20322f4,33883608,0,0x0,8
tick,0x7ffdb20322f4,33899628,0,0x0,8
tick,0x7ffdb20322f4,33915637,0,0x0,8
tick,0x7ffdb20322f4,33931595,0,0x0,8
tick,0x7ffdb20322f4,33947590,0,0x0,8
tick,0x7ffdb20322f4,33963163,0,0x0,8
tick,0x7ffdb20322f4,33978676,0,0x0,8
tick,0x7ffdb20322f4,33994258,0,0x0,8
tick,0x7ffdb20322f4,34009560,0,0x0,8
tick,0x7ffdb20322f4,34024113,0,0x0,8
tick,0x7ffdb20322f4,34039484,0,0x0,8
tick,0x7ffdb20322f4,34055173,0,0x0,8
tick,0x7ffdb20322f4,34070765,0,0x0,8
tick,0x7ffdb20322f4,34086418,0,0x0,8
tick,0x7ffdb20322f4,34101400,0,0x0,8
tick,0x7ffdb20322f4,34117389,0,0x0,8
tick,0x7ffdb20322f4,34132349,0,0x0,8
tick,0x7ffdb20322f4,34147423,0,0x0,8
tick,0x7ffdb20322f4,34162406,0,0x0,8
tick,0x7ffdb20322f4,34177942,0,0x0,8
tick,0x7ffdb20322f4,34193959,0,0x0,8
tick,0x7ffdb20322f4,34209955,0,0x0,8
tick,0x7ffdb20322f4,34225957,0,0x0,8
tick,0x7ffdb20322f4,34241961,0,0x0,8
tick,0x7ffdb20322f4,34257948,0,0x0,8
tick,0x7ffdb20322f4,34273445,0,0x0,8
tick,0x7ffdb20322f4,34289437,0,0x0,8
tick,0x7ffdb20322f4,34305570,0,0x0,8
tick,0x7ffdb20322f4,34321419,0,0x0,8
tick,0x7ffdb20322f4,34337419,0,0x0,8
tick,0x7ffdb20322f4,34353569,0,0x0,8
tick,0x7ffdb20322f4,34368988,0,0x0,8
tick,0x7ffdb20322f4,34384986,0,0x0,8
tick,0x7ffdb20322f4,34401007,0,0x0,8
tick,0x7ffdb20322f4,34416987,0,0x0,8
tick,0x7ffdb20322f4,34432984,0,0x0,8
tick,0x7ffdb20322f4,34448979,0,0x0,8
tick,0x7ffdb20322f4,34464565,0,0x0,8
tick,0x7ffdb20322f4,34480655,0,0x0,8
tick,0x7ffdb20322f4,34496544,0,0x0,8
tick,0x7ffdb20322f4,34512578,0,0x0,8
tick,0x7ffdb20322f4,34528564,0,0x0,8
tick,0x7ffdb20322f4,34544554,0,0x0,8
tick,0x7ffdb20322f4,34560529,0,0x0,8
tick,0x7ffdb20322f4,34576117,0,0x0,8
tick,0x7ffdb20322f4,34592117,0,0x0,8
tick,0x7ffdb20322f4,34608183,0,0x0,8
tick,0x7ffdb20322f4,34624104,0,0x0,8
tick,0x7ffdb20322f4,34640023,0,0x0,8
tick,0x7ffdb20322f4,34656025,0,0x0,8
tick,0x7ffdb20322f4,34671564,0,0x0,8
tick,0x7ffdb20322f4,34687593,0,0x0,8
tick,0x7ffdb20322f4,34703584,0,0x0,8
tick,0x7ffdb20322f4,34719571,0,0x0,8
tick,0x7ffdb20322f4,34735587,0,0x0,8
tick,0x7ffdb20322f4,34751617,0,0x0,8
tick,0x7ffdb20322f4,34767089,0,0x0,8
tick,0x7ffdb20322f4,34783130,0,0x0,8
tick,0x7ffdb20322f4,34798113,0,0x0,8
tick,0x7ffdb20322f4,34813082,0,0x0,8
tick,0x7ffdb20322f4,34829074,0,0x0,8
tick,0x7ffdb20322f4,34845090,0,0x0,8
tick,0x7ffdb20322f4,34860376,0,0x0,8
tick,0x7ffdb20322f4,34875978,0,0x0,8
tick,0x7ffdb20322f4,34891889,0,0x0,8
tick,0x7ffdb20322f4,34907956,0,0x0,8
tick,0x7ffdb20322f4,34923978,0,0x0,8
tick,0x7ffdb20322f4,34939880,0,0x0,8
tick,0x7ffdb20322f4,34955894,0,0x0,8
tick,0x7ffdb20322f4,34971423,0,0x0,8
tick,0x7ffdb20322f4,34987451,0,0x0,8
tick,0x7ffdb20322f4,35003427,0,0x0,8
tick,0x7ffdb20322f4,35019430,0,0x0,8
tick,0x7ffdb20322f4,35035520,0,0x0,8
tick,0x7ffdb20322f4,35051403,0,0x0,8
tick,0x7ffdb20322f4,35066956,0,0x0,8
tick,0x7ffdb20322f4,35082931,0,0x0,8
tick,0x7ffdb20322f4,35098956,0,0x0,8
tick,0x7ffdb20322f4,35114950,0,0x0,8
tick,0x7ffdb20322f4,35130960,0,0x0,8
tick,0x7ffdb20322f4,35146930,0,0x0,8
tick,0x7ffdb20322f4,35162993,0,0x0,8
tick,0x7ffdb20322f4,35178541,0,0x0,8
tick,0x7ffdb20322f4,35193546,0,0x0,8
tick,0x7ffdb20322f4,35209527,0,0x0,8
tick,0x7ffdb20322f4,35224442,0,0x0,8
tick,0x7ffdb20322f4,35240474,0,0x0,8
tick,0x7ffdb20322f4,35256436,0,0x0,8
tick,0x7ffdb20322f4,35271945,0,0x0,8
tick,0x7ffdb20322f4,35287987,0,0x0,8
tick,0x7ffdb20322f4,35303445,0,0x0,8
tick,0x7ffdb20322f4,35319507,0,0x0,8
tick,0x7ffdb20322f4,35335425,0,0x0,8
tick,0x7ffdb20322f4,35350429,0,0x0,8
tick,0x7ffdb20322f4,35366014,0,0x0,8
tick,0x7ffdb20322f4,35382004,0,0x0,8
tick,0x7ffdb20322f4,35397975,0,0x0,8
tick,0x7ffdb20322f4,35413027,0,0x0,8
tick,0x7ffdb20322f4,35429002,0,0x0,8
tick,0x7ffdb20322f4,35444040,0,0x0,8
tick,0x7ffdb20322f4,35459971,0,0x0,8
tick,0x7ffdb20322f4,35475512,0,0x0,8
tick,0x7ffdb20322f4,35491534,0,0x0,8
tick,0x7ffdb20322f4,35507506,0,0x0,8
tick,0x7ffdb20322f4,35523499,0,0x0,8
tick,0x7ffdb20322f4,35539493,0,0x0,8
tick,0x7ffdb20322f4,35555585,0,0x0,8
tick,0x7ffdb20322f4,35571070,0,0x0,8
tick,0x7ffdb20322f4,35587065,0,0x0,8
tick,0x7ffdb20322f4,35602099,0,0x0,8
tick,0x7ffdb20322f4,35617170,0,0x0,8
tick,0x7ffdb20322f4,35632981,0,0x0,8
tick,0x7ffdb20322f4,35649058,0,0x0,8
tick,0x7ffdb20322f4,35664544,0,0x0,8
tick,0x7ffdb20322f4,35680594,0,0x0,8
tick,0x7ffdb20322f4,35695588,0,0x0,8
tick,0x7ffdb20322f4,35711651,0,0x0,8
tick,0x7ffdb20322f4,35726742,0,0x0,8
tick,0x7ffdb20322f4,35742456,0,0x0,8
tick,0x7ffdb20322f4,35758485,0,0x0,8
tick,0x7ffdb20322f4,35774083,0,0x0,8
tick,0x7ffdb20322f4,35790040,0,0x0,8
tick,0x7ffdb20322f4,35806008,0,0x0,8
tick,0x7ffdb20322f4,35822308,0,0x0,8
tick,0x7ffdb20322f4,35837997,0,0x0,8
tick,0x7ffdb20322f4,35853027,0,0x0,8
tick,0x7ffdb20322f4,35868614,0,0x0,8
tick,0x7ffdb20322f4,35884616,0,0x0,8
tick,0x7ffdb20322f4,35900782,0,0x0,8
tick,0x7ffdb20322f4,35916638,0,0x0,8
tick,0x7ffdb20322f4,35932603,0,0x0,8
tick,0x7ffdb20322f4,35948593,0,0x0,8
tick,0x7ffdb20322f4,35964644,0,0x0,8
tick,0x7ffdb20322f4,35980021,0,0x0,8
tick,0x7ffdb20322f4,35995987,0,0x0,8
tick,0x7ffdb20322f4,36012091,0,0x0,8
tick,0x7ffdb20322f4,36028123,0,0x0,8
tick,0x7ffdb20322f4,36044012,0,0x0,8
tick,0x7ffdb20322f4,36060014,0,0x0,8
tick,0x7ffdb20322f4,36075576,0,0x0,8
tick,0x7ffdb20322f4,36091578,0,0x0,8
tick,0x7ffdb20322f4,36107577,0,0x0,8
tick,0x7ffdb20322f4,36123555,0,0x0,8
tick,0x7ffdb20322f4,36139151,0,0x0,8
tick,0x7ffdb20322f4,36154660,0,0x0,8
tick,0x7ffdb20322f4,36169726,0,0x0,8
tick,0x7ffdb20322f4,36185047,0,0x0,8
tick,0x7ffdb20322f4,36200352,0,0x0,8
tick,0x7ffdb20322f4,36215761,0,0x0,8
tick,0x7ffdb20322f4,36231299,0,0x0,8
tick,0x7ffdb20322f4,36246512,0,0x0,8
tick,0x7ffdb20322f4,36262165,0,0x0,8
tick,0x7ffdb20322f4,36277668,0,0x0,8
tick,0x7ffdb20322f4,36293650,0,0x0,8
tick,0x7ffdb20322f4,36309686,0,0x0,8
tick,0x7ffdb20322f4,36325725,0,0x0,8
tick,0x7ffdb20322f4,36341648,0,0x0,8
tick,0x7ffdb20322f4,36356761,0,0x0,8
tick,0x7ffdb20322f4,36372195,0,0x0,8
tick,0x7ffdb20322f4,36388190,0,0x0,8
tick,0x7ffdb20322f4,36404241,0,0x0,8
tick,0x7ffdb20322f4,36420227,0,0x0,8
tick,0x7ffdb20322f4,36436213,0,0x0,8
tick,0x7ffdb20322f4,36452207,0,0x0,8
tick,0x7ffdb20322f4,36467691,0,0x0,8
tick,0x7ffdb20322f4,36483729,0,0x0,8
tick,0x7ffdb20322f4,36499737,0,0x0,8
tick,0x7ffdb20322f4,36515672,0,0x0,8
tick,0x7ffdb20322f4,36531655,0,0x0,8
tick,0x7ffdb20322f4,36547677,0,0x0,8
tick,0x7ffdb20322f4,36563713,0,0x0,8
tick,0x7ffdb20322f4,36579240,0,0x0,8
tick,0x7ffdb20322f4,36595228,0,0x0,8
tick,0x7ffdb20322f4,36611231,0,0x0,8
tick,0x7ffdb20322f4,36627252,0,0x0,8
tick,0x7ffdb20322f4,36643245,0,0x0,8
tick,0x7ffdb20322f4,36664366,0,0x0,8
tick,0x7ffdb20322f4,36674816,0,0x0,8
tick,0x7ffdb20322f4,36690924,0,0x0,8
tick,0x7ffdb20322f4,36706799,0,0x0,8
tick,0x7ffdb20322f4,36722031,0,0x0,8
tick,0x7ffdb20322f4,36736985,0,0x0,8
tick,0x7ffdb20322f4,36753036,0,0x0,8
tick,0x7ffdb20322f4,36768510,0,0x0,8
tick,0x7ffdb20322f4,36784514,0,0x0,8
tick,0x7ffdb20322f4,36799533,0,0x0,8
tick,0x7ffdb20322f4,36814499,0,0x0,8
tick,0x7ffdb20322f4,36830492,0,0x0,8
tick,0x7ffdb20322f4,36846531,0,0x0,8
tick,0x7ffdb20322f4,36862519,0,0x0,8
tick,0x7ffdb20322f4,36878043,0,0x0,8
tick,0x7ffdb20322f4,36894029,0,0x0,8
tick,0x7ffdb20322f4,36910057,0,0x0,8
tick,0x7ffdb20322f4,36926030,0,0x0,8
tick,0x7ffdb20322f4,36942065,0,0x0,8
tick,0x7ffdb20322f4,36958048,0,0x0,8
tick,0x7ffdb20322f4,36973548,0,0x0,8
tick,0x7ffdb20322f4,36989539,0,0x0,8
tick,0x7ffdb20322f4,37005574,0,0x0,8
tick,0x7ffdb20322f4,37020597,0,0x0,8
tick,0x7ffdb20322f4,37036590,0,0x0,8
tick,0x7ffdb20322f4,37051588,0,0x0,8
tick,0x7ffdb20322f4,37067151,0,0x0,8
tick,0x7ffdb20322f4,37083137,0,0x0,8
tick,0x7ffdb20322f4,37099111,0,0x0,8
tick,0x7ffdb20322f4,37115133,0,0x0,8
tick,0x7ffdb20322f4,37130391,0,0x0,8
tick,0x7ffdb20322f4,37146394,0,0x0,8
tick,0x7ffdb20322f4,37162453,0,0x0,8
tick,0x7ffdb20322f4,37177935,0,0x0,8
tick,0x7ffdb20322f4,37194046,0,0x0,8
tick,0x7ffdb20322f4,37209935,0,0x0,8
tick,0x7ffdb20322f4,37224962,0,0x0,8
tick,0x7ffdb20322f4,37239920,0,0x0,8
tick,0x7ffdb20322f4,37255270,0,0x0,8
tick,0x7ffdb20322f4,37270789,0,0x0,8
tick,0x7ffdb20322f4,37286802,0,0x0,8
tick,0x7ffdb20322f4,37302801,0,0x0,8
tick,0x7ffdb20322f4,37318777,0,0x0,8
tick,0x7ffdb20322f4,37334763,0,0x0,8
tick,0x7ffdb20322f4,37350773,0,0x0,8
tick,0x7ffdb20322f4,37366351,0,0x0,8
tick,0x7ffdb20322f4,37382349,0,0x0,8
tick,0x7ffdb20322f4,37397378,0,0x0,8
tick,0x7ffdb20322f4,37413412,0,0x0,8
tick,0x7ffdb20322f4,37428406,0,0x0,8
tick,0x7ffdb20322f4,37443339,0,0x0,8
tick,0x7ffdb20322f4,37459410,0,0x0,8
tick,0x7ffdb20322f4,37474888,0,0x0,8
tick,0x7ffdb20322f4,37490908,0,0x0,8
tick,0x7ffdb20322f4,37506932,0,0x0,8
tick,0x7ffdb20322f4,37522912,0,0x0,8
tick,0x7ffdb20322f4,37538892,0,0x0,8
tick,0x7ffdb20322f4,37554930,0,0x0,8
tick,0x7ffdb20322f4,37570596,0,0x0,8
tick,0x7ffdb20322f4,37586506,0,0x0,8
tick,0x7ffdb20322f4,37602491,0,0x0,8
tick,0x7ffdb20322f4,37618510,0,0x0,8
tick,0x7ffdb20322f4,37634528,0,0x0,8
tick,0x7ffdb20322f4,37650506,0,0x0,8
tick,0x7ffdb20322f4,37666543,0,0x0,8
tick,0x7ffdb20322f4,37682706,0,0x0,8
tick,0x7ffdb20322f4,37698728,0,0x0,8
tick,0x7ffdb20322f4,37714693,0,0x0,8
tick,0x7ffdb20322f4,37730680,0,0x0,8
tick,0x7ffdb20322f4,37746664,0,0x0,8
tick,0x7ffdb20322f4,37762703,0,0x0,8
tick,0x7ffdb20322f4,37778332,0,0x0,8
tick,0x7ffdb20322f4,37794253,0,0x0,8
tick,0x7ffdb20322f4,37810300,0,0x0,8
tick,0x7ffdb20322f4,37826277,0,0x0,8
tick,0x7ffdb20322f4,37842283,0,0x0,8
tick,0x7ffdb20322f4,37858330,0,0x0,8
tick,0x7ffdb20322f4,37873869,0,0x0,8
tick,0x7ffdb20322f4,37889873,0,0x0,8
tick,0x7ffdb20322f4,37905869,0,0x0,8
tick,0x7ffdb20322f4,37922059,0,0x0,8
tick,0x7ffdb20322f4,37937968,0,0x0,8
tick,0x7ffdb20322f4,37954022,0,0x0,8
tick,0x7ffdb20322f4,37969584,0,0x0,8
tick,0x7ffdb20322f4,37985577,0,0x0,8
tick,0x7ffdb20322f4,38001638,0,0x0,8
tick,0x7ffdb20322f4,38017595,0,0x0,8
tick,0x7ffdb20322f4,38033555,0,0x0,8
tick,0x7ffdb20322f4,38048588,0,0x0,8
tick,0x7ffdb20322f4,38063713,0,0x0,8
tick,0x7ffdb20322f4,38079130,0,0x0,8
tick,0x7ffdb20322f4,38095113,0,0x0,8
tick,0x7ffdb20322f4,38111199,0,0x0,8
tick,0x7ffdb20322f4,38127131,0,0x0,8
tick,0x7ffdb20322f4,38143113,0,0x0,8
tick,0x7ffdb20322f4,38158172,0,0x0,8
tick,0x7ffdb20322f4,38173726,0,0x0,8
tick,0x7ffdb20322f4,38189729,0,0x0,8
tick,0x7ffdb20322f4,38205687,0,0x0,8
tick,0x7ffdb20322f4,38221721,0,0x0,8
tick,0x7ffdb20322f4,38237732,0,0x0,8
tick,0x7ffdb20322f4,38252772,0,0x0,8
tick,0x7ffdb20322f4,38268239,0,0x0,8
tick,0x7ffdb20322f4,38284373,0,0x0,8
tick,0x7ffdb20322f4,38299443,0,0x0,8
tick,0x7ffdb20322f4,38314928,0,0x0,8
tick,0x7ffdb20322f4,38330132,0,0x0,8
tick,0x7ffdb20322f4,38345310,0,0x0,8
tick,0x7ffdb20322f4,38360600,0,0x0,8
tick,0x7ffdb20322f4,38375735,0,0x0,8
tick,0x7ffdb20322f4,38391429,0,0x0,8
tick,0x7ffdb20322f4,38407344,0,0x0,8
tick,0x7ffdb20322f4,38422999,0,0x0,8
tick,0x7ffdb20322f4,38439020,0,0x0,8
tick,0x7ffdb20322f4,38455033,0,0x0,8
tick,0x7ffdb20322f4,38471158,0,0x0,8
tick,0x7ffdb20322f4,38487220,0,0x0,8
tick,0x7ffdb20322f4,38503183,0,0x0,8
tick,0x7ffdb20322f4,38519193,0,0x0,8
tick,0x7ffdb20322f4,38535280,0,0x0,8
tick,0x7ffdb20322f4,38551154,0,0x0,8
tick,0x7ffdb20322f4,38567208,0,0x0,8
tick,0x7ffdb20322f4,38582783,0,0x0,8
tick,0x7ffdb20322f4,38598818,0,0x0,8
tick,0x7ffdb20322f4,38614783,0,0x0,8
tick,0x7ffdb20322f4,38629769,0,0x0,8
tick,0x7ffdb20322f4,38644835,0,0x0,8
tick,0x7ffdb20322f4,38660782,0,0x0,8
tick,0x7ffdb20322f4,38676311,0,0x0,8
tick,0x7ffdb20322f4,38692356,0,0x0,8
tick,0x7ffdb20322f4,38707581,0,0x0,8
tick,0x7ffdb20322f4,38722861,0,0x0,8
tick,0x7ffdb20322f4,38738499,0,0x0,8
tick,0x7ffdb20322f4,38754516,0,0x0,8
tick,0x7ffdb20322f4,38770170,0,0x0,8
tick,0x7ffdb20322f4,38786118,0,0x0,8
tick,0x7ffdb20322f4,38802114,0,0x0,8
tick,0x7ffdb20322f4,38818101,0,0x0,8
tick,0x7ffdb20322f4,38834114,0,0x0,8
tick,0x7ffdb20322f4,38850132,0,0x0,8
tick,0x7ffdb20322f4,38866163,0,0x0,8
tick,0x7ffdb20322f4,38881755,0,0x0,8
tick,0x7ffdb20322f4,38897744,0,0x0,8
tick,0x7ffdb20322f4,38913748,0,0x0,8
tick,0x7ffdb20322f4,38929723,0,0x0,8
tick,0x7ffdb20322f4,38945565,0,0x0,8
tick,0x7ffdb20322f4,38961565,0,0x0,8
tick,0x7ffdb20322f4,38977084,0,0x0,8
tick,0x7ffdb20322f4,38993086,0,0x0,8
tick,0x7ffdb20322f4,39009136,0,0x0,8
tick,0x7ffdb20322f4,39025253,0,0x0,8
tick,0x7ffdb20322f4,39041087,0,0x0,8
tick,0x7ffdb20322f4,39057096,0,0x0,8
tick,0x7ffdb20322f4,39072646,0,0x0,8
tick,0x7ffdb20322f4,39088629,0,0x0,8
tick,0x7ffdb20322f4,39104658,0,0x0,8
tick,0x7ffdb20322f4,39120686,0,0x0,8
tick,0x7ffdb20322f4,39136659,0,0x0,8
tick,0x7ffdb20322f4,39152675,0,0x0,8
tick,0x7ffdb20322f4,39168220,0,0x0,8
tick,0x7ffdb20322f4,39183216,0,0x0,8
tick,0x7ffdb20322f4,39199221,0,0x0,8
tick,0x7ffdb20322f4,39214227,0,0x0,8
tick,0x7ffdb20322f4,39230189,0,0x0,8
tick,0x7ffdb20322f4,39246221,0,0x0,8
tick,0x7ffdb20322f4,39262284,0,0x0,8
tick,0x7ffdb20322f4,39277810,0,0x0,8
tick,0x7ffdb20322f4,39293639,0,0x0,8
tick,0x7ffdb20322f4,39309638,0,0x0,8
tick,0x7ffdb20322f4,39325647,0,0x0,8
tick,0x7ffdb20322f4,39341659,0,0x0,8
tick,0x7ffdb20322f4,39357691,0,0x0,8
tick,0x7ffdb20322f4,39373166,0,0x0,8
tick,0x7ffdb20322f4,39389197,0,0x0,8
tick,0x7ffdb20322f4,39405197,0,0x0,8
tick,0x7ffdb20322f4,39421226,0,0x0,8
tick,0x7ffdb20322f4,39437214,0,0x0,8
tick,0x7ffdb20322f4,39453218,0,0x0,8
tick,0x7ffdb20322f4,39468671,0,0x0,8
tick,0x7ffdb20322f4,39484715,0,0x0,8
tick,0x7ffdb20322f4,39500709,0,0x0,8
tick,0x7ffdb20322f4,39516691,0,0x0,8
tick,0x7ffdb20322f4,39532126,0,0x0,8
tick,0x7ffdb20322f4,39548221,0,0x0,8
tick,0x7ffdb20322f4,39564181,0,0x0,8
tick,0x7ffdb20322f4,39579763,0,0x0,8
tick,0x7ffdb20322f4,39595712,0,0x0,8
tick,0x7ffdb20322f4,39611727,0,0x0,8
tick,0x7ffdb20322f4,39627882,0,0x0,8
tick,0x7ffdb20322f4,39643840,0,0x0,8
tick,0x7ffdb20322f4,39659833,0,0x0,8
tick,0x7ffdb20322f4,39675331,0,0x0,8
tick,0x7ffdb20322f4,39691444,0,0x0,8
tick,0x7ffdb20322f4,39707334,0,0x0,8
tick,0x7ffdb20322f4,39723341,0,0x0,8
tick,0x7ffdb20322f4,39739382,0,0x0,8
tick,0x7ffdb20322f4,39754405,0,0x0,8
tick,0x7ffdb20322f4,39769889,0,0x0,8
tick,0x7ffdb20322f4,39785970,0,0x0,8
tick,0x7ffdb20322f4,39802007,0,0x0,8
tick,0x7ffdb20322f4,39817960,0,0x0,8
tick,0x7ffdb20322f4,39833920,0,0x0,8
tick,0x7ffdb20322f4,39849969,0,0x0,8
tick,0x7ffdb20322f4,39865981,0,0x0,8
tick,0x7ffdb20322f4,39881527,0,0x0,8
tick,0x7ffdb20322f4,39896478,0,0x0,8
tick,0x7ffdb20322f4,39912570,0,0x0,8
tick,0x7ffdb20322f4,39928536,0,0x0,8
tick,0x7ffdb20322f4,39944490,0,0x0,8
tick,0x7ffdb20322f4,39960528,0,0x0,8
tick,0x7ffdb20322f4,39976177,0,0x0,8
tick,0x7ffdb20322f4,39992129,0,0x0,8
tick,0x7ffdb20322f4,40007130,0,0x0,8
tick,0x7ffdb20322f4,40022390,0,0x0,8
tick,0x7ffdb20322f4,40038110,0,0x0,8
tick,0x7ffdb20322f4,40054107,0,0x0,8
tick,0x7ffdb20322f4,40069532,0,0x0,8
tick,0x7ffdb20322f4,40085558,0,0x0,8
tick,0x7ffdb20322f4,40101552,0,0x0,8
tick,0x7ffdb20322f4,40117555,0,0x0,8
tick,0x7ffdb20322f4,40133555,0,0x0,8
tick,0x7ffdb20322f4,40149572,0,0x0,8
tick,0x7ffdb20322f4,40165612,0,0x0,8
tick,0x7ffdb20322f4,40180820,0,0x0,8
tick,0x7ffdb20322f4,40196838,0,0x0,8
tick,0x7ffdb20322f4,40212862,0,0x0,8
tick,0x7ffdb20322f4,40228810,0,0x0,8
tick,0x7ffdb20322f4,40244824,0,0x0,8
tick,0x7ffdb20322f4,40260894,0,0x0,8
tick,0x7ffdb20322f4,40276412,0,0x0,8
tick,0x7ffdb20322f4,40292396,0,0x0,8
tick,0x7ffdb20322f4,40308364,0,0x0,8
tick,0x7ffdb20322f4,40324393,0,0x0,8
tick,0x7ffdb20322f4,40340382,0,0x0,8
tick,0x7ffdb20322f4,40356403,0,0x0,8
tick,0x7ffdb20322f4,40371989,0,0x0,8
tick,0x7ffdb20322f4,40387984,0,0x0,8
tick,0x7ffdb20322f4,40403509,0,0x0,8
tick,0x7ffdb20322f4,40419549,0,0x0,8
tick,0x7ffdb20322f4,40435459,0,0x0,8
tick,0x7ffdb20322f4,40451466,0,0x0,8
tick,0x7ffdb20322f4,40466833,0,0x0,8
tick,0x7ffdb20322f4,40482117,0,0x0,8
tick,0x7ffdb20322f4,40498006,0,0x0,8
tick,0x7ffdb20322f4,40513179,0,0x0,8
tick,0x7ffdb20322f4,40528590,0,0x0,8
tick,0x7ffdb20322f4,40543856,0,0x0,8
tick,0x7ffdb20322f4,40559171,0,0x0,8
tick,0x7ffdb20322f4,40574379,0,0x0,8
tick,0x7ffdb20322f4,40589956,0,0x0,8
tick,0x7ffdb20322f4,40605907,0,0x0,8
tick,0x7ffdb20322f4,40621930,0,0x0,8
tick,0x7ffdb20322f4,40636751,0,0x0,8
tick,0x7ffdb20322f4,40652714,0,0x0,8
tick,0x7ffdb20322f4,40668742,0,0x0,8
tick,0x7ffdb20322f4,40684258,0,0x0,8
tick,0x7ffdb20322f4,40700294,0,0x0,8
tick,0x7ffdb20322f4,40716302,0,0x0,8
tick,0x7ffdb20322f4,40732258,0,0x0,8
tick,0x7ffdb20322f4,40747698,0,0x0,8
tick,0x7ffdb20322f4,40763706,0,0x0,8
tick,0x7ffdb20322f4,40779191,0,0x0,8
tick,0x7ffdb20322f4,40795193,0,0x0,8
tick,0x7ffdb20322f4,40811218,0,0x0,8
tick,0x7ffdb20322f4,40827227,0,0x0,8
tick,0x7ffdb20322f4,40843211,0,0x0,8
tick,0x7ffdb20322f4,40859255,0,0x0,8
tick,0x7ffdb20322f4,40874738,0,0x0,8
tick,0x7ffdb20322f4,40890781,0,0x0,8
tick,0x7ffdb20322f4,40906771,0,0x0,8
tick,0x7ffdb20322f4,40922713,0,0x0,8
tick,0x7ffdb20322f4,40938783,0,0x0,8
tick,0x7ffdb20322f4,40954787,0,0x0,8
tick,0x7ffdb20322f4,40970210,0,0x0,8
tick,0x7ffdb20322f4,40986200,0,0x0,8
tick,0x7ffdb20322f4,41002150,0,0x0,8
tick,0x7ffdb20322f4,41018219,0,0x0,8
tick,0x7ffdb20322f4,41034237,0,0x0,8
tick,0x7ffdb20322f4,41050196,0,0x0,8
tick,0x7ffdb20322f4,41066242,0,0x0,8
tick,0x7ffdb20322f4,41081808,0,0x0,8
tick,0x7ffdb20322f4,41097894,0,0x0,8
tick,0x7ffdb20322f4,41113813,0,0x0,8
tick,0x7ffdb20322f4,41129899,0,0x0,8
tick,0x7ffdb20322f4,41145839,0,0x0,8
tick,0x7ffdb20322f4,41161831,0,0x0,8
tick,0x7ffdb20322f4,41177455,0,0x0,8
tick,0x7ffdb20322f4,41193444,0,0x0,8
tick,0x7ffdb20322f4,41209378,0,0x0,8
tick,0x7ffdb20322f4,41224399,0,0x0,8
tick,0x7ffdb20322f4,41239408,0,0x0,8
tick,0x7ffdb20322f4,41255403,0,0x0,8
tick,0x7ffdb20322f4,41270974,0,0x0,8
tick,0x7ffdb20322f4,41286956,0,0x0,8
tick,0x7ffdb20322f4,41302987,0,0x0,8
tick,0x7ffdb20322f4,41319175,0,0x0,8
tick,0x7ffdb20322f4,41334642,0,0x0,8
tick,0x7ffdb20322f4,41350693,0,0x0,8
tick,0x7ffdb20322f4,41366673,0,0x0,8
tick,0x7ffdb20322f4,41382263,0,0x0,8
tick,0x7ffdb20322f4,41398267,0,0x0,8
tick,0x7ffdb20322f4,41414254,0,0x0,8
tick,0x7ffdb20322f4,41430238,0,0x0,8
tick,0x7ffdb20322f4,41445259,0,0x0,8
tick,0x7ffdb20322f4,41461281,0,0x0,8
tick,0x7ffdb20322f4,41476349,0,0x0,8
tick,0x7ffdb20322f4,41492367,0,0x0,8
tick,0x7ffdb20322f4,41507398,0,0x0,8
tick,0x7ffdb20322f4,41522379,0,0x0,8
tick,0x7ffdb20322f4,41538392,0,0x0,8
tick,0x7ffdb20322f4,41554362,0,0x0,8
tick,0x7ffdb20322f4,41570030,0,0x0,8
tick,0x7ffdb20322f4,41586043,0,0x0,8
tick,0x7ffdb20322f4,41602013,0,0x0,8
tick,0x7ffdb20322f4,41618045,0,0x0,8
tick,0x7ffdb20322f4,41634002,0,0x0,8
tick,0x7ffdb20322f4,41650009,0,0x0,8
tick,0x7ffdb20322f4,41666038,0,0x0,8
tick,0x7ffdb20322f4,41681619,0,0x0,8
tick,0x7ffdb20322f4,41696656,0,0x0,8
tick,0x7ffdb20322f4,41712592,0,0x0,8
tick,0x7ffdb20322f4,41727600,0,0x0,8
tick,0x7ffdb20322f4,41743589,0,0x0,8
tick,0x7ffdb20322f4,41759658,0,0x0,8
tick,0x7ffdb20322f4,41775212,0,0x0,8
tick,0x7ffdb20322f4,41791226,0,0x0,8
tick,0x7ffdb20322f4,41807278,0,0x0,8
tick,0x7ffdb20322f4,41823219,0,0x0,8
tick,0x7ffdb20322f4,41839169,0,0x0,8
tick,0x7ffdb20322f4,41854194,0,0x0,8
tick,0x7ffdb20322f4,41869787,0,0x0,8
tick,0x7ffdb20322f4,41885798,0,0x0,8
tick,0x7ffdb20322f4,41901870,0,0x0,8
tick,0x7ffdb20322f4,41917800,0,0x0,8
tick,0x7ffdb20322f4,41933750,0,0x0,8
tick,0x7ffdb20322f4,41948786,0,0x0,8
tick,0x7ffdb20322f4,41964791,0,0x0,8
tick,0x7ffdb20322f4,41980383,0,0x0,8
tick,0x7ffdb20322f4,41996388,0,0x0,8
tick,0x7ffdb20322f4,42012400,0,0x0,8
tick,0x7ffdb20322f4,42028344,0,0x0,8
tick,0x7ffdb20322f4,42044351,0,0x0,8
tick,0x7ffdb20322f4,42060397,0,0x0,8
tick,0x7ffdb20322f4,42075941,0,0x0,8
tick,0x7ffdb20322f4,42091993,0,0x0,8
tick,0x7ffdb20322f4,42107927,0,0x0,8
tick,0x7ffdb20322f4,42123925,0,0x0,8
tick,0x7ffdb20322f4,42140016,0,0x0,8
tick,0x7ffdb20322f4,42155911,0,0x0,8
tick,0x7ffdb20322f4,42171929,0,0x0,8
tick,0x7ffdb20322f4,42187864,0,0x0,8
tick,0x7ffdb20322f4,42203905,0,0x0,8
tick,0x7ffdb20322f4,42219889,0,0x0,8
tick,0x7ffdb20322f4,42235898,0,0x0,8
tick,0x7ffdb20322f4,42251933,0,0x0,8
tick,0x7ffdb20322f4,42267901,0,0x0,8
tick,0x7ffdb20322f4,42283545,0,0x0,8
tick,0x7ffdb20322f4,42299457,0,0x0,8
tick,0x7ffdb20322f4,42315436,0,0x0,8
tick,0x7ffdb20322f4,42331470,0,0x0,8
tick,0x7ffdb20322f4,42347443,0,0x0,8
tick,0x7ffdb20322f4,42363495,0,0x0,8
tick,0x7ffdb20322f4,42379016,0,0x0,8
tick,0x7ffdb20322f4,42395078,0,0x0,8
tick,0x7ffdb20322f4,42411027,0,0x0,8
tick,0x7ffdb20322f4,42427041,0,0x0,8
tick,0x7ffdb20322f4,42443075,0,0x0,8
tick,0x7ffdb20322f4,42459070,0,0x0,8
tick,0x7ffdb20322f4,42474530,0,0x0,8
tick,0x7ffdb20322f4,42490528,0,0x0,8
tick,0x7ffdb20322f4,42505781,0,0x0,8
tick,0x7ffdb20322f4,42521632,0,0x0,8
tick,0x7ffdb20322f4,42536541,0,0x0,8
tick,0x7ffdb20322f4,42552606,0,0x0,8
tick,0x7ffdb20322f4,42568552,0,0x0,8
tick,0x7ffdb20322f4,42584074,0,0x0,8
tick,0x7ffdb20322f4,42600039,0,0x0,8
tick,0x7ffdb20322f4,42615043,0,0x0,8
tick,0x7ffdb20322f4,42630428,0,0x0,8
tick,0x7ffdb20322f4,42645793,0,0x0,8
tick,0x7ffdb20322f4,42660850,0,0x0,8
tick,0x7ffdb20322f4,42676331,0,0x0,8
tick,0x7ffdb20322f4,42691938,0,0x0,8
tick,0x7ffdb20322f4,42707378,0,0x0,8
tick,0x7ffdb20322f4,42722707,0,0x0,8
tick,0x7ffdb20322f4,42738378,0,0x0,8
tick,0x7ffdb20322f4,42753988,0,0x0,8
tick,0x7ffdb20322f4,42770585,0,0x0,8
tick,0x7ffdb20322f4,42786614,0,0x0,8
tick,0x7ffdb20322f4,42802629,0,0x0,8
tick,0x7ffdb20322f4,42818623,0,0x0,8
tick,0x7ffdb20322f4,42834601,0,0x0,8
tick,0x7ffdb20322f4,42850609,0,0x0,8
tick,0x7ffdb20322f4,42866644,0,0x0,8
tick,0x7ffdb20322f4,42882469,0,0x0,8
tick,0x7ffdb20322f4,42898389,0,0x0,8
tick,0x7ffdb20322f4,42914366,0,0x0,8
tick,0x7ffdb20322f4,42930436,0,0x0,8
tick,0x7ffdb20322f4,42946394,0,0x0,8
tick,0x7ffdb20322f4,42962408,0,0x0,8
tick,0x7ffdb20322f4,42978042,0,0x0,8
tick,0x7ffdb20322f4,42993936,0,0x0,8
tick,0x7ffdb20322f4,43009947,0,0x0,8
tick,0x7ffdb20322f4,43025949,0,0x0,8
tick,0x7ffdb20322f4,43041951,0,0x0,8
tick,0x7ffdb20322f4,43057951,0,0x0,8
tick,0x7ffdb20322f4,43073526,0,0x0,8
tick,0x7ffdb20322f4,43089511,0,0x0,8
tick,0x7ffdb20322f4,43105518,0,0x0,8
tick,0x7ffdb20322f4,43121531,0,0x0,8
tick,0x7ffdb20322f4,43137325,0,0x0,8
tick,0x7ffdb20322f4,43153358,0,0x0,8
tick,0x7ffdb20322f4,43169379,0,0x0,8
tick,0x7ffdb20322f4,43184954,0,0x0,8
tick,0x7ffdb20322f4,43200999,0,0x0,8
tick,0x7ffdb20322f4,43216975,0,0x0,8
tick,0x7ffdb20322f4,43232950,0,0x0,8
tick,0x7ffdb20322f4,43248941,0,0x0,8
tick,0x7ffdb20322f4,43264974,0,0x0,8
tick,0x7ffdb20322f4,43280547,0,0x0,8
tick,0x7ffdb20322f4,43296547,0,0x0,8
tick,0x7ffdb20322f4,43312546,0,0x0,8
tick,0x7ffdb20322f4,43327173,0,0x0,8
tick,0x7ffdb20322f4,43343220,0,0x0,8
tick,0x7ffdb20322f4,43359178,0,0x0,8
tick,0x7ffdb20322f4,43374749,0,0x0,8
tick,0x7ffdb20322f4,43390745,0,0x0,8
tick,0x7ffdb20322f4,43406749,0,0x0,8
tick,0x7ffdb20322f4,43422740,0,0x0,8
tick,0x7ffdb20322f4,43438758,0,0x0,8
tick,0x7ffdb20322f4,43454718,0,0x0,8
tick,0x7ffdb20322f4,43469692,0,0x0,8
tick,0x7ffdb20322f4,43485231,0,0x0,8
tick,0x7ffdb20322f4,43501237,0,0x0,8
tick,0x7ffdb20322f4,43517252,0,0x0,8
tick,0x7ffdb20322f4,43533260,0,0x0,8
tick,0x7ffdb20322f4,43549189,0,0x0,8
tick,0x7ffdb20322f4,43565165,0,0x0,8
tick,0x7ffdb20322f4,43580734,0,0x0,8
tick,0x7ffdb20322f4,43596742,0,0x0,8
tick,0x7ffdb20322f4,43612747,0,0x0,8
tick,0x7ffdb20322f4,43628724,0,0x0,8
tick,0x7ffdb20322f4,43644740,0,0x0,8
tick,0x7ffdb20322f4,43660825,0,0x0,8
tick,0x7ffdb20322f4,43676233,0,0x0,8
tick,0x7ffdb20322f4,43692334,0,0x0,8
tick,0x7ffdb20322f4,43708284,0,0x0,8
tick,0x7ffdb20322f4,43724429,0,0x0,8
tick,0x7ffdb20322f4,43740240,0,0x0,8
tick,0x7ffdb20322f4,43756267,0,0x0,8
tick,0x7ffdb20322f4,43771790,0,0x0,8
tick,0x7ffdb20322f4,43786764,0,0x0,8
tick,0x7ffdb20322f4,43802780,0,0x0,8
tick,0x7ffdb20322f4,43818816,0,0x0,8
tick,0x7ffdb20322f4,43833795,0,0x0,8
tick,0x7ffdb20322f4,43848838,0,0x0,8
tick,0x7ffdb20322f4,43864873,0,0x0,8
tick,0x7ffdb20322f4,43880419,0,0x0,8
tick,0x7ffdb20322f4,43896498,0,0x0,8
tick,0x7ffdb20322f4,43912443,0,0x0,8
tick,0x7ffdb20322f4,43928447,0,0x0,8
tick,0x7ffdb20322f4,43944463,0,0x0,8
tick,0x7ffdb20322f4,43960488,0,0x0,8
tick,0x7ffdb20322f4,43976050,0,0x0,8
tick,0x7ffdb20322f4,43991784,0,0x0,8
tick,0x7ffdb20322f4,44007781,0,0x0,8
tick,0x7ffdb20322f4,44022732,0,0x0,8
tick,0x7ffdb20322f4,44038764,0,0x0,8
tick,0x7ffdb20322f4,44053835,0,0x0,8
tick,0x7ffdb20322f4,44069821,0,0x0,8
tick,0x7ffdb20322f4,44085433,0,0x0,8
tick,0x7ffdb20322f4,44101409,0,0x0,8
tick,0x7ffdb20322f4,44117354,0,0x0,8
tick,0x7ffdb20322f4,44133351,0,0x0,8
tick,0x7ffdb20322f4,44149355,0,0x0,8
tick,0x7ffdb20322f4,44165452,0,0x0,8
tick,0x7ffdb20322f4,44180482,0,0x0,8
tick,0x7ffdb20322f4,44195390,0,0x0,8
tick,0x7ffdb20322f4,44211399,0,0x0,8
tick,0x7ffdb20322f4,44227463,0,0x0,8
tick,0x7ffdb20322f4,44243408,0,0x0,8
tick,0x7ffdb20322f4,44259538,0,0x0,8
tick,0x7ffdb20322f4,44274935,0,0x0,8
tick,0x7ffdb20322f4,44290939,0,0x0,8
tick,0x7ffdb20322f4,44306942,0,0x0,8
tick,0x7ffdb20322f4,44323087,0,0x0,8
tick,0x7ffdb20322f4,44338973,0,0x0,8
tick,0x7ffdb20322f4,44354954,0,0x0,8
tick,0x7ffdb20322f4,44371532,0,0x0,8
tick,0x7ffdb20322f4,44387513,0,0x0,8
tick,0x7ffdb20322f4,44403562,0,0x0,8
tick,0x7ffdb20322f4,44419568,0,0x0,8
tick,0x7ffdb20322f4,44435641,0,0x0,8
tick,0x7ffdb20322f4,44451562,0,0x0,8
tick,0x7ffdb20322f4,44467539,0,0x0,8
tick,0x7ffdb20322f4,44483044,0,0x0,8
tick,0x7ffdb20322f4,44499076,0,0x0,8
tick,0x7ffdb20322f4,44515063,0,0x0,8
tick,0x7ffdb20322f4,44531108,0,0x0,8
tick,0x7ffdb20322f4,44547024,0,0x0,8
code-creation,JS,11,44548564,0x7ff734428ec0,3636,clearPreview node:internal/repl/utils:174:24,0x2d4d28dd8e0,^
code-source-info,0x7ff734428ec0,127,5393,7218,,,
code-creation,JS,11,44548613,0x7ff7344215c0,224,setHasRejectionToWarn node:internal/process/promises:78:31,0x1d9b7263bb0,^
code-source-info,0x7ff7344215c0,36,2262,2324,,,
code-creation,JS,11,44548635,0x7ff7344216c0,320,charLengthAt node:internal/readline/utils:50:22,0xd6cc534e80,^
code-source-info,0x7ff7344216c0,120,1292,1540,,,
code-creation,JS,11,44548654,0x7ff734421840,56,get node:readline:232:8,0xd6cc5335f8,^
code-source-info,0x7ff734421840,118,6510,6556,,,
code-creation,JS,11,44548673,0x7ff7344218c0,308, node:internal/readline/interface:432:19,0xd6cc538670,^
code-source-info,0x7ff7344218c0,122,11898,12085,,,
code-creation,JS,11,44548691,0x7ff734421a40,56,get node:net:689:16,0x39123e1e418,^
code-source-info,0x7ff734421a40,86,18958,18997,,,
code-creation,JS,11,44548709,0x7ff734421ac0,188,get node:internal/streams/readable:130:8,0x39123e33ba0,^
code-source-info,0x7ff734421ac0,97,3940,3981,,,
code-creation,JS,11,44548728,0x7ff734421bc0,256,get node:internal/streams/duplex:159:8,0x39123e2a450,^
code-source-info,0x7ff734421bc0,95,5523,5738,,,
code-creation,JS,11,44548752,0x7ff734421d00,748,write node:string_decoder:94:47,0x39123e333e8,^
code-source-info,0x7ff734421d00,100,3262,3644,,,
code-creation,JS,11,44548773,0x7ff734422040,468,clearTimeout node:timers:187:22,0x1d9b7266418,^
code-source-info,0x7ff734422040,39,5451,5809,,,
code-creation,JS,11,44548789,0x7ff734422240,56,get node:readline:346:8,0xd6cc533c08,^
code-source-info,0x7ff734422240,118,8470,8511,,,
code-creation,JS,10,44548855,0x3229fdf1e24,46,checkAndSetDirectionKey node:internal/repl/utils:533:35,0x2d4d28db618,~
code-source-info,0x3229fdf1e24,127,17751,18066,C0O17768C7O17779C12O17799C13O17812C14O17825C21O17833C26O17991C31O18006C36O18006C40O18022C42O18026C44O18049C45O18061,,
code-creation,JS,10,44548957,0x3229fdf226c,309,onSigInt node:repl:848:38,0x39123e14d80,~
code-source-info,0x3229fdf226c
code-creation,JS,10,44549279,0x3229fdf251c,22,_turnOffEditorMode node:repl:1729:28,0x1ebb7646500,~
code-source-info,0x3229fdf251c,114,58631,58710,C0O58643C1O58659C5O58676C10O58691C15O58676C21O58709,,
code-creation,JS,11,44550091,0x7ff734429d40,12004, node:internal/readline/interface:1056:14,0xd6cc539098,^
code-source-info,0x7ff734429d40,122,30576,39103,,,
code-creation,JS,11,44550140,0x7ff73442cc80,2640,reverseSearch node:internal/repl/utils:705:25,0x2d4d28db7d0,^
code-source-info,0x7ff73442cc80,127,24360,25719,,,
code-creation,JS,11,44550255,0x7ff73442d700,14368,emitKeys node:internal/readline/utils:86:19,0xd6cc534ec0,^
code-source-info,0x7ff73442d700,120,2316,12217,,,
code-creation,JS,11,44550281,0x7ff7344222c0,584,onkeypress node:internal/readline/interface:263:22,0x2d4d28c3ff8,^
code-source-info,0x7ff7344222c0,122,7537,7914,,,
code-creation,JS,11,44550351,0x7ff734430f40,2884,readableAddChunkPushByteMode node:internal/streams/readable:461:38,0x39123e2d068,^
code-source-info,0x7ff734430f40,97,14665,16054,,,
code-creation,JS,11,44550376,0x7ff734422540,492,maybeReadMore node:internal/streams/readable:855:23,0x39123e2d320,^
code-source-info,0x7ff734422540,97,27416,27606,,,
code-creation,JS,11,44550404,0x7ff734422780,1732,addChunk node:internal/streams/readable:548:18,0x39123e2d140,^
code-source-info,0x7ff734422780,97,17040,17996,,,
code-creation,JS,11,44550424,0x7ff734422e80,344,canPushMore node:internal/streams/readable:540:21,0x39123e2d100,^
code-source-info,0x7ff734422e80,97,16703,17019,,,
tick,0x7ffdb20322f4,44563050,0,0x0,8
tick,0x7ffdb20322f4,44578602,0,0x0,8
tick,0x7ffdb20322f4,44594594,0,0x0,8
tick,0x7ffdb20322f4,44621587,0,0x0,8
tick,0x7ffdb20322f4,44627127,0,0x0,8
tick,0x7ffdb20322f4,44642573,0,0x0,8
tick,0x7ffdb20322f4,44658607,0,0x0,8
tick,0x7ffdb20322f4,44674083,0,0x0,8
tick,0x7ffdb20322f4,44690077,0,0x0,8
tick,0x7ffdb20322f4,44706104,0,0x0,8
tick,0x7ffdb20322f4,44722067,0,0x0,8
code-creation,JS,10,44725122,0x3229fdf400c,90,close node:repl:1081:44,0x1ebb7646778,~
code-source-info,0x3229fdf400c,114,36518,36837,C0O36518C9O36526C12O36535C21O36552C30O36571C36O36595C40O36616C44O36629C47O36634C60O36634C66O36734C67O36741C68O36750C73O36758C83O36758C89O36836,,
code-creation,JS,10,44725244,0x3229fdf41c4,36, node:repl:1090:20,0x3229fdf3f28,~
code-source-info,0x3229fdf41c4,114,36767,36827,C0O36778C11O36791C14O36801C19O36811C30O36778C35O36827,,
code-creation,JS,10,44725290,0x3229fdf42ec,58,close node:internal/readline/interface:520:8,0xd6cc538748,~
code-source-info,0x3229fdf42ec,122,14447,14621,C0O14466C6O14474C7O14481C8O14492C13O14492C17O14515C23O14534C25O14539C27O14538C33O14551C38O14572C39O14584C43O14602C51O14602C57O14620,,
code-creation,JS,10,44725505,0x3229fdf44a4,90,onSelfCloseWithTerminal node:internal/readline/interface:294:37,0x2d4d28c4100,~
code-source-info,0x3229fdf44a4,122,8476,8749,C0O8488C3O8494C14O8494C20O8541C23O8547C34O8547C40O8588C43O8594C54O8594C60O8635C68O8691C71O8698C82O8698C89O8748,,
code-creation,JS,10,44725582,0x3229fdf45f4,48,spliceOne node:internal/util:473:19,0x1d9b72457e8,~
code-source-info,0x3229fdf45f4,16,13977,14090,C0O14013C2O14009C6O14020C10O14013C15O14042C17O14067C20O14060C23O14054C27O14033C33O13996C37O14081C42O14081C47O14089,,
code-creation,JS,10,44725641,0x3229fdf49c4,50,emitExit node:repl:837:37,0x39123e14d28,~
code-source-info,0x3229fdf49c4,114,29042,29168,C0O29052C6O29073C15O29092C23O29073C28O29125C29O29132C30O29145C35O29150C43O29150C49O29167,,
code-creation,JS,10,44725706,0x3229fdf4b9c,86,onexit node:internal/repl/history:161:18,0x2d4d28e12e8,~
code-source-info,0x3229fdf4b9c,128,4120,4293,C0O4130C3O4139C9O4159C12O4164C23O4164C29O4201C30O4208C31O4221C34O4226C45O4226C51O4252C58O4255C66O4266C75O4282C78O4255C85O4292,,
code-creation,JS,10,44725790,0x3229fdf4d8c,60, node:internal/main/repl:48:23,0x2d4d28fbb80,~
code-source-info,0x3229fdf4d8c,79,1444,1648,C0O1461C3O1470C9O1494C12O1499C17O1499C21O1519C24O1531C37O1531C43O1603C44O1624C49O1632C54O1632C59O1647,,
code-creation,JS,10,44725859,0x3229fdf4f8c,162,exit node:internal/process/per_thread:175:16,0x1d9b725a4f8,~
code-source-info,0x3229fdf4f8c,27,4963,6117,C0O4963C2O5020C10O5020C15O4992C20O5078C25O5086C33O5086C39O5139C45O5146C50O5162C57O5179C61O5201C66O5214C72O5233C78O5250C82O5265C87O5273C100O5294C110O5306C113O5273C119O5523C124O5531C134O5550C144O5562C147O5531C152O6106C157O6106C161O6116,,
code-creation,Eval,10,44725957,0x3229fdf53b4,5, node:internal/modules/esm/handle_process_exit:1:1,0x3229fdf5240,~
script-source,149,node:internal/modules/esm/handle_process_exit,'use strict';\x0d\n\x0d\nconst { exitCodes: { kUnfinishedTopLevelAwait } } = internalBinding('errors');\x0d\n\x0d\n/**\x0d\n * Handle a Promise from running code that potentially does Top-Level Await.\x0d\n * In that case\x2C it makes sense to set the exit code to a specific non-zero value\x0d\n * if the main code never finishes running.\x0d\n */\x0d\nfunction handleProcessExit() {\x0d\n  process.exitCode ??= kUnfinishedTopLevelAwait;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  handleProcessExit\x2C\x0d\n};\x0d\n
code-source-info,0x3229fdf53b4,149,0,448,C0O0C4O448,,
code-creation,JS,10,44726008,0x3229fdf54ec,55, node:internal/modules/esm/handle_process_exit:1:1,0x3229fdf5328,~
code-source-info,0x3229fdf54ec,149,0,448,C0O0C17O69C20O69C25O36C30O38C36O402C43O424C49O417C54O447,,
code-creation,JS,10,44726092,0x3229fdf5744,5,get node:internal/bootstrap/node:113:8,0xa4fec3ea00,~
code-source-info,0x3229fdf5744,12,4201,4236,C0O4213C4O4229,,
